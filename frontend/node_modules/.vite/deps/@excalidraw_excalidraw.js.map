{
  "version": 3,
  "sources": ["../../fuzzy/lib/fuzzy.js", "../../lodash.debounce/index.js", "../../@excalidraw/excalidraw/index.tsx", "../../@excalidraw/excalidraw/components/InitializeApp.tsx", "../../@excalidraw/excalidraw/editor-jotai.ts", "../../@excalidraw/excalidraw/i18n.ts", "../../@excalidraw/excalidraw/components/LoadingMessage.tsx", "../../@excalidraw/excalidraw/components/Spinner.tsx", "../../@excalidraw/excalidraw/components/App.tsx", "../../@excalidraw/excalidraw/components/ToolButton.tsx", "../../@excalidraw/excalidraw/actions/actionDeleteSelected.tsx", "../../@excalidraw/excalidraw/zindex.ts", "../../@excalidraw/excalidraw/actions/actionZindex.tsx", "../../@excalidraw/excalidraw/actions/actionSelectAll.ts", "../../@excalidraw/excalidraw/element/sortElements.ts", "../../@excalidraw/excalidraw/actions/actionDuplicateSelection.tsx", "../../@excalidraw/excalidraw/actions/actionProperties.tsx", "../../@excalidraw/excalidraw/analytics.ts", "../../@excalidraw/excalidraw/components/ButtonIconSelect.tsx", "../../@excalidraw/excalidraw/components/ButtonIcon.tsx", "../../@excalidraw/excalidraw/components/ColorPicker/TopPicks.tsx", "../../@excalidraw/excalidraw/components/ButtonSeparator.tsx", "../../@excalidraw/excalidraw/components/ColorPicker/Picker.tsx", "../../@excalidraw/excalidraw/components/ColorPicker/ShadeList.tsx", "../../@excalidraw/excalidraw/components/ColorPicker/colorPickerUtils.ts", "../../@excalidraw/excalidraw/components/ColorPicker/HotkeyLabel.tsx", "../../@excalidraw/excalidraw/components/ColorPicker/PickerColorList.tsx", "../../@excalidraw/excalidraw/components/ColorPicker/CustomColorList.tsx", "../../@excalidraw/excalidraw/components/ColorPicker/keyboardNavHandlers.ts", "../../@excalidraw/excalidraw/components/ColorPicker/PickerHeading.tsx", "../../@excalidraw/excalidraw/components/ColorPicker/ColorPicker.tsx", "../../@excalidraw/excalidraw/components/ColorPicker/ColorInput.tsx", "../../@excalidraw/excalidraw/components/EyeDropper.tsx", "../../@excalidraw/excalidraw/context/ui-appState.ts", "../../@excalidraw/excalidraw/hooks/useCreatePortalContainer.ts", "../../@excalidraw/excalidraw/hooks/useOutsideClick.ts", "../../@excalidraw/excalidraw/hooks/useStable.ts", "../../@excalidraw/excalidraw/components/PropertiesPopover.tsx", "../../@excalidraw/excalidraw/components/Island.tsx", "../../@excalidraw/excalidraw/components/IconPicker.tsx", "../../@excalidraw/excalidraw/components/InlineIcon.tsx", "../../@excalidraw/excalidraw/components/Stats/Collapsible.tsx", "../../@excalidraw/excalidraw/components/FontPicker/FontPicker.tsx", "../../@excalidraw/excalidraw/components/FontPicker/FontPickerList.tsx", "../../@excalidraw/excalidraw/components/QuickSearch.tsx", "../../@excalidraw/excalidraw/components/ScrollableList.tsx", "../../@excalidraw/excalidraw/components/dropdownMenu/DropdownMenuGroup.tsx", "../../@excalidraw/excalidraw/components/dropdownMenu/DropdownMenuItem.tsx", "../../@excalidraw/excalidraw/components/dropdownMenu/common.ts", "../../@excalidraw/excalidraw/components/dropdownMenu/DropdownMenuItemContent.tsx", "../../@excalidraw/excalidraw/components/FontPicker/keyboardNavHandlers.ts", "../../@excalidraw/excalidraw/components/FontPicker/FontPickerTrigger.tsx", "../../@excalidraw/excalidraw/components/Range.tsx", "../../@excalidraw/excalidraw/scene/zoom.ts", "../../@excalidraw/excalidraw/components/Tooltip.tsx", "../../@excalidraw/excalidraw/actions/actionCanvas.tsx", "../../@excalidraw/excalidraw/actions/actionFinalize.tsx", "../../@excalidraw/excalidraw/components/ProjectName.tsx", "../../@excalidraw/excalidraw/components/DarkModeToggle.tsx", "../../@excalidraw/excalidraw/data/index.ts", "../../@excalidraw/excalidraw/data/resave.ts", "../../@excalidraw/excalidraw/components/CheckboxItem.tsx", "../../@excalidraw/excalidraw/actions/actionExport.tsx", "../../@excalidraw/excalidraw/actions/actionStyles.ts", "../../@excalidraw/excalidraw/actions/actionMenu.tsx", "../../@excalidraw/excalidraw/actions/actionGroup.tsx", "../../@excalidraw/excalidraw/renderer/roundRect.ts", "../../@excalidraw/excalidraw/clients.ts", "../../@excalidraw/excalidraw/components/Avatar.tsx", "../../@excalidraw/excalidraw/actions/actionNavigate.tsx", "../../@excalidraw/excalidraw/actions/actionAddToLibrary.ts", "../../@excalidraw/excalidraw/align.ts", "../../@excalidraw/excalidraw/actions/actionAlign.tsx", "../../@excalidraw/excalidraw/distribute.ts", "../../@excalidraw/excalidraw/actions/actionDistribute.tsx", "../../@excalidraw/excalidraw/actions/actionFlip.ts", "../../@excalidraw/excalidraw/actions/actionClipboard.tsx", "../../@excalidraw/excalidraw/actions/actionToggleGridMode.tsx", "../../@excalidraw/excalidraw/actions/actionToggleZenMode.tsx", "../../@excalidraw/excalidraw/actions/actionToggleObjectsSnapMode.tsx", "../../@excalidraw/excalidraw/actions/actionToggleStats.tsx", "../../@excalidraw/excalidraw/actions/actionBoundText.tsx", "../../@excalidraw/excalidraw/components/hyperlink/Hyperlink.tsx", "../../@excalidraw/excalidraw/actions/actionLink.tsx", "../../@excalidraw/excalidraw/actions/actionElementLock.ts", "../../@excalidraw/excalidraw/components/CommandPalette/CommandPalette.tsx", "../../@excalidraw/excalidraw/components/Dialog.tsx", "../../@excalidraw/excalidraw/hooks/useCallbackRefState.ts", "../../@excalidraw/excalidraw/components/Modal.tsx", "../../@excalidraw/excalidraw/components/LibraryMenu.tsx", "../../@excalidraw/excalidraw/data/library.ts", "../../@excalidraw/excalidraw/hooks/useLibraryItemSvg.ts", "../../@excalidraw/excalidraw/queue.ts", "../../@excalidraw/excalidraw/components/LibraryMenuItems.tsx", "../../@excalidraw/excalidraw/components/Stack.tsx", "../../@excalidraw/excalidraw/components/LibraryMenuBrowseButton.tsx", "../../@excalidraw/excalidraw/components/LibraryMenuControlButtons.tsx", "../../@excalidraw/excalidraw/components/LibraryMenuHeaderContent.tsx", "../../@excalidraw/excalidraw/components/Trans.tsx", "../../@excalidraw/excalidraw/components/ConfirmDialog.tsx", "../../@excalidraw/excalidraw/components/DialogActionButton.tsx", "../../@excalidraw/excalidraw/components/PublishLibrary.tsx", "../../@excalidraw/excalidraw/data/EditorLocalStorage.ts", "../../@excalidraw/excalidraw/components/dropdownMenu/DropdownMenuTrigger.tsx", "../../@excalidraw/excalidraw/components/dropdownMenu/DropdownMenuSeparator.tsx", "../../@excalidraw/excalidraw/components/dropdownMenu/DropdownMenuContent.tsx", "../../@excalidraw/excalidraw/components/dropdownMenu/DropdownMenuItemLink.tsx", "../../@excalidraw/excalidraw/components/dropdownMenu/DropdownMenuItemCustom.tsx", "../../@excalidraw/excalidraw/components/dropdownMenu/dropdownMenuUtils.ts", "../../@excalidraw/excalidraw/components/dropdownMenu/DropdownMenu.tsx", "../../@excalidraw/excalidraw/components/LibraryMenuSection.tsx", "../../@excalidraw/excalidraw/components/LibraryUnit.tsx", "../../@excalidraw/excalidraw/hooks/useTransition.ts", "../../@excalidraw/excalidraw/hooks/useScrollPosition.ts", "../../@excalidraw/excalidraw/components/TextField.tsx", "../../@excalidraw/excalidraw/components/Button.tsx", "../../@excalidraw/excalidraw/actions/shortcuts.ts", "../../@excalidraw/excalidraw/deburr.ts", "../../@excalidraw/excalidraw/components/Actions.tsx", "../../@excalidraw/excalidraw/context/tunnels.ts", "../../@excalidraw/excalidraw/hooks/useStableCallback.ts", "../../@excalidraw/excalidraw/components/ActiveConfirmDialog.tsx", "../../@excalidraw/excalidraw/components/CommandPalette/defaultCommandPaletteItems.ts", "../../@excalidraw/excalidraw/actions/actionElementLink.ts", "../../@excalidraw/excalidraw/actions/actionLinearEditor.tsx", "../../@excalidraw/excalidraw/actions/actionToggleSearchMenu.ts", "../../@excalidraw/excalidraw/actions/actionCropEditor.tsx", "../../@excalidraw/excalidraw/history.ts", "../../@excalidraw/excalidraw/hooks/useEmitter.ts", "../../@excalidraw/excalidraw/actions/actionHistory.tsx", "../../@excalidraw/excalidraw/actions/manager.tsx", "../../@excalidraw/excalidraw/gesture.ts", "../../@excalidraw/excalidraw/components/ContextMenu.tsx", "../../@excalidraw/excalidraw/components/Popover.tsx", "../../@excalidraw/excalidraw/components/LayerUI.tsx", "../../@excalidraw/excalidraw/components/ErrorDialog.tsx", "../../@excalidraw/excalidraw/components/ImageExportDialog.tsx", "../../@excalidraw/excalidraw/components/RadioGroup.tsx", "../../@excalidraw/excalidraw/components/Switch.tsx", "../../@excalidraw/excalidraw/components/FilledButton.tsx", "../../@excalidraw/excalidraw/hooks/useCopiedIndicator.ts", "../../@excalidraw/excalidraw/components/FixedSideContainer.tsx", "../../@excalidraw/excalidraw/element/flowchart.ts", "../../@excalidraw/excalidraw/components/HintViewer.tsx", "../../@excalidraw/excalidraw/components/LockButton.tsx", "../../@excalidraw/excalidraw/components/Section.tsx", "../../@excalidraw/excalidraw/scene/scrollbars.ts", "../../@excalidraw/excalidraw/components/PenModeButton.tsx", "../../@excalidraw/excalidraw/components/HandButton.tsx", "../../@excalidraw/excalidraw/components/MobileMenu.tsx", "../../@excalidraw/excalidraw/components/PasteChartDialog.tsx", "../../@excalidraw/excalidraw/components/HelpDialog.tsx", "../../@excalidraw/excalidraw/components/UserList.tsx", "../../@excalidraw/excalidraw/components/JSONExportDialog.tsx", "../../@excalidraw/excalidraw/components/Card.tsx", "../../@excalidraw/excalidraw/components/footer/Footer.tsx", "../../@excalidraw/excalidraw/components/HelpButton.tsx", "../../@excalidraw/excalidraw/components/Sidebar/Sidebar.tsx", "../../@excalidraw/excalidraw/components/Sidebar/common.ts", "../../@excalidraw/excalidraw/components/Sidebar/SidebarHeader.tsx", "../../@excalidraw/excalidraw/components/Sidebar/SidebarTrigger.tsx", "../../@excalidraw/excalidraw/components/Sidebar/SidebarTabTriggers.tsx", "../../@excalidraw/excalidraw/components/Sidebar/SidebarTabTrigger.tsx", "../../@excalidraw/excalidraw/components/Sidebar/SidebarTabs.tsx", "../../@excalidraw/excalidraw/components/Sidebar/SidebarTab.tsx", "../../@excalidraw/excalidraw/components/main-menu/DefaultItems.tsx", "../../@excalidraw/excalidraw/components/OverwriteConfirm/OverwriteConfirmState.ts", "../../@excalidraw/excalidraw/components/dropdownMenu/DropdownMenuItemContentRadio.tsx", "../../@excalidraw/excalidraw/components/hoc/withInternalFallback.tsx", "../../@excalidraw/excalidraw/components/main-menu/MainMenu.tsx", "../../@excalidraw/excalidraw/components/OverwriteConfirm/OverwriteConfirmActions.tsx", "../../@excalidraw/excalidraw/components/OverwriteConfirm/OverwriteConfirm.tsx", "../../@excalidraw/excalidraw/components/DefaultSidebar.tsx", "../../@excalidraw/excalidraw/components/SearchMenu.tsx", "../../@excalidraw/excalidraw/components/LaserPointerButton.tsx", "../../@excalidraw/excalidraw/components/TTDDialog/MermaidToExcalidraw.tsx", "../../@excalidraw/excalidraw/components/TTDDialog/common.ts", "../../@excalidraw/excalidraw/components/TTDDialog/TTDDialogPanels.tsx", "../../@excalidraw/excalidraw/components/TTDDialog/TTDDialogPanel.tsx", "../../@excalidraw/excalidraw/components/TTDDialog/TTDDialogInput.tsx", "../../@excalidraw/excalidraw/components/TTDDialog/TTDDialogOutput.tsx", "../../@excalidraw/excalidraw/components/TTDDialog/TTDDialogSubmitShortcut.tsx", "../../@excalidraw/excalidraw/components/TTDDialog/TTDDialogTabs.tsx", "../../@excalidraw/excalidraw/components/TTDDialog/TTDDialog.tsx", "../../@excalidraw/excalidraw/components/TTDDialog/TTDDialogTabTriggers.tsx", "../../@excalidraw/excalidraw/components/TTDDialog/TTDDialogTabTrigger.tsx", "../../@excalidraw/excalidraw/components/TTDDialog/TTDDialogTab.tsx", "../../@excalidraw/excalidraw/components/Stats/index.tsx", "../../@excalidraw/excalidraw/components/Stats/DragInput.tsx", "../../@excalidraw/excalidraw/components/Stats/utils.ts", "../../@excalidraw/excalidraw/components/Stats/Dimension.tsx", "../../@excalidraw/excalidraw/components/Stats/Angle.tsx", "../../@excalidraw/excalidraw/components/Stats/FontSize.tsx", "../../@excalidraw/excalidraw/components/Stats/MultiDimension.tsx", "../../@excalidraw/excalidraw/components/Stats/MultiAngle.tsx", "../../@excalidraw/excalidraw/components/Stats/MultiFontSize.tsx", "../../@excalidraw/excalidraw/components/Stats/Position.tsx", "../../@excalidraw/excalidraw/components/Stats/MultiPosition.tsx", "../../@excalidraw/excalidraw/components/Stats/CanvasGrid.tsx", "../../@excalidraw/excalidraw/components/ElementLinkDialog.tsx", "../../@excalidraw/excalidraw/components/Toast.tsx", "../../@excalidraw/excalidraw/actions/actionToggleViewMode.tsx", "../../@excalidraw/excalidraw/actions/actionFrame.ts", "../../@excalidraw/excalidraw/components/BraveMeasureTextError.tsx", "../../@excalidraw/excalidraw/data/transform.ts", "../../@excalidraw/excalidraw/components/canvases/InteractiveCanvas.tsx", "../../@excalidraw/excalidraw/reactUtils.ts", "../../@excalidraw/excalidraw/renderer/renderSnaps.ts", "../../@excalidraw/excalidraw/renderer/interactiveScene.ts", "../../@excalidraw/excalidraw/components/canvases/StaticCanvas.tsx", "../../@excalidraw/excalidraw/scene/Renderer.ts", "../../@excalidraw/excalidraw/components/SVGLayer.tsx", "../../@excalidraw/excalidraw/element/ElementCanvasButtons.tsx", "../../@excalidraw/excalidraw/components/MagicButton.tsx", "../../@excalidraw/excalidraw/components/FollowMode/FollowMode.tsx", "../../@excalidraw/excalidraw/animation-frame-handler.ts", "../../@excalidraw/excalidraw/animated-trail.ts", "../../@excalidraw/excalidraw/laser-trails.ts", "../../@excalidraw/excalidraw/element/textWysiwyg.tsx", "../../@excalidraw/excalidraw/actions/actionTextAutoResize.ts", "../../@excalidraw/excalidraw/mermaid.ts", "../../@excalidraw/excalidraw/components/canvases/NewElementCanvas.tsx", "../../@excalidraw/excalidraw/renderer/renderNewElementScene.ts", "../../@excalidraw/excalidraw/polyfill.ts", "../../@excalidraw/excalidraw/components/footer/FooterCenter.tsx", "../../@excalidraw/excalidraw/components/ExcalidrawLogo.tsx", "../../@excalidraw/excalidraw/components/welcome-screen/WelcomeScreen.Center.tsx", "../../@excalidraw/excalidraw/components/welcome-screen/WelcomeScreen.Hints.tsx", "../../@excalidraw/excalidraw/components/welcome-screen/WelcomeScreen.tsx", "../../@excalidraw/excalidraw/components/live-collaboration/LiveCollaborationTrigger.tsx", "../../@excalidraw/excalidraw/data/reconcile.ts", "../../@excalidraw/excalidraw/components/TTDDialog/TTDDialogTrigger.tsx", "../../@excalidraw/excalidraw/components/DiagramToCodePlugin/DiagramToCodePlugin.tsx", "../../jotai/esm/vanilla.mjs", "../../jotai/esm/react.mjs", "../../jotai/esm/react/utils.mjs", "../../jotai/esm/vanilla/utils.mjs", "../../jotai-scope/src/createIsolation.tsx", "../../jotai-scope/src/ScopeProvider/scope.ts", "../../jotai-scope/src/ScopeProvider/patchedStore.ts", "../../jotai-scope/src/ScopeProvider/ScopeProvider.tsx", "../../@radix-ui/react-popover/src/popover.tsx", "../../@radix-ui/primitive/src/primitive.tsx", "../../@radix-ui/react-compose-refs/src/composeRefs.tsx", "../../@radix-ui/react-context/src/createContext.tsx", "../../@radix-ui/react-dismissable-layer/src/dismissable-layer.tsx", "../../@radix-ui/react-primitive/src/primitive.tsx", "../../@radix-ui/react-slot/src/slot.tsx", "../../@radix-ui/react-use-callback-ref/src/useCallbackRef.tsx", "../../@radix-ui/react-use-escape-keydown/src/useEscapeKeydown.tsx", "../../@radix-ui/react-focus-guards/src/FocusGuards.tsx", "../../@radix-ui/react-focus-scope/src/focus-scope.tsx", "../../@radix-ui/react-id/src/id.tsx", "../../@radix-ui/react-use-layout-effect/src/useLayoutEffect.tsx", "../../@radix-ui/react-popper/src/popper.tsx", "../../@floating-ui/utils/dist/floating-ui.utils.mjs", "../../@floating-ui/core/dist/floating-ui.core.mjs", "../../@floating-ui/utils/dist/floating-ui.utils.dom.mjs", "../../@floating-ui/dom/dist/floating-ui.dom.mjs", "../../@floating-ui/react-dom/dist/floating-ui.react-dom.mjs", "../../@radix-ui/react-arrow/src/arrow.tsx", "../../@radix-ui/react-use-size/src/useSize.tsx", "../../@radix-ui/react-portal/src/portal.tsx", "../../@radix-ui/react-presence/src/Presence.tsx", "../../@radix-ui/react-presence/src/useStateMachine.tsx", "../../@radix-ui/react-use-controllable-state/src/useControllableState.tsx", "../../aria-hidden/dist/es2015/index.js", "../../react-remove-scroll/dist/es2015/Combination.js", "../../react-remove-scroll/dist/es2015/UI.js", "../../react-remove-scroll-bar/dist/es2015/constants.js", "../../use-callback-ref/dist/es2015/assignRef.js", "../../use-callback-ref/dist/es2015/useRef.js", "../../use-callback-ref/dist/es2015/useMergeRef.js", "../../use-sidecar/dist/es2015/hoc.js", "../../use-sidecar/dist/es2015/hook.js", "../../use-sidecar/dist/es2015/medium.js", "../../use-sidecar/dist/es2015/renderProp.js", "../../use-sidecar/dist/es2015/exports.js", "../../react-remove-scroll/dist/es2015/medium.js", "../../react-remove-scroll/dist/es2015/SideEffect.js", "../../react-remove-scroll-bar/dist/es2015/component.js", "../../react-style-singleton/dist/es2015/hook.js", "../../get-nonce/dist/es2015/index.js", "../../react-style-singleton/dist/es2015/singleton.js", "../../react-style-singleton/dist/es2015/component.js", "../../react-remove-scroll-bar/dist/es2015/utils.js", "../../react-remove-scroll/dist/es2015/aggresiveCapture.js", "../../react-remove-scroll/dist/es2015/handleScroll.js", "../../react-remove-scroll/dist/es2015/sidecar.js", "../../tunnel-rat/dist/index.js", "../../zustand/esm/vanilla.mjs", "../../zustand/esm/index.mjs", "../../@babel/runtime/helpers/esm/extends.js", "../../@radix-ui/react-tabs/node_modules/@radix-ui/primitive/dist/packages/core/primitive/src/index.ts", "../../@radix-ui/react-tabs/node_modules/@radix-ui/primitive/dist/packages/core/primitive/src/primitive.tsx", "../../@radix-ui/react-tabs/node_modules/@radix-ui/react-context/dist/packages/react/context/src/index.ts", "../../@radix-ui/react-tabs/node_modules/@radix-ui/react-context/dist/packages/react/context/src/createContext.tsx", "../../@radix-ui/react-roving-focus/node_modules/@radix-ui/primitive/dist/packages/core/primitive/src/index.ts", "../../@radix-ui/react-roving-focus/node_modules/@radix-ui/primitive/dist/packages/core/primitive/src/primitive.tsx", "../../@radix-ui/react-collection/node_modules/@radix-ui/react-context/dist/packages/react/context/src/index.ts", "../../@radix-ui/react-collection/node_modules/@radix-ui/react-context/dist/packages/react/context/src/createContext.tsx", "../../@radix-ui/react-collection/node_modules/@radix-ui/react-compose-refs/dist/packages/react/compose-refs/src/index.ts", "../../@radix-ui/react-collection/node_modules/@radix-ui/react-compose-refs/dist/packages/react/compose-refs/src/composeRefs.tsx", "../../@radix-ui/react-collection/node_modules/@radix-ui/react-slot/dist/packages/react/slot/src/index.ts", "../../@radix-ui/react-collection/node_modules/@radix-ui/react-slot/dist/packages/react/slot/src/Slot.tsx", "../../@radix-ui/react-collection/dist/packages/react/collection/src/index.ts", "../../@radix-ui/react-collection/dist/packages/react/collection/src/Collection.tsx", "../../@radix-ui/react-roving-focus/node_modules/@radix-ui/react-compose-refs/dist/packages/react/compose-refs/src/index.ts", "../../@radix-ui/react-roving-focus/node_modules/@radix-ui/react-compose-refs/dist/packages/react/compose-refs/src/composeRefs.tsx", "../../@radix-ui/react-roving-focus/node_modules/@radix-ui/react-context/dist/packages/react/context/src/index.ts", "../../@radix-ui/react-roving-focus/node_modules/@radix-ui/react-context/dist/packages/react/context/src/createContext.tsx", "../../@radix-ui/react-roving-focus/node_modules/@radix-ui/react-use-layout-effect/dist/packages/react/use-layout-effect/src/index.ts", "../../@radix-ui/react-roving-focus/node_modules/@radix-ui/react-use-layout-effect/dist/packages/react/use-layout-effect/src/useLayoutEffect.tsx", "../../@radix-ui/react-roving-focus/node_modules/@radix-ui/react-id/dist/packages/react/id/src/index.ts", "../../@radix-ui/react-roving-focus/node_modules/@radix-ui/react-id/dist/packages/react/id/src/id.tsx", "../../@radix-ui/react-roving-focus/node_modules/@radix-ui/react-slot/dist/packages/react/slot/src/index.ts", "../../@radix-ui/react-roving-focus/node_modules/@radix-ui/react-slot/dist/packages/react/slot/src/Slot.tsx", "../../@radix-ui/react-roving-focus/node_modules/@radix-ui/react-primitive/dist/packages/react/primitive/src/index.ts", "../../@radix-ui/react-roving-focus/node_modules/@radix-ui/react-primitive/dist/packages/react/primitive/src/Primitive.tsx", "../../@radix-ui/react-roving-focus/node_modules/@radix-ui/react-use-callback-ref/dist/packages/react/use-callback-ref/src/index.ts", "../../@radix-ui/react-roving-focus/node_modules/@radix-ui/react-use-callback-ref/dist/packages/react/use-callback-ref/src/useCallbackRef.tsx", "../../@radix-ui/react-roving-focus/node_modules/@radix-ui/react-use-controllable-state/dist/packages/react/use-controllable-state/src/index.ts", "../../@radix-ui/react-roving-focus/node_modules/@radix-ui/react-use-controllable-state/dist/packages/react/use-controllable-state/src/useControllableState.tsx", "../../@radix-ui/react-direction/dist/packages/react/direction/src/index.ts", "../../@radix-ui/react-direction/dist/packages/react/direction/src/Direction.tsx", "../../@radix-ui/react-roving-focus/dist/packages/react/roving-focus/src/index.ts", "../../@radix-ui/react-roving-focus/dist/packages/react/roving-focus/src/RovingFocusGroup.tsx", "../../@radix-ui/react-tabs/node_modules/@radix-ui/react-compose-refs/dist/packages/react/compose-refs/src/index.ts", "../../@radix-ui/react-tabs/node_modules/@radix-ui/react-compose-refs/dist/packages/react/compose-refs/src/composeRefs.tsx", "../../@radix-ui/react-tabs/node_modules/@radix-ui/react-use-layout-effect/dist/packages/react/use-layout-effect/src/index.ts", "../../@radix-ui/react-tabs/node_modules/@radix-ui/react-use-layout-effect/dist/packages/react/use-layout-effect/src/useLayoutEffect.tsx", "../../@radix-ui/react-tabs/node_modules/@radix-ui/react-presence/dist/packages/react/presence/src/index.ts", "../../@radix-ui/react-tabs/node_modules/@radix-ui/react-presence/dist/packages/react/presence/src/Presence.tsx", "../../@radix-ui/react-tabs/node_modules/@radix-ui/react-presence/dist/packages/react/presence/src/useStateMachine.tsx", "../../@radix-ui/react-tabs/node_modules/@radix-ui/react-slot/dist/packages/react/slot/src/index.ts", "../../@radix-ui/react-tabs/node_modules/@radix-ui/react-slot/dist/packages/react/slot/src/Slot.tsx", "../../@radix-ui/react-tabs/node_modules/@radix-ui/react-primitive/dist/packages/react/primitive/src/index.ts", "../../@radix-ui/react-tabs/node_modules/@radix-ui/react-primitive/dist/packages/react/primitive/src/Primitive.tsx", "../../@radix-ui/react-tabs/node_modules/@radix-ui/react-use-callback-ref/dist/packages/react/use-callback-ref/src/index.ts", "../../@radix-ui/react-tabs/node_modules/@radix-ui/react-use-callback-ref/dist/packages/react/use-callback-ref/src/useCallbackRef.tsx", "../../@radix-ui/react-tabs/node_modules/@radix-ui/react-use-controllable-state/dist/packages/react/use-controllable-state/src/index.ts", "../../@radix-ui/react-tabs/node_modules/@radix-ui/react-use-controllable-state/dist/packages/react/use-controllable-state/src/useControllableState.tsx", "../../@radix-ui/react-tabs/node_modules/@radix-ui/react-id/dist/packages/react/id/src/index.ts", "../../@radix-ui/react-tabs/node_modules/@radix-ui/react-id/dist/packages/react/id/src/id.tsx", "../../@radix-ui/react-tabs/dist/packages/react/tabs/src/index.ts", "../../@radix-ui/react-tabs/dist/packages/react/tabs/src/Tabs.tsx", "../../@excalidraw/laser-pointer/dist/src/index.ts", "../../@excalidraw/laser-pointer/dist/src/state.ts", "../../@excalidraw/laser-pointer/dist/src/math.ts", "../../@excalidraw/laser-pointer/dist/src/simplify.ts"],
  "sourcesContent": ["/*\n * Fuzzy\n * https://github.com/myork/fuzzy\n *\n * Copyright (c) 2012 Matt York\n * Licensed under the MIT license.\n */\n\n(function() {\n\nvar root = this;\n\nvar fuzzy = {};\n\n// Use in node or in browser\nif (typeof exports !== 'undefined') {\n  module.exports = fuzzy;\n} else {\n  root.fuzzy = fuzzy;\n}\n\n// Return all elements of `array` that have a fuzzy\n// match against `pattern`.\nfuzzy.simpleFilter = function(pattern, array) {\n  return array.filter(function(str) {\n    return fuzzy.test(pattern, str);\n  });\n};\n\n// Does `pattern` fuzzy match `str`?\nfuzzy.test = function(pattern, str) {\n  return fuzzy.match(pattern, str) !== null;\n};\n\n// If `pattern` matches `str`, wrap each matching character\n// in `opts.pre` and `opts.post`. If no match, return null\nfuzzy.match = function(pattern, str, opts) {\n  opts = opts || {};\n  var patternIdx = 0\n    , result = []\n    , len = str.length\n    , totalScore = 0\n    , currScore = 0\n    // prefix\n    , pre = opts.pre || ''\n    // suffix\n    , post = opts.post || ''\n    // String to compare against. This might be a lowercase version of the\n    // raw string\n    , compareString =  opts.caseSensitive && str || str.toLowerCase()\n    , ch;\n\n  pattern = opts.caseSensitive && pattern || pattern.toLowerCase();\n\n  // For each character in the string, either add it to the result\n  // or wrap in template if it's the next string in the pattern\n  for(var idx = 0; idx < len; idx++) {\n    ch = str[idx];\n    if(compareString[idx] === pattern[patternIdx]) {\n      ch = pre + ch + post;\n      patternIdx += 1;\n\n      // consecutive characters should increase the score more than linearly\n      currScore += 1 + currScore;\n    } else {\n      currScore = 0;\n    }\n    totalScore += currScore;\n    result[result.length] = ch;\n  }\n\n  // return rendered string if we have a match for every char\n  if(patternIdx === pattern.length) {\n    // if the string is an exact match with pattern, totalScore should be maxed\n    totalScore = (compareString === pattern) ? Infinity : totalScore;\n    return {rendered: result.join(''), score: totalScore};\n  }\n\n  return null;\n};\n\n// The normal entry point. Filters `arr` for matches against `pattern`.\n// It returns an array with matching values of the type:\n//\n//     [{\n//         string:   '<b>lah' // The rendered string\n//       , index:    2        // The index of the element in `arr`\n//       , original: 'blah'   // The original element in `arr`\n//     }]\n//\n// `opts` is an optional argument bag. Details:\n//\n//    opts = {\n//        // string to put before a matching character\n//        pre:     '<b>'\n//\n//        // string to put after matching character\n//      , post:    '</b>'\n//\n//        // Optional function. Input is an entry in the given arr`,\n//        // output should be the string to test `pattern` against.\n//        // In this example, if `arr = [{crying: 'koala'}]` we would return\n//        // 'koala'.\n//      , extract: function(arg) { return arg.crying; }\n//    }\nfuzzy.filter = function(pattern, arr, opts) {\n  if(!arr || arr.length === 0) {\n    return [];\n  }\n  if (typeof pattern !== 'string') {\n    return arr;\n  }\n  opts = opts || {};\n  return arr\n    .reduce(function(prev, element, idx, arr) {\n      var str = element;\n      if(opts.extract) {\n        str = opts.extract(element);\n      }\n      var rendered = fuzzy.match(pattern, str, opts);\n      if(rendered != null) {\n        prev[prev.length] = {\n            string: rendered.rendered\n          , score: rendered.score\n          , index: idx\n          , original: element\n        };\n      }\n      return prev;\n    }, [])\n\n    // Sort by score. Browsers are inconsistent wrt stable/unstable\n    // sorting, so force stable by using the index in the case of tie.\n    // See http://ofb.net/~sethml/is-sort-stable.html\n    .sort(function(a,b) {\n      var compare = b.score - a.score;\n      if(compare) return compare;\n      return a.index - b.index;\n    });\n};\n\n\n}());\n\n", "/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n", "import React, { useEffect } from \"react\";\nimport { InitializeApp } from \"./components/InitializeApp\";\nimport App from \"./components/App\";\nimport { isShallowEqual } from \"./utils\";\nimport polyfill from \"./polyfill\";\n\nimport \"./css/app.scss\";\nimport \"./css/styles.scss\";\nimport \"./fonts/fonts.css\";\n\nimport type { AppProps, ExcalidrawProps } from \"./types\";\nimport { defaultLang } from \"./i18n\";\nimport { DEFAULT_UI_OPTIONS } from \"./constants\";\nimport { EditorJotaiProvider, editorJotaiStore } from \"./editor-jotai\";\nimport Footer from \"./components/footer/FooterCenter\";\nimport MainMenu from \"./components/main-menu/MainMenu\";\nimport WelcomeScreen from \"./components/welcome-screen/WelcomeScreen\";\nimport LiveCollaborationTrigger from \"./components/live-collaboration/LiveCollaborationTrigger\";\n\npolyfill();\n\nconst ExcalidrawBase = (props: ExcalidrawProps) => {\n  const {\n    onChange,\n    initialData,\n    excalidrawAPI,\n    isCollaborating = false,\n    onPointerUpdate,\n    renderTopRightUI,\n    langCode = defaultLang.code,\n    viewModeEnabled,\n    zenModeEnabled,\n    gridModeEnabled,\n    libraryReturnUrl,\n    theme,\n    name,\n    renderCustomStats,\n    onPaste,\n    detectScroll = true,\n    handleKeyboardGlobally = false,\n    onLibraryChange,\n    autoFocus = false,\n    generateIdForFile,\n    onLinkOpen,\n    generateLinkForSelection,\n    onPointerDown,\n    onPointerUp,\n    onScrollChange,\n    onDuplicate,\n    children,\n    validateEmbeddable,\n    renderEmbeddable,\n    aiEnabled,\n    showDeprecatedFonts,\n  } = props;\n\n  const canvasActions = props.UIOptions?.canvasActions;\n\n  // FIXME normalize/set defaults in parent component so that the memo resolver\n  // compares the same values\n  const UIOptions: AppProps[\"UIOptions\"] = {\n    ...props.UIOptions,\n    canvasActions: {\n      ...DEFAULT_UI_OPTIONS.canvasActions,\n      ...canvasActions,\n    },\n    tools: {\n      image: props.UIOptions?.tools?.image ?? true,\n    },\n  };\n\n  if (canvasActions?.export) {\n    UIOptions.canvasActions.export.saveFileToDisk =\n      canvasActions.export?.saveFileToDisk ??\n      DEFAULT_UI_OPTIONS.canvasActions.export.saveFileToDisk;\n  }\n\n  if (\n    UIOptions.canvasActions.toggleTheme === null &&\n    typeof theme === \"undefined\"\n  ) {\n    UIOptions.canvasActions.toggleTheme = true;\n  }\n\n  useEffect(() => {\n    const importPolyfill = async () => {\n      //@ts-ignore\n      await import(\"canvas-roundrect-polyfill\");\n    };\n\n    importPolyfill();\n\n    // Block pinch-zooming on iOS outside of the content area\n    const handleTouchMove = (event: TouchEvent) => {\n      // @ts-ignore\n      if (typeof event.scale === \"number\" && event.scale !== 1) {\n        event.preventDefault();\n      }\n    };\n\n    document.addEventListener(\"touchmove\", handleTouchMove, {\n      passive: false,\n    });\n\n    return () => {\n      document.removeEventListener(\"touchmove\", handleTouchMove);\n    };\n  }, []);\n\n  return (\n    <EditorJotaiProvider store={editorJotaiStore}>\n      <InitializeApp langCode={langCode} theme={theme}>\n        <App\n          onChange={onChange}\n          initialData={initialData}\n          excalidrawAPI={excalidrawAPI}\n          isCollaborating={isCollaborating}\n          onPointerUpdate={onPointerUpdate}\n          renderTopRightUI={renderTopRightUI}\n          langCode={langCode}\n          viewModeEnabled={viewModeEnabled}\n          zenModeEnabled={zenModeEnabled}\n          gridModeEnabled={gridModeEnabled}\n          libraryReturnUrl={libraryReturnUrl}\n          theme={theme}\n          name={name}\n          renderCustomStats={renderCustomStats}\n          UIOptions={UIOptions}\n          onPaste={onPaste}\n          detectScroll={detectScroll}\n          handleKeyboardGlobally={handleKeyboardGlobally}\n          onLibraryChange={onLibraryChange}\n          autoFocus={autoFocus}\n          generateIdForFile={generateIdForFile}\n          onLinkOpen={onLinkOpen}\n          generateLinkForSelection={generateLinkForSelection}\n          onPointerDown={onPointerDown}\n          onPointerUp={onPointerUp}\n          onScrollChange={onScrollChange}\n          onDuplicate={onDuplicate}\n          validateEmbeddable={validateEmbeddable}\n          renderEmbeddable={renderEmbeddable}\n          aiEnabled={aiEnabled !== false}\n          showDeprecatedFonts={showDeprecatedFonts}\n        >\n          {children}\n        </App>\n      </InitializeApp>\n    </EditorJotaiProvider>\n  );\n};\n\nconst areEqual = (prevProps: ExcalidrawProps, nextProps: ExcalidrawProps) => {\n  // short-circuit early\n  if (prevProps.children !== nextProps.children) {\n    return false;\n  }\n\n  const {\n    initialData: prevInitialData,\n    UIOptions: prevUIOptions = {},\n    ...prev\n  } = prevProps;\n  const {\n    initialData: nextInitialData,\n    UIOptions: nextUIOptions = {},\n    ...next\n  } = nextProps;\n\n  // comparing UIOptions\n  const prevUIOptionsKeys = Object.keys(prevUIOptions) as (keyof Partial<\n    typeof DEFAULT_UI_OPTIONS\n  >)[];\n  const nextUIOptionsKeys = Object.keys(nextUIOptions) as (keyof Partial<\n    typeof DEFAULT_UI_OPTIONS\n  >)[];\n\n  if (prevUIOptionsKeys.length !== nextUIOptionsKeys.length) {\n    return false;\n  }\n\n  const isUIOptionsSame = prevUIOptionsKeys.every((key) => {\n    if (key === \"canvasActions\") {\n      const canvasOptionKeys = Object.keys(\n        prevUIOptions.canvasActions!,\n      ) as (keyof Partial<typeof DEFAULT_UI_OPTIONS.canvasActions>)[];\n      return canvasOptionKeys.every((key) => {\n        if (\n          key === \"export\" &&\n          prevUIOptions?.canvasActions?.export &&\n          nextUIOptions?.canvasActions?.export\n        ) {\n          return (\n            prevUIOptions.canvasActions.export.saveFileToDisk ===\n            nextUIOptions.canvasActions.export.saveFileToDisk\n          );\n        }\n        return (\n          prevUIOptions?.canvasActions?.[key] ===\n          nextUIOptions?.canvasActions?.[key]\n        );\n      });\n    }\n    return prevUIOptions[key] === nextUIOptions[key];\n  });\n\n  return isUIOptionsSame && isShallowEqual(prev, next);\n};\n\nexport const Excalidraw = React.memo(ExcalidrawBase, areEqual);\nExcalidraw.displayName = \"Excalidraw\";\n\nexport {\n  getSceneVersion,\n  hashElementsVersion,\n  hashString,\n  isInvisiblySmallElement,\n  getNonDeletedElements,\n  getTextFromElements,\n} from \"./element\";\nexport { defaultLang, useI18n, languages } from \"./i18n\";\nexport {\n  restore,\n  restoreAppState,\n  restoreElements,\n  restoreLibraryItems,\n} from \"./data/restore\";\n\nexport { reconcileElements } from \"./data/reconcile\";\n\nexport {\n  exportToCanvas,\n  exportToBlob,\n  exportToSvg,\n  exportToClipboard,\n} from \"@excalidraw/utils/export\";\n\nexport { serializeAsJSON, serializeLibraryAsJSON } from \"./data/json\";\nexport {\n  loadFromBlob,\n  loadSceneOrLibraryFromBlob,\n  loadLibraryFromBlob,\n} from \"./data/blob\";\nexport { getFreeDrawSvgPath } from \"./renderer/renderElement\";\nexport { mergeLibraryItems, getLibraryItemsHash } from \"./data/library\";\nexport { isLinearElement } from \"./element/typeChecks\";\n\nexport {\n  FONT_FAMILY,\n  THEME,\n  MIME_TYPES,\n  ROUNDNESS,\n  DEFAULT_LASER_COLOR,\n  UserIdleState,\n} from \"./constants\";\n\nexport {\n  mutateElement,\n  newElementWith,\n  bumpVersion,\n} from \"./element/mutateElement\";\n\nexport { CaptureUpdateAction } from \"./store\";\n\nexport { parseLibraryTokensFromUrl, useHandleLibrary } from \"./data/library\";\n\nexport {\n  sceneCoordsToViewportCoords,\n  viewportCoordsToSceneCoords,\n} from \"./utils\";\n\nexport { Sidebar } from \"./components/Sidebar/Sidebar\";\nexport { Button } from \"./components/Button\";\nexport { Footer };\nexport { MainMenu };\nexport { useDevice } from \"./components/App\";\nexport { WelcomeScreen };\nexport { LiveCollaborationTrigger };\nexport { Stats } from \"./components/Stats\";\n\nexport { DefaultSidebar } from \"./components/DefaultSidebar\";\nexport { TTDDialog } from \"./components/TTDDialog/TTDDialog\";\nexport { TTDDialogTrigger } from \"./components/TTDDialog/TTDDialogTrigger\";\n\nexport { normalizeLink } from \"./data/url\";\nexport { zoomToFitBounds } from \"./actions/actionCanvas\";\nexport { convertToExcalidrawElements } from \"./data/transform\";\nexport { getCommonBounds, getVisibleSceneBounds } from \"./element/bounds\";\n\nexport {\n  elementsOverlappingBBox,\n  isElementInsideBBox,\n  elementPartiallyOverlapsWithOrContainsBBox,\n} from \"@excalidraw/utils/withinBounds\";\n\nexport { DiagramToCodePlugin } from \"./components/DiagramToCodePlugin/DiagramToCodePlugin\";\nexport { getDataURL } from \"./data/blob\";\nexport { isElementLink } from \"./element/elementLink\";\n\nexport { setCustomTextMetricsProvider } from \"./element/textMeasurements\";\n", "import React, { useEffect, useState } from \"react\";\n\nimport { LoadingMessage } from \"./LoadingMessage\";\nimport type { Language } from \"../i18n\";\nimport { defaultLang, languages, setLanguage } from \"../i18n\";\nimport type { Theme } from \"../element/types\";\n\ninterface Props {\n  langCode: Language[\"code\"];\n  children: React.ReactElement;\n  theme?: Theme;\n}\n\nexport const InitializeApp = (props: Props) => {\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const updateLang = async () => {\n      await setLanguage(currentLang);\n      setLoading(false);\n    };\n    const currentLang =\n      languages.find((lang) => lang.code === props.langCode) || defaultLang;\n    updateLang();\n  }, [props.langCode]);\n\n  return loading ? <LoadingMessage theme={props.theme} /> : props.children;\n};\n", "// eslint-disable-next-line no-restricted-imports\nimport { atom, createStore, type PrimitiveAtom } from \"jotai\";\nimport { createIsolation } from \"jotai-scope\";\n\nconst jotai = createIsolation();\n\nexport { atom, PrimitiveAtom };\nexport const { useAtom, useSetAtom, useAtomValue, useStore } = jotai;\nexport const EditorJotaiProvider: ReturnType<\n  typeof createIsolation\n>[\"Provider\"] = jotai.Provider;\n\nexport const editorJotaiStore: ReturnType<typeof createStore> = createStore();\n", "import fallbackLangData from \"./locales/en.json\";\nimport percentages from \"./locales/percentages.json\";\nimport { useAtomValue, editorJotaiStore, atom } from \"./editor-jotai\";\nimport type { NestedKeyOf } from \"./utility-types\";\n\nconst COMPLETION_THRESHOLD = 85;\n\nexport interface Language {\n  code: string;\n  label: string;\n  rtl?: boolean;\n}\n\nexport type TranslationKeys = NestedKeyOf<typeof fallbackLangData>;\n\nexport const defaultLang = { code: \"en\", label: \"English\" };\n\nexport const languages: Language[] = [\n  defaultLang,\n  ...[\n    { code: \"ar-SA\", label: \"\u0627\u0644\u0639\u0631\u0628\u064A\u0629\", rtl: true },\n    { code: \"bg-BG\", label: \"\u0411\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0438\" },\n    { code: \"ca-ES\", label: \"Catal\u00E0\" },\n    { code: \"cs-CZ\", label: \"\u010Cesky\" },\n    { code: \"de-DE\", label: \"Deutsch\" },\n    { code: \"el-GR\", label: \"\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC\" },\n    { code: \"es-ES\", label: \"Espa\u00F1ol\" },\n    { code: \"eu-ES\", label: \"Euskara\" },\n    { code: \"fa-IR\", label: \"\u0641\u0627\u0631\u0633\u06CC\", rtl: true },\n    { code: \"fi-FI\", label: \"Suomi\" },\n    { code: \"fr-FR\", label: \"Fran\u00E7ais\" },\n    { code: \"gl-ES\", label: \"Galego\" },\n    { code: \"he-IL\", label: \"\u05E2\u05D1\u05E8\u05D9\u05EA\", rtl: true },\n    { code: \"hi-IN\", label: \"\u0939\u093F\u0928\u094D\u0926\u0940\" },\n    { code: \"hu-HU\", label: \"Magyar\" },\n    { code: \"id-ID\", label: \"Bahasa Indonesia\" },\n    { code: \"it-IT\", label: \"Italiano\" },\n    { code: \"ja-JP\", label: \"\u65E5\u672C\u8A9E\" },\n    { code: \"kab-KAB\", label: \"Taqbaylit\" },\n    { code: \"kk-KZ\", label: \"\u049A\u0430\u0437\u0430\u049B \u0442\u0456\u043B\u0456\" },\n    { code: \"ko-KR\", label: \"\uD55C\uAD6D\uC5B4\" },\n    { code: \"ku-TR\", label: \"Kurd\u00EE\" },\n    { code: \"lt-LT\", label: \"Lietuvi\u0173\" },\n    { code: \"lv-LV\", label: \"Latvie\u0161u\" },\n    { code: \"my-MM\", label: \"Burmese\" },\n    { code: \"nb-NO\", label: \"Norsk bokm\u00E5l\" },\n    { code: \"nl-NL\", label: \"Nederlands\" },\n    { code: \"nn-NO\", label: \"Norsk nynorsk\" },\n    { code: \"oc-FR\", label: \"Occitan\" },\n    { code: \"pa-IN\", label: \"\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40\" },\n    { code: \"pl-PL\", label: \"Polski\" },\n    { code: \"pt-BR\", label: \"Portugu\u00EAs Brasileiro\" },\n    { code: \"pt-PT\", label: \"Portugu\u00EAs\" },\n    { code: \"ro-RO\", label: \"Rom\u00E2n\u0103\" },\n    { code: \"ru-RU\", label: \"\u0420\u0443\u0441\u0441\u043A\u0438\u0439\" },\n    { code: \"sk-SK\", label: \"Sloven\u010Dina\" },\n    { code: \"sv-SE\", label: \"Svenska\" },\n    { code: \"sl-SI\", label: \"Sloven\u0161\u010Dina\" },\n    { code: \"tr-TR\", label: \"T\u00FCrk\u00E7e\" },\n    { code: \"uk-UA\", label: \"\u0423\u043A\u0440\u0430\u0457\u043D\u0441\u044C\u043A\u0430\" },\n    { code: \"zh-CN\", label: \"\u7B80\u4F53\u4E2D\u6587\" },\n    { code: \"zh-TW\", label: \"\u7E41\u9AD4\u4E2D\u6587\" },\n    { code: \"vi-VN\", label: \"Ti\u1EBFng Vi\u1EC7t\" },\n    { code: \"mr-IN\", label: \"\u092E\u0930\u093E\u0920\u0940\" },\n  ]\n    .filter(\n      (lang) =>\n        (percentages as Record<string, number>)[lang.code] >=\n        COMPLETION_THRESHOLD,\n    )\n    .sort((left, right) => (left.label > right.label ? 1 : -1)),\n];\n\nconst TEST_LANG_CODE = \"__test__\";\nif (import.meta.env.DEV) {\n  languages.unshift(\n    { code: TEST_LANG_CODE, label: \"test language\" },\n    {\n      code: `${TEST_LANG_CODE}.rtl`,\n      label: \"\\u{202a}test language (rtl)\\u{202c}\",\n      rtl: true,\n    },\n  );\n}\n\nlet currentLang: Language = defaultLang;\nlet currentLangData = {};\n\nexport const setLanguage = async (lang: Language) => {\n  currentLang = lang;\n  document.documentElement.dir = currentLang.rtl ? \"rtl\" : \"ltr\";\n  document.documentElement.lang = currentLang.code;\n\n  if (lang.code.startsWith(TEST_LANG_CODE)) {\n    currentLangData = {};\n  } else {\n    try {\n      currentLangData = await import(`./locales/${currentLang.code}.json`);\n    } catch (error: any) {\n      console.error(`Failed to load language ${lang.code}:`, error.message);\n      currentLangData = fallbackLangData;\n    }\n  }\n\n  editorJotaiStore.set(editorLangCodeAtom, lang.code);\n};\n\nexport const getLanguage = () => currentLang;\n\nconst findPartsForData = (data: any, parts: string[]) => {\n  for (let index = 0; index < parts.length; ++index) {\n    const part = parts[index];\n    if (data[part] === undefined) {\n      return undefined;\n    }\n    data = data[part];\n  }\n  if (typeof data !== \"string\") {\n    return undefined;\n  }\n  return data;\n};\n\nexport const t = (\n  path: NestedKeyOf<typeof fallbackLangData>,\n  replacement?: { [key: string]: string | number } | null,\n  fallback?: string,\n) => {\n  if (currentLang.code.startsWith(TEST_LANG_CODE)) {\n    const name = replacement\n      ? `${path}(${JSON.stringify(replacement).slice(1, -1)})`\n      : path;\n    return `\\u{202a}[[${name}]]\\u{202c}`;\n  }\n\n  const parts = path.split(\".\");\n  let translation =\n    findPartsForData(currentLangData, parts) ||\n    findPartsForData(fallbackLangData, parts) ||\n    fallback;\n  if (translation === undefined) {\n    const errorMessage = `Can't find translation for ${path}`;\n    // in production, don't blow up the app on a missing translation key\n    if (import.meta.env.PROD) {\n      console.warn(errorMessage);\n      return \"\";\n    }\n    throw new Error(errorMessage);\n  }\n\n  if (replacement) {\n    for (const key in replacement) {\n      translation = translation.replace(`{{${key}}}`, String(replacement[key]));\n    }\n  }\n  return translation;\n};\n\n/** @private atom used solely to rerender components using `useI18n` hook */\nconst editorLangCodeAtom = atom(defaultLang.code);\n\n// Should be used in components that fall under these cases:\n// - component is rendered as an <Excalidraw> child\n// - component is rendered internally by <Excalidraw>, but the component\n//   is memoized w/o being updated on `langCode`, `AppState`, or `UIAppState`\nexport const useI18n = () => {\n  const langCode = useAtomValue(editorLangCodeAtom);\n  return { t, langCode };\n};\n", "import { t } from \"../i18n\";\nimport { useState, useEffect } from \"react\";\nimport Spinner from \"./Spinner\";\nimport clsx from \"clsx\";\nimport { THEME } from \"../constants\";\nimport type { Theme } from \"../element/types\";\n\nexport const LoadingMessage: React.FC<{ delay?: number; theme?: Theme }> = ({\n  delay,\n  theme,\n}) => {\n  const [isWaiting, setIsWaiting] = useState(!!delay);\n\n  useEffect(() => {\n    if (!delay) {\n      return;\n    }\n    const timer = setTimeout(() => {\n      setIsWaiting(false);\n    }, delay);\n    return () => clearTimeout(timer);\n  }, [delay]);\n\n  if (isWaiting) {\n    return null;\n  }\n\n  return (\n    <div\n      className={clsx(\"LoadingMessage\", {\n        \"LoadingMessage--dark\": theme === THEME.DARK,\n      })}\n    >\n      <div>\n        <Spinner />\n      </div>\n      <div className=\"LoadingMessage-text\">{t(\"labels.loadingScene\")}</div>\n    </div>\n  );\n};\n", "import React from \"react\";\n\nimport \"./Spinner.scss\";\n\nconst Spinner = ({\n  size = \"1em\",\n  circleWidth = 8,\n  synchronized = false,\n  className = \"\",\n}: {\n  size?: string | number;\n  circleWidth?: number;\n  synchronized?: boolean;\n  className?: string;\n}) => {\n  const mountTime = React.useRef(Date.now());\n  const mountDelay = -(mountTime.current % 1600);\n\n  return (\n    <div className={`Spinner ${className}`}>\n      <svg\n        viewBox=\"0 0 100 100\"\n        style={{\n          width: size,\n          height: size,\n          // fix for remounting causing spinner flicker\n          [\"--spinner-delay\" as any]: synchronized ? `${mountDelay}ms` : 0,\n        }}\n      >\n        <circle\n          cx=\"50\"\n          cy=\"50\"\n          r={50 - circleWidth / 2}\n          strokeWidth={circleWidth}\n          fill=\"none\"\n          strokeMiterlimit=\"10\"\n        />\n      </svg>\n    </div>\n  );\n};\n\nexport default Spinner;\n", "import React, { useContext } from \"react\";\nimport { flushSync } from \"react-dom\";\n\nimport type { RoughCanvas } from \"roughjs/bin/canvas\";\nimport rough from \"roughjs/bin/rough\";\nimport clsx from \"clsx\";\nimport { nanoid } from \"nanoid\";\nimport {\n  actionAddToLibrary,\n  actionBringForward,\n  actionBringToFront,\n  actionCopy,\n  actionCopyAsPng,\n  actionCopyAsSvg,\n  copyText,\n  actionCopyStyles,\n  actionCut,\n  actionDeleteSelected,\n  actionDuplicateSelection,\n  actionFinalize,\n  actionFlipHorizontal,\n  actionFlipVertical,\n  actionGroup,\n  actionPasteStyles,\n  actionSelectAll,\n  actionSendBackward,\n  actionSendToBack,\n  actionToggleGridMode,\n  actionToggleStats,\n  actionToggleZenMode,\n  actionUnbindText,\n  actionBindText,\n  actionUngroup,\n  actionLink,\n  actionToggleElementLock,\n  actionToggleLinearEditor,\n  actionToggleObjectsSnapMode,\n  actionToggleCropEditor,\n} from \"../actions\";\nimport { createRedoAction, createUndoAction } from \"../actions/actionHistory\";\nimport { ActionManager } from \"../actions/manager\";\nimport { actions } from \"../actions/register\";\nimport type { Action, ActionResult } from \"../actions/types\";\nimport { trackEvent } from \"../analytics\";\nimport {\n  getDefaultAppState,\n  isEraserActive,\n  isHandToolActive,\n} from \"../appState\";\nimport type { PastedMixedContent } from \"../clipboard\";\nimport { copyTextToSystemClipboard, parseClipboard } from \"../clipboard\";\nimport {\n  APP_NAME,\n  CURSOR_TYPE,\n  DEFAULT_MAX_IMAGE_WIDTH_OR_HEIGHT,\n  DEFAULT_VERTICAL_ALIGN,\n  DRAGGING_THRESHOLD,\n  ELEMENT_SHIFT_TRANSLATE_AMOUNT,\n  ELEMENT_TRANSLATE_AMOUNT,\n  ENV,\n  EVENT,\n  FRAME_STYLE,\n  IMAGE_MIME_TYPES,\n  IMAGE_RENDER_TIMEOUT,\n  isBrave,\n  LINE_CONFIRM_THRESHOLD,\n  MAX_ALLOWED_FILE_BYTES,\n  MIME_TYPES,\n  MQ_MAX_HEIGHT_LANDSCAPE,\n  MQ_MAX_WIDTH_LANDSCAPE,\n  MQ_MAX_WIDTH_PORTRAIT,\n  MQ_RIGHT_SIDEBAR_MIN_WIDTH,\n  POINTER_BUTTON,\n  ROUNDNESS,\n  SCROLL_TIMEOUT,\n  TAP_TWICE_TIMEOUT,\n  TEXT_TO_CENTER_SNAP_THRESHOLD,\n  THEME,\n  THEME_FILTER,\n  TOUCH_CTX_MENU_TIMEOUT,\n  VERTICAL_ALIGN,\n  YOUTUBE_STATES,\n  ZOOM_STEP,\n  POINTER_EVENTS,\n  TOOL_TYPE,\n  isIOS,\n  supportsResizeObserver,\n  DEFAULT_COLLISION_THRESHOLD,\n  DEFAULT_TEXT_ALIGN,\n  ARROW_TYPE,\n  DEFAULT_REDUCED_GLOBAL_ALPHA,\n  isSafari,\n  type EXPORT_IMAGE_TYPES,\n} from \"../constants\";\nimport type { ExportedElements } from \"../data\";\nimport { exportCanvas, loadFromBlob } from \"../data\";\nimport Library, { distributeLibraryItemsOnSquareGrid } from \"../data/library\";\nimport { restore, restoreElements } from \"../data/restore\";\nimport {\n  dragNewElement,\n  dragSelectedElements,\n  duplicateElement,\n  getCommonBounds,\n  getCursorForResizingElement,\n  getDragOffsetXY,\n  getElementWithTransformHandleType,\n  getNormalizedDimensions,\n  getResizeArrowDirection,\n  getResizeOffsetXY,\n  getLockedLinearCursorAlignSize,\n  getTransformHandleTypeFromCoords,\n  isInvisiblySmallElement,\n  isNonDeletedElement,\n  isTextElement,\n  newElement,\n  newLinearElement,\n  newTextElement,\n  newImageElement,\n  transformElements,\n  refreshTextDimensions,\n  redrawTextBoundingBox,\n  getElementAbsoluteCoords,\n} from \"../element\";\nimport {\n  bindOrUnbindLinearElement,\n  bindOrUnbindLinearElements,\n  fixBindingsAfterDeletion,\n  fixBindingsAfterDuplication,\n  getHoveredElementForBinding,\n  isBindingEnabled,\n  isLinearElementSimpleAndAlreadyBound,\n  maybeBindLinearElement,\n  shouldEnableBindingForPointerEvent,\n  updateBoundElements,\n  getSuggestedBindingsForArrows,\n} from \"../element/binding\";\nimport { LinearElementEditor } from \"../element/linearElementEditor\";\nimport { mutateElement, newElementWith } from \"../element/mutateElement\";\nimport {\n  deepCopyElement,\n  duplicateElements,\n  newFrameElement,\n  newFreeDrawElement,\n  newEmbeddableElement,\n  newMagicFrameElement,\n  newIframeElement,\n  newArrowElement,\n} from \"../element/newElement\";\nimport {\n  hasBoundTextElement,\n  isArrowElement,\n  isBindingElement,\n  isBindingElementType,\n  isBoundToContainer,\n  isFrameLikeElement,\n  isImageElement,\n  isEmbeddableElement,\n  isInitializedImageElement,\n  isLinearElement,\n  isLinearElementType,\n  isUsingAdaptiveRadius,\n  isIframeElement,\n  isIframeLikeElement,\n  isMagicFrameElement,\n  isTextBindableContainer,\n  isElbowArrow,\n  isFlowchartNodeElement,\n  isBindableElement,\n} from \"../element/typeChecks\";\nimport type {\n  ExcalidrawBindableElement,\n  ExcalidrawElement,\n  ExcalidrawFreeDrawElement,\n  ExcalidrawGenericElement,\n  ExcalidrawLinearElement,\n  ExcalidrawTextElement,\n  NonDeleted,\n  InitializedExcalidrawImageElement,\n  ExcalidrawImageElement,\n  FileId,\n  NonDeletedExcalidrawElement,\n  ExcalidrawTextContainer,\n  ExcalidrawFrameLikeElement,\n  ExcalidrawMagicFrameElement,\n  ExcalidrawIframeLikeElement,\n  IframeData,\n  ExcalidrawIframeElement,\n  ExcalidrawEmbeddableElement,\n  Ordered,\n  MagicGenerationData,\n  ExcalidrawNonSelectionElement,\n  ExcalidrawArrowElement,\n} from \"../element/types\";\nimport { getCenter, getDistance } from \"../gesture\";\nimport {\n  editGroupForSelectedElement,\n  getElementsInGroup,\n  getSelectedGroupIdForElement,\n  getSelectedGroupIds,\n  isElementInGroup,\n  isSelectedViaGroup,\n  selectGroupsForSelectedElements,\n} from \"../groups\";\nimport { History } from \"../history\";\nimport { defaultLang, getLanguage, languages, setLanguage, t } from \"../i18n\";\nimport {\n  CODES,\n  shouldResizeFromCenter,\n  shouldMaintainAspectRatio,\n  shouldRotateWithDiscreteAngle,\n  isArrowKey,\n  KEYS,\n} from \"../keys\";\nimport {\n  isElementCompletelyInViewport,\n  isElementInViewport,\n} from \"../element/sizeHelpers\";\nimport {\n  calculateScrollCenter,\n  getElementsWithinSelection,\n  getNormalizedZoom,\n  getSelectedElements,\n  hasBackground,\n  isSomeElementSelected,\n} from \"../scene\";\nimport Scene from \"../scene/Scene\";\nimport type {\n  RenderInteractiveSceneCallback,\n  ScrollBars,\n} from \"../scene/types\";\nimport { getStateForZoom } from \"../scene/zoom\";\nimport {\n  findShapeByKey,\n  getBoundTextShape,\n  getCornerRadius,\n  getElementShape,\n  isPathALoop,\n} from \"../shapes\";\nimport { getSelectionBoxShape } from \"@excalidraw/utils/geometry/shape\";\nimport { isPointInShape } from \"@excalidraw/utils/collision\";\nimport type {\n  AppClassProperties,\n  AppProps,\n  AppState,\n  BinaryFileData,\n  DataURL,\n  ExcalidrawImperativeAPI,\n  BinaryFiles,\n  Gesture,\n  GestureEvent,\n  LibraryItems,\n  PointerDownState,\n  SceneData,\n  Device,\n  FrameNameBoundsCache,\n  SidebarName,\n  SidebarTabName,\n  KeyboardModifiersObject,\n  CollaboratorPointer,\n  ToolType,\n  OnUserFollowedPayload,\n  UnsubscribeCallback,\n  EmbedsValidationStatus,\n  ElementsPendingErasure,\n  GenerateDiagramToCode,\n  NullableGridSize,\n  Offsets,\n} from \"../types\";\nimport {\n  debounce,\n  distance,\n  getFontString,\n  getNearestScrollableContainer,\n  isInputLike,\n  isToolIcon,\n  isWritableElement,\n  sceneCoordsToViewportCoords,\n  tupleToCoors,\n  viewportCoordsToSceneCoords,\n  wrapEvent,\n  updateObject,\n  updateActiveTool,\n  getShortcutKey,\n  isTransparent,\n  easeToValuesRAF,\n  muteFSAbortError,\n  isTestEnv,\n  easeOut,\n  updateStable,\n  addEventListener,\n  normalizeEOL,\n  getDateTime,\n  isShallowEqual,\n  arrayToMap,\n} from \"../utils\";\nimport {\n  createSrcDoc,\n  embeddableURLValidator,\n  maybeParseEmbedSrc,\n  getEmbedLink,\n} from \"../element/embeddable\";\nimport type { ContextMenuItems } from \"./ContextMenu\";\nimport { ContextMenu, CONTEXT_MENU_SEPARATOR } from \"./ContextMenu\";\nimport LayerUI from \"./LayerUI\";\nimport { Toast } from \"./Toast\";\nimport { actionToggleViewMode } from \"../actions/actionToggleViewMode\";\nimport {\n  dataURLToFile,\n  dataURLToString,\n  generateIdFromFile,\n  getDataURL,\n  getDataURL_sync,\n  getFileFromEvent,\n  ImageURLToFile,\n  isImageFileHandle,\n  isSupportedImageFile,\n  loadSceneOrLibraryFromBlob,\n  normalizeFile,\n  parseLibraryJSON,\n  resizeImageFile,\n  SVGStringToFile,\n} from \"../data/blob\";\nimport {\n  getInitializedImageElements,\n  loadHTMLImageElement,\n  normalizeSVG,\n  updateImageCache as _updateImageCache,\n} from \"../element/image\";\nimport throttle from \"lodash.throttle\";\nimport type { FileSystemHandle } from \"../data/filesystem\";\nimport { fileOpen } from \"../data/filesystem\";\nimport {\n  bindTextToShapeAfterDuplication,\n  getBoundTextElement,\n  getContainerCenter,\n  getContainerElement,\n  isValidTextContainer,\n} from \"../element/textElement\";\nimport {\n  showHyperlinkTooltip,\n  hideHyperlinkToolip,\n  Hyperlink,\n} from \"../components/hyperlink/Hyperlink\";\nimport { isLocalLink, normalizeLink, toValidURL } from \"../data/url\";\nimport { shouldShowBoundingBox } from \"../element/transformHandles\";\nimport { actionUnlockAllElements } from \"../actions/actionElementLock\";\nimport { Fonts, getLineHeight } from \"../fonts\";\nimport {\n  getFrameChildren,\n  isCursorInFrame,\n  bindElementsToFramesAfterDuplication,\n  addElementsToFrame,\n  replaceAllElementsInFrame,\n  removeElementsFromFrame,\n  getElementsInResizingFrame,\n  getElementsInNewFrame,\n  getContainingFrame,\n  elementOverlapsWithFrame,\n  updateFrameMembershipOfSelectedElements,\n  isElementInFrame,\n  getFrameLikeTitle,\n  getElementsOverlappingFrame,\n  filterElementsEligibleAsFrameChildren,\n} from \"../frame\";\nimport {\n  excludeElementsInFramesFromSelection,\n  makeNextSelectedElementIds,\n} from \"../scene/selection\";\nimport { actionPaste } from \"../actions/actionClipboard\";\nimport {\n  actionRemoveAllElementsFromFrame,\n  actionSelectAllElementsInFrame,\n  actionWrapSelectionInFrame,\n} from \"../actions/actionFrame\";\nimport { actionToggleHandTool, zoomToFit } from \"../actions/actionCanvas\";\nimport { editorJotaiStore } from \"../editor-jotai\";\nimport { activeConfirmDialogAtom } from \"./ActiveConfirmDialog\";\nimport { ImageSceneDataError } from \"../errors\";\nimport {\n  getSnapLinesAtPointer,\n  snapDraggedElements,\n  isActiveToolNonLinearSnappable,\n  snapNewElement,\n  snapResizingElements,\n  isSnappingEnabled,\n  getVisibleGaps,\n  getReferenceSnapPoints,\n  SnapCache,\n  isGridModeEnabled,\n  getGridPoint,\n} from \"../snapping\";\nimport { actionWrapTextInContainer } from \"../actions/actionBoundText\";\nimport BraveMeasureTextError from \"./BraveMeasureTextError\";\nimport { activeEyeDropperAtom } from \"./EyeDropper\";\nimport type { ExcalidrawElementSkeleton } from \"../data/transform\";\nimport { convertToExcalidrawElements } from \"../data/transform\";\nimport type { ValueOf } from \"../utility-types\";\nimport { isSidebarDockedAtom } from \"./Sidebar/Sidebar\";\nimport { StaticCanvas, InteractiveCanvas } from \"./canvases\";\nimport { Renderer } from \"../scene/Renderer\";\nimport { ShapeCache } from \"../scene/ShapeCache\";\nimport { SVGLayer } from \"./SVGLayer\";\nimport {\n  setEraserCursor,\n  setCursor,\n  resetCursor,\n  setCursorForShape,\n} from \"../cursor\";\nimport { Emitter } from \"../emitter\";\nimport { ElementCanvasButtons } from \"../element/ElementCanvasButtons\";\nimport { COLOR_PALETTE } from \"../colors\";\nimport { ElementCanvasButton } from \"./MagicButton\";\nimport { MagicIcon, copyIcon, fullscreenIcon } from \"./icons\";\nimport FollowMode from \"./FollowMode/FollowMode\";\nimport { Store, CaptureUpdateAction } from \"../store\";\nimport { AnimationFrameHandler } from \"../animation-frame-handler\";\nimport { AnimatedTrail } from \"../animated-trail\";\nimport { LaserTrails } from \"../laser-trails\";\nimport { withBatchedUpdates, withBatchedUpdatesThrottled } from \"../reactUtils\";\nimport { getRenderOpacity } from \"../renderer/renderElement\";\nimport {\n  hitElementBoundText,\n  hitElementBoundingBoxOnly,\n  hitElementItself,\n} from \"../element/collision\";\nimport { textWysiwyg } from \"../element/textWysiwyg\";\nimport { isOverScrollBars } from \"../scene/scrollbars\";\nimport { syncInvalidIndices, syncMovedIndices } from \"../fractionalIndex\";\nimport {\n  isPointHittingLink,\n  isPointHittingLinkIcon,\n} from \"./hyperlink/helpers\";\nimport { getShortcutFromShortcutName } from \"../actions/shortcuts\";\nimport { actionTextAutoResize } from \"../actions/actionTextAutoResize\";\nimport { getVisibleSceneBounds } from \"../element/bounds\";\nimport { isMaybeMermaidDefinition } from \"../mermaid\";\nimport NewElementCanvas from \"./canvases/NewElementCanvas\";\nimport {\n  FlowChartCreator,\n  FlowChartNavigator,\n  getLinkDirectionFromKey,\n} from \"../element/flowchart\";\nimport { searchItemInFocusAtom } from \"./SearchMenu\";\nimport type { LocalPoint, Radians } from \"@excalidraw/math\";\nimport {\n  clamp,\n  pointFrom,\n  pointDistance,\n  vector,\n  pointRotateRads,\n  vectorScale,\n  vectorFromPoint,\n  vectorSubtract,\n  vectorDot,\n  vectorNormalize,\n} from \"@excalidraw/math\";\nimport { cropElement } from \"../element/cropElement\";\nimport { wrapText } from \"../element/textWrapping\";\nimport { actionCopyElementLink } from \"../actions/actionElementLink\";\nimport { isElementLink, parseElementLinkFromURL } from \"../element/elementLink\";\nimport {\n  isMeasureTextSupported,\n  normalizeText,\n  measureText,\n  getLineHeightInPx,\n  getApproxMinLineWidth,\n  getApproxMinLineHeight,\n  getMinTextElementWidth,\n} from \"../element/textMeasurements\";\n\nconst AppContext = React.createContext<AppClassProperties>(null!);\nconst AppPropsContext = React.createContext<AppProps>(null!);\n\nconst deviceContextInitialValue = {\n  viewport: {\n    isMobile: false,\n    isLandscape: false,\n  },\n  editor: {\n    isMobile: false,\n    canFitSidebar: false,\n  },\n  isTouchScreen: false,\n};\nconst DeviceContext = React.createContext<Device>(deviceContextInitialValue);\nDeviceContext.displayName = \"DeviceContext\";\n\nexport const ExcalidrawContainerContext = React.createContext<{\n  container: HTMLDivElement | null;\n  id: string | null;\n}>({ container: null, id: null });\nExcalidrawContainerContext.displayName = \"ExcalidrawContainerContext\";\n\nconst ExcalidrawElementsContext = React.createContext<\n  readonly NonDeletedExcalidrawElement[]\n>([]);\nExcalidrawElementsContext.displayName = \"ExcalidrawElementsContext\";\n\nconst ExcalidrawAppStateContext = React.createContext<AppState>({\n  ...getDefaultAppState(),\n  width: 0,\n  height: 0,\n  offsetLeft: 0,\n  offsetTop: 0,\n});\nExcalidrawAppStateContext.displayName = \"ExcalidrawAppStateContext\";\n\nconst ExcalidrawSetAppStateContext = React.createContext<\n  React.Component<any, AppState>[\"setState\"]\n>(() => {\n  console.warn(\"Uninitialized ExcalidrawSetAppStateContext context!\");\n});\nExcalidrawSetAppStateContext.displayName = \"ExcalidrawSetAppStateContext\";\n\nconst ExcalidrawActionManagerContext = React.createContext<ActionManager>(\n  null!,\n);\nExcalidrawActionManagerContext.displayName = \"ExcalidrawActionManagerContext\";\n\nexport const useApp = () => useContext(AppContext);\nexport const useAppProps = () => useContext(AppPropsContext);\nexport const useDevice = () => useContext<Device>(DeviceContext);\nexport const useExcalidrawContainer = () =>\n  useContext(ExcalidrawContainerContext);\nexport const useExcalidrawElements = () =>\n  useContext(ExcalidrawElementsContext);\nexport const useExcalidrawAppState = () =>\n  useContext(ExcalidrawAppStateContext);\nexport const useExcalidrawSetAppState = () =>\n  useContext(ExcalidrawSetAppStateContext);\nexport const useExcalidrawActionManager = () =>\n  useContext(ExcalidrawActionManagerContext);\n\nlet didTapTwice: boolean = false;\nlet tappedTwiceTimer = 0;\nlet isHoldingSpace: boolean = false;\nlet isPanning: boolean = false;\nlet isDraggingScrollBar: boolean = false;\nlet currentScrollBars: ScrollBars = { horizontal: null, vertical: null };\nlet touchTimeout = 0;\nlet invalidateContextMenu = false;\n\n/**\n * Map of youtube embed video states\n */\nconst YOUTUBE_VIDEO_STATES = new Map<\n  ExcalidrawElement[\"id\"],\n  ValueOf<typeof YOUTUBE_STATES>\n>();\n\nlet IS_PLAIN_PASTE = false;\nlet IS_PLAIN_PASTE_TIMER = 0;\nlet PLAIN_PASTE_TOAST_SHOWN = false;\n\nlet lastPointerUp: (() => void) | null = null;\nconst gesture: Gesture = {\n  pointers: new Map(),\n  lastCenter: null,\n  initialDistance: null,\n  initialScale: null,\n};\n\nclass App extends React.Component<AppProps, AppState> {\n  canvas: AppClassProperties[\"canvas\"];\n  interactiveCanvas: AppClassProperties[\"interactiveCanvas\"] = null;\n  rc: RoughCanvas;\n  unmounted: boolean = false;\n  actionManager: ActionManager;\n  device: Device = deviceContextInitialValue;\n\n  private excalidrawContainerRef = React.createRef<HTMLDivElement>();\n\n  public scene: Scene;\n  public fonts: Fonts;\n  public renderer: Renderer;\n  public visibleElements: readonly NonDeletedExcalidrawElement[];\n  private resizeObserver: ResizeObserver | undefined;\n  private nearestScrollableContainer: HTMLElement | Document | undefined;\n  public library: AppClassProperties[\"library\"];\n  public libraryItemsFromStorage: LibraryItems | undefined;\n  public id: string;\n  private store: Store;\n  private history: History;\n  public excalidrawContainerValue: {\n    container: HTMLDivElement | null;\n    id: string;\n  };\n\n  public files: BinaryFiles = {};\n  public imageCache: AppClassProperties[\"imageCache\"] = new Map();\n  private iFrameRefs = new Map<ExcalidrawElement[\"id\"], HTMLIFrameElement>();\n  /**\n   * Indicates whether the embeddable's url has been validated for rendering.\n   * If value not set, indicates that the validation is pending.\n   * Initially or on url change the flag is not reset so that we can guarantee\n   * the validation came from a trusted source (the editor).\n   **/\n  private embedsValidationStatus: EmbedsValidationStatus = new Map();\n  /** embeds that have been inserted to DOM (as a perf optim, we don't want to\n   * insert to DOM before user initially scrolls to them) */\n  private initializedEmbeds = new Set<ExcalidrawIframeLikeElement[\"id\"]>();\n\n  private elementsPendingErasure: ElementsPendingErasure = new Set();\n\n  public flowChartCreator: FlowChartCreator = new FlowChartCreator();\n  private flowChartNavigator: FlowChartNavigator = new FlowChartNavigator();\n\n  hitLinkElement?: NonDeletedExcalidrawElement;\n  lastPointerDownEvent: React.PointerEvent<HTMLElement> | null = null;\n  lastPointerUpEvent: React.PointerEvent<HTMLElement> | PointerEvent | null =\n    null;\n  lastPointerMoveEvent: PointerEvent | null = null;\n  lastPointerMoveCoords: { x: number; y: number } | null = null;\n  lastViewportPosition = { x: 0, y: 0 };\n\n  animationFrameHandler = new AnimationFrameHandler();\n\n  laserTrails = new LaserTrails(this.animationFrameHandler, this);\n  eraserTrail = new AnimatedTrail(this.animationFrameHandler, this, {\n    streamline: 0.2,\n    size: 5,\n    keepHead: true,\n    sizeMapping: (c) => {\n      const DECAY_TIME = 200;\n      const DECAY_LENGTH = 10;\n      const t = Math.max(0, 1 - (performance.now() - c.pressure) / DECAY_TIME);\n      const l =\n        (DECAY_LENGTH -\n          Math.min(DECAY_LENGTH, c.totalLength - c.currentIndex)) /\n        DECAY_LENGTH;\n\n      return Math.min(easeOut(l), easeOut(t));\n    },\n    fill: () =>\n      this.state.theme === THEME.LIGHT\n        ? \"rgba(0, 0, 0, 0.2)\"\n        : \"rgba(255, 255, 255, 0.2)\",\n  });\n\n  onChangeEmitter = new Emitter<\n    [\n      elements: readonly ExcalidrawElement[],\n      appState: AppState,\n      files: BinaryFiles,\n    ]\n  >();\n\n  onPointerDownEmitter = new Emitter<\n    [\n      activeTool: AppState[\"activeTool\"],\n      pointerDownState: PointerDownState,\n      event: React.PointerEvent<HTMLElement>,\n    ]\n  >();\n\n  onPointerUpEmitter = new Emitter<\n    [\n      activeTool: AppState[\"activeTool\"],\n      pointerDownState: PointerDownState,\n      event: PointerEvent,\n    ]\n  >();\n  onUserFollowEmitter = new Emitter<[payload: OnUserFollowedPayload]>();\n  onScrollChangeEmitter = new Emitter<\n    [scrollX: number, scrollY: number, zoom: AppState[\"zoom\"]]\n  >();\n\n  missingPointerEventCleanupEmitter = new Emitter<\n    [event: PointerEvent | null]\n  >();\n  onRemoveEventListenersEmitter = new Emitter<[]>();\n\n  constructor(props: AppProps) {\n    super(props);\n    const defaultAppState = getDefaultAppState();\n    const {\n      excalidrawAPI,\n      viewModeEnabled = false,\n      zenModeEnabled = false,\n      gridModeEnabled = false,\n      objectsSnapModeEnabled = false,\n      theme = defaultAppState.theme,\n      name = `${t(\"labels.untitled\")}-${getDateTime()}`,\n    } = props;\n    this.state = {\n      ...defaultAppState,\n      theme,\n      isLoading: true,\n      ...this.getCanvasOffsets(),\n      viewModeEnabled,\n      zenModeEnabled,\n      objectsSnapModeEnabled,\n      gridModeEnabled: gridModeEnabled ?? defaultAppState.gridModeEnabled,\n      name,\n      width: window.innerWidth,\n      height: window.innerHeight,\n    };\n\n    this.id = nanoid();\n    this.library = new Library(this);\n    this.actionManager = new ActionManager(\n      this.syncActionResult,\n      () => this.state,\n      () => this.scene.getElementsIncludingDeleted(),\n      this,\n    );\n    this.scene = new Scene();\n\n    this.canvas = document.createElement(\"canvas\");\n    this.rc = rough.canvas(this.canvas);\n    this.renderer = new Renderer(this.scene);\n    this.visibleElements = [];\n\n    this.store = new Store();\n    this.history = new History();\n\n    if (excalidrawAPI) {\n      const api: ExcalidrawImperativeAPI = {\n        updateScene: this.updateScene,\n        updateLibrary: this.library.updateLibrary,\n        addFiles: this.addFiles,\n        resetScene: this.resetScene,\n        getSceneElementsIncludingDeleted: this.getSceneElementsIncludingDeleted,\n        history: {\n          clear: this.resetHistory,\n        },\n        scrollToContent: this.scrollToContent,\n        getSceneElements: this.getSceneElements,\n        getAppState: () => this.state,\n        getFiles: () => this.files,\n        getName: this.getName,\n        registerAction: (action: Action) => {\n          this.actionManager.registerAction(action);\n        },\n        refresh: this.refresh,\n        setToast: this.setToast,\n        id: this.id,\n        setActiveTool: this.setActiveTool,\n        setCursor: this.setCursor,\n        resetCursor: this.resetCursor,\n        updateFrameRendering: this.updateFrameRendering,\n        toggleSidebar: this.toggleSidebar,\n        onChange: (cb) => this.onChangeEmitter.on(cb),\n        onPointerDown: (cb) => this.onPointerDownEmitter.on(cb),\n        onPointerUp: (cb) => this.onPointerUpEmitter.on(cb),\n        onScrollChange: (cb) => this.onScrollChangeEmitter.on(cb),\n        onUserFollow: (cb) => this.onUserFollowEmitter.on(cb),\n      } as const;\n      if (typeof excalidrawAPI === \"function\") {\n        excalidrawAPI(api);\n      } else {\n        console.error(\"excalidrawAPI should be a function!\");\n      }\n    }\n\n    this.excalidrawContainerValue = {\n      container: this.excalidrawContainerRef.current,\n      id: this.id,\n    };\n\n    this.fonts = new Fonts(this.scene);\n    this.history = new History();\n\n    this.actionManager.registerAll(actions);\n    this.actionManager.registerAction(\n      createUndoAction(this.history, this.store),\n    );\n    this.actionManager.registerAction(\n      createRedoAction(this.history, this.store),\n    );\n  }\n\n  private onWindowMessage(event: MessageEvent) {\n    if (\n      event.origin !== \"https://player.vimeo.com\" &&\n      event.origin !== \"https://www.youtube.com\"\n    ) {\n      return;\n    }\n\n    let data = null;\n    try {\n      data = JSON.parse(event.data);\n    } catch (e) {}\n    if (!data) {\n      return;\n    }\n\n    switch (event.origin) {\n      case \"https://player.vimeo.com\":\n        //Allowing for multiple instances of Excalidraw running in the window\n        if (data.method === \"paused\") {\n          let source: Window | null = null;\n          const iframes = document.body.querySelectorAll(\n            \"iframe.excalidraw__embeddable\",\n          );\n          if (!iframes) {\n            break;\n          }\n          for (const iframe of iframes as NodeListOf<HTMLIFrameElement>) {\n            if (iframe.contentWindow === event.source) {\n              source = iframe.contentWindow;\n            }\n          }\n          source?.postMessage(\n            JSON.stringify({\n              method: data.value ? \"play\" : \"pause\",\n              value: true,\n            }),\n            \"*\",\n          );\n        }\n        break;\n      case \"https://www.youtube.com\":\n        if (\n          data.event === \"infoDelivery\" &&\n          data.info &&\n          data.id &&\n          typeof data.info.playerState === \"number\"\n        ) {\n          const id = data.id;\n          const playerState = data.info.playerState as number;\n          if (\n            (Object.values(YOUTUBE_STATES) as number[]).includes(playerState)\n          ) {\n            YOUTUBE_VIDEO_STATES.set(\n              id,\n              playerState as ValueOf<typeof YOUTUBE_STATES>,\n            );\n          }\n        }\n        break;\n    }\n  }\n\n  private cacheEmbeddableRef(\n    element: ExcalidrawIframeLikeElement,\n    ref: HTMLIFrameElement | null,\n  ) {\n    if (ref) {\n      this.iFrameRefs.set(element.id, ref);\n    }\n  }\n\n  /**\n   * Returns gridSize taking into account `gridModeEnabled`.\n   * If disabled, returns null.\n   */\n  public getEffectiveGridSize = () => {\n    return (\n      isGridModeEnabled(this) ? this.state.gridSize : null\n    ) as NullableGridSize;\n  };\n\n  private getHTMLIFrameElement(\n    element: ExcalidrawIframeLikeElement,\n  ): HTMLIFrameElement | undefined {\n    return this.iFrameRefs.get(element.id);\n  }\n\n  private handleEmbeddableCenterClick(element: ExcalidrawIframeLikeElement) {\n    if (\n      this.state.activeEmbeddable?.element === element &&\n      this.state.activeEmbeddable?.state === \"active\"\n    ) {\n      return;\n    }\n\n    // The delay serves two purposes\n    // 1. To prevent first click propagating to iframe on mobile,\n    //    else the click will immediately start and stop the video\n    // 2. If the user double clicks the frame center to activate it\n    //    without the delay youtube will immediately open the video\n    //    in fullscreen mode\n    setTimeout(() => {\n      this.setState({\n        activeEmbeddable: { element, state: \"active\" },\n        selectedElementIds: { [element.id]: true },\n        newElement: null,\n        selectionElement: null,\n      });\n    }, 100);\n\n    if (isIframeElement(element)) {\n      return;\n    }\n\n    const iframe = this.getHTMLIFrameElement(element);\n\n    if (!iframe?.contentWindow) {\n      return;\n    }\n\n    if (iframe.src.includes(\"youtube\")) {\n      const state = YOUTUBE_VIDEO_STATES.get(element.id);\n      if (!state) {\n        YOUTUBE_VIDEO_STATES.set(element.id, YOUTUBE_STATES.UNSTARTED);\n        iframe.contentWindow.postMessage(\n          JSON.stringify({\n            event: \"listening\",\n            id: element.id,\n          }),\n          \"*\",\n        );\n      }\n      switch (state) {\n        case YOUTUBE_STATES.PLAYING:\n        case YOUTUBE_STATES.BUFFERING:\n          iframe.contentWindow?.postMessage(\n            JSON.stringify({\n              event: \"command\",\n              func: \"pauseVideo\",\n              args: \"\",\n            }),\n            \"*\",\n          );\n          break;\n        default:\n          iframe.contentWindow?.postMessage(\n            JSON.stringify({\n              event: \"command\",\n              func: \"playVideo\",\n              args: \"\",\n            }),\n            \"*\",\n          );\n      }\n    }\n\n    if (iframe.src.includes(\"player.vimeo.com\")) {\n      iframe.contentWindow.postMessage(\n        JSON.stringify({\n          method: \"paused\", //video play/pause in onWindowMessage handler\n        }),\n        \"*\",\n      );\n    }\n  }\n\n  private isIframeLikeElementCenter(\n    el: ExcalidrawIframeLikeElement | null,\n    event: React.PointerEvent<HTMLElement> | PointerEvent,\n    sceneX: number,\n    sceneY: number,\n  ) {\n    return (\n      el &&\n      !event.altKey &&\n      !event.shiftKey &&\n      !event.metaKey &&\n      !event.ctrlKey &&\n      (this.state.activeEmbeddable?.element !== el ||\n        this.state.activeEmbeddable?.state === \"hover\" ||\n        !this.state.activeEmbeddable) &&\n      sceneX >= el.x + el.width / 3 &&\n      sceneX <= el.x + (2 * el.width) / 3 &&\n      sceneY >= el.y + el.height / 3 &&\n      sceneY <= el.y + (2 * el.height) / 3\n    );\n  }\n\n  private updateEmbedValidationStatus = (\n    element: ExcalidrawEmbeddableElement,\n    status: boolean,\n  ) => {\n    this.embedsValidationStatus.set(element.id, status);\n    ShapeCache.delete(element);\n  };\n\n  private updateEmbeddables = () => {\n    const iframeLikes = new Set<ExcalidrawIframeLikeElement[\"id\"]>();\n\n    let updated = false;\n    this.scene.getNonDeletedElements().filter((element) => {\n      if (isEmbeddableElement(element)) {\n        iframeLikes.add(element.id);\n        if (!this.embedsValidationStatus.has(element.id)) {\n          updated = true;\n\n          const validated = embeddableURLValidator(\n            element.link,\n            this.props.validateEmbeddable,\n          );\n\n          this.updateEmbedValidationStatus(element, validated);\n        }\n      } else if (isIframeElement(element)) {\n        iframeLikes.add(element.id);\n      }\n      return false;\n    });\n\n    if (updated) {\n      this.scene.triggerUpdate();\n    }\n\n    // GC\n    this.iFrameRefs.forEach((ref, id) => {\n      if (!iframeLikes.has(id)) {\n        this.iFrameRefs.delete(id);\n      }\n    });\n  };\n\n  private renderEmbeddables() {\n    const scale = this.state.zoom.value;\n    const normalizedWidth = this.state.width;\n    const normalizedHeight = this.state.height;\n\n    const embeddableElements = this.scene\n      .getNonDeletedElements()\n      .filter(\n        (el): el is Ordered<NonDeleted<ExcalidrawIframeLikeElement>> =>\n          (isEmbeddableElement(el) &&\n            this.embedsValidationStatus.get(el.id) === true) ||\n          isIframeElement(el),\n      );\n\n    return (\n      <>\n        {embeddableElements.map((el) => {\n          const { x, y } = sceneCoordsToViewportCoords(\n            { sceneX: el.x, sceneY: el.y },\n            this.state,\n          );\n\n          const isVisible = isElementInViewport(\n            el,\n            normalizedWidth,\n            normalizedHeight,\n            this.state,\n            this.scene.getNonDeletedElementsMap(),\n          );\n          const hasBeenInitialized = this.initializedEmbeds.has(el.id);\n\n          if (isVisible && !hasBeenInitialized) {\n            this.initializedEmbeds.add(el.id);\n          }\n          const shouldRender = isVisible || hasBeenInitialized;\n\n          if (!shouldRender) {\n            return null;\n          }\n\n          let src: IframeData | null;\n\n          if (isIframeElement(el)) {\n            src = null;\n\n            const data: MagicGenerationData = (el.customData?.generationData ??\n              this.magicGenerations.get(el.id)) || {\n              status: \"error\",\n              message: \"No generation data\",\n              code: \"ERR_NO_GENERATION_DATA\",\n            };\n\n            if (data.status === \"done\") {\n              const html = data.html;\n              src = {\n                intrinsicSize: { w: el.width, h: el.height },\n                type: \"document\",\n                srcdoc: () => {\n                  return html;\n                },\n              } as const;\n            } else if (data.status === \"pending\") {\n              src = {\n                intrinsicSize: { w: el.width, h: el.height },\n                type: \"document\",\n                srcdoc: () => {\n                  return createSrcDoc(`\n                    <style>\n                      html, body {\n                        width: 100%;\n                        height: 100%;\n                        color: ${\n                          this.state.theme === THEME.DARK ? \"white\" : \"black\"\n                        };\n                      }\n                      body {\n                        display: flex;\n                        align-items: center;\n                        justify-content: center;\n                        flex-direction: column;\n                        gap: 1rem;\n                      }\n\n                      .Spinner {\n                        display: flex;\n                        align-items: center;\n                        justify-content: center;\n                        margin-left: auto;\n                        margin-right: auto;\n                      }\n\n                      .Spinner svg {\n                        animation: rotate 1.6s linear infinite;\n                        transform-origin: center center;\n                        width: 40px;\n                        height: 40px;\n                      }\n\n                      .Spinner circle {\n                        stroke: currentColor;\n                        animation: dash 1.6s linear 0s infinite;\n                        stroke-linecap: round;\n                      }\n\n                      @keyframes rotate {\n                        100% {\n                          transform: rotate(360deg);\n                        }\n                      }\n\n                      @keyframes dash {\n                        0% {\n                          stroke-dasharray: 1, 300;\n                          stroke-dashoffset: 0;\n                        }\n                        50% {\n                          stroke-dasharray: 150, 300;\n                          stroke-dashoffset: -200;\n                        }\n                        100% {\n                          stroke-dasharray: 1, 300;\n                          stroke-dashoffset: -280;\n                        }\n                      }\n                    </style>\n                    <div class=\"Spinner\">\n                      <svg\n                        viewBox=\"0 0 100 100\"\n                      >\n                        <circle\n                          cx=\"50\"\n                          cy=\"50\"\n                          r=\"46\"\n                          stroke-width=\"8\"\n                          fill=\"none\"\n                          stroke-miter-limit=\"10\"\n                        />\n                      </svg>\n                    </div>\n                    <div>Generating...</div>\n                  `);\n                },\n              } as const;\n            } else {\n              let message: string;\n              if (data.code === \"ERR_GENERATION_INTERRUPTED\") {\n                message = \"Generation was interrupted...\";\n              } else {\n                message = data.message || \"Generation failed\";\n              }\n              src = {\n                intrinsicSize: { w: el.width, h: el.height },\n                type: \"document\",\n                srcdoc: () => {\n                  return createSrcDoc(`\n                    <style>\n                    html, body {\n                      height: 100%;\n                    }\n                      body {\n                        display: flex;\n                        flex-direction: column;\n                        align-items: center;\n                        justify-content: center;\n                        color: ${COLOR_PALETTE.red[3]};\n                      }\n                      h1, h3 {\n                        margin-top: 0;\n                        margin-bottom: 0.5rem;\n                      }\n                    </style>\n                    <h1>Error!</h1>\n                    <h3>${message}</h3>\n                  `);\n                },\n              } as const;\n            }\n          } else {\n            src = getEmbedLink(toValidURL(el.link || \"\"));\n          }\n\n          const isActive =\n            this.state.activeEmbeddable?.element === el &&\n            this.state.activeEmbeddable?.state === \"active\";\n          const isHovered =\n            this.state.activeEmbeddable?.element === el &&\n            this.state.activeEmbeddable?.state === \"hover\";\n\n          return (\n            <div\n              key={el.id}\n              className={clsx(\"excalidraw__embeddable-container\", {\n                \"is-hovered\": isHovered,\n              })}\n              style={{\n                transform: isVisible\n                  ? `translate(${x - this.state.offsetLeft}px, ${\n                      y - this.state.offsetTop\n                    }px) scale(${scale})`\n                  : \"none\",\n                display: isVisible ? \"block\" : \"none\",\n                opacity: getRenderOpacity(\n                  el,\n                  getContainingFrame(el, this.scene.getNonDeletedElementsMap()),\n                  this.elementsPendingErasure,\n                  null,\n                  this.state.openDialog?.name === \"elementLinkSelector\"\n                    ? DEFAULT_REDUCED_GLOBAL_ALPHA\n                    : 1,\n                ),\n                [\"--embeddable-radius\" as string]: `${getCornerRadius(\n                  Math.min(el.width, el.height),\n                  el,\n                )}px`,\n              }}\n            >\n              <div\n                //this is a hack that addresses isse with embedded excalidraw.com embeddable\n                //https://github.com/excalidraw/excalidraw/pull/6691#issuecomment-1607383938\n                /*ref={(ref) => {\n                  if (!this.excalidrawContainerRef.current) {\n                    return;\n                  }\n                  const container = this.excalidrawContainerRef.current;\n                  const sh = container.scrollHeight;\n                  const ch = container.clientHeight;\n                  if (sh !== ch) {\n                    container.style.height = `${sh}px`;\n                    setTimeout(() => {\n                      container.style.height = `100%`;\n                    });\n                  }\n                }}*/\n                className=\"excalidraw__embeddable-container__inner\"\n                style={{\n                  width: isVisible ? `${el.width}px` : 0,\n                  height: isVisible ? `${el.height}px` : 0,\n                  transform: isVisible ? `rotate(${el.angle}rad)` : \"none\",\n                  pointerEvents: isActive\n                    ? POINTER_EVENTS.enabled\n                    : POINTER_EVENTS.disabled,\n                }}\n              >\n                {isHovered && (\n                  <div className=\"excalidraw__embeddable-hint\">\n                    {t(\"buttons.embeddableInteractionButton\")}\n                  </div>\n                )}\n                <div\n                  className=\"excalidraw__embeddable__outer\"\n                  style={{\n                    padding: `${el.strokeWidth}px`,\n                  }}\n                >\n                  {(isEmbeddableElement(el)\n                    ? this.props.renderEmbeddable?.(el, this.state)\n                    : null) ?? (\n                    <iframe\n                      ref={(ref) => this.cacheEmbeddableRef(el, ref)}\n                      className=\"excalidraw__embeddable\"\n                      srcDoc={\n                        src?.type === \"document\"\n                          ? src.srcdoc(this.state.theme)\n                          : undefined\n                      }\n                      src={\n                        src?.type !== \"document\" ? src?.link ?? \"\" : undefined\n                      }\n                      // https://stackoverflow.com/q/18470015\n                      scrolling=\"no\"\n                      referrerPolicy=\"no-referrer-when-downgrade\"\n                      title=\"Excalidraw Embedded Content\"\n                      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                      allowFullScreen={true}\n                      sandbox={`${\n                        src?.sandbox?.allowSameOrigin ? \"allow-same-origin\" : \"\"\n                      } allow-scripts allow-forms allow-popups allow-popups-to-escape-sandbox allow-presentation allow-downloads`}\n                    />\n                  )}\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </>\n    );\n  }\n\n  private getFrameNameDOMId = (frameElement: ExcalidrawElement) => {\n    return `${this.id}-frame-name-${frameElement.id}`;\n  };\n\n  frameNameBoundsCache: FrameNameBoundsCache = {\n    get: (frameElement) => {\n      let bounds = this.frameNameBoundsCache._cache.get(frameElement.id);\n      if (\n        !bounds ||\n        bounds.zoom !== this.state.zoom.value ||\n        bounds.versionNonce !== frameElement.versionNonce\n      ) {\n        const frameNameDiv = document.getElementById(\n          this.getFrameNameDOMId(frameElement),\n        );\n\n        if (frameNameDiv) {\n          const box = frameNameDiv.getBoundingClientRect();\n          const boxSceneTopLeft = viewportCoordsToSceneCoords(\n            { clientX: box.x, clientY: box.y },\n            this.state,\n          );\n          const boxSceneBottomRight = viewportCoordsToSceneCoords(\n            { clientX: box.right, clientY: box.bottom },\n            this.state,\n          );\n\n          bounds = {\n            x: boxSceneTopLeft.x,\n            y: boxSceneTopLeft.y,\n            width: boxSceneBottomRight.x - boxSceneTopLeft.x,\n            height: boxSceneBottomRight.y - boxSceneTopLeft.y,\n            angle: 0,\n            zoom: this.state.zoom.value,\n            versionNonce: frameElement.versionNonce,\n          };\n\n          this.frameNameBoundsCache._cache.set(frameElement.id, bounds);\n\n          return bounds;\n        }\n        return null;\n      }\n\n      return bounds;\n    },\n    /**\n     * @private\n     */\n    _cache: new Map(),\n  };\n\n  private resetEditingFrame = (frame: ExcalidrawFrameLikeElement | null) => {\n    if (frame) {\n      mutateElement(frame, { name: frame.name?.trim() || null });\n    }\n    this.setState({ editingFrame: null });\n  };\n\n  private renderFrameNames = () => {\n    if (!this.state.frameRendering.enabled || !this.state.frameRendering.name) {\n      if (this.state.editingFrame) {\n        this.resetEditingFrame(null);\n      }\n      return null;\n    }\n\n    const isDarkTheme = this.state.theme === THEME.DARK;\n\n    return this.scene.getNonDeletedFramesLikes().map((f) => {\n      if (\n        !isElementInViewport(\n          f,\n          this.canvas.width / window.devicePixelRatio,\n          this.canvas.height / window.devicePixelRatio,\n          {\n            offsetLeft: this.state.offsetLeft,\n            offsetTop: this.state.offsetTop,\n            scrollX: this.state.scrollX,\n            scrollY: this.state.scrollY,\n            zoom: this.state.zoom,\n          },\n          this.scene.getNonDeletedElementsMap(),\n        )\n      ) {\n        if (this.state.editingFrame === f.id) {\n          this.resetEditingFrame(f);\n        }\n        // if frame not visible, don't render its name\n        return null;\n      }\n\n      const { x: x1, y: y1 } = sceneCoordsToViewportCoords(\n        { sceneX: f.x, sceneY: f.y },\n        this.state,\n      );\n\n      const FRAME_NAME_EDIT_PADDING = 6;\n\n      let frameNameJSX;\n\n      const frameName = getFrameLikeTitle(f);\n\n      if (f.id === this.state.editingFrame) {\n        const frameNameInEdit = frameName;\n\n        frameNameJSX = (\n          <input\n            autoFocus\n            value={frameNameInEdit}\n            onChange={(e) => {\n              mutateElement(f, {\n                name: e.target.value,\n              });\n            }}\n            onFocus={(e) => e.target.select()}\n            onBlur={() => this.resetEditingFrame(f)}\n            onKeyDown={(event) => {\n              // for some inexplicable reason, `onBlur` triggered on ESC\n              // does not reset `state.editingFrame` despite being called,\n              // and we need to reset it here as well\n              if (event.key === KEYS.ESCAPE || event.key === KEYS.ENTER) {\n                this.resetEditingFrame(f);\n              }\n            }}\n            style={{\n              background: this.state.viewBackgroundColor,\n              filter: isDarkTheme ? THEME_FILTER : \"none\",\n              zIndex: 2,\n              border: \"none\",\n              display: \"block\",\n              padding: `${FRAME_NAME_EDIT_PADDING}px`,\n              borderRadius: 4,\n              boxShadow: \"inset 0 0 0 1px var(--color-primary)\",\n              fontFamily: \"Assistant\",\n              fontSize: \"14px\",\n              transform: `translate(-${FRAME_NAME_EDIT_PADDING}px, ${FRAME_NAME_EDIT_PADDING}px)`,\n              color: \"var(--color-gray-80)\",\n              overflow: \"hidden\",\n              maxWidth: `${\n                document.body.clientWidth - x1 - FRAME_NAME_EDIT_PADDING\n              }px`,\n            }}\n            size={frameNameInEdit.length + 1 || 1}\n            dir=\"auto\"\n            autoComplete=\"off\"\n            autoCapitalize=\"off\"\n            autoCorrect=\"off\"\n          />\n        );\n      } else {\n        frameNameJSX = frameName;\n      }\n\n      return (\n        <div\n          id={this.getFrameNameDOMId(f)}\n          key={f.id}\n          style={{\n            position: \"absolute\",\n            // Positioning from bottom so that we don't to either\n            // calculate text height or adjust using transform (which)\n            // messes up input position when editing the frame name.\n            // This makes the positioning deterministic and we can calculate\n            // the same position when rendering to canvas / svg.\n            bottom: `${\n              this.state.height +\n              FRAME_STYLE.nameOffsetY -\n              y1 +\n              this.state.offsetTop\n            }px`,\n            left: `${x1 - this.state.offsetLeft}px`,\n            zIndex: 2,\n            fontSize: FRAME_STYLE.nameFontSize,\n            color: isDarkTheme\n              ? FRAME_STYLE.nameColorDarkTheme\n              : FRAME_STYLE.nameColorLightTheme,\n            lineHeight: FRAME_STYLE.nameLineHeight,\n            width: \"max-content\",\n            maxWidth: `${f.width}px`,\n            overflow: f.id === this.state.editingFrame ? \"visible\" : \"hidden\",\n            whiteSpace: \"nowrap\",\n            textOverflow: \"ellipsis\",\n            cursor: CURSOR_TYPE.MOVE,\n            pointerEvents: this.state.viewModeEnabled\n              ? POINTER_EVENTS.disabled\n              : POINTER_EVENTS.enabled,\n          }}\n          onPointerDown={(event) => this.handleCanvasPointerDown(event)}\n          onWheel={(event) => this.handleWheel(event)}\n          onContextMenu={this.handleCanvasContextMenu}\n          onDoubleClick={() => {\n            this.setState({\n              editingFrame: f.id,\n            });\n          }}\n        >\n          {frameNameJSX}\n        </div>\n      );\n    });\n  };\n\n  private toggleOverscrollBehavior(event: React.PointerEvent) {\n    // when pointer inside editor, disable overscroll behavior to prevent\n    // panning to trigger history back/forward on MacOS Chrome\n    document.documentElement.style.overscrollBehaviorX =\n      event.type === \"pointerenter\" ? \"none\" : \"auto\";\n  }\n\n  public render() {\n    const selectedElements = this.scene.getSelectedElements(this.state);\n    const { renderTopRightUI, renderCustomStats } = this.props;\n\n    const sceneNonce = this.scene.getSceneNonce();\n    const { elementsMap, visibleElements } =\n      this.renderer.getRenderableElements({\n        sceneNonce,\n        zoom: this.state.zoom,\n        offsetLeft: this.state.offsetLeft,\n        offsetTop: this.state.offsetTop,\n        scrollX: this.state.scrollX,\n        scrollY: this.state.scrollY,\n        height: this.state.height,\n        width: this.state.width,\n        editingTextElement: this.state.editingTextElement,\n        newElementId: this.state.newElement?.id,\n        pendingImageElementId: this.state.pendingImageElementId,\n      });\n    this.visibleElements = visibleElements;\n\n    const allElementsMap = this.scene.getNonDeletedElementsMap();\n\n    const shouldBlockPointerEvents =\n      // default back to `--ui-pointerEvents` flow if setPointerCapture\n      // not supported\n      \"setPointerCapture\" in HTMLElement.prototype\n        ? false\n        : this.state.selectionElement ||\n          this.state.newElement ||\n          this.state.selectedElementsAreBeingDragged ||\n          this.state.resizingElement ||\n          (this.state.activeTool.type === \"laser\" &&\n            // technically we can just test on this once we make it more safe\n            this.state.cursorButton === \"down\");\n\n    const firstSelectedElement = selectedElements[0];\n\n    return (\n      <div\n        className={clsx(\"excalidraw excalidraw-container\", {\n          \"excalidraw--view-mode\":\n            this.state.viewModeEnabled ||\n            this.state.openDialog?.name === \"elementLinkSelector\",\n          \"excalidraw--mobile\": this.device.editor.isMobile,\n        })}\n        style={{\n          [\"--ui-pointerEvents\" as any]: shouldBlockPointerEvents\n            ? POINTER_EVENTS.disabled\n            : POINTER_EVENTS.enabled,\n          [\"--right-sidebar-width\" as any]: \"302px\",\n        }}\n        ref={this.excalidrawContainerRef}\n        onDrop={this.handleAppOnDrop}\n        tabIndex={0}\n        onKeyDown={\n          this.props.handleKeyboardGlobally ? undefined : this.onKeyDown\n        }\n        onPointerEnter={this.toggleOverscrollBehavior}\n        onPointerLeave={this.toggleOverscrollBehavior}\n      >\n        <AppContext.Provider value={this}>\n          <AppPropsContext.Provider value={this.props}>\n            <ExcalidrawContainerContext.Provider\n              value={this.excalidrawContainerValue}\n            >\n              <DeviceContext.Provider value={this.device}>\n                <ExcalidrawSetAppStateContext.Provider value={this.setAppState}>\n                  <ExcalidrawAppStateContext.Provider value={this.state}>\n                    <ExcalidrawElementsContext.Provider\n                      value={this.scene.getNonDeletedElements()}\n                    >\n                      <ExcalidrawActionManagerContext.Provider\n                        value={this.actionManager}\n                      >\n                        <LayerUI\n                          canvas={this.canvas}\n                          appState={this.state}\n                          files={this.files}\n                          setAppState={this.setAppState}\n                          actionManager={this.actionManager}\n                          elements={this.scene.getNonDeletedElements()}\n                          onLockToggle={this.toggleLock}\n                          onPenModeToggle={this.togglePenMode}\n                          onHandToolToggle={this.onHandToolToggle}\n                          langCode={getLanguage().code}\n                          renderTopRightUI={renderTopRightUI}\n                          renderCustomStats={renderCustomStats}\n                          showExitZenModeBtn={\n                            typeof this.props?.zenModeEnabled === \"undefined\" &&\n                            this.state.zenModeEnabled\n                          }\n                          UIOptions={this.props.UIOptions}\n                          onExportImage={this.onExportImage}\n                          renderWelcomeScreen={\n                            !this.state.isLoading &&\n                            this.state.showWelcomeScreen &&\n                            this.state.activeTool.type === \"selection\" &&\n                            !this.state.zenModeEnabled &&\n                            !this.scene.getElementsIncludingDeleted().length\n                          }\n                          app={this}\n                          isCollaborating={this.props.isCollaborating}\n                          generateLinkForSelection={\n                            this.props.generateLinkForSelection\n                          }\n                        >\n                          {this.props.children}\n                        </LayerUI>\n\n                        <div className=\"excalidraw-textEditorContainer\" />\n                        <div className=\"excalidraw-contextMenuContainer\" />\n                        <div className=\"excalidraw-eye-dropper-container\" />\n                        <SVGLayer\n                          trails={[this.laserTrails, this.eraserTrail]}\n                        />\n                        {selectedElements.length === 1 &&\n                          this.state.openDialog?.name !==\n                            \"elementLinkSelector\" &&\n                          this.state.showHyperlinkPopup && (\n                            <Hyperlink\n                              key={firstSelectedElement.id}\n                              element={firstSelectedElement}\n                              elementsMap={allElementsMap}\n                              setAppState={this.setAppState}\n                              onLinkOpen={this.props.onLinkOpen}\n                              setToast={this.setToast}\n                              updateEmbedValidationStatus={\n                                this.updateEmbedValidationStatus\n                              }\n                            />\n                          )}\n                        {this.props.aiEnabled !== false &&\n                          selectedElements.length === 1 &&\n                          isMagicFrameElement(firstSelectedElement) && (\n                            <ElementCanvasButtons\n                              element={firstSelectedElement}\n                              elementsMap={elementsMap}\n                            >\n                              <ElementCanvasButton\n                                title={t(\"labels.convertToCode\")}\n                                icon={MagicIcon}\n                                checked={false}\n                                onChange={() =>\n                                  this.onMagicFrameGenerate(\n                                    firstSelectedElement,\n                                    \"button\",\n                                  )\n                                }\n                              />\n                            </ElementCanvasButtons>\n                          )}\n                        {selectedElements.length === 1 &&\n                          isIframeElement(firstSelectedElement) &&\n                          firstSelectedElement.customData?.generationData\n                            ?.status === \"done\" && (\n                            <ElementCanvasButtons\n                              element={firstSelectedElement}\n                              elementsMap={elementsMap}\n                            >\n                              <ElementCanvasButton\n                                title={t(\"labels.copySource\")}\n                                icon={copyIcon}\n                                checked={false}\n                                onChange={() =>\n                                  this.onIframeSrcCopy(firstSelectedElement)\n                                }\n                              />\n                              <ElementCanvasButton\n                                title=\"Enter fullscreen\"\n                                icon={fullscreenIcon}\n                                checked={false}\n                                onChange={() => {\n                                  const iframe =\n                                    this.getHTMLIFrameElement(\n                                      firstSelectedElement,\n                                    );\n                                  if (iframe) {\n                                    try {\n                                      iframe.requestFullscreen();\n                                      this.setState({\n                                        activeEmbeddable: {\n                                          element: firstSelectedElement,\n                                          state: \"active\",\n                                        },\n                                        selectedElementIds: {\n                                          [firstSelectedElement.id]: true,\n                                        },\n                                        newElement: null,\n                                        selectionElement: null,\n                                      });\n                                    } catch (err: any) {\n                                      console.warn(err);\n                                      this.setState({\n                                        errorMessage:\n                                          \"Couldn't enter fullscreen\",\n                                      });\n                                    }\n                                  }\n                                }}\n                              />\n                            </ElementCanvasButtons>\n                          )}\n                        {this.state.toast !== null && (\n                          <Toast\n                            message={this.state.toast.message}\n                            onClose={() => this.setToast(null)}\n                            duration={this.state.toast.duration}\n                            closable={this.state.toast.closable}\n                          />\n                        )}\n                        {this.state.contextMenu && (\n                          <ContextMenu\n                            items={this.state.contextMenu.items}\n                            top={this.state.contextMenu.top}\n                            left={this.state.contextMenu.left}\n                            actionManager={this.actionManager}\n                            onClose={(callback) => {\n                              this.setState({ contextMenu: null }, () => {\n                                this.focusContainer();\n                                callback?.();\n                              });\n                            }}\n                          />\n                        )}\n                        <StaticCanvas\n                          canvas={this.canvas}\n                          rc={this.rc}\n                          elementsMap={elementsMap}\n                          allElementsMap={allElementsMap}\n                          visibleElements={visibleElements}\n                          sceneNonce={sceneNonce}\n                          selectionNonce={\n                            this.state.selectionElement?.versionNonce\n                          }\n                          scale={window.devicePixelRatio}\n                          appState={this.state}\n                          renderConfig={{\n                            imageCache: this.imageCache,\n                            isExporting: false,\n                            renderGrid: isGridModeEnabled(this),\n                            canvasBackgroundColor:\n                              this.state.viewBackgroundColor,\n                            embedsValidationStatus: this.embedsValidationStatus,\n                            elementsPendingErasure: this.elementsPendingErasure,\n                            pendingFlowchartNodes:\n                              this.flowChartCreator.pendingNodes,\n                          }}\n                        />\n                        {this.state.newElement && (\n                          <NewElementCanvas\n                            appState={this.state}\n                            scale={window.devicePixelRatio}\n                            rc={this.rc}\n                            elementsMap={elementsMap}\n                            allElementsMap={allElementsMap}\n                            renderConfig={{\n                              imageCache: this.imageCache,\n                              isExporting: false,\n                              renderGrid: false,\n                              canvasBackgroundColor:\n                                this.state.viewBackgroundColor,\n                              embedsValidationStatus:\n                                this.embedsValidationStatus,\n                              elementsPendingErasure:\n                                this.elementsPendingErasure,\n                              pendingFlowchartNodes: null,\n                            }}\n                          />\n                        )}\n                        <InteractiveCanvas\n                          containerRef={this.excalidrawContainerRef}\n                          canvas={this.interactiveCanvas}\n                          elementsMap={elementsMap}\n                          visibleElements={visibleElements}\n                          allElementsMap={allElementsMap}\n                          selectedElements={selectedElements}\n                          sceneNonce={sceneNonce}\n                          selectionNonce={\n                            this.state.selectionElement?.versionNonce\n                          }\n                          scale={window.devicePixelRatio}\n                          appState={this.state}\n                          device={this.device}\n                          renderInteractiveSceneCallback={\n                            this.renderInteractiveSceneCallback\n                          }\n                          handleCanvasRef={this.handleInteractiveCanvasRef}\n                          onContextMenu={this.handleCanvasContextMenu}\n                          onPointerMove={this.handleCanvasPointerMove}\n                          onPointerUp={this.handleCanvasPointerUp}\n                          onPointerCancel={this.removePointer}\n                          onTouchMove={this.handleTouchMove}\n                          onPointerDown={this.handleCanvasPointerDown}\n                          onDoubleClick={this.handleCanvasDoubleClick}\n                        />\n                        {this.state.userToFollow && (\n                          <FollowMode\n                            width={this.state.width}\n                            height={this.state.height}\n                            userToFollow={this.state.userToFollow}\n                            onDisconnect={this.maybeUnfollowRemoteUser}\n                          />\n                        )}\n                        {this.renderFrameNames()}\n                      </ExcalidrawActionManagerContext.Provider>\n                      {this.renderEmbeddables()}\n                    </ExcalidrawElementsContext.Provider>\n                  </ExcalidrawAppStateContext.Provider>\n                </ExcalidrawSetAppStateContext.Provider>\n              </DeviceContext.Provider>\n            </ExcalidrawContainerContext.Provider>\n          </AppPropsContext.Provider>\n        </AppContext.Provider>\n      </div>\n    );\n  }\n\n  public focusContainer: AppClassProperties[\"focusContainer\"] = () => {\n    this.excalidrawContainerRef.current?.focus();\n  };\n\n  public getSceneElementsIncludingDeleted = () => {\n    return this.scene.getElementsIncludingDeleted();\n  };\n\n  public getSceneElements = () => {\n    return this.scene.getNonDeletedElements();\n  };\n\n  public onInsertElements = (elements: readonly ExcalidrawElement[]) => {\n    this.addElementsFromPasteOrLibrary({\n      elements,\n      position: \"center\",\n      files: null,\n    });\n  };\n\n  public onExportImage = async (\n    type: keyof typeof EXPORT_IMAGE_TYPES,\n    elements: ExportedElements,\n    opts: { exportingFrame: ExcalidrawFrameLikeElement | null },\n  ) => {\n    trackEvent(\"export\", type, \"ui\");\n    const fileHandle = await exportCanvas(\n      type,\n      elements,\n      this.state,\n      this.files,\n      {\n        exportBackground: this.state.exportBackground,\n        name: this.getName(),\n        viewBackgroundColor: this.state.viewBackgroundColor,\n        exportingFrame: opts.exportingFrame,\n      },\n    )\n      .catch(muteFSAbortError)\n      .catch((error) => {\n        console.error(error);\n        this.setState({ errorMessage: error.message });\n      });\n\n    if (\n      this.state.exportEmbedScene &&\n      fileHandle &&\n      isImageFileHandle(fileHandle)\n    ) {\n      this.setState({ fileHandle });\n    }\n  };\n\n  private magicGenerations = new Map<\n    ExcalidrawIframeElement[\"id\"],\n    MagicGenerationData\n  >();\n\n  private updateMagicGeneration = ({\n    frameElement,\n    data,\n  }: {\n    frameElement: ExcalidrawIframeElement;\n    data: MagicGenerationData;\n  }) => {\n    if (data.status === \"pending\") {\n      // We don't wanna persist pending state to storage. It should be in-app\n      // state only.\n      // Thus reset so that we prefer local cache (if there was some\n      // generationData set previously)\n      mutateElement(\n        frameElement,\n        { customData: { generationData: undefined } },\n        false,\n      );\n    } else {\n      mutateElement(\n        frameElement,\n        { customData: { generationData: data } },\n        false,\n      );\n    }\n    this.magicGenerations.set(frameElement.id, data);\n    this.triggerRender();\n  };\n\n  public plugins: {\n    diagramToCode?: {\n      generate: GenerateDiagramToCode;\n    };\n  } = {};\n\n  public setPlugins(plugins: Partial<App[\"plugins\"]>) {\n    Object.assign(this.plugins, plugins);\n  }\n\n  private async onMagicFrameGenerate(\n    magicFrame: ExcalidrawMagicFrameElement,\n    source: \"button\" | \"upstream\",\n  ) {\n    const generateDiagramToCode = this.plugins.diagramToCode?.generate;\n\n    if (!generateDiagramToCode) {\n      this.setState({\n        errorMessage: \"No diagram to code plugin found\",\n      });\n      return;\n    }\n\n    const magicFrameChildren = getElementsOverlappingFrame(\n      this.scene.getNonDeletedElements(),\n      magicFrame,\n    ).filter((el) => !isMagicFrameElement(el));\n\n    if (!magicFrameChildren.length) {\n      if (source === \"button\") {\n        this.setState({ errorMessage: \"Cannot generate from an empty frame\" });\n        trackEvent(\"ai\", \"generate (no-children)\", \"d2c\");\n      } else {\n        this.setActiveTool({ type: \"magicframe\" });\n      }\n      return;\n    }\n\n    const frameElement = this.insertIframeElement({\n      sceneX: magicFrame.x + magicFrame.width + 30,\n      sceneY: magicFrame.y,\n      width: magicFrame.width,\n      height: magicFrame.height,\n    });\n\n    if (!frameElement) {\n      return;\n    }\n\n    this.updateMagicGeneration({\n      frameElement,\n      data: { status: \"pending\" },\n    });\n\n    this.setState({\n      selectedElementIds: { [frameElement.id]: true },\n    });\n\n    trackEvent(\"ai\", \"generate (start)\", \"d2c\");\n    try {\n      const { html } = await generateDiagramToCode({\n        frame: magicFrame,\n        children: magicFrameChildren,\n      });\n\n      trackEvent(\"ai\", \"generate (success)\", \"d2c\");\n\n      if (!html.trim()) {\n        this.updateMagicGeneration({\n          frameElement,\n          data: {\n            status: \"error\",\n            code: \"ERR_OAI\",\n            message: \"Nothing genereated :(\",\n          },\n        });\n        return;\n      }\n\n      const parsedHtml =\n        html.includes(\"<!DOCTYPE html>\") && html.includes(\"</html>\")\n          ? html.slice(\n              html.indexOf(\"<!DOCTYPE html>\"),\n              html.indexOf(\"</html>\") + \"</html>\".length,\n            )\n          : html;\n\n      this.updateMagicGeneration({\n        frameElement,\n        data: { status: \"done\", html: parsedHtml },\n      });\n    } catch (error: any) {\n      trackEvent(\"ai\", \"generate (failed)\", \"d2c\");\n      this.updateMagicGeneration({\n        frameElement,\n        data: {\n          status: \"error\",\n          code: \"ERR_OAI\",\n          message: error.message || \"Unknown error during generation\",\n        },\n      });\n    }\n  }\n\n  private onIframeSrcCopy(element: ExcalidrawIframeElement) {\n    if (element.customData?.generationData?.status === \"done\") {\n      copyTextToSystemClipboard(element.customData.generationData.html);\n      this.setToast({\n        message: \"copied to clipboard\",\n        closable: false,\n        duration: 1500,\n      });\n    }\n  }\n\n  public onMagicframeToolSelect = () => {\n    const selectedElements = this.scene.getSelectedElements({\n      selectedElementIds: this.state.selectedElementIds,\n    });\n\n    if (selectedElements.length === 0) {\n      this.setActiveTool({ type: TOOL_TYPE.magicframe });\n      trackEvent(\"ai\", \"tool-select (empty-selection)\", \"d2c\");\n    } else {\n      const selectedMagicFrame: ExcalidrawMagicFrameElement | false =\n        selectedElements.length === 1 &&\n        isMagicFrameElement(selectedElements[0]) &&\n        selectedElements[0];\n\n      // case: user selected elements containing frame-like(s) or are frame\n      // members, we don't want to wrap into another magicframe\n      // (unless the only selected element is a magic frame which we reuse)\n      if (\n        !selectedMagicFrame &&\n        selectedElements.some((el) => isFrameLikeElement(el) || el.frameId)\n      ) {\n        this.setActiveTool({ type: TOOL_TYPE.magicframe });\n        return;\n      }\n\n      trackEvent(\"ai\", \"tool-select (existing selection)\", \"d2c\");\n\n      let frame: ExcalidrawMagicFrameElement;\n      if (selectedMagicFrame) {\n        // a single magicframe already selected -> use it\n        frame = selectedMagicFrame;\n      } else {\n        // selected elements aren't wrapped in magic frame yet -> wrap now\n\n        const [minX, minY, maxX, maxY] = getCommonBounds(selectedElements);\n        const padding = 50;\n\n        frame = newMagicFrameElement({\n          ...FRAME_STYLE,\n          x: minX - padding,\n          y: minY - padding,\n          width: maxX - minX + padding * 2,\n          height: maxY - minY + padding * 2,\n          opacity: 100,\n          locked: false,\n        });\n\n        this.scene.insertElement(frame);\n\n        for (const child of selectedElements) {\n          mutateElement(child, { frameId: frame.id });\n        }\n\n        this.setState({\n          selectedElementIds: { [frame.id]: true },\n        });\n      }\n\n      this.onMagicFrameGenerate(frame, \"upstream\");\n    }\n  };\n\n  private openEyeDropper = ({ type }: { type: \"stroke\" | \"background\" }) => {\n    editorJotaiStore.set(activeEyeDropperAtom, {\n      swapPreviewOnAlt: true,\n      colorPickerType:\n        type === \"stroke\" ? \"elementStroke\" : \"elementBackground\",\n      onSelect: (color, event) => {\n        const shouldUpdateStrokeColor =\n          (type === \"background\" && event.altKey) ||\n          (type === \"stroke\" && !event.altKey);\n        const selectedElements = this.scene.getSelectedElements(this.state);\n        if (\n          !selectedElements.length ||\n          this.state.activeTool.type !== \"selection\"\n        ) {\n          if (shouldUpdateStrokeColor) {\n            this.syncActionResult({\n              appState: { ...this.state, currentItemStrokeColor: color },\n              captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n            });\n          } else {\n            this.syncActionResult({\n              appState: { ...this.state, currentItemBackgroundColor: color },\n              captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n            });\n          }\n        } else {\n          this.updateScene({\n            elements: this.scene.getElementsIncludingDeleted().map((el) => {\n              if (this.state.selectedElementIds[el.id]) {\n                return newElementWith(el, {\n                  [shouldUpdateStrokeColor ? \"strokeColor\" : \"backgroundColor\"]:\n                    color,\n                });\n              }\n              return el;\n            }),\n            captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n          });\n        }\n      },\n      keepOpenOnAlt: false,\n    });\n  };\n\n  public dismissLinearEditor = () => {\n    setTimeout(() => {\n      this.setState({\n        editingLinearElement: null,\n      });\n    });\n  };\n\n  public syncActionResult = withBatchedUpdates((actionResult: ActionResult) => {\n    if (this.unmounted || actionResult === false) {\n      return;\n    }\n\n    if (actionResult.captureUpdate === CaptureUpdateAction.NEVER) {\n      this.store.shouldUpdateSnapshot();\n    } else if (actionResult.captureUpdate === CaptureUpdateAction.IMMEDIATELY) {\n      this.store.shouldCaptureIncrement();\n    }\n\n    let didUpdate = false;\n\n    let editingTextElement: AppState[\"editingTextElement\"] | null = null;\n    if (actionResult.elements) {\n      this.scene.replaceAllElements(actionResult.elements);\n      didUpdate = true;\n    }\n\n    if (actionResult.files) {\n      this.addMissingFiles(actionResult.files, actionResult.replaceFiles);\n      this.addNewImagesToImageCache();\n    }\n\n    if (actionResult.appState || editingTextElement || this.state.contextMenu) {\n      let viewModeEnabled = actionResult?.appState?.viewModeEnabled || false;\n      let zenModeEnabled = actionResult?.appState?.zenModeEnabled || false;\n      const theme =\n        actionResult?.appState?.theme || this.props.theme || THEME.LIGHT;\n      const name = actionResult?.appState?.name ?? this.state.name;\n      const errorMessage =\n        actionResult?.appState?.errorMessage ?? this.state.errorMessage;\n      if (typeof this.props.viewModeEnabled !== \"undefined\") {\n        viewModeEnabled = this.props.viewModeEnabled;\n      }\n\n      if (typeof this.props.zenModeEnabled !== \"undefined\") {\n        zenModeEnabled = this.props.zenModeEnabled;\n      }\n\n      editingTextElement = actionResult.appState?.editingTextElement || null;\n\n      // make sure editingTextElement points to latest element reference\n      if (actionResult.elements && editingTextElement) {\n        actionResult.elements.forEach((element) => {\n          if (\n            editingTextElement?.id === element.id &&\n            editingTextElement !== element &&\n            isNonDeletedElement(element) &&\n            isTextElement(element)\n          ) {\n            editingTextElement = element;\n          }\n        });\n      }\n\n      if (editingTextElement?.isDeleted) {\n        editingTextElement = null;\n      }\n\n      this.setState((prevAppState) => {\n        const actionAppState = actionResult.appState || {};\n\n        return {\n          ...prevAppState,\n          ...actionAppState,\n          // NOTE this will prevent opening context menu using an action\n          // or programmatically from the host, so it will need to be\n          // rewritten later\n          contextMenu: null,\n          editingTextElement,\n          viewModeEnabled,\n          zenModeEnabled,\n          theme,\n          name,\n          errorMessage,\n        };\n      });\n\n      didUpdate = true;\n    }\n\n    if (\n      !didUpdate &&\n      actionResult.captureUpdate !== CaptureUpdateAction.EVENTUALLY\n    ) {\n      this.scene.triggerUpdate();\n    }\n  });\n\n  // Lifecycle\n\n  private onBlur = withBatchedUpdates(() => {\n    isHoldingSpace = false;\n    this.setState({ isBindingEnabled: true });\n  });\n\n  private onUnload = () => {\n    this.onBlur();\n  };\n\n  private disableEvent: EventListener = (event) => {\n    event.preventDefault();\n  };\n\n  private resetHistory = () => {\n    this.history.clear();\n  };\n\n  private resetStore = () => {\n    this.store.clear();\n  };\n\n  /**\n   * Resets scene & history.\n   * ! Do not use to clear scene user action !\n   */\n  private resetScene = withBatchedUpdates(\n    (opts?: { resetLoadingState: boolean }) => {\n      this.scene.replaceAllElements([]);\n      this.setState((state) => ({\n        ...getDefaultAppState(),\n        isLoading: opts?.resetLoadingState ? false : state.isLoading,\n        theme: this.state.theme,\n      }));\n      this.resetStore();\n      this.resetHistory();\n    },\n  );\n\n  private initializeScene = async () => {\n    if (\"launchQueue\" in window && \"LaunchParams\" in window) {\n      (window as any).launchQueue.setConsumer(\n        async (launchParams: { files: any[] }) => {\n          if (!launchParams.files.length) {\n            return;\n          }\n          const fileHandle = launchParams.files[0];\n          const blob: Blob = await fileHandle.getFile();\n          this.loadFileToCanvas(\n            new File([blob], blob.name || \"\", { type: blob.type }),\n            fileHandle,\n          );\n        },\n      );\n    }\n\n    if (this.props.theme) {\n      this.setState({ theme: this.props.theme });\n    }\n    if (!this.state.isLoading) {\n      this.setState({ isLoading: true });\n    }\n    let initialData = null;\n    try {\n      if (typeof this.props.initialData === \"function\") {\n        initialData = (await this.props.initialData()) || null;\n      } else {\n        initialData = (await this.props.initialData) || null;\n      }\n      if (initialData?.libraryItems) {\n        this.library\n          .updateLibrary({\n            libraryItems: initialData.libraryItems,\n            merge: true,\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      }\n    } catch (error: any) {\n      console.error(error);\n      initialData = {\n        appState: {\n          errorMessage:\n            error.message ||\n            \"Encountered an error during importing or restoring scene data\",\n        },\n      };\n    }\n    const scene = restore(initialData, null, null, { repairBindings: true });\n    scene.appState = {\n      ...scene.appState,\n      theme: this.props.theme || scene.appState.theme,\n      // we're falling back to current (pre-init) state when deciding\n      // whether to open the library, to handle a case where we\n      // update the state outside of initialData (e.g. when loading the app\n      // with a library install link, which should auto-open the library)\n      openSidebar: scene.appState?.openSidebar || this.state.openSidebar,\n      activeTool:\n        scene.appState.activeTool.type === \"image\"\n          ? { ...scene.appState.activeTool, type: \"selection\" }\n          : scene.appState.activeTool,\n      isLoading: false,\n      toast: this.state.toast,\n    };\n    if (initialData?.scrollToContent) {\n      scene.appState = {\n        ...scene.appState,\n        ...calculateScrollCenter(scene.elements, {\n          ...scene.appState,\n          width: this.state.width,\n          height: this.state.height,\n          offsetTop: this.state.offsetTop,\n          offsetLeft: this.state.offsetLeft,\n        }),\n      };\n    }\n\n    this.resetStore();\n    this.resetHistory();\n    this.syncActionResult({\n      ...scene,\n      captureUpdate: CaptureUpdateAction.NEVER,\n    });\n\n    // clear the shape and image cache so that any images in initialData\n    // can be loaded fresh\n    this.clearImageShapeCache();\n\n    // manually loading the font faces seems faster even in browsers that do fire the loadingdone event\n    this.fonts.loadSceneFonts().then((fontFaces) => {\n      this.fonts.onLoaded(fontFaces);\n    });\n\n    if (isElementLink(window.location.href)) {\n      this.scrollToContent(window.location.href, { animate: false });\n    }\n  };\n\n  private isMobileBreakpoint = (width: number, height: number) => {\n    return (\n      width < MQ_MAX_WIDTH_PORTRAIT ||\n      (height < MQ_MAX_HEIGHT_LANDSCAPE && width < MQ_MAX_WIDTH_LANDSCAPE)\n    );\n  };\n\n  private refreshViewportBreakpoints = () => {\n    const container = this.excalidrawContainerRef.current;\n    if (!container) {\n      return;\n    }\n\n    const { clientWidth: viewportWidth, clientHeight: viewportHeight } =\n      document.body;\n\n    const prevViewportState = this.device.viewport;\n\n    const nextViewportState = updateObject(prevViewportState, {\n      isLandscape: viewportWidth > viewportHeight,\n      isMobile: this.isMobileBreakpoint(viewportWidth, viewportHeight),\n    });\n\n    if (prevViewportState !== nextViewportState) {\n      this.device = { ...this.device, viewport: nextViewportState };\n      return true;\n    }\n    return false;\n  };\n\n  private refreshEditorBreakpoints = () => {\n    const container = this.excalidrawContainerRef.current;\n    if (!container) {\n      return;\n    }\n\n    const { width: editorWidth, height: editorHeight } =\n      container.getBoundingClientRect();\n\n    const sidebarBreakpoint =\n      this.props.UIOptions.dockedSidebarBreakpoint != null\n        ? this.props.UIOptions.dockedSidebarBreakpoint\n        : MQ_RIGHT_SIDEBAR_MIN_WIDTH;\n\n    const prevEditorState = this.device.editor;\n\n    const nextEditorState = updateObject(prevEditorState, {\n      isMobile: this.isMobileBreakpoint(editorWidth, editorHeight),\n      canFitSidebar: editorWidth > sidebarBreakpoint,\n    });\n\n    if (prevEditorState !== nextEditorState) {\n      this.device = { ...this.device, editor: nextEditorState };\n      return true;\n    }\n    return false;\n  };\n\n  private clearImageShapeCache(filesMap?: BinaryFiles) {\n    const files = filesMap ?? this.files;\n    this.scene.getNonDeletedElements().forEach((element) => {\n      if (isInitializedImageElement(element) && files[element.fileId]) {\n        this.imageCache.delete(element.fileId);\n        ShapeCache.delete(element);\n      }\n    });\n  }\n\n  public async componentDidMount() {\n    this.unmounted = false;\n    this.excalidrawContainerValue.container =\n      this.excalidrawContainerRef.current;\n\n    if (import.meta.env.MODE === ENV.TEST || import.meta.env.DEV) {\n      const setState = this.setState.bind(this);\n      Object.defineProperties(window.h, {\n        state: {\n          configurable: true,\n          get: () => {\n            return this.state;\n          },\n        },\n        setState: {\n          configurable: true,\n          value: (...args: Parameters<typeof setState>) => {\n            return this.setState(...args);\n          },\n        },\n        app: {\n          configurable: true,\n          value: this,\n        },\n        history: {\n          configurable: true,\n          value: this.history,\n        },\n        store: {\n          configurable: true,\n          value: this.store,\n        },\n        fonts: {\n          configurable: true,\n          value: this.fonts,\n        },\n      });\n    }\n\n    this.store.onStoreIncrementEmitter.on((increment) => {\n      this.history.record(increment.elementsChange, increment.appStateChange);\n    });\n\n    this.scene.onUpdate(this.triggerRender);\n    this.addEventListeners();\n\n    if (this.props.autoFocus && this.excalidrawContainerRef.current) {\n      this.focusContainer();\n    }\n\n    if (\n      // bounding rects don't work in tests so updating\n      // the state on init would result in making the test enviro run\n      // in mobile breakpoint (0 width/height), making everything fail\n      !isTestEnv()\n    ) {\n      this.refreshViewportBreakpoints();\n      this.refreshEditorBreakpoints();\n    }\n\n    if (supportsResizeObserver && this.excalidrawContainerRef.current) {\n      this.resizeObserver = new ResizeObserver(() => {\n        this.refreshEditorBreakpoints();\n        this.updateDOMRect();\n      });\n      this.resizeObserver?.observe(this.excalidrawContainerRef.current);\n    }\n\n    const searchParams = new URLSearchParams(window.location.search.slice(1));\n\n    if (searchParams.has(\"web-share-target\")) {\n      // Obtain a file that was shared via the Web Share Target API.\n      this.restoreFileFromShare();\n    } else {\n      this.updateDOMRect(this.initializeScene);\n    }\n\n    // note that this check seems to always pass in localhost\n    if (isBrave() && !isMeasureTextSupported()) {\n      this.setState({\n        errorMessage: <BraveMeasureTextError />,\n      });\n    }\n  }\n\n  public componentWillUnmount() {\n    (window as any).launchQueue?.setConsumer(() => {});\n    this.renderer.destroy();\n    this.scene.destroy();\n    this.scene = new Scene();\n    this.fonts = new Fonts(this.scene);\n    this.renderer = new Renderer(this.scene);\n    this.files = {};\n    this.imageCache.clear();\n    this.resizeObserver?.disconnect();\n    this.unmounted = true;\n    this.removeEventListeners();\n    this.library.destroy();\n    this.laserTrails.stop();\n    this.eraserTrail.stop();\n    this.onChangeEmitter.clear();\n    this.store.onStoreIncrementEmitter.clear();\n    ShapeCache.destroy();\n    SnapCache.destroy();\n    clearTimeout(touchTimeout);\n    isSomeElementSelected.clearCache();\n    selectGroupsForSelectedElements.clearCache();\n    touchTimeout = 0;\n    document.documentElement.style.overscrollBehaviorX = \"\";\n  }\n\n  private onResize = withBatchedUpdates(() => {\n    this.scene\n      .getElementsIncludingDeleted()\n      .forEach((element) => ShapeCache.delete(element));\n    this.refreshViewportBreakpoints();\n    this.updateDOMRect();\n    if (!supportsResizeObserver) {\n      this.refreshEditorBreakpoints();\n    }\n    this.setState({});\n  });\n\n  /** generally invoked only if fullscreen was invoked programmatically */\n  private onFullscreenChange = () => {\n    if (\n      // points to the iframe element we fullscreened\n      !document.fullscreenElement &&\n      this.state.activeEmbeddable?.state === \"active\"\n    ) {\n      this.setState({\n        activeEmbeddable: null,\n      });\n    }\n  };\n\n  private removeEventListeners() {\n    this.onRemoveEventListenersEmitter.trigger();\n  }\n\n  private addEventListeners() {\n    // remove first as we can add event listeners multiple times\n    this.removeEventListeners();\n\n    // -------------------------------------------------------------------------\n    //                        view+edit mode listeners\n    // -------------------------------------------------------------------------\n\n    if (this.props.handleKeyboardGlobally) {\n      this.onRemoveEventListenersEmitter.once(\n        addEventListener(document, EVENT.KEYDOWN, this.onKeyDown, false),\n      );\n    }\n\n    this.onRemoveEventListenersEmitter.once(\n      addEventListener(\n        this.excalidrawContainerRef.current,\n        EVENT.WHEEL,\n        this.handleWheel,\n        { passive: false },\n      ),\n      addEventListener(window, EVENT.MESSAGE, this.onWindowMessage, false),\n      addEventListener(document, EVENT.POINTER_UP, this.removePointer, {\n        passive: false,\n      }), // #3553\n      addEventListener(document, EVENT.COPY, this.onCopy, { passive: false }),\n      addEventListener(document, EVENT.KEYUP, this.onKeyUp, { passive: true }),\n      addEventListener(\n        document,\n        EVENT.POINTER_MOVE,\n        this.updateCurrentCursorPosition,\n        { passive: false },\n      ),\n      // rerender text elements on font load to fix #637 && #1553\n      addEventListener(\n        document.fonts,\n        \"loadingdone\",\n        (event) => {\n          const fontFaces = (event as FontFaceSetLoadEvent).fontfaces;\n          this.fonts.onLoaded(fontFaces);\n        },\n        { passive: false },\n      ),\n      // Safari-only desktop pinch zoom\n      addEventListener(\n        document,\n        EVENT.GESTURE_START,\n        this.onGestureStart as any,\n        false,\n      ),\n      addEventListener(\n        document,\n        EVENT.GESTURE_CHANGE,\n        this.onGestureChange as any,\n        false,\n      ),\n      addEventListener(\n        document,\n        EVENT.GESTURE_END,\n        this.onGestureEnd as any,\n        false,\n      ),\n      addEventListener(\n        window,\n        EVENT.FOCUS,\n        () => {\n          this.maybeCleanupAfterMissingPointerUp(null);\n          // browsers (chrome?) tend to free up memory a lot, which results\n          // in canvas context being cleared. Thus re-render on focus.\n          this.triggerRender(true);\n        },\n        { passive: false },\n      ),\n    );\n\n    if (this.state.viewModeEnabled) {\n      return;\n    }\n\n    // -------------------------------------------------------------------------\n    //                        edit-mode listeners only\n    // -------------------------------------------------------------------------\n\n    this.onRemoveEventListenersEmitter.once(\n      addEventListener(\n        document,\n        EVENT.FULLSCREENCHANGE,\n        this.onFullscreenChange,\n        { passive: false },\n      ),\n      addEventListener(document, EVENT.PASTE, this.pasteFromClipboard, {\n        passive: false,\n      }),\n      addEventListener(document, EVENT.CUT, this.onCut, { passive: false }),\n      addEventListener(window, EVENT.RESIZE, this.onResize, false),\n      addEventListener(window, EVENT.UNLOAD, this.onUnload, false),\n      addEventListener(window, EVENT.BLUR, this.onBlur, false),\n      addEventListener(\n        this.excalidrawContainerRef.current,\n        EVENT.WHEEL,\n        this.handleWheel,\n        { passive: false },\n      ),\n      addEventListener(\n        this.excalidrawContainerRef.current,\n        EVENT.DRAG_OVER,\n        this.disableEvent,\n        false,\n      ),\n      addEventListener(\n        this.excalidrawContainerRef.current,\n        EVENT.DROP,\n        this.disableEvent,\n        false,\n      ),\n    );\n\n    if (this.props.detectScroll) {\n      this.onRemoveEventListenersEmitter.once(\n        addEventListener(\n          getNearestScrollableContainer(this.excalidrawContainerRef.current!),\n          EVENT.SCROLL,\n          this.onScroll,\n          { passive: false },\n        ),\n      );\n    }\n  }\n\n  componentDidUpdate(prevProps: AppProps, prevState: AppState) {\n    this.updateEmbeddables();\n    const elements = this.scene.getElementsIncludingDeleted();\n    const elementsMap = this.scene.getElementsMapIncludingDeleted();\n    const nonDeletedElementsMap = this.scene.getNonDeletedElementsMap();\n\n    if (!this.state.showWelcomeScreen && !elements.length) {\n      this.setState({ showWelcomeScreen: true });\n    }\n\n    if (\n      prevProps.UIOptions.dockedSidebarBreakpoint !==\n      this.props.UIOptions.dockedSidebarBreakpoint\n    ) {\n      this.refreshEditorBreakpoints();\n    }\n\n    const hasFollowedPersonLeft =\n      prevState.userToFollow &&\n      !this.state.collaborators.has(prevState.userToFollow.socketId);\n\n    if (hasFollowedPersonLeft) {\n      this.maybeUnfollowRemoteUser();\n    }\n\n    if (\n      prevState.zoom.value !== this.state.zoom.value ||\n      prevState.scrollX !== this.state.scrollX ||\n      prevState.scrollY !== this.state.scrollY\n    ) {\n      this.props?.onScrollChange?.(\n        this.state.scrollX,\n        this.state.scrollY,\n        this.state.zoom,\n      );\n      this.onScrollChangeEmitter.trigger(\n        this.state.scrollX,\n        this.state.scrollY,\n        this.state.zoom,\n      );\n    }\n\n    if (prevState.userToFollow !== this.state.userToFollow) {\n      if (prevState.userToFollow) {\n        this.onUserFollowEmitter.trigger({\n          userToFollow: prevState.userToFollow,\n          action: \"UNFOLLOW\",\n        });\n      }\n\n      if (this.state.userToFollow) {\n        this.onUserFollowEmitter.trigger({\n          userToFollow: this.state.userToFollow,\n          action: \"FOLLOW\",\n        });\n      }\n    }\n\n    if (\n      Object.keys(this.state.selectedElementIds).length &&\n      isEraserActive(this.state)\n    ) {\n      this.setState({\n        activeTool: updateActiveTool(this.state, { type: \"selection\" }),\n      });\n    }\n    if (\n      this.state.activeTool.type === \"eraser\" &&\n      prevState.theme !== this.state.theme\n    ) {\n      setEraserCursor(this.interactiveCanvas, this.state.theme);\n    }\n    // Hide hyperlink popup if shown when element type is not selection\n    if (\n      prevState.activeTool.type === \"selection\" &&\n      this.state.activeTool.type !== \"selection\" &&\n      this.state.showHyperlinkPopup\n    ) {\n      this.setState({ showHyperlinkPopup: false });\n    }\n    if (prevProps.langCode !== this.props.langCode) {\n      this.updateLanguage();\n    }\n\n    if (isEraserActive(prevState) && !isEraserActive(this.state)) {\n      this.eraserTrail.endPath();\n    }\n\n    if (prevProps.viewModeEnabled !== this.props.viewModeEnabled) {\n      this.setState({ viewModeEnabled: !!this.props.viewModeEnabled });\n    }\n\n    if (prevState.viewModeEnabled !== this.state.viewModeEnabled) {\n      this.addEventListeners();\n      this.deselectElements();\n    }\n\n    // cleanup\n    if (\n      (prevState.openDialog?.name === \"elementLinkSelector\" ||\n        this.state.openDialog?.name === \"elementLinkSelector\") &&\n      prevState.openDialog?.name !== this.state.openDialog?.name\n    ) {\n      this.deselectElements();\n      this.setState({\n        hoveredElementIds: {},\n      });\n    }\n\n    if (prevProps.zenModeEnabled !== this.props.zenModeEnabled) {\n      this.setState({ zenModeEnabled: !!this.props.zenModeEnabled });\n    }\n\n    if (prevProps.theme !== this.props.theme && this.props.theme) {\n      this.setState({ theme: this.props.theme });\n    }\n\n    this.excalidrawContainerRef.current?.classList.toggle(\n      \"theme--dark\",\n      this.state.theme === THEME.DARK,\n    );\n\n    if (\n      this.state.editingLinearElement &&\n      !this.state.selectedElementIds[this.state.editingLinearElement.elementId]\n    ) {\n      // defer so that the shouldCaptureIncrement flag isn't reset via current update\n      setTimeout(() => {\n        // execute only if the condition still holds when the deferred callback\n        // executes (it can be scheduled multiple times depending on how\n        // many times the component renders)\n        this.state.editingLinearElement &&\n          this.actionManager.executeAction(actionFinalize);\n      });\n    }\n\n    // failsafe in case the state is being updated in incorrect order resulting\n    // in the editingTextElement being now a deleted element\n    if (this.state.editingTextElement?.isDeleted) {\n      this.setState({ editingTextElement: null });\n    }\n\n    if (\n      this.state.selectedLinearElement &&\n      !this.state.selectedElementIds[this.state.selectedLinearElement.elementId]\n    ) {\n      // To make sure `selectedLinearElement` is in sync with `selectedElementIds`, however this shouldn't be needed once\n      // we have a single API to update `selectedElementIds`\n      this.setState({ selectedLinearElement: null });\n    }\n\n    const { multiElement } = prevState;\n    if (\n      prevState.activeTool !== this.state.activeTool &&\n      multiElement != null &&\n      isBindingEnabled(this.state) &&\n      isBindingElement(multiElement, false)\n    ) {\n      maybeBindLinearElement(\n        multiElement,\n        this.state,\n        tupleToCoors(\n          LinearElementEditor.getPointAtIndexGlobalCoordinates(\n            multiElement,\n            -1,\n            nonDeletedElementsMap,\n          ),\n        ),\n        this.scene.getNonDeletedElementsMap(),\n        this.scene.getNonDeletedElements(),\n      );\n    }\n\n    this.store.commit(elementsMap, this.state);\n\n    // Do not notify consumers if we're still loading the scene. Among other\n    // potential issues, this fixes a case where the tab isn't focused during\n    // init, which would trigger onChange with empty elements, which would then\n    // override whatever is in localStorage currently.\n    if (!this.state.isLoading) {\n      this.props.onChange?.(elements, this.state, this.files);\n      this.onChangeEmitter.trigger(elements, this.state, this.files);\n    }\n  }\n\n  private renderInteractiveSceneCallback = ({\n    atLeastOneVisibleElement,\n    scrollBars,\n    elementsMap,\n  }: RenderInteractiveSceneCallback) => {\n    if (scrollBars) {\n      currentScrollBars = scrollBars;\n    }\n    const scrolledOutside =\n      // hide when editing text\n      this.state.editingTextElement\n        ? false\n        : !atLeastOneVisibleElement && elementsMap.size > 0;\n    if (this.state.scrolledOutside !== scrolledOutside) {\n      this.setState({ scrolledOutside });\n    }\n\n    this.scheduleImageRefresh();\n  };\n\n  private onScroll = debounce(() => {\n    const { offsetTop, offsetLeft } = this.getCanvasOffsets();\n    this.setState((state) => {\n      if (state.offsetLeft === offsetLeft && state.offsetTop === offsetTop) {\n        return null;\n      }\n      return { offsetTop, offsetLeft };\n    });\n  }, SCROLL_TIMEOUT);\n\n  // Copy/paste\n\n  private onCut = withBatchedUpdates((event: ClipboardEvent) => {\n    const isExcalidrawActive = this.excalidrawContainerRef.current?.contains(\n      document.activeElement,\n    );\n    if (!isExcalidrawActive || isWritableElement(event.target)) {\n      return;\n    }\n    this.actionManager.executeAction(actionCut, \"keyboard\", event);\n    event.preventDefault();\n    event.stopPropagation();\n  });\n\n  private onCopy = withBatchedUpdates((event: ClipboardEvent) => {\n    const isExcalidrawActive = this.excalidrawContainerRef.current?.contains(\n      document.activeElement,\n    );\n    if (!isExcalidrawActive || isWritableElement(event.target)) {\n      return;\n    }\n    this.actionManager.executeAction(actionCopy, \"keyboard\", event);\n    event.preventDefault();\n    event.stopPropagation();\n  });\n\n  private static resetTapTwice() {\n    didTapTwice = false;\n  }\n\n  private onTouchStart = (event: TouchEvent) => {\n    // fix for Apple Pencil Scribble (do not prevent for other devices)\n    if (isIOS) {\n      event.preventDefault();\n    }\n\n    if (!didTapTwice) {\n      didTapTwice = true;\n      clearTimeout(tappedTwiceTimer);\n      tappedTwiceTimer = window.setTimeout(\n        App.resetTapTwice,\n        TAP_TWICE_TIMEOUT,\n      );\n      return;\n    }\n    // insert text only if we tapped twice with a single finger\n    // event.touches.length === 1 will also prevent inserting text when user's zooming\n    if (didTapTwice && event.touches.length === 1) {\n      const touch = event.touches[0];\n      // @ts-ignore\n      this.handleCanvasDoubleClick({\n        clientX: touch.clientX,\n        clientY: touch.clientY,\n      });\n      didTapTwice = false;\n      clearTimeout(tappedTwiceTimer);\n    }\n\n    if (event.touches.length === 2) {\n      this.setState({\n        selectedElementIds: makeNextSelectedElementIds({}, this.state),\n        activeEmbeddable: null,\n      });\n    }\n  };\n\n  private onTouchEnd = (event: TouchEvent) => {\n    this.resetContextMenuTimer();\n    if (event.touches.length > 0) {\n      this.setState({\n        previousSelectedElementIds: {},\n        selectedElementIds: makeNextSelectedElementIds(\n          this.state.previousSelectedElementIds,\n          this.state,\n        ),\n      });\n    } else {\n      gesture.pointers.clear();\n    }\n  };\n\n  public pasteFromClipboard = withBatchedUpdates(\n    async (event: ClipboardEvent) => {\n      const isPlainPaste = !!IS_PLAIN_PASTE;\n\n      // #686\n      const target = document.activeElement;\n      const isExcalidrawActive =\n        this.excalidrawContainerRef.current?.contains(target);\n      if (event && !isExcalidrawActive) {\n        return;\n      }\n\n      const elementUnderCursor = document.elementFromPoint(\n        this.lastViewportPosition.x,\n        this.lastViewportPosition.y,\n      );\n      if (\n        event &&\n        (!(elementUnderCursor instanceof HTMLCanvasElement) ||\n          isWritableElement(target))\n      ) {\n        return;\n      }\n\n      const { x: sceneX, y: sceneY } = viewportCoordsToSceneCoords(\n        {\n          clientX: this.lastViewportPosition.x,\n          clientY: this.lastViewportPosition.y,\n        },\n        this.state,\n      );\n\n      // must be called in the same frame (thus before any awaits) as the paste\n      // event else some browsers (FF...) will clear the clipboardData\n      // (something something security)\n      let file = event?.clipboardData?.files[0];\n      const data = await parseClipboard(event, isPlainPaste);\n      if (!file && !isPlainPaste) {\n        if (data.mixedContent) {\n          return this.addElementsFromMixedContentPaste(data.mixedContent, {\n            isPlainPaste,\n            sceneX,\n            sceneY,\n          });\n        } else if (data.text) {\n          const string = data.text.trim();\n          if (string.startsWith(\"<svg\") && string.endsWith(\"</svg>\")) {\n            // ignore SVG validation/normalization which will be done during image\n            // initialization\n            file = SVGStringToFile(string);\n          }\n        }\n      }\n\n      // prefer spreadsheet data over image file (MS Office/Libre Office)\n      if (isSupportedImageFile(file) && !data.spreadsheet) {\n        if (!this.isToolSupported(\"image\")) {\n          this.setState({ errorMessage: t(\"errors.imageToolNotSupported\") });\n          return;\n        }\n\n        const imageElement = this.createImageElement({ sceneX, sceneY });\n        this.insertImageElement(imageElement, file);\n        this.initializeImageDimensions(imageElement);\n        this.setState({\n          selectedElementIds: makeNextSelectedElementIds(\n            {\n              [imageElement.id]: true,\n            },\n            this.state,\n          ),\n        });\n\n        return;\n      }\n\n      if (this.props.onPaste) {\n        try {\n          if ((await this.props.onPaste(data, event)) === false) {\n            return;\n          }\n        } catch (error: any) {\n          console.error(error);\n        }\n      }\n\n      if (data.errorMessage) {\n        this.setState({ errorMessage: data.errorMessage });\n      } else if (data.spreadsheet && !isPlainPaste) {\n        this.setState({\n          pasteDialog: {\n            data: data.spreadsheet,\n            shown: true,\n          },\n        });\n      } else if (data.elements) {\n        const elements = (\n          data.programmaticAPI\n            ? convertToExcalidrawElements(\n                data.elements as ExcalidrawElementSkeleton[],\n              )\n            : data.elements\n        ) as readonly ExcalidrawElement[];\n        // TODO remove formatting from elements if isPlainPaste\n        this.addElementsFromPasteOrLibrary({\n          elements,\n          files: data.files || null,\n          position: \"cursor\",\n          retainSeed: isPlainPaste,\n        });\n      } else if (data.text) {\n        if (data.text && isMaybeMermaidDefinition(data.text)) {\n          const api = await import(\"@excalidraw/mermaid-to-excalidraw\");\n\n          try {\n            const { elements: skeletonElements, files } =\n              await api.parseMermaidToExcalidraw(data.text);\n\n            const elements = convertToExcalidrawElements(skeletonElements, {\n              regenerateIds: true,\n            });\n\n            this.addElementsFromPasteOrLibrary({\n              elements,\n              files,\n              position: \"cursor\",\n            });\n\n            return;\n          } catch (err: any) {\n            console.warn(\n              `parsing pasted text as mermaid definition failed: ${err.message}`,\n            );\n          }\n        }\n\n        const nonEmptyLines = normalizeEOL(data.text)\n          .split(/\\n+/)\n          .map((s) => s.trim())\n          .filter(Boolean);\n\n        const embbeddableUrls = nonEmptyLines\n          .map((str) => maybeParseEmbedSrc(str))\n          .filter((string) => {\n            return (\n              embeddableURLValidator(string, this.props.validateEmbeddable) &&\n              (/^(http|https):\\/\\/[^\\s/$.?#].[^\\s]*$/.test(string) ||\n                getEmbedLink(string)?.type === \"video\")\n            );\n          });\n\n        if (\n          !IS_PLAIN_PASTE &&\n          embbeddableUrls.length > 0 &&\n          // if there were non-embeddable text (lines) mixed in with embeddable\n          // urls, ignore and paste as text\n          embbeddableUrls.length === nonEmptyLines.length\n        ) {\n          const embeddables: NonDeleted<ExcalidrawEmbeddableElement>[] = [];\n          for (const url of embbeddableUrls) {\n            const prevEmbeddable: ExcalidrawEmbeddableElement | undefined =\n              embeddables[embeddables.length - 1];\n            const embeddable = this.insertEmbeddableElement({\n              sceneX: prevEmbeddable\n                ? prevEmbeddable.x + prevEmbeddable.width + 20\n                : sceneX,\n              sceneY,\n              link: normalizeLink(url),\n            });\n            if (embeddable) {\n              embeddables.push(embeddable);\n            }\n          }\n          if (embeddables.length) {\n            this.setState({\n              selectedElementIds: Object.fromEntries(\n                embeddables.map((embeddable) => [embeddable.id, true]),\n              ),\n            });\n          }\n          return;\n        }\n        this.addTextFromPaste(data.text, isPlainPaste);\n      }\n      this.setActiveTool({ type: \"selection\" });\n      event?.preventDefault();\n    },\n  );\n\n  addElementsFromPasteOrLibrary = (opts: {\n    elements: readonly ExcalidrawElement[];\n    files: BinaryFiles | null;\n    position: { clientX: number; clientY: number } | \"cursor\" | \"center\";\n    retainSeed?: boolean;\n    fitToContent?: boolean;\n  }) => {\n    const elements = restoreElements(opts.elements, null, undefined);\n    const [minX, minY, maxX, maxY] = getCommonBounds(elements);\n\n    const elementsCenterX = distance(minX, maxX) / 2;\n    const elementsCenterY = distance(minY, maxY) / 2;\n\n    const clientX =\n      typeof opts.position === \"object\"\n        ? opts.position.clientX\n        : opts.position === \"cursor\"\n        ? this.lastViewportPosition.x\n        : this.state.width / 2 + this.state.offsetLeft;\n    const clientY =\n      typeof opts.position === \"object\"\n        ? opts.position.clientY\n        : opts.position === \"cursor\"\n        ? this.lastViewportPosition.y\n        : this.state.height / 2 + this.state.offsetTop;\n\n    const { x, y } = viewportCoordsToSceneCoords(\n      { clientX, clientY },\n      this.state,\n    );\n\n    const dx = x - elementsCenterX;\n    const dy = y - elementsCenterY;\n\n    const [gridX, gridY] = getGridPoint(dx, dy, this.getEffectiveGridSize());\n\n    const newElements = duplicateElements(\n      elements.map((element) => {\n        return newElementWith(element, {\n          x: element.x + gridX - minX,\n          y: element.y + gridY - minY,\n        });\n      }),\n      {\n        randomizeSeed: !opts.retainSeed,\n      },\n    );\n\n    const prevElements = this.scene.getElementsIncludingDeleted();\n    let nextElements = [...prevElements, ...newElements];\n\n    const mappedNewSceneElements = this.props.onDuplicate?.(\n      nextElements,\n      prevElements,\n    );\n\n    nextElements = mappedNewSceneElements || nextElements;\n\n    syncMovedIndices(nextElements, arrayToMap(newElements));\n\n    const topLayerFrame = this.getTopLayerFrameAtSceneCoords({ x, y });\n\n    if (topLayerFrame) {\n      const eligibleElements = filterElementsEligibleAsFrameChildren(\n        newElements,\n        topLayerFrame,\n      );\n      addElementsToFrame(\n        nextElements,\n        eligibleElements,\n        topLayerFrame,\n        this.state,\n      );\n    }\n\n    this.scene.replaceAllElements(nextElements);\n\n    newElements.forEach((newElement) => {\n      if (isTextElement(newElement) && isBoundToContainer(newElement)) {\n        const container = getContainerElement(\n          newElement,\n          this.scene.getElementsMapIncludingDeleted(),\n        );\n        redrawTextBoundingBox(\n          newElement,\n          container,\n          this.scene.getElementsMapIncludingDeleted(),\n        );\n      }\n    });\n\n    // paste event may not fire FontFace loadingdone event in Safari, hence loading font faces manually\n    if (isSafari) {\n      Fonts.loadElementsFonts(newElements).then((fontFaces) => {\n        this.fonts.onLoaded(fontFaces);\n      });\n    }\n\n    if (opts.files) {\n      this.addMissingFiles(opts.files);\n    }\n\n    this.store.shouldCaptureIncrement();\n\n    const nextElementsToSelect =\n      excludeElementsInFramesFromSelection(newElements);\n\n    this.setState(\n      {\n        ...this.state,\n        // keep sidebar (presumably the library) open if it's docked and\n        // can fit.\n        //\n        // Note, we should close the sidebar only if we're dropping items\n        // from library, not when pasting from clipboard. Alas.\n        openSidebar:\n          this.state.openSidebar &&\n          this.device.editor.canFitSidebar &&\n          editorJotaiStore.get(isSidebarDockedAtom)\n            ? this.state.openSidebar\n            : null,\n        ...selectGroupsForSelectedElements(\n          {\n            editingGroupId: null,\n            selectedElementIds: nextElementsToSelect.reduce(\n              (acc: Record<ExcalidrawElement[\"id\"], true>, element) => {\n                if (!isBoundToContainer(element)) {\n                  acc[element.id] = true;\n                }\n                return acc;\n              },\n              {},\n            ),\n          },\n          this.scene.getNonDeletedElements(),\n          this.state,\n          this,\n        ),\n      },\n      () => {\n        if (opts.files) {\n          this.addNewImagesToImageCache();\n        }\n      },\n    );\n    this.setActiveTool({ type: \"selection\" });\n\n    if (opts.fitToContent) {\n      this.scrollToContent(newElements, {\n        fitToContent: true,\n        canvasOffsets: this.getEditorUIOffsets(),\n      });\n    }\n  };\n\n  // TODO rewrite this to paste both text & images at the same time if\n  // pasted data contains both\n  private async addElementsFromMixedContentPaste(\n    mixedContent: PastedMixedContent,\n    {\n      isPlainPaste,\n      sceneX,\n      sceneY,\n    }: { isPlainPaste: boolean; sceneX: number; sceneY: number },\n  ) {\n    if (\n      !isPlainPaste &&\n      mixedContent.some((node) => node.type === \"imageUrl\") &&\n      this.isToolSupported(\"image\")\n    ) {\n      const imageURLs = mixedContent\n        .filter((node) => node.type === \"imageUrl\")\n        .map((node) => node.value);\n      const responses = await Promise.all(\n        imageURLs.map(async (url) => {\n          try {\n            return { file: await ImageURLToFile(url) };\n          } catch (error: any) {\n            let errorMessage = error.message;\n            if (error.cause === \"FETCH_ERROR\") {\n              errorMessage = t(\"errors.failedToFetchImage\");\n            } else if (error.cause === \"UNSUPPORTED\") {\n              errorMessage = t(\"errors.unsupportedFileType\");\n            }\n            return { errorMessage };\n          }\n        }),\n      );\n      let y = sceneY;\n      let firstImageYOffsetDone = false;\n      const nextSelectedIds: Record<ExcalidrawElement[\"id\"], true> = {};\n      for (const response of responses) {\n        if (response.file) {\n          const imageElement = this.createImageElement({\n            sceneX,\n            sceneY: y,\n          });\n\n          const initializedImageElement = await this.insertImageElement(\n            imageElement,\n            response.file,\n          );\n          if (initializedImageElement) {\n            // vertically center first image in the batch\n            if (!firstImageYOffsetDone) {\n              firstImageYOffsetDone = true;\n              y -= initializedImageElement.height / 2;\n            }\n            // hack to reset the `y` coord because we vertically center during\n            // insertImageElement\n            mutateElement(initializedImageElement, { y }, false);\n\n            y = imageElement.y + imageElement.height + 25;\n\n            nextSelectedIds[imageElement.id] = true;\n          }\n        }\n      }\n\n      this.setState({\n        selectedElementIds: makeNextSelectedElementIds(\n          nextSelectedIds,\n          this.state,\n        ),\n      });\n\n      const error = responses.find((response) => !!response.errorMessage);\n      if (error && error.errorMessage) {\n        this.setState({ errorMessage: error.errorMessage });\n      }\n    } else {\n      const textNodes = mixedContent.filter((node) => node.type === \"text\");\n      if (textNodes.length) {\n        this.addTextFromPaste(\n          textNodes.map((node) => node.value).join(\"\\n\\n\"),\n          isPlainPaste,\n        );\n      }\n    }\n  }\n\n  private addTextFromPaste(text: string, isPlainPaste = false) {\n    const { x, y } = viewportCoordsToSceneCoords(\n      {\n        clientX: this.lastViewportPosition.x,\n        clientY: this.lastViewportPosition.y,\n      },\n      this.state,\n    );\n\n    const textElementProps = {\n      x,\n      y,\n      strokeColor: this.state.currentItemStrokeColor,\n      backgroundColor: this.state.currentItemBackgroundColor,\n      fillStyle: this.state.currentItemFillStyle,\n      strokeWidth: this.state.currentItemStrokeWidth,\n      strokeStyle: this.state.currentItemStrokeStyle,\n      roundness: null,\n      roughness: this.state.currentItemRoughness,\n      opacity: this.state.currentItemOpacity,\n      text,\n      fontSize: this.state.currentItemFontSize,\n      fontFamily: this.state.currentItemFontFamily,\n      textAlign: DEFAULT_TEXT_ALIGN,\n      verticalAlign: DEFAULT_VERTICAL_ALIGN,\n      locked: false,\n    };\n    const fontString = getFontString({\n      fontSize: textElementProps.fontSize,\n      fontFamily: textElementProps.fontFamily,\n    });\n    const lineHeight = getLineHeight(textElementProps.fontFamily);\n    const [x1, , x2] = getVisibleSceneBounds(this.state);\n    // long texts should not go beyond 800 pixels in width nor should it go below 200 px\n    const maxTextWidth = Math.max(Math.min((x2 - x1) * 0.5, 800), 200);\n    const LINE_GAP = 10;\n    let currentY = y;\n\n    const lines = isPlainPaste ? [text] : text.split(\"\\n\");\n    const textElements = lines.reduce(\n      (acc: ExcalidrawTextElement[], line, idx) => {\n        const originalText = normalizeText(line).trim();\n        if (originalText.length) {\n          const topLayerFrame = this.getTopLayerFrameAtSceneCoords({\n            x,\n            y: currentY,\n          });\n\n          let metrics = measureText(originalText, fontString, lineHeight);\n          const isTextUnwrapped = metrics.width > maxTextWidth;\n\n          const text = isTextUnwrapped\n            ? wrapText(originalText, fontString, maxTextWidth)\n            : originalText;\n\n          metrics = isTextUnwrapped\n            ? measureText(text, fontString, lineHeight)\n            : metrics;\n\n          const startX = x - metrics.width / 2;\n          const startY = currentY - metrics.height / 2;\n\n          const element = newTextElement({\n            ...textElementProps,\n            x: startX,\n            y: startY,\n            text,\n            originalText,\n            lineHeight,\n            autoResize: !isTextUnwrapped,\n            frameId: topLayerFrame ? topLayerFrame.id : null,\n          });\n          acc.push(element);\n          currentY += element.height + LINE_GAP;\n        } else {\n          const prevLine = lines[idx - 1]?.trim();\n          // add paragraph only if previous line was not empty, IOW don't add\n          // more than one empty line\n          if (prevLine) {\n            currentY +=\n              getLineHeightInPx(textElementProps.fontSize, lineHeight) +\n              LINE_GAP;\n          }\n        }\n\n        return acc;\n      },\n      [],\n    );\n\n    if (textElements.length === 0) {\n      return;\n    }\n\n    this.scene.insertElements(textElements);\n\n    this.setState({\n      selectedElementIds: makeNextSelectedElementIds(\n        Object.fromEntries(textElements.map((el) => [el.id, true])),\n        this.state,\n      ),\n    });\n\n    if (\n      !isPlainPaste &&\n      textElements.length > 1 &&\n      PLAIN_PASTE_TOAST_SHOWN === false &&\n      !this.device.editor.isMobile\n    ) {\n      this.setToast({\n        message: t(\"toast.pasteAsSingleElement\", {\n          shortcut: getShortcutKey(\"CtrlOrCmd+Shift+V\"),\n        }),\n        duration: 5000,\n      });\n      PLAIN_PASTE_TOAST_SHOWN = true;\n    }\n\n    this.store.shouldCaptureIncrement();\n  }\n\n  setAppState: React.Component<any, AppState>[\"setState\"] = (\n    state,\n    callback,\n  ) => {\n    this.setState(state, callback);\n  };\n\n  removePointer = (event: React.PointerEvent<HTMLElement> | PointerEvent) => {\n    if (touchTimeout) {\n      this.resetContextMenuTimer();\n    }\n\n    gesture.pointers.delete(event.pointerId);\n  };\n\n  toggleLock = (source: \"keyboard\" | \"ui\" = \"ui\") => {\n    if (!this.state.activeTool.locked) {\n      trackEvent(\n        \"toolbar\",\n        \"toggleLock\",\n        `${source} (${this.device.editor.isMobile ? \"mobile\" : \"desktop\"})`,\n      );\n    }\n    this.setState((prevState) => {\n      return {\n        activeTool: {\n          ...prevState.activeTool,\n          ...updateActiveTool(\n            this.state,\n            prevState.activeTool.locked\n              ? { type: \"selection\" }\n              : prevState.activeTool,\n          ),\n          locked: !prevState.activeTool.locked,\n        },\n      };\n    });\n  };\n\n  updateFrameRendering = (\n    opts:\n      | Partial<AppState[\"frameRendering\"]>\n      | ((\n          prevState: AppState[\"frameRendering\"],\n        ) => Partial<AppState[\"frameRendering\"]>),\n  ) => {\n    this.setState((prevState) => {\n      const next =\n        typeof opts === \"function\" ? opts(prevState.frameRendering) : opts;\n      return {\n        frameRendering: {\n          enabled: next?.enabled ?? prevState.frameRendering.enabled,\n          clip: next?.clip ?? prevState.frameRendering.clip,\n          name: next?.name ?? prevState.frameRendering.name,\n          outline: next?.outline ?? prevState.frameRendering.outline,\n        },\n      };\n    });\n  };\n\n  togglePenMode = (force: boolean | null) => {\n    this.setState((prevState) => {\n      return {\n        penMode: force ?? !prevState.penMode,\n        penDetected: true,\n      };\n    });\n  };\n\n  onHandToolToggle = () => {\n    this.actionManager.executeAction(actionToggleHandTool);\n  };\n\n  /**\n   * Zooms on canvas viewport center\n   */\n  zoomCanvas = (\n    /**\n     * Decimal fraction, auto-clamped between MIN_ZOOM and MAX_ZOOM.\n     * 1 = 100% zoom, 2 = 200% zoom, 0.5 = 50% zoom\n     */\n    value: number,\n  ) => {\n    this.setState({\n      ...getStateForZoom(\n        {\n          viewportX: this.state.width / 2 + this.state.offsetLeft,\n          viewportY: this.state.height / 2 + this.state.offsetTop,\n          nextZoom: getNormalizedZoom(value),\n        },\n        this.state,\n      ),\n    });\n  };\n\n  private cancelInProgressAnimation: (() => void) | null = null;\n\n  scrollToContent = (\n    /**\n     * target to scroll to\n     *\n     * - string - id of element or group, or url containing elementLink\n     * - ExcalidrawElement | ExcalidrawElement[] - element(s) objects\n     */\n    target:\n      | string\n      | ExcalidrawElement\n      | readonly ExcalidrawElement[] = this.scene.getNonDeletedElements(),\n    opts?: (\n      | {\n          fitToContent?: boolean;\n          fitToViewport?: never;\n          viewportZoomFactor?: number;\n          animate?: boolean;\n          duration?: number;\n        }\n      | {\n          fitToContent?: never;\n          fitToViewport?: boolean;\n          /** when fitToViewport=true, how much screen should the content cover,\n           * between 0.1 (10%) and 1 (100%)\n           */\n          viewportZoomFactor?: number;\n          animate?: boolean;\n          duration?: number;\n        }\n    ) & {\n      minZoom?: number;\n      maxZoom?: number;\n      canvasOffsets?: Offsets;\n    },\n  ) => {\n    if (typeof target === \"string\") {\n      let id: string | null;\n      if (isElementLink(target)) {\n        id = parseElementLinkFromURL(target);\n      } else {\n        id = target;\n      }\n      if (id) {\n        const elements = this.scene.getElementsFromId(id);\n\n        if (elements?.length) {\n          this.scrollToContent(elements, {\n            fitToContent: opts?.fitToContent ?? true,\n            animate: opts?.animate ?? true,\n          });\n        } else if (isElementLink(target)) {\n          this.setState({\n            toast: {\n              message: t(\"elementLink.notFound\"),\n              duration: 3000,\n              closable: true,\n            },\n          });\n        }\n      }\n      return;\n    }\n\n    this.cancelInProgressAnimation?.();\n\n    // convert provided target into ExcalidrawElement[] if necessary\n    const targetElements = Array.isArray(target) ? target : [target];\n\n    let zoom = this.state.zoom;\n    let scrollX = this.state.scrollX;\n    let scrollY = this.state.scrollY;\n\n    if (opts?.fitToContent || opts?.fitToViewport) {\n      const { appState } = zoomToFit({\n        canvasOffsets: opts.canvasOffsets,\n        targetElements,\n        appState: this.state,\n        fitToViewport: !!opts?.fitToViewport,\n        viewportZoomFactor: opts?.viewportZoomFactor,\n        minZoom: opts?.minZoom,\n        maxZoom: opts?.maxZoom,\n      });\n      zoom = appState.zoom;\n      scrollX = appState.scrollX;\n      scrollY = appState.scrollY;\n    } else {\n      // compute only the viewport location, without any zoom adjustment\n      const scroll = calculateScrollCenter(targetElements, this.state);\n      scrollX = scroll.scrollX;\n      scrollY = scroll.scrollY;\n    }\n\n    // when animating, we use RequestAnimationFrame to prevent the animation\n    // from slowing down other processes\n    if (opts?.animate) {\n      const origScrollX = this.state.scrollX;\n      const origScrollY = this.state.scrollY;\n      const origZoom = this.state.zoom.value;\n\n      const cancel = easeToValuesRAF({\n        fromValues: {\n          scrollX: origScrollX,\n          scrollY: origScrollY,\n          zoom: origZoom,\n        },\n        toValues: { scrollX, scrollY, zoom: zoom.value },\n        interpolateValue: (from, to, progress, key) => {\n          // for zoom, use different easing\n          if (key === \"zoom\") {\n            return from * Math.pow(to / from, easeOut(progress));\n          }\n          // handle using default\n          return undefined;\n        },\n        onStep: ({ scrollX, scrollY, zoom }) => {\n          this.setState({\n            scrollX,\n            scrollY,\n            zoom: { value: zoom },\n          });\n        },\n        onStart: () => {\n          this.setState({ shouldCacheIgnoreZoom: true });\n        },\n        onEnd: () => {\n          this.setState({ shouldCacheIgnoreZoom: false });\n        },\n        onCancel: () => {\n          this.setState({ shouldCacheIgnoreZoom: false });\n        },\n        duration: opts?.duration ?? 500,\n      });\n\n      this.cancelInProgressAnimation = () => {\n        cancel();\n        this.cancelInProgressAnimation = null;\n      };\n    } else {\n      this.setState({ scrollX, scrollY, zoom });\n    }\n  };\n\n  private maybeUnfollowRemoteUser = () => {\n    if (this.state.userToFollow) {\n      this.setState({ userToFollow: null });\n    }\n  };\n\n  /** use when changing scrollX/scrollY/zoom based on user interaction */\n  private translateCanvas: React.Component<any, AppState>[\"setState\"] = (\n    state,\n  ) => {\n    this.cancelInProgressAnimation?.();\n    this.maybeUnfollowRemoteUser();\n    this.setState(state);\n  };\n\n  setToast = (\n    toast: {\n      message: string;\n      closable?: boolean;\n      duration?: number;\n    } | null,\n  ) => {\n    this.setState({ toast });\n  };\n\n  restoreFileFromShare = async () => {\n    try {\n      const webShareTargetCache = await caches.open(\"web-share-target\");\n\n      const response = await webShareTargetCache.match(\"shared-file\");\n      if (response) {\n        const blob = await response.blob();\n        const file = new File([blob], blob.name || \"\", { type: blob.type });\n        this.loadFileToCanvas(file, null);\n        await webShareTargetCache.delete(\"shared-file\");\n        window.history.replaceState(null, APP_NAME, window.location.pathname);\n      }\n    } catch (error: any) {\n      this.setState({ errorMessage: error.message });\n    }\n  };\n\n  /**\n   * adds supplied files to existing files in the appState.\n   * NOTE if file already exists in editor state, the file data is not updated\n   * */\n  public addFiles: ExcalidrawImperativeAPI[\"addFiles\"] = withBatchedUpdates(\n    (files) => {\n      const { addedFiles } = this.addMissingFiles(files);\n\n      this.clearImageShapeCache(addedFiles);\n      this.scene.triggerUpdate();\n\n      this.addNewImagesToImageCache();\n    },\n  );\n\n  private addMissingFiles = (\n    files: BinaryFiles | BinaryFileData[],\n    replace = false,\n  ) => {\n    const nextFiles = replace ? {} : { ...this.files };\n    const addedFiles: BinaryFiles = {};\n\n    const _files = Array.isArray(files) ? files : Object.values(files);\n\n    for (const fileData of _files) {\n      if (nextFiles[fileData.id]) {\n        continue;\n      }\n\n      addedFiles[fileData.id] = fileData;\n      nextFiles[fileData.id] = fileData;\n\n      if (fileData.mimeType === MIME_TYPES.svg) {\n        try {\n          const restoredDataURL = getDataURL_sync(\n            normalizeSVG(dataURLToString(fileData.dataURL)),\n            MIME_TYPES.svg,\n          );\n          if (fileData.dataURL !== restoredDataURL) {\n            // bump version so persistence layer can update the store\n            fileData.version = (fileData.version ?? 1) + 1;\n            fileData.dataURL = restoredDataURL;\n          }\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    }\n\n    this.files = nextFiles;\n\n    return { addedFiles };\n  };\n\n  public updateScene = withBatchedUpdates(\n    <K extends keyof AppState>(sceneData: {\n      elements?: SceneData[\"elements\"];\n      appState?: Pick<AppState, K> | null;\n      collaborators?: SceneData[\"collaborators\"];\n      /**\n       *  Controls which updates should be captured by the `Store`. Captured updates are emmitted and listened to by other components, such as `History` for undo / redo purposes.\n       *\n       *  - `CaptureUpdateAction.IMMEDIATELY`: Updates are immediately undoable. Use for most local updates.\n       *  - `CaptureUpdateAction.NEVER`: Updates never make it to undo/redo stack. Use for remote updates or scene initialization.\n       *  - `CaptureUpdateAction.EVENTUALLY`: Updates will be eventually be captured as part of a future increment.\n       *\n       * Check [API docs](https://docs.excalidraw.com/docs/@excalidraw/excalidraw/api/props/excalidraw-api#captureUpdate) for more details.\n       *\n       * @default CaptureUpdateAction.EVENTUALLY\n       */\n      captureUpdate?: SceneData[\"captureUpdate\"];\n    }) => {\n      const nextElements = syncInvalidIndices(sceneData.elements ?? []);\n\n      if (\n        sceneData.captureUpdate &&\n        sceneData.captureUpdate !== CaptureUpdateAction.EVENTUALLY\n      ) {\n        const prevCommittedAppState = this.store.snapshot.appState;\n        const prevCommittedElements = this.store.snapshot.elements;\n\n        const nextCommittedAppState = sceneData.appState\n          ? Object.assign({}, prevCommittedAppState, sceneData.appState) // new instance, with partial appstate applied to previously captured one, including hidden prop inside `prevCommittedAppState`\n          : prevCommittedAppState;\n\n        const nextCommittedElements = sceneData.elements\n          ? this.store.filterUncomittedElements(\n              this.scene.getElementsMapIncludingDeleted(), // Only used to detect uncomitted local elements\n              arrayToMap(nextElements), // We expect all (already reconciled) elements\n            )\n          : prevCommittedElements;\n\n        // WARN: store action always performs deep clone of changed elements, for ephemeral remote updates (i.e. remote dragging, resizing, drawing) we might consider doing something smarter\n        // do NOT schedule store actions (execute after re-render), as it might cause unexpected concurrency issues if not handled well\n        if (sceneData.captureUpdate === CaptureUpdateAction.IMMEDIATELY) {\n          this.store.captureIncrement(\n            nextCommittedElements,\n            nextCommittedAppState,\n          );\n        } else if (sceneData.captureUpdate === CaptureUpdateAction.NEVER) {\n          this.store.updateSnapshot(\n            nextCommittedElements,\n            nextCommittedAppState,\n          );\n        }\n      }\n\n      if (sceneData.appState) {\n        this.setState(sceneData.appState);\n      }\n\n      if (sceneData.elements) {\n        this.scene.replaceAllElements(nextElements);\n      }\n\n      if (sceneData.collaborators) {\n        this.setState({ collaborators: sceneData.collaborators });\n      }\n    },\n  );\n\n  private triggerRender = (\n    /** force always re-renders canvas even if no change */\n    force?: boolean,\n  ) => {\n    if (force === true) {\n      this.scene.triggerUpdate();\n    } else {\n      this.setState({});\n    }\n  };\n\n  /**\n   * @returns whether the menu was toggled on or off\n   */\n  public toggleSidebar = ({\n    name,\n    tab,\n    force,\n  }: {\n    name: SidebarName | null;\n    tab?: SidebarTabName;\n    force?: boolean;\n  }): boolean => {\n    let nextName;\n    if (force === undefined) {\n      nextName =\n        this.state.openSidebar?.name === name &&\n        this.state.openSidebar?.tab === tab\n          ? null\n          : name;\n    } else {\n      nextName = force ? name : null;\n    }\n\n    const nextState: AppState[\"openSidebar\"] = nextName\n      ? { name: nextName }\n      : null;\n    if (nextState && tab) {\n      nextState.tab = tab;\n    }\n\n    this.setState({ openSidebar: nextState });\n\n    return !!nextName;\n  };\n\n  private updateCurrentCursorPosition = withBatchedUpdates(\n    (event: MouseEvent) => {\n      this.lastViewportPosition.x = event.clientX;\n      this.lastViewportPosition.y = event.clientY;\n    },\n  );\n\n  public getEditorUIOffsets = (): Offsets => {\n    const toolbarBottom =\n      this.excalidrawContainerRef?.current\n        ?.querySelector(\".App-toolbar\")\n        ?.getBoundingClientRect()?.bottom ?? 0;\n    const sidebarRect = this.excalidrawContainerRef?.current\n      ?.querySelector(\".sidebar\")\n      ?.getBoundingClientRect();\n    const propertiesPanelRect = this.excalidrawContainerRef?.current\n      ?.querySelector(\".App-menu__left\")\n      ?.getBoundingClientRect();\n\n    const PADDING = 16;\n\n    return getLanguage().rtl\n      ? {\n          top: toolbarBottom + PADDING,\n          right:\n            Math.max(\n              this.state.width -\n                (propertiesPanelRect?.left ?? this.state.width),\n              0,\n            ) + PADDING,\n          bottom: PADDING,\n          left: Math.max(sidebarRect?.right ?? 0, 0) + PADDING,\n        }\n      : {\n          top: toolbarBottom + PADDING,\n          right: Math.max(\n            this.state.width -\n              (sidebarRect?.left ?? this.state.width) +\n              PADDING,\n            0,\n          ),\n          bottom: PADDING,\n          left: Math.max(propertiesPanelRect?.right ?? 0, 0) + PADDING,\n        };\n  };\n\n  // Input handling\n  private onKeyDown = withBatchedUpdates(\n    (event: React.KeyboardEvent | KeyboardEvent) => {\n      // normalize `event.key` when CapsLock is pressed #2372\n\n      if (\n        \"Proxy\" in window &&\n        ((!event.shiftKey && /^[A-Z]$/.test(event.key)) ||\n          (event.shiftKey && /^[a-z]$/.test(event.key)))\n      ) {\n        event = new Proxy(event, {\n          get(ev: any, prop) {\n            const value = ev[prop];\n            if (typeof value === \"function\") {\n              // fix for Proxies hijacking `this`\n              return value.bind(ev);\n            }\n            return prop === \"key\"\n              ? // CapsLock inverts capitalization based on ShiftKey, so invert\n                // it back\n                event.shiftKey\n                ? ev.key.toUpperCase()\n                : ev.key.toLowerCase()\n              : value;\n          },\n        });\n      }\n\n      if (!isInputLike(event.target)) {\n        if (\n          (event.key === KEYS.ESCAPE || event.key === KEYS.ENTER) &&\n          this.state.croppingElementId\n        ) {\n          this.finishImageCropping();\n          return;\n        }\n\n        const selectedElements = getSelectedElements(\n          this.scene.getNonDeletedElementsMap(),\n          this.state,\n        );\n\n        if (\n          selectedElements.length === 1 &&\n          isImageElement(selectedElements[0]) &&\n          event.key === KEYS.ENTER\n        ) {\n          this.startImageCropping(selectedElements[0]);\n          return;\n        }\n\n        if (\n          event.key === KEYS.ESCAPE &&\n          this.flowChartCreator.isCreatingChart\n        ) {\n          this.flowChartCreator.clear();\n          this.triggerRender(true);\n          return;\n        }\n\n        const arrowKeyPressed = isArrowKey(event.key);\n\n        if (event[KEYS.CTRL_OR_CMD] && arrowKeyPressed && !event.shiftKey) {\n          event.preventDefault();\n\n          const selectedElements = getSelectedElements(\n            this.scene.getNonDeletedElementsMap(),\n            this.state,\n          );\n\n          if (\n            selectedElements.length === 1 &&\n            isFlowchartNodeElement(selectedElements[0])\n          ) {\n            this.flowChartCreator.createNodes(\n              selectedElements[0],\n              this.scene.getNonDeletedElementsMap(),\n              this.state,\n              getLinkDirectionFromKey(event.key),\n            );\n          }\n\n          if (\n            this.flowChartCreator.pendingNodes?.length &&\n            !isElementCompletelyInViewport(\n              this.flowChartCreator.pendingNodes,\n              this.canvas.width / window.devicePixelRatio,\n              this.canvas.height / window.devicePixelRatio,\n              {\n                offsetLeft: this.state.offsetLeft,\n                offsetTop: this.state.offsetTop,\n                scrollX: this.state.scrollX,\n                scrollY: this.state.scrollY,\n                zoom: this.state.zoom,\n              },\n              this.scene.getNonDeletedElementsMap(),\n              this.getEditorUIOffsets(),\n            )\n          ) {\n            this.scrollToContent(this.flowChartCreator.pendingNodes, {\n              animate: true,\n              duration: 300,\n              fitToContent: true,\n              canvasOffsets: this.getEditorUIOffsets(),\n            });\n          }\n\n          return;\n        }\n\n        if (event.altKey) {\n          const selectedElements = getSelectedElements(\n            this.scene.getNonDeletedElementsMap(),\n            this.state,\n          );\n\n          if (selectedElements.length === 1 && arrowKeyPressed) {\n            event.preventDefault();\n\n            const nextId = this.flowChartNavigator.exploreByDirection(\n              selectedElements[0],\n              this.scene.getNonDeletedElementsMap(),\n              getLinkDirectionFromKey(event.key),\n            );\n\n            if (nextId) {\n              this.setState((prevState) => ({\n                selectedElementIds: makeNextSelectedElementIds(\n                  {\n                    [nextId]: true,\n                  },\n                  prevState,\n                ),\n              }));\n\n              const nextNode = this.scene\n                .getNonDeletedElementsMap()\n                .get(nextId);\n\n              if (\n                nextNode &&\n                !isElementCompletelyInViewport(\n                  [nextNode],\n                  this.canvas.width / window.devicePixelRatio,\n                  this.canvas.height / window.devicePixelRatio,\n                  {\n                    offsetLeft: this.state.offsetLeft,\n                    offsetTop: this.state.offsetTop,\n                    scrollX: this.state.scrollX,\n                    scrollY: this.state.scrollY,\n                    zoom: this.state.zoom,\n                  },\n                  this.scene.getNonDeletedElementsMap(),\n                  this.getEditorUIOffsets(),\n                )\n              ) {\n                this.scrollToContent(nextNode, {\n                  animate: true,\n                  duration: 300,\n                  canvasOffsets: this.getEditorUIOffsets(),\n                });\n              }\n            }\n            return;\n          }\n        }\n      }\n\n      if (\n        event[KEYS.CTRL_OR_CMD] &&\n        event.key === KEYS.P &&\n        !event.shiftKey &&\n        !event.altKey\n      ) {\n        this.setToast({\n          message: t(\"commandPalette.shortcutHint\", {\n            shortcut: getShortcutFromShortcutName(\"commandPalette\"),\n          }),\n        });\n        event.preventDefault();\n        return;\n      }\n\n      if (event[KEYS.CTRL_OR_CMD] && event.key.toLowerCase() === KEYS.V) {\n        IS_PLAIN_PASTE = event.shiftKey;\n        clearTimeout(IS_PLAIN_PASTE_TIMER);\n        // reset (100ms to be safe that we it runs after the ensuing\n        // paste event). Though, technically unnecessary to reset since we\n        // (re)set the flag before each paste event.\n        IS_PLAIN_PASTE_TIMER = window.setTimeout(() => {\n          IS_PLAIN_PASTE = false;\n        }, 100);\n      }\n\n      // prevent browser zoom in input fields\n      if (event[KEYS.CTRL_OR_CMD] && isWritableElement(event.target)) {\n        if (event.code === CODES.MINUS || event.code === CODES.EQUAL) {\n          event.preventDefault();\n          return;\n        }\n      }\n\n      // bail if\n      if (\n        // inside an input\n        (isWritableElement(event.target) &&\n          // unless pressing escape (finalize action)\n          event.key !== KEYS.ESCAPE) ||\n        // or unless using arrows (to move between buttons)\n        (isArrowKey(event.key) && isInputLike(event.target))\n      ) {\n        return;\n      }\n\n      if (event.key === KEYS.QUESTION_MARK) {\n        this.setState({\n          openDialog: { name: \"help\" },\n        });\n        return;\n      } else if (\n        event.key.toLowerCase() === KEYS.E &&\n        event.shiftKey &&\n        event[KEYS.CTRL_OR_CMD]\n      ) {\n        event.preventDefault();\n        this.setState({ openDialog: { name: \"imageExport\" } });\n        return;\n      }\n\n      if (event.key === KEYS.PAGE_UP || event.key === KEYS.PAGE_DOWN) {\n        let offset =\n          (event.shiftKey ? this.state.width : this.state.height) /\n          this.state.zoom.value;\n        if (event.key === KEYS.PAGE_DOWN) {\n          offset = -offset;\n        }\n        if (event.shiftKey) {\n          this.translateCanvas((state) => ({\n            scrollX: state.scrollX + offset,\n          }));\n        } else {\n          this.translateCanvas((state) => ({\n            scrollY: state.scrollY + offset,\n          }));\n        }\n      }\n\n      if (this.state.openDialog?.name === \"elementLinkSelector\") {\n        return;\n      }\n\n      if (this.actionManager.handleKeyDown(event)) {\n        return;\n      }\n\n      if (this.state.viewModeEnabled) {\n        return;\n      }\n\n      if (event[KEYS.CTRL_OR_CMD] && this.state.isBindingEnabled) {\n        this.setState({ isBindingEnabled: false });\n      }\n\n      if (isArrowKey(event.key)) {\n        let selectedElements = this.scene.getSelectedElements({\n          selectedElementIds: this.state.selectedElementIds,\n          includeBoundTextElement: true,\n          includeElementsInFrames: true,\n        });\n\n        const elbowArrow = selectedElements.find(isElbowArrow) as\n          | ExcalidrawArrowElement\n          | undefined;\n\n        const arrowIdsToRemove = new Set<string>();\n\n        selectedElements\n          .filter(isElbowArrow)\n          .filter((arrow) => {\n            const startElementNotInSelection =\n              arrow.startBinding &&\n              !selectedElements.some(\n                (el) => el.id === arrow.startBinding?.elementId,\n              );\n            const endElementNotInSelection =\n              arrow.endBinding &&\n              !selectedElements.some(\n                (el) => el.id === arrow.endBinding?.elementId,\n              );\n            return startElementNotInSelection || endElementNotInSelection;\n          })\n          .forEach((arrow) => arrowIdsToRemove.add(arrow.id));\n\n        selectedElements = selectedElements.filter(\n          (el) => !arrowIdsToRemove.has(el.id),\n        );\n\n        const step =\n          (this.getEffectiveGridSize() &&\n            (event.shiftKey\n              ? ELEMENT_TRANSLATE_AMOUNT\n              : this.getEffectiveGridSize())) ||\n          (event.shiftKey\n            ? ELEMENT_SHIFT_TRANSLATE_AMOUNT\n            : ELEMENT_TRANSLATE_AMOUNT);\n\n        let offsetX = 0;\n        let offsetY = 0;\n\n        if (event.key === KEYS.ARROW_LEFT) {\n          offsetX = -step;\n        } else if (event.key === KEYS.ARROW_RIGHT) {\n          offsetX = step;\n        } else if (event.key === KEYS.ARROW_UP) {\n          offsetY = -step;\n        } else if (event.key === KEYS.ARROW_DOWN) {\n          offsetY = step;\n        }\n\n        selectedElements.forEach((element) => {\n          mutateElement(\n            element,\n            {\n              x: element.x + offsetX,\n              y: element.y + offsetY,\n            },\n            false,\n          );\n\n          updateBoundElements(element, this.scene.getNonDeletedElementsMap(), {\n            simultaneouslyUpdated: selectedElements,\n          });\n        });\n\n        this.setState({\n          suggestedBindings: getSuggestedBindingsForArrows(\n            selectedElements.filter(\n              (element) => element.id !== elbowArrow?.id || step !== 0,\n            ),\n            this.scene.getNonDeletedElementsMap(),\n            this.state.zoom,\n          ),\n        });\n\n        this.scene.triggerUpdate();\n\n        event.preventDefault();\n      } else if (event.key === KEYS.ENTER) {\n        const selectedElements = this.scene.getSelectedElements(this.state);\n        if (selectedElements.length === 1) {\n          const selectedElement = selectedElements[0];\n          if (event[KEYS.CTRL_OR_CMD]) {\n            if (isLinearElement(selectedElement)) {\n              if (\n                !this.state.editingLinearElement ||\n                this.state.editingLinearElement.elementId !==\n                  selectedElements[0].id\n              ) {\n                this.store.shouldCaptureIncrement();\n                if (!isElbowArrow(selectedElement)) {\n                  this.setState({\n                    editingLinearElement: new LinearElementEditor(\n                      selectedElement,\n                    ),\n                  });\n                }\n              }\n            }\n          } else if (\n            isTextElement(selectedElement) ||\n            isValidTextContainer(selectedElement)\n          ) {\n            let container;\n            if (!isTextElement(selectedElement)) {\n              container = selectedElement as ExcalidrawTextContainer;\n            }\n            const midPoint = getContainerCenter(\n              selectedElement,\n              this.state,\n              this.scene.getNonDeletedElementsMap(),\n            );\n            const sceneX = midPoint.x;\n            const sceneY = midPoint.y;\n            this.startTextEditing({\n              sceneX,\n              sceneY,\n              container,\n            });\n            event.preventDefault();\n            return;\n          } else if (isFrameLikeElement(selectedElement)) {\n            this.setState({\n              editingFrame: selectedElement.id,\n            });\n          }\n        }\n      } else if (\n        !event.ctrlKey &&\n        !event.altKey &&\n        !event.metaKey &&\n        !this.state.newElement &&\n        !this.state.selectionElement &&\n        !this.state.selectedElementsAreBeingDragged\n      ) {\n        const shape = findShapeByKey(event.key);\n        if (shape) {\n          if (this.state.activeTool.type !== shape) {\n            trackEvent(\n              \"toolbar\",\n              shape,\n              `keyboard (${\n                this.device.editor.isMobile ? \"mobile\" : \"desktop\"\n              })`,\n            );\n          }\n          if (shape === \"arrow\" && this.state.activeTool.type === \"arrow\") {\n            this.setState((prevState) => ({\n              currentItemArrowType:\n                prevState.currentItemArrowType === ARROW_TYPE.sharp\n                  ? ARROW_TYPE.round\n                  : prevState.currentItemArrowType === ARROW_TYPE.round\n                  ? ARROW_TYPE.elbow\n                  : ARROW_TYPE.sharp,\n            }));\n          }\n          this.setActiveTool({ type: shape });\n          event.stopPropagation();\n        } else if (event.key === KEYS.Q) {\n          this.toggleLock(\"keyboard\");\n          event.stopPropagation();\n        }\n      }\n      if (event.key === KEYS.SPACE && gesture.pointers.size === 0) {\n        isHoldingSpace = true;\n        setCursor(this.interactiveCanvas, CURSOR_TYPE.GRAB);\n        event.preventDefault();\n      }\n\n      if (\n        (event.key === KEYS.G || event.key === KEYS.S) &&\n        !event.altKey &&\n        !event[KEYS.CTRL_OR_CMD]\n      ) {\n        const selectedElements = this.scene.getSelectedElements(this.state);\n        if (\n          this.state.activeTool.type === \"selection\" &&\n          !selectedElements.length\n        ) {\n          return;\n        }\n\n        if (\n          event.key === KEYS.G &&\n          (hasBackground(this.state.activeTool.type) ||\n            selectedElements.some((element) => hasBackground(element.type)))\n        ) {\n          this.setState({ openPopup: \"elementBackground\" });\n          event.stopPropagation();\n        }\n        if (event.key === KEYS.S) {\n          this.setState({ openPopup: \"elementStroke\" });\n          event.stopPropagation();\n        }\n      }\n\n      if (\n        !event[KEYS.CTRL_OR_CMD] &&\n        event.shiftKey &&\n        event.key.toLowerCase() === KEYS.F\n      ) {\n        const selectedElements = this.scene.getSelectedElements(this.state);\n\n        if (\n          this.state.activeTool.type === \"selection\" &&\n          !selectedElements.length\n        ) {\n          return;\n        }\n\n        if (\n          this.state.activeTool.type === \"text\" ||\n          selectedElements.find(\n            (element) =>\n              isTextElement(element) ||\n              getBoundTextElement(\n                element,\n                this.scene.getNonDeletedElementsMap(),\n              ),\n          )\n        ) {\n          event.preventDefault();\n          this.setState({ openPopup: \"fontFamily\" });\n        }\n      }\n\n      if (event.key === KEYS.K && !event.altKey && !event[KEYS.CTRL_OR_CMD]) {\n        if (this.state.activeTool.type === \"laser\") {\n          this.setActiveTool({ type: \"selection\" });\n        } else {\n          this.setActiveTool({ type: \"laser\" });\n        }\n        return;\n      }\n\n      if (\n        event[KEYS.CTRL_OR_CMD] &&\n        (event.key === KEYS.BACKSPACE || event.key === KEYS.DELETE)\n      ) {\n        editorJotaiStore.set(activeConfirmDialogAtom, \"clearCanvas\");\n      }\n\n      // eye dropper\n      // -----------------------------------------------------------------------\n      const lowerCased = event.key.toLocaleLowerCase();\n      const isPickingStroke = lowerCased === KEYS.S && event.shiftKey;\n      const isPickingBackground =\n        event.key === KEYS.I || (lowerCased === KEYS.G && event.shiftKey);\n\n      if (isPickingStroke || isPickingBackground) {\n        this.openEyeDropper({\n          type: isPickingStroke ? \"stroke\" : \"background\",\n        });\n      }\n      // -----------------------------------------------------------------------\n    },\n  );\n\n  private onKeyUp = withBatchedUpdates((event: KeyboardEvent) => {\n    if (event.key === KEYS.SPACE) {\n      if (\n        this.state.viewModeEnabled ||\n        this.state.openDialog?.name === \"elementLinkSelector\"\n      ) {\n        setCursor(this.interactiveCanvas, CURSOR_TYPE.GRAB);\n      } else if (this.state.activeTool.type === \"selection\") {\n        resetCursor(this.interactiveCanvas);\n      } else {\n        setCursorForShape(this.interactiveCanvas, this.state);\n        this.setState({\n          selectedElementIds: makeNextSelectedElementIds({}, this.state),\n          selectedGroupIds: {},\n          editingGroupId: null,\n          activeEmbeddable: null,\n        });\n      }\n      isHoldingSpace = false;\n    }\n    if (!event[KEYS.CTRL_OR_CMD] && !this.state.isBindingEnabled) {\n      this.setState({ isBindingEnabled: true });\n    }\n    if (isArrowKey(event.key)) {\n      bindOrUnbindLinearElements(\n        this.scene.getSelectedElements(this.state).filter(isLinearElement),\n        this.scene.getNonDeletedElementsMap(),\n        this.scene.getNonDeletedElements(),\n        this.scene,\n        isBindingEnabled(this.state),\n        this.state.selectedLinearElement?.selectedPointsIndices ?? [],\n        this.state.zoom,\n      );\n      this.setState({ suggestedBindings: [] });\n    }\n\n    if (!event.altKey) {\n      if (this.flowChartNavigator.isExploring) {\n        this.flowChartNavigator.clear();\n        this.syncActionResult({\n          captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n        });\n      }\n    }\n\n    if (!event[KEYS.CTRL_OR_CMD]) {\n      if (this.flowChartCreator.isCreatingChart) {\n        if (this.flowChartCreator.pendingNodes?.length) {\n          this.scene.insertElements(this.flowChartCreator.pendingNodes);\n        }\n\n        const firstNode = this.flowChartCreator.pendingNodes?.[0];\n\n        if (firstNode) {\n          this.setState((prevState) => ({\n            selectedElementIds: makeNextSelectedElementIds(\n              {\n                [firstNode.id]: true,\n              },\n              prevState,\n            ),\n          }));\n\n          if (\n            !isElementCompletelyInViewport(\n              [firstNode],\n              this.canvas.width / window.devicePixelRatio,\n              this.canvas.height / window.devicePixelRatio,\n              {\n                offsetLeft: this.state.offsetLeft,\n                offsetTop: this.state.offsetTop,\n                scrollX: this.state.scrollX,\n                scrollY: this.state.scrollY,\n                zoom: this.state.zoom,\n              },\n              this.scene.getNonDeletedElementsMap(),\n              this.getEditorUIOffsets(),\n            )\n          ) {\n            this.scrollToContent(firstNode, {\n              animate: true,\n              duration: 300,\n              canvasOffsets: this.getEditorUIOffsets(),\n            });\n          }\n        }\n\n        this.flowChartCreator.clear();\n        this.syncActionResult({\n          captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n        });\n      }\n    }\n  });\n\n  // We purposely widen the `tool` type so this helper can be called with\n  // any tool without having to type check it\n  private isToolSupported = <T extends ToolType | \"custom\">(tool: T) => {\n    return (\n      this.props.UIOptions.tools?.[\n        tool as Extract<T, keyof AppProps[\"UIOptions\"][\"tools\"]>\n      ] !== false\n    );\n  };\n\n  setActiveTool = (\n    tool: (\n      | (\n          | { type: Exclude<ToolType, \"image\"> }\n          | {\n              type: Extract<ToolType, \"image\">;\n              insertOnCanvasDirectly?: boolean;\n            }\n        )\n      | { type: \"custom\"; customType: string }\n    ) & { locked?: boolean },\n  ) => {\n    if (!this.isToolSupported(tool.type)) {\n      console.warn(\n        `\"${tool.type}\" tool is disabled via \"UIOptions.canvasActions.tools.${tool.type}\"`,\n      );\n      return;\n    }\n\n    const nextActiveTool = updateActiveTool(this.state, tool);\n    if (nextActiveTool.type === \"hand\") {\n      setCursor(this.interactiveCanvas, CURSOR_TYPE.GRAB);\n    } else if (!isHoldingSpace) {\n      setCursorForShape(this.interactiveCanvas, {\n        ...this.state,\n        activeTool: nextActiveTool,\n      });\n    }\n    if (isToolIcon(document.activeElement)) {\n      this.focusContainer();\n    }\n    if (!isLinearElementType(nextActiveTool.type)) {\n      this.setState({ suggestedBindings: [] });\n    }\n    if (nextActiveTool.type === \"image\") {\n      this.onImageAction({\n        insertOnCanvasDirectly:\n          (tool.type === \"image\" && tool.insertOnCanvasDirectly) ?? false,\n      });\n    }\n\n    this.setState((prevState) => {\n      const commonResets = {\n        snapLines: prevState.snapLines.length ? [] : prevState.snapLines,\n        originSnapOffset: null,\n        activeEmbeddable: null,\n      } as const;\n\n      if (nextActiveTool.type === \"freedraw\") {\n        this.store.shouldCaptureIncrement();\n      }\n\n      if (nextActiveTool.type !== \"selection\") {\n        return {\n          ...prevState,\n          activeTool: nextActiveTool,\n          selectedElementIds: makeNextSelectedElementIds({}, prevState),\n          selectedGroupIds: makeNextSelectedElementIds({}, prevState),\n          editingGroupId: null,\n          multiElement: null,\n          ...commonResets,\n        };\n      }\n      return {\n        ...prevState,\n        activeTool: nextActiveTool,\n        ...commonResets,\n      };\n    });\n  };\n\n  setOpenDialog = (dialogType: AppState[\"openDialog\"]) => {\n    this.setState({ openDialog: dialogType });\n  };\n\n  private setCursor = (cursor: string) => {\n    setCursor(this.interactiveCanvas, cursor);\n  };\n\n  private resetCursor = () => {\n    resetCursor(this.interactiveCanvas);\n  };\n  /**\n   * returns whether user is making a gesture with >= 2 fingers (points)\n   * on o touch screen (not on a trackpad). Currently only relates to Darwin\n   * (iOS/iPadOS,MacOS), but may work on other devices in the future if\n   * GestureEvent is standardized.\n   */\n  private isTouchScreenMultiTouchGesture = () => {\n    // we don't want to deselect when using trackpad, and multi-point gestures\n    // only work on touch screens, so checking for >= pointers means we're on a\n    // touchscreen\n    return gesture.pointers.size >= 2;\n  };\n\n  public getName = () => {\n    return (\n      this.state.name ||\n      this.props.name ||\n      `${t(\"labels.untitled\")}-${getDateTime()}`\n    );\n  };\n\n  // fires only on Safari\n  private onGestureStart = withBatchedUpdates((event: GestureEvent) => {\n    event.preventDefault();\n\n    // we only want to deselect on touch screens because user may have selected\n    // elements by mistake while zooming\n    if (this.isTouchScreenMultiTouchGesture()) {\n      this.setState({\n        selectedElementIds: makeNextSelectedElementIds({}, this.state),\n        activeEmbeddable: null,\n      });\n    }\n    gesture.initialScale = this.state.zoom.value;\n  });\n\n  // fires only on Safari\n  private onGestureChange = withBatchedUpdates((event: GestureEvent) => {\n    event.preventDefault();\n\n    // onGestureChange only has zoom factor but not the center.\n    // If we're on iPad or iPhone, then we recognize multi-touch and will\n    // zoom in at the right location in the touchmove handler\n    // (handleCanvasPointerMove).\n    //\n    // On Macbook trackpad, we don't have those events so will zoom in at the\n    // current location instead.\n    //\n    // As such, bail from this handler on touch devices.\n    if (this.isTouchScreenMultiTouchGesture()) {\n      return;\n    }\n\n    const initialScale = gesture.initialScale;\n    if (initialScale) {\n      this.setState((state) => ({\n        ...getStateForZoom(\n          {\n            viewportX: this.lastViewportPosition.x,\n            viewportY: this.lastViewportPosition.y,\n            nextZoom: getNormalizedZoom(initialScale * event.scale),\n          },\n          state,\n        ),\n      }));\n    }\n  });\n\n  // fires only on Safari\n  private onGestureEnd = withBatchedUpdates((event: GestureEvent) => {\n    event.preventDefault();\n    // reselect elements only on touch screens (see onGestureStart)\n    if (this.isTouchScreenMultiTouchGesture()) {\n      this.setState({\n        previousSelectedElementIds: {},\n        selectedElementIds: makeNextSelectedElementIds(\n          this.state.previousSelectedElementIds,\n          this.state,\n        ),\n      });\n    }\n    gesture.initialScale = null;\n  });\n\n  private handleTextWysiwyg(\n    element: ExcalidrawTextElement,\n    {\n      isExistingElement = false,\n    }: {\n      isExistingElement?: boolean;\n    },\n  ) {\n    const elementsMap = this.scene.getElementsMapIncludingDeleted();\n\n    const updateElement = (nextOriginalText: string, isDeleted: boolean) => {\n      this.scene.replaceAllElements([\n        // Not sure why we include deleted elements as well hence using deleted elements map\n        ...this.scene.getElementsIncludingDeleted().map((_element) => {\n          if (_element.id === element.id && isTextElement(_element)) {\n            return newElementWith(_element, {\n              originalText: nextOriginalText,\n              isDeleted: isDeleted ?? _element.isDeleted,\n              // returns (wrapped) text and new dimensions\n              ...refreshTextDimensions(\n                _element,\n                getContainerElement(_element, elementsMap),\n                elementsMap,\n                nextOriginalText,\n              ),\n            });\n          }\n          return _element;\n        }),\n      ]);\n    };\n\n    textWysiwyg({\n      id: element.id,\n      canvas: this.canvas,\n      getViewportCoords: (x, y) => {\n        const { x: viewportX, y: viewportY } = sceneCoordsToViewportCoords(\n          {\n            sceneX: x,\n            sceneY: y,\n          },\n          this.state,\n        );\n        return [\n          viewportX - this.state.offsetLeft,\n          viewportY - this.state.offsetTop,\n        ];\n      },\n      onChange: withBatchedUpdates((nextOriginalText) => {\n        updateElement(nextOriginalText, false);\n        if (isNonDeletedElement(element)) {\n          updateBoundElements(element, this.scene.getNonDeletedElementsMap());\n        }\n      }),\n      onSubmit: withBatchedUpdates(({ viaKeyboard, nextOriginalText }) => {\n        const isDeleted = !nextOriginalText.trim();\n        updateElement(nextOriginalText, isDeleted);\n        // select the created text element only if submitting via keyboard\n        // (when submitting via click it should act as signal to deselect)\n        if (!isDeleted && viaKeyboard) {\n          const elementIdToSelect = element.containerId\n            ? element.containerId\n            : element.id;\n\n          // needed to ensure state is updated before \"finalize\" action\n          // that's invoked on keyboard-submit as well\n          // TODO either move this into finalize as well, or handle all state\n          // updates in one place, skipping finalize action\n          flushSync(() => {\n            this.setState((prevState) => ({\n              selectedElementIds: makeNextSelectedElementIds(\n                {\n                  ...prevState.selectedElementIds,\n                  [elementIdToSelect]: true,\n                },\n                prevState,\n              ),\n            }));\n          });\n        }\n        if (isDeleted) {\n          fixBindingsAfterDeletion(this.scene.getNonDeletedElements(), [\n            element,\n          ]);\n        }\n        if (!isDeleted || isExistingElement) {\n          this.store.shouldCaptureIncrement();\n        }\n\n        flushSync(() => {\n          this.setState({\n            newElement: null,\n            editingTextElement: null,\n          });\n        });\n\n        if (this.state.activeTool.locked) {\n          setCursorForShape(this.interactiveCanvas, this.state);\n        }\n\n        this.focusContainer();\n      }),\n      element,\n      excalidrawContainer: this.excalidrawContainerRef.current,\n      app: this,\n      // when text is selected, it's hard (at least on iOS) to re-position the\n      // caret (i.e. deselect). There's not much use for always selecting\n      // the text on edit anyway (and users can select-all from contextmenu\n      // if needed)\n      autoSelect: !this.device.isTouchScreen,\n    });\n    // deselect all other elements when inserting text\n    this.deselectElements();\n\n    // do an initial update to re-initialize element position since we were\n    // modifying element's x/y for sake of editor (case: syncing to remote)\n    updateElement(element.originalText, false);\n  }\n\n  private deselectElements() {\n    this.setState({\n      selectedElementIds: makeNextSelectedElementIds({}, this.state),\n      selectedGroupIds: {},\n      editingGroupId: null,\n      activeEmbeddable: null,\n    });\n  }\n\n  private getTextElementAtPosition(\n    x: number,\n    y: number,\n  ): NonDeleted<ExcalidrawTextElement> | null {\n    const element = this.getElementAtPosition(x, y, {\n      includeBoundTextElement: true,\n    });\n    if (element && isTextElement(element) && !element.isDeleted) {\n      return element;\n    }\n    return null;\n  }\n\n  private getElementAtPosition(\n    x: number,\n    y: number,\n    opts?: {\n      preferSelected?: boolean;\n      includeBoundTextElement?: boolean;\n      includeLockedElements?: boolean;\n    },\n  ): NonDeleted<ExcalidrawElement> | null {\n    const allHitElements = this.getElementsAtPosition(\n      x,\n      y,\n      opts?.includeBoundTextElement,\n      opts?.includeLockedElements,\n    );\n\n    if (allHitElements.length > 1) {\n      if (opts?.preferSelected) {\n        for (let index = allHitElements.length - 1; index > -1; index--) {\n          if (this.state.selectedElementIds[allHitElements[index].id]) {\n            return allHitElements[index];\n          }\n        }\n      }\n      const elementWithHighestZIndex =\n        allHitElements[allHitElements.length - 1];\n\n      // If we're hitting element with highest z-index only on its bounding box\n      // while also hitting other element figure, the latter should be considered.\n      return hitElementItself({\n        x,\n        y,\n        element: elementWithHighestZIndex,\n        shape: getElementShape(\n          elementWithHighestZIndex,\n          this.scene.getNonDeletedElementsMap(),\n        ),\n        // when overlapping, we would like to be more precise\n        // this also avoids the need to update past tests\n        threshold: this.getElementHitThreshold() / 2,\n        frameNameBound: isFrameLikeElement(elementWithHighestZIndex)\n          ? this.frameNameBoundsCache.get(elementWithHighestZIndex)\n          : null,\n      })\n        ? elementWithHighestZIndex\n        : allHitElements[allHitElements.length - 2];\n    }\n    if (allHitElements.length === 1) {\n      return allHitElements[0];\n    }\n\n    return null;\n  }\n\n  private getElementsAtPosition(\n    x: number,\n    y: number,\n    includeBoundTextElement: boolean = false,\n    includeLockedElements: boolean = false,\n  ): NonDeleted<ExcalidrawElement>[] {\n    const iframeLikes: Ordered<ExcalidrawIframeElement>[] = [];\n\n    const elementsMap = this.scene.getNonDeletedElementsMap();\n\n    const elements = (\n      includeBoundTextElement && includeLockedElements\n        ? this.scene.getNonDeletedElements()\n        : this.scene\n            .getNonDeletedElements()\n            .filter(\n              (element) =>\n                (includeLockedElements || !element.locked) &&\n                (includeBoundTextElement ||\n                  !(isTextElement(element) && element.containerId)),\n            )\n    )\n      .filter((el) => this.hitElement(x, y, el))\n      .filter((element) => {\n        // hitting a frame's element from outside the frame is not considered a hit\n        const containingFrame = getContainingFrame(element, elementsMap);\n        return containingFrame &&\n          this.state.frameRendering.enabled &&\n          this.state.frameRendering.clip\n          ? isCursorInFrame({ x, y }, containingFrame, elementsMap)\n          : true;\n      })\n      .filter((el) => {\n        // The parameter elements comes ordered from lower z-index to higher.\n        // We want to preserve that order on the returned array.\n        // Exception being embeddables which should be on top of everything else in\n        // terms of hit testing.\n        if (isIframeElement(el)) {\n          iframeLikes.push(el);\n          return false;\n        }\n        return true;\n      })\n      .concat(iframeLikes) as NonDeleted<ExcalidrawElement>[];\n\n    return elements;\n  }\n\n  private getElementHitThreshold() {\n    return DEFAULT_COLLISION_THRESHOLD / this.state.zoom.value;\n  }\n\n  private hitElement(\n    x: number,\n    y: number,\n    element: ExcalidrawElement,\n    considerBoundingBox = true,\n  ) {\n    // if the element is selected, then hit test is done against its bounding box\n    if (\n      considerBoundingBox &&\n      this.state.selectedElementIds[element.id] &&\n      shouldShowBoundingBox([element], this.state)\n    ) {\n      const selectionShape = getSelectionBoxShape(\n        element,\n        this.scene.getNonDeletedElementsMap(),\n        isImageElement(element) ? 0 : this.getElementHitThreshold(),\n      );\n\n      // if hitting the bounding box, return early\n      // but if not, we should check for other cases as well (e.g. frame name)\n      if (isPointInShape(pointFrom(x, y), selectionShape)) {\n        return true;\n      }\n    }\n\n    // take bound text element into consideration for hit collision as well\n    const hitBoundTextOfElement = hitElementBoundText(\n      x,\n      y,\n      getBoundTextShape(element, this.scene.getNonDeletedElementsMap()),\n    );\n    if (hitBoundTextOfElement) {\n      return true;\n    }\n\n    return hitElementItself({\n      x,\n      y,\n      element,\n      shape: getElementShape(element, this.scene.getNonDeletedElementsMap()),\n      threshold: this.getElementHitThreshold(),\n      frameNameBound: isFrameLikeElement(element)\n        ? this.frameNameBoundsCache.get(element)\n        : null,\n    });\n  }\n\n  private getTextBindableContainerAtPosition(x: number, y: number) {\n    const elements = this.scene.getNonDeletedElements();\n    const selectedElements = this.scene.getSelectedElements(this.state);\n    if (selectedElements.length === 1) {\n      return isTextBindableContainer(selectedElements[0], false)\n        ? selectedElements[0]\n        : null;\n    }\n    let hitElement = null;\n    // We need to do hit testing from front (end of the array) to back (beginning of the array)\n    for (let index = elements.length - 1; index >= 0; --index) {\n      if (elements[index].isDeleted) {\n        continue;\n      }\n      const [x1, y1, x2, y2] = getElementAbsoluteCoords(\n        elements[index],\n        this.scene.getNonDeletedElementsMap(),\n      );\n      if (\n        isArrowElement(elements[index]) &&\n        hitElementItself({\n          x,\n          y,\n          element: elements[index],\n          shape: getElementShape(\n            elements[index],\n            this.scene.getNonDeletedElementsMap(),\n          ),\n          threshold: this.getElementHitThreshold(),\n        })\n      ) {\n        hitElement = elements[index];\n        break;\n      } else if (x1 < x && x < x2 && y1 < y && y < y2) {\n        hitElement = elements[index];\n        break;\n      }\n    }\n\n    return isTextBindableContainer(hitElement, false) ? hitElement : null;\n  }\n\n  private startTextEditing = ({\n    sceneX,\n    sceneY,\n    insertAtParentCenter = true,\n    container,\n    autoEdit = true,\n  }: {\n    /** X position to insert text at */\n    sceneX: number;\n    /** Y position to insert text at */\n    sceneY: number;\n    /** whether to attempt to insert at element center if applicable */\n    insertAtParentCenter?: boolean;\n    container?: ExcalidrawTextContainer | null;\n    autoEdit?: boolean;\n  }) => {\n    let shouldBindToContainer = false;\n\n    let parentCenterPosition =\n      insertAtParentCenter &&\n      this.getTextWysiwygSnappedToCenterPosition(\n        sceneX,\n        sceneY,\n        this.state,\n        container,\n      );\n    if (container && parentCenterPosition) {\n      const boundTextElementToContainer = getBoundTextElement(\n        container,\n        this.scene.getNonDeletedElementsMap(),\n      );\n      if (!boundTextElementToContainer) {\n        shouldBindToContainer = true;\n      }\n    }\n    let existingTextElement: NonDeleted<ExcalidrawTextElement> | null = null;\n\n    const selectedElements = this.scene.getSelectedElements(this.state);\n\n    if (selectedElements.length === 1) {\n      if (isTextElement(selectedElements[0])) {\n        existingTextElement = selectedElements[0];\n      } else if (container) {\n        existingTextElement = getBoundTextElement(\n          selectedElements[0],\n          this.scene.getNonDeletedElementsMap(),\n        );\n      } else {\n        existingTextElement = this.getTextElementAtPosition(sceneX, sceneY);\n      }\n    } else {\n      existingTextElement = this.getTextElementAtPosition(sceneX, sceneY);\n    }\n\n    const fontFamily =\n      existingTextElement?.fontFamily || this.state.currentItemFontFamily;\n\n    const lineHeight =\n      existingTextElement?.lineHeight || getLineHeight(fontFamily);\n    const fontSize = this.state.currentItemFontSize;\n\n    if (\n      !existingTextElement &&\n      shouldBindToContainer &&\n      container &&\n      !isArrowElement(container)\n    ) {\n      const fontString = {\n        fontSize,\n        fontFamily,\n      };\n      const minWidth = getApproxMinLineWidth(\n        getFontString(fontString),\n        lineHeight,\n      );\n      const minHeight = getApproxMinLineHeight(fontSize, lineHeight);\n      const newHeight = Math.max(container.height, minHeight);\n      const newWidth = Math.max(container.width, minWidth);\n      mutateElement(container, { height: newHeight, width: newWidth });\n      sceneX = container.x + newWidth / 2;\n      sceneY = container.y + newHeight / 2;\n      if (parentCenterPosition) {\n        parentCenterPosition = this.getTextWysiwygSnappedToCenterPosition(\n          sceneX,\n          sceneY,\n          this.state,\n          container,\n        );\n      }\n    }\n\n    const topLayerFrame = this.getTopLayerFrameAtSceneCoords({\n      x: sceneX,\n      y: sceneY,\n    });\n\n    const element = existingTextElement\n      ? existingTextElement\n      : newTextElement({\n          x: parentCenterPosition\n            ? parentCenterPosition.elementCenterX\n            : sceneX,\n          y: parentCenterPosition\n            ? parentCenterPosition.elementCenterY\n            : sceneY,\n          strokeColor: this.state.currentItemStrokeColor,\n          backgroundColor: this.state.currentItemBackgroundColor,\n          fillStyle: this.state.currentItemFillStyle,\n          strokeWidth: this.state.currentItemStrokeWidth,\n          strokeStyle: this.state.currentItemStrokeStyle,\n          roughness: this.state.currentItemRoughness,\n          opacity: this.state.currentItemOpacity,\n          text: \"\",\n          fontSize,\n          fontFamily,\n          textAlign: parentCenterPosition\n            ? \"center\"\n            : this.state.currentItemTextAlign,\n          verticalAlign: parentCenterPosition\n            ? VERTICAL_ALIGN.MIDDLE\n            : DEFAULT_VERTICAL_ALIGN,\n          containerId: shouldBindToContainer ? container?.id : undefined,\n          groupIds: container?.groupIds ?? [],\n          lineHeight,\n          angle: container?.angle ?? (0 as Radians),\n          frameId: topLayerFrame ? topLayerFrame.id : null,\n        });\n\n    if (!existingTextElement && shouldBindToContainer && container) {\n      mutateElement(container, {\n        boundElements: (container.boundElements || []).concat({\n          type: \"text\",\n          id: element.id,\n        }),\n      });\n    }\n    this.setState({ editingTextElement: element });\n\n    if (!existingTextElement) {\n      if (container && shouldBindToContainer) {\n        const containerIndex = this.scene.getElementIndex(container.id);\n        this.scene.insertElementAtIndex(element, containerIndex + 1);\n      } else {\n        this.scene.insertElement(element);\n      }\n    }\n\n    if (autoEdit || existingTextElement || container) {\n      this.handleTextWysiwyg(element, {\n        isExistingElement: !!existingTextElement,\n      });\n    } else {\n      this.setState({\n        newElement: element,\n        multiElement: null,\n      });\n    }\n  };\n\n  private startImageCropping = (image: ExcalidrawImageElement) => {\n    this.store.shouldCaptureIncrement();\n    this.setState({\n      croppingElementId: image.id,\n    });\n  };\n\n  private finishImageCropping = () => {\n    if (this.state.croppingElementId) {\n      this.store.shouldCaptureIncrement();\n      this.setState({\n        croppingElementId: null,\n      });\n    }\n  };\n\n  private handleCanvasDoubleClick = (\n    event: React.MouseEvent<HTMLCanvasElement>,\n  ) => {\n    // case: double-clicking with arrow/line tool selected would both create\n    // text and enter multiElement mode\n    if (this.state.multiElement) {\n      return;\n    }\n    // we should only be able to double click when mode is selection\n    if (this.state.activeTool.type !== \"selection\") {\n      return;\n    }\n\n    const selectedElements = this.scene.getSelectedElements(this.state);\n\n    let { x: sceneX, y: sceneY } = viewportCoordsToSceneCoords(\n      event,\n      this.state,\n    );\n\n    if (selectedElements.length === 1 && isLinearElement(selectedElements[0])) {\n      if (\n        event[KEYS.CTRL_OR_CMD] &&\n        (!this.state.editingLinearElement ||\n          this.state.editingLinearElement.elementId !==\n            selectedElements[0].id) &&\n        !isElbowArrow(selectedElements[0])\n      ) {\n        this.store.shouldCaptureIncrement();\n        this.setState({\n          editingLinearElement: new LinearElementEditor(selectedElements[0]),\n        });\n        return;\n      } else if (\n        this.state.selectedLinearElement &&\n        isElbowArrow(selectedElements[0])\n      ) {\n        const hitCoords = LinearElementEditor.getSegmentMidpointHitCoords(\n          this.state.selectedLinearElement,\n          { x: sceneX, y: sceneY },\n          this.state,\n          this.scene.getNonDeletedElementsMap(),\n        );\n        const midPoint = hitCoords\n          ? LinearElementEditor.getSegmentMidPointIndex(\n              this.state.selectedLinearElement,\n              this.state,\n              hitCoords,\n              this.scene.getNonDeletedElementsMap(),\n            )\n          : -1;\n\n        if (midPoint && midPoint > -1) {\n          this.store.shouldCaptureIncrement();\n          LinearElementEditor.deleteFixedSegment(selectedElements[0], midPoint);\n\n          const nextCoords = LinearElementEditor.getSegmentMidpointHitCoords(\n            {\n              ...this.state.selectedLinearElement,\n              segmentMidPointHoveredCoords: null,\n            },\n            { x: sceneX, y: sceneY },\n            this.state,\n            this.scene.getNonDeletedElementsMap(),\n          );\n          const nextIndex = nextCoords\n            ? LinearElementEditor.getSegmentMidPointIndex(\n                this.state.selectedLinearElement,\n                this.state,\n                nextCoords,\n                this.scene.getNonDeletedElementsMap(),\n              )\n            : null;\n\n          this.setState({\n            selectedLinearElement: {\n              ...this.state.selectedLinearElement,\n              pointerDownState: {\n                ...this.state.selectedLinearElement.pointerDownState,\n                segmentMidpoint: {\n                  index: nextIndex,\n                  value: hitCoords,\n                  added: false,\n                },\n              },\n              segmentMidPointHoveredCoords: nextCoords,\n            },\n          });\n\n          return;\n        }\n      }\n    }\n\n    if (selectedElements.length === 1 && isImageElement(selectedElements[0])) {\n      this.startImageCropping(selectedElements[0]);\n      return;\n    }\n\n    resetCursor(this.interactiveCanvas);\n\n    const selectedGroupIds = getSelectedGroupIds(this.state);\n\n    if (selectedGroupIds.length > 0) {\n      const hitElement = this.getElementAtPosition(sceneX, sceneY);\n\n      const selectedGroupId =\n        hitElement &&\n        getSelectedGroupIdForElement(hitElement, this.state.selectedGroupIds);\n\n      if (selectedGroupId) {\n        this.store.shouldCaptureIncrement();\n        this.setState((prevState) => ({\n          ...prevState,\n          ...selectGroupsForSelectedElements(\n            {\n              editingGroupId: selectedGroupId,\n              selectedElementIds: { [hitElement!.id]: true },\n            },\n            this.scene.getNonDeletedElements(),\n            prevState,\n            this,\n          ),\n        }));\n        return;\n      }\n    }\n\n    resetCursor(this.interactiveCanvas);\n    if (!event[KEYS.CTRL_OR_CMD] && !this.state.viewModeEnabled) {\n      const hitElement = this.getElementAtPosition(sceneX, sceneY);\n\n      if (isIframeLikeElement(hitElement)) {\n        this.setState({\n          activeEmbeddable: { element: hitElement, state: \"active\" },\n        });\n        return;\n      }\n\n      const container = this.getTextBindableContainerAtPosition(sceneX, sceneY);\n\n      if (container) {\n        if (\n          hasBoundTextElement(container) ||\n          !isTransparent(container.backgroundColor) ||\n          hitElementItself({\n            x: sceneX,\n            y: sceneY,\n            element: container,\n            shape: getElementShape(\n              container,\n              this.scene.getNonDeletedElementsMap(),\n            ),\n            threshold: this.getElementHitThreshold(),\n          })\n        ) {\n          const midPoint = getContainerCenter(\n            container,\n            this.state,\n            this.scene.getNonDeletedElementsMap(),\n          );\n\n          sceneX = midPoint.x;\n          sceneY = midPoint.y;\n        }\n      }\n\n      this.startTextEditing({\n        sceneX,\n        sceneY,\n        insertAtParentCenter: !event.altKey,\n        container,\n      });\n    }\n  };\n\n  private getElementLinkAtPosition = (\n    scenePointer: Readonly<{ x: number; y: number }>,\n    hitElement: NonDeletedExcalidrawElement | null,\n  ): ExcalidrawElement | undefined => {\n    const elements = this.scene.getNonDeletedElements();\n    let hitElementIndex = -1;\n\n    for (let index = elements.length - 1; index >= 0; index--) {\n      const element = elements[index];\n      if (hitElement && element.id === hitElement.id) {\n        hitElementIndex = index;\n      }\n      if (\n        element.link &&\n        index >= hitElementIndex &&\n        isPointHittingLink(\n          element,\n          this.scene.getNonDeletedElementsMap(),\n          this.state,\n          pointFrom(scenePointer.x, scenePointer.y),\n          this.device.editor.isMobile,\n        )\n      ) {\n        return element;\n      }\n    }\n  };\n\n  private redirectToLink = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n    isTouchScreen: boolean,\n  ) => {\n    const draggedDistance = pointDistance(\n      pointFrom(\n        this.lastPointerDownEvent!.clientX,\n        this.lastPointerDownEvent!.clientY,\n      ),\n      pointFrom(\n        this.lastPointerUpEvent!.clientX,\n        this.lastPointerUpEvent!.clientY,\n      ),\n    );\n    if (!this.hitLinkElement || draggedDistance > DRAGGING_THRESHOLD) {\n      return;\n    }\n    const lastPointerDownCoords = viewportCoordsToSceneCoords(\n      this.lastPointerDownEvent!,\n      this.state,\n    );\n    const elementsMap = this.scene.getNonDeletedElementsMap();\n    const lastPointerDownHittingLinkIcon = isPointHittingLink(\n      this.hitLinkElement,\n      elementsMap,\n      this.state,\n      pointFrom(lastPointerDownCoords.x, lastPointerDownCoords.y),\n      this.device.editor.isMobile,\n    );\n    const lastPointerUpCoords = viewportCoordsToSceneCoords(\n      this.lastPointerUpEvent!,\n      this.state,\n    );\n    const lastPointerUpHittingLinkIcon = isPointHittingLink(\n      this.hitLinkElement,\n      elementsMap,\n      this.state,\n      pointFrom(lastPointerUpCoords.x, lastPointerUpCoords.y),\n      this.device.editor.isMobile,\n    );\n    if (lastPointerDownHittingLinkIcon && lastPointerUpHittingLinkIcon) {\n      hideHyperlinkToolip();\n      let url = this.hitLinkElement.link;\n      if (url) {\n        url = normalizeLink(url);\n        let customEvent;\n        if (this.props.onLinkOpen) {\n          customEvent = wrapEvent(EVENT.EXCALIDRAW_LINK, event.nativeEvent);\n          this.props.onLinkOpen(\n            {\n              ...this.hitLinkElement,\n              link: url,\n            },\n            customEvent,\n          );\n        }\n        if (!customEvent?.defaultPrevented) {\n          const target = isLocalLink(url) ? \"_self\" : \"_blank\";\n          const newWindow = window.open(undefined, target);\n          // https://mathiasbynens.github.io/rel-noopener/\n          if (newWindow) {\n            newWindow.opener = null;\n            newWindow.location = url;\n          }\n        }\n      }\n    }\n  };\n\n  private getTopLayerFrameAtSceneCoords = (sceneCoords: {\n    x: number;\n    y: number;\n  }) => {\n    const elementsMap = this.scene.getNonDeletedElementsMap();\n    const frames = this.scene\n      .getNonDeletedFramesLikes()\n      .filter((frame): frame is ExcalidrawFrameLikeElement =>\n        isCursorInFrame(sceneCoords, frame, elementsMap),\n      );\n\n    return frames.length ? frames[frames.length - 1] : null;\n  };\n\n  private handleCanvasPointerMove = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n  ) => {\n    this.savePointer(event.clientX, event.clientY, this.state.cursorButton);\n    this.lastPointerMoveEvent = event.nativeEvent;\n\n    if (gesture.pointers.has(event.pointerId)) {\n      gesture.pointers.set(event.pointerId, {\n        x: event.clientX,\n        y: event.clientY,\n      });\n    }\n\n    const initialScale = gesture.initialScale;\n    if (\n      gesture.pointers.size === 2 &&\n      gesture.lastCenter &&\n      initialScale &&\n      gesture.initialDistance\n    ) {\n      const center = getCenter(gesture.pointers);\n      const deltaX = center.x - gesture.lastCenter.x;\n      const deltaY = center.y - gesture.lastCenter.y;\n      gesture.lastCenter = center;\n\n      const distance = getDistance(Array.from(gesture.pointers.values()));\n      const scaleFactor =\n        this.state.activeTool.type === \"freedraw\" && this.state.penMode\n          ? 1\n          : distance / gesture.initialDistance;\n\n      const nextZoom = scaleFactor\n        ? getNormalizedZoom(initialScale * scaleFactor)\n        : this.state.zoom.value;\n\n      this.setState((state) => {\n        const zoomState = getStateForZoom(\n          {\n            viewportX: center.x,\n            viewportY: center.y,\n            nextZoom,\n          },\n          state,\n        );\n\n        this.translateCanvas({\n          zoom: zoomState.zoom,\n          // 2x multiplier is just a magic number that makes this work correctly\n          // on touchscreen devices (note: if we get report that panning is slower/faster\n          // than actual movement, consider swapping with devicePixelRatio)\n          scrollX: zoomState.scrollX + 2 * (deltaX / nextZoom),\n          scrollY: zoomState.scrollY + 2 * (deltaY / nextZoom),\n          shouldCacheIgnoreZoom: true,\n        });\n      });\n      this.resetShouldCacheIgnoreZoomDebounced();\n    } else {\n      gesture.lastCenter =\n        gesture.initialDistance =\n        gesture.initialScale =\n          null;\n    }\n\n    if (\n      isHoldingSpace ||\n      isPanning ||\n      isDraggingScrollBar ||\n      isHandToolActive(this.state)\n    ) {\n      return;\n    }\n\n    const isPointerOverScrollBars = isOverScrollBars(\n      currentScrollBars,\n      event.clientX - this.state.offsetLeft,\n      event.clientY - this.state.offsetTop,\n    );\n    const isOverScrollBar = isPointerOverScrollBars.isOverEither;\n    if (\n      !this.state.newElement &&\n      !this.state.selectionElement &&\n      !this.state.selectedElementsAreBeingDragged &&\n      !this.state.multiElement\n    ) {\n      if (isOverScrollBar) {\n        resetCursor(this.interactiveCanvas);\n      } else {\n        setCursorForShape(this.interactiveCanvas, this.state);\n      }\n    }\n\n    const scenePointer = viewportCoordsToSceneCoords(event, this.state);\n    const { x: scenePointerX, y: scenePointerY } = scenePointer;\n\n    if (\n      !this.state.newElement &&\n      isActiveToolNonLinearSnappable(this.state.activeTool.type)\n    ) {\n      const { originOffset, snapLines } = getSnapLinesAtPointer(\n        this.scene.getNonDeletedElements(),\n        this,\n        {\n          x: scenePointerX,\n          y: scenePointerY,\n        },\n        event,\n        this.scene.getNonDeletedElementsMap(),\n      );\n\n      this.setState((prevState) => {\n        const nextSnapLines = updateStable(prevState.snapLines, snapLines);\n        const nextOriginOffset = prevState.originSnapOffset\n          ? updateStable(prevState.originSnapOffset, originOffset)\n          : originOffset;\n\n        if (\n          prevState.snapLines === nextSnapLines &&\n          prevState.originSnapOffset === nextOriginOffset\n        ) {\n          return null;\n        }\n        return {\n          snapLines: nextSnapLines,\n          originSnapOffset: nextOriginOffset,\n        };\n      });\n    } else if (\n      !this.state.newElement &&\n      !this.state.selectedElementsAreBeingDragged &&\n      !this.state.selectionElement\n    ) {\n      this.setState((prevState) => {\n        if (prevState.snapLines.length) {\n          return {\n            snapLines: [],\n          };\n        }\n        return null;\n      });\n    }\n\n    if (\n      this.state.editingLinearElement &&\n      !this.state.editingLinearElement.isDragging\n    ) {\n      const editingLinearElement = LinearElementEditor.handlePointerMove(\n        event,\n        scenePointerX,\n        scenePointerY,\n        this,\n        this.scene.getNonDeletedElementsMap(),\n      );\n\n      if (\n        editingLinearElement &&\n        editingLinearElement !== this.state.editingLinearElement\n      ) {\n        // Since we are reading from previous state which is not possible with\n        // automatic batching in React 18 hence using flush sync to synchronously\n        // update the state. Check https://github.com/excalidraw/excalidraw/pull/5508 for more details.\n        flushSync(() => {\n          this.setState({\n            editingLinearElement,\n          });\n        });\n      }\n      if (editingLinearElement?.lastUncommittedPoint != null) {\n        this.maybeSuggestBindingAtCursor(\n          scenePointer,\n          editingLinearElement.elbowed,\n        );\n      } else {\n        // causes stack overflow if not sync\n        flushSync(() => {\n          this.setState({ suggestedBindings: [] });\n        });\n      }\n    }\n\n    if (isBindingElementType(this.state.activeTool.type)) {\n      // Hovering with a selected tool or creating new linear element via click\n      // and point\n      const { newElement } = this.state;\n      if (isBindingElement(newElement, false)) {\n        this.maybeSuggestBindingsForLinearElementAtCoords(\n          newElement,\n          [scenePointer],\n          this.state.startBoundElement,\n        );\n      } else {\n        this.maybeSuggestBindingAtCursor(scenePointer, false);\n      }\n    }\n\n    if (this.state.multiElement) {\n      const { multiElement } = this.state;\n      const { x: rx, y: ry } = multiElement;\n\n      const { points, lastCommittedPoint } = multiElement;\n      const lastPoint = points[points.length - 1];\n\n      setCursorForShape(this.interactiveCanvas, this.state);\n\n      if (lastPoint === lastCommittedPoint) {\n        // if we haven't yet created a temp point and we're beyond commit-zone\n        // threshold, add a point\n        if (\n          pointDistance(\n            pointFrom(scenePointerX - rx, scenePointerY - ry),\n            lastPoint,\n          ) >= LINE_CONFIRM_THRESHOLD\n        ) {\n          mutateElement(\n            multiElement,\n            {\n              points: [\n                ...points,\n                pointFrom<LocalPoint>(scenePointerX - rx, scenePointerY - ry),\n              ],\n            },\n            false,\n          );\n        } else {\n          setCursor(this.interactiveCanvas, CURSOR_TYPE.POINTER);\n          // in this branch, we're inside the commit zone, and no uncommitted\n          // point exists. Thus do nothing (don't add/remove points).\n        }\n      } else if (\n        points.length > 2 &&\n        lastCommittedPoint &&\n        pointDistance(\n          pointFrom(scenePointerX - rx, scenePointerY - ry),\n          lastCommittedPoint,\n        ) < LINE_CONFIRM_THRESHOLD\n      ) {\n        setCursor(this.interactiveCanvas, CURSOR_TYPE.POINTER);\n        mutateElement(\n          multiElement,\n          {\n            points: points.slice(0, -1),\n          },\n          false,\n        );\n      } else {\n        const [gridX, gridY] = getGridPoint(\n          scenePointerX,\n          scenePointerY,\n          event[KEYS.CTRL_OR_CMD] || isElbowArrow(multiElement)\n            ? null\n            : this.getEffectiveGridSize(),\n        );\n\n        const [lastCommittedX, lastCommittedY] =\n          multiElement?.lastCommittedPoint ?? [0, 0];\n\n        let dxFromLastCommitted = gridX - rx - lastCommittedX;\n        let dyFromLastCommitted = gridY - ry - lastCommittedY;\n\n        if (shouldRotateWithDiscreteAngle(event)) {\n          ({ width: dxFromLastCommitted, height: dyFromLastCommitted } =\n            getLockedLinearCursorAlignSize(\n              // actual coordinate of the last committed point\n              lastCommittedX + rx,\n              lastCommittedY + ry,\n              // cursor-grid coordinate\n              gridX,\n              gridY,\n            ));\n        }\n\n        if (isPathALoop(points, this.state.zoom.value)) {\n          setCursor(this.interactiveCanvas, CURSOR_TYPE.POINTER);\n        }\n        // update last uncommitted point\n        mutateElement(\n          multiElement,\n          {\n            points: [\n              ...points.slice(0, -1),\n              pointFrom<LocalPoint>(\n                lastCommittedX + dxFromLastCommitted,\n                lastCommittedY + dyFromLastCommitted,\n              ),\n            ],\n          },\n          false,\n          {\n            isDragging: true,\n          },\n        );\n\n        // in this path, we're mutating multiElement to reflect\n        // how it will be after adding pointer position as the next point\n        // trigger update here so that new element canvas renders again to reflect this\n        this.triggerRender(false);\n      }\n\n      return;\n    }\n\n    const hasDeselectedButton = Boolean(event.buttons);\n    if (\n      hasDeselectedButton ||\n      (this.state.activeTool.type !== \"selection\" &&\n        this.state.activeTool.type !== \"text\" &&\n        this.state.activeTool.type !== \"eraser\")\n    ) {\n      return;\n    }\n\n    const elements = this.scene.getNonDeletedElements();\n\n    const selectedElements = this.scene.getSelectedElements(this.state);\n    if (\n      selectedElements.length === 1 &&\n      !isOverScrollBar &&\n      !this.state.editingLinearElement\n    ) {\n      // for linear elements, we'd like to prioritize point dragging over edge resizing\n      // therefore, we update and check hovered point index first\n      if (this.state.selectedLinearElement) {\n        this.handleHoverSelectedLinearElement(\n          this.state.selectedLinearElement,\n          scenePointerX,\n          scenePointerY,\n        );\n      }\n\n      if (\n        (!this.state.selectedLinearElement ||\n          this.state.selectedLinearElement.hoverPointIndex === -1) &&\n        this.state.openDialog?.name !== \"elementLinkSelector\" &&\n        !(selectedElements.length === 1 && isElbowArrow(selectedElements[0]))\n      ) {\n        const elementWithTransformHandleType =\n          getElementWithTransformHandleType(\n            elements,\n            this.state,\n            scenePointerX,\n            scenePointerY,\n            this.state.zoom,\n            event.pointerType,\n            this.scene.getNonDeletedElementsMap(),\n            this.device,\n          );\n        if (\n          elementWithTransformHandleType &&\n          elementWithTransformHandleType.transformHandleType\n        ) {\n          setCursor(\n            this.interactiveCanvas,\n            getCursorForResizingElement(elementWithTransformHandleType),\n          );\n          return;\n        }\n      }\n    } else if (\n      selectedElements.length > 1 &&\n      !isOverScrollBar &&\n      this.state.openDialog?.name !== \"elementLinkSelector\"\n    ) {\n      const transformHandleType = getTransformHandleTypeFromCoords(\n        getCommonBounds(selectedElements),\n        scenePointerX,\n        scenePointerY,\n        this.state.zoom,\n        event.pointerType,\n        this.device,\n      );\n      if (transformHandleType) {\n        setCursor(\n          this.interactiveCanvas,\n          getCursorForResizingElement({\n            transformHandleType,\n          }),\n        );\n        return;\n      }\n    }\n\n    const hitElement = this.getElementAtPosition(\n      scenePointer.x,\n      scenePointer.y,\n    );\n\n    this.hitLinkElement = this.getElementLinkAtPosition(\n      scenePointer,\n      hitElement,\n    );\n    if (isEraserActive(this.state)) {\n      return;\n    }\n    if (\n      this.hitLinkElement &&\n      !this.state.selectedElementIds[this.hitLinkElement.id]\n    ) {\n      setCursor(this.interactiveCanvas, CURSOR_TYPE.POINTER);\n      showHyperlinkTooltip(\n        this.hitLinkElement,\n        this.state,\n        this.scene.getNonDeletedElementsMap(),\n      );\n    } else {\n      hideHyperlinkToolip();\n      if (\n        hitElement &&\n        (hitElement.link || isEmbeddableElement(hitElement)) &&\n        this.state.selectedElementIds[hitElement.id] &&\n        !this.state.contextMenu &&\n        !this.state.showHyperlinkPopup\n      ) {\n        this.setState({ showHyperlinkPopup: \"info\" });\n      } else if (this.state.activeTool.type === \"text\") {\n        setCursor(\n          this.interactiveCanvas,\n          isTextElement(hitElement) ? CURSOR_TYPE.TEXT : CURSOR_TYPE.CROSSHAIR,\n        );\n      } else if (this.state.viewModeEnabled) {\n        setCursor(this.interactiveCanvas, CURSOR_TYPE.GRAB);\n      } else if (this.state.openDialog?.name === \"elementLinkSelector\") {\n        setCursor(this.interactiveCanvas, CURSOR_TYPE.AUTO);\n      } else if (isOverScrollBar) {\n        setCursor(this.interactiveCanvas, CURSOR_TYPE.AUTO);\n      } else if (this.state.selectedLinearElement) {\n        this.handleHoverSelectedLinearElement(\n          this.state.selectedLinearElement,\n          scenePointerX,\n          scenePointerY,\n        );\n      } else if (\n        // if using cmd/ctrl, we're not dragging\n        !event[KEYS.CTRL_OR_CMD]\n      ) {\n        if (\n          (hitElement ||\n            this.isHittingCommonBoundingBoxOfSelectedElements(\n              scenePointer,\n              selectedElements,\n            )) &&\n          !hitElement?.locked\n        ) {\n          if (\n            hitElement &&\n            isIframeLikeElement(hitElement) &&\n            this.isIframeLikeElementCenter(\n              hitElement,\n              event,\n              scenePointerX,\n              scenePointerY,\n            )\n          ) {\n            setCursor(this.interactiveCanvas, CURSOR_TYPE.POINTER);\n            this.setState({\n              activeEmbeddable: { element: hitElement, state: \"hover\" },\n            });\n          } else if (!hitElement || !isElbowArrow(hitElement)) {\n            setCursor(this.interactiveCanvas, CURSOR_TYPE.MOVE);\n            if (this.state.activeEmbeddable?.state === \"hover\") {\n              this.setState({ activeEmbeddable: null });\n            }\n          }\n        }\n      } else {\n        setCursor(this.interactiveCanvas, CURSOR_TYPE.AUTO);\n      }\n    }\n\n    if (this.state.openDialog?.name === \"elementLinkSelector\" && hitElement) {\n      this.setState((prevState) => {\n        return {\n          hoveredElementIds: updateStable(\n            prevState.hoveredElementIds,\n            selectGroupsForSelectedElements(\n              {\n                editingGroupId: prevState.editingGroupId,\n                selectedElementIds: { [hitElement.id]: true },\n              },\n              this.scene.getNonDeletedElements(),\n              prevState,\n              this,\n            ).selectedElementIds,\n          ),\n        };\n      });\n    } else if (\n      this.state.openDialog?.name === \"elementLinkSelector\" &&\n      !hitElement\n    ) {\n      this.setState((prevState) => ({\n        hoveredElementIds: updateStable(prevState.hoveredElementIds, {}),\n      }));\n    }\n  };\n\n  private handleEraser = (\n    event: PointerEvent,\n    pointerDownState: PointerDownState,\n    scenePointer: { x: number; y: number },\n  ) => {\n    this.eraserTrail.addPointToPath(scenePointer.x, scenePointer.y);\n\n    let didChange = false;\n\n    const processedGroups = new Set<ExcalidrawElement[\"id\"]>();\n    const nonDeletedElements = this.scene.getNonDeletedElements();\n\n    const processElements = (elements: ExcalidrawElement[]) => {\n      for (const element of elements) {\n        if (element.locked) {\n          return;\n        }\n\n        if (event.altKey) {\n          if (this.elementsPendingErasure.delete(element.id)) {\n            didChange = true;\n          }\n        } else if (!this.elementsPendingErasure.has(element.id)) {\n          didChange = true;\n          this.elementsPendingErasure.add(element.id);\n        }\n\n        // (un)erase groups atomically\n        if (didChange && element.groupIds?.length) {\n          const shallowestGroupId = element.groupIds.at(-1)!;\n          if (!processedGroups.has(shallowestGroupId)) {\n            processedGroups.add(shallowestGroupId);\n            const elems = getElementsInGroup(\n              nonDeletedElements,\n              shallowestGroupId,\n            );\n            for (const elem of elems) {\n              if (event.altKey) {\n                this.elementsPendingErasure.delete(elem.id);\n              } else {\n                this.elementsPendingErasure.add(elem.id);\n              }\n            }\n          }\n        }\n      }\n    };\n\n    const distance = pointDistance(\n      pointFrom(pointerDownState.lastCoords.x, pointerDownState.lastCoords.y),\n      pointFrom(scenePointer.x, scenePointer.y),\n    );\n    const threshold = this.getElementHitThreshold();\n    const p = { ...pointerDownState.lastCoords };\n    let samplingInterval = 0;\n    while (samplingInterval <= distance) {\n      const hitElements = this.getElementsAtPosition(p.x, p.y);\n      processElements(hitElements);\n\n      // Exit since we reached current point\n      if (samplingInterval === distance) {\n        break;\n      }\n\n      // Calculate next point in the line at a distance of sampling interval\n      samplingInterval = Math.min(samplingInterval + threshold, distance);\n\n      const distanceRatio = samplingInterval / distance;\n      const nextX = (1 - distanceRatio) * p.x + distanceRatio * scenePointer.x;\n      const nextY = (1 - distanceRatio) * p.y + distanceRatio * scenePointer.y;\n      p.x = nextX;\n      p.y = nextY;\n    }\n\n    pointerDownState.lastCoords.x = scenePointer.x;\n    pointerDownState.lastCoords.y = scenePointer.y;\n\n    if (didChange) {\n      for (const element of this.scene.getNonDeletedElements()) {\n        if (\n          isBoundToContainer(element) &&\n          (this.elementsPendingErasure.has(element.id) ||\n            this.elementsPendingErasure.has(element.containerId))\n        ) {\n          if (event.altKey) {\n            this.elementsPendingErasure.delete(element.id);\n            this.elementsPendingErasure.delete(element.containerId);\n          } else {\n            this.elementsPendingErasure.add(element.id);\n            this.elementsPendingErasure.add(element.containerId);\n          }\n        }\n      }\n\n      this.elementsPendingErasure = new Set(this.elementsPendingErasure);\n      this.triggerRender();\n    }\n  };\n\n  // set touch moving for mobile context menu\n  private handleTouchMove = (event: React.TouchEvent<HTMLCanvasElement>) => {\n    invalidateContextMenu = true;\n  };\n\n  handleHoverSelectedLinearElement(\n    linearElementEditor: LinearElementEditor,\n    scenePointerX: number,\n    scenePointerY: number,\n  ) {\n    const elementsMap = this.scene.getNonDeletedElementsMap();\n\n    const element = LinearElementEditor.getElement(\n      linearElementEditor.elementId,\n      elementsMap,\n    );\n\n    if (!element) {\n      return;\n    }\n    if (this.state.selectedLinearElement) {\n      let hoverPointIndex = -1;\n      let segmentMidPointHoveredCoords = null;\n      if (\n        hitElementItself({\n          x: scenePointerX,\n          y: scenePointerY,\n          element,\n          shape: getElementShape(\n            element,\n            this.scene.getNonDeletedElementsMap(),\n          ),\n        })\n      ) {\n        hoverPointIndex = LinearElementEditor.getPointIndexUnderCursor(\n          element,\n          elementsMap,\n          this.state.zoom,\n          scenePointerX,\n          scenePointerY,\n        );\n        segmentMidPointHoveredCoords =\n          LinearElementEditor.getSegmentMidpointHitCoords(\n            linearElementEditor,\n            { x: scenePointerX, y: scenePointerY },\n            this.state,\n            this.scene.getNonDeletedElementsMap(),\n          );\n        const isHoveringAPointHandle = isElbowArrow(element)\n          ? hoverPointIndex === 0 ||\n            hoverPointIndex === element.points.length - 1\n          : hoverPointIndex >= 0;\n        if (isHoveringAPointHandle || segmentMidPointHoveredCoords) {\n          setCursor(this.interactiveCanvas, CURSOR_TYPE.POINTER);\n        } else if (this.hitElement(scenePointerX, scenePointerY, element)) {\n          setCursor(this.interactiveCanvas, CURSOR_TYPE.MOVE);\n        }\n      } else if (this.hitElement(scenePointerX, scenePointerY, element)) {\n        if (\n          // Ebow arrows can only be moved when unconnected\n          !isElbowArrow(element) ||\n          !(element.startBinding || element.endBinding)\n        ) {\n          setCursor(this.interactiveCanvas, CURSOR_TYPE.MOVE);\n        }\n      }\n\n      if (\n        this.state.selectedLinearElement.hoverPointIndex !== hoverPointIndex\n      ) {\n        this.setState({\n          selectedLinearElement: {\n            ...this.state.selectedLinearElement,\n            hoverPointIndex,\n          },\n        });\n      }\n\n      if (\n        !LinearElementEditor.arePointsEqual(\n          this.state.selectedLinearElement.segmentMidPointHoveredCoords,\n          segmentMidPointHoveredCoords,\n        )\n      ) {\n        this.setState({\n          selectedLinearElement: {\n            ...this.state.selectedLinearElement,\n            segmentMidPointHoveredCoords,\n          },\n        });\n      }\n    } else {\n      setCursor(this.interactiveCanvas, CURSOR_TYPE.AUTO);\n    }\n  }\n\n  private handleCanvasPointerDown = (\n    event: React.PointerEvent<HTMLElement>,\n  ) => {\n    const target = event.target as HTMLElement;\n    // capture subsequent pointer events to the canvas\n    // this makes other elements non-interactive until pointer up\n    if (target.setPointerCapture) {\n      target.setPointerCapture(event.pointerId);\n    }\n\n    this.maybeCleanupAfterMissingPointerUp(event.nativeEvent);\n    this.maybeUnfollowRemoteUser();\n\n    if (this.state.searchMatches) {\n      this.setState((state) => ({\n        searchMatches: state.searchMatches.map((searchMatch) => ({\n          ...searchMatch,\n          focus: false,\n        })),\n      }));\n      editorJotaiStore.set(searchItemInFocusAtom, null);\n    }\n\n    // since contextMenu options are potentially evaluated on each render,\n    // and an contextMenu action may depend on selection state, we must\n    // close the contextMenu before we update the selection on pointerDown\n    // (e.g. resetting selection)\n    if (this.state.contextMenu) {\n      this.setState({ contextMenu: null });\n    }\n\n    if (this.state.snapLines) {\n      this.setAppState({ snapLines: [] });\n    }\n\n    this.updateGestureOnPointerDown(event);\n\n    // if dragging element is freedraw and another pointerdown event occurs\n    // a second finger is on the screen\n    // discard the freedraw element if it is very short because it is likely\n    // just a spike, otherwise finalize the freedraw element when the second\n    // finger is lifted\n    if (\n      event.pointerType === \"touch\" &&\n      this.state.newElement &&\n      this.state.newElement.type === \"freedraw\"\n    ) {\n      const element = this.state.newElement as ExcalidrawFreeDrawElement;\n      this.updateScene({\n        ...(element.points.length < 10\n          ? {\n              elements: this.scene\n                .getElementsIncludingDeleted()\n                .filter((el) => el.id !== element.id),\n            }\n          : {}),\n        appState: {\n          newElement: null,\n          editingTextElement: null,\n          startBoundElement: null,\n          suggestedBindings: [],\n          selectedElementIds: makeNextSelectedElementIds(\n            Object.keys(this.state.selectedElementIds)\n              .filter((key) => key !== element.id)\n              .reduce((obj: { [id: string]: true }, key) => {\n                obj[key] = this.state.selectedElementIds[key];\n                return obj;\n              }, {}),\n            this.state,\n          ),\n        },\n        captureUpdate:\n          this.state.openDialog?.name === \"elementLinkSelector\"\n            ? CaptureUpdateAction.EVENTUALLY\n            : CaptureUpdateAction.NEVER,\n      });\n      return;\n    }\n\n    // remove any active selection when we start to interact with canvas\n    // (mainly, we care about removing selection outside the component which\n    //  would prevent our copy handling otherwise)\n    const selection = document.getSelection();\n    if (selection?.anchorNode) {\n      selection.removeAllRanges();\n    }\n    this.maybeOpenContextMenuAfterPointerDownOnTouchDevices(event);\n\n    //fires only once, if pen is detected, penMode is enabled\n    //the user can disable this by toggling the penMode button\n    if (!this.state.penDetected && event.pointerType === \"pen\") {\n      this.setState((prevState) => {\n        return {\n          penMode: true,\n          penDetected: true,\n        };\n      });\n    }\n\n    if (\n      !this.device.isTouchScreen &&\n      [\"pen\", \"touch\"].includes(event.pointerType)\n    ) {\n      this.device = updateObject(this.device, { isTouchScreen: true });\n    }\n\n    if (isPanning) {\n      return;\n    }\n\n    this.lastPointerDownEvent = event;\n\n    // we must exit before we set `cursorButton` state and `savePointer`\n    // else it will send pointer state & laser pointer events in collab when\n    // panning\n    if (this.handleCanvasPanUsingWheelOrSpaceDrag(event)) {\n      return;\n    }\n\n    this.setState({\n      lastPointerDownWith: event.pointerType,\n      cursorButton: \"down\",\n    });\n    this.savePointer(event.clientX, event.clientY, \"down\");\n\n    if (\n      event.button === POINTER_BUTTON.ERASER &&\n      this.state.activeTool.type !== TOOL_TYPE.eraser\n    ) {\n      this.setState(\n        {\n          activeTool: updateActiveTool(this.state, {\n            type: TOOL_TYPE.eraser,\n            lastActiveToolBeforeEraser: this.state.activeTool,\n          }),\n        },\n        () => {\n          this.handleCanvasPointerDown(event);\n          const onPointerUp = () => {\n            unsubPointerUp();\n            unsubCleanup?.();\n            if (isEraserActive(this.state)) {\n              this.setState({\n                activeTool: updateActiveTool(this.state, {\n                  ...(this.state.activeTool.lastActiveTool || {\n                    type: TOOL_TYPE.selection,\n                  }),\n                  lastActiveToolBeforeEraser: null,\n                }),\n              });\n            }\n          };\n\n          const unsubPointerUp = addEventListener(\n            window,\n            EVENT.POINTER_UP,\n            onPointerUp,\n            {\n              once: true,\n            },\n          );\n          let unsubCleanup: UnsubscribeCallback | undefined;\n          // subscribe inside rAF lest it'd be triggered on the same pointerdown\n          // if we start erasing while coming from blurred document since\n          // we cleanup pointer events on focus\n          requestAnimationFrame(() => {\n            unsubCleanup =\n              this.missingPointerEventCleanupEmitter.once(onPointerUp);\n          });\n        },\n      );\n      return;\n    }\n\n    // only handle left mouse button or touch\n    if (\n      event.button !== POINTER_BUTTON.MAIN &&\n      event.button !== POINTER_BUTTON.TOUCH &&\n      event.button !== POINTER_BUTTON.ERASER\n    ) {\n      return;\n    }\n\n    // don't select while panning\n    if (gesture.pointers.size > 1) {\n      return;\n    }\n\n    // State for the duration of a pointer interaction, which starts with a\n    // pointerDown event, ends with a pointerUp event (or another pointerDown)\n    const pointerDownState = this.initialPointerDownState(event);\n\n    this.setState({\n      selectedElementsAreBeingDragged: false,\n    });\n\n    if (this.handleDraggingScrollBar(event, pointerDownState)) {\n      return;\n    }\n\n    this.clearSelectionIfNotUsingSelection();\n    this.updateBindingEnabledOnPointerMove(event);\n\n    if (this.handleSelectionOnPointerDown(event, pointerDownState)) {\n      return;\n    }\n\n    const allowOnPointerDown =\n      !this.state.penMode ||\n      event.pointerType !== \"touch\" ||\n      this.state.activeTool.type === \"selection\" ||\n      this.state.activeTool.type === \"text\" ||\n      this.state.activeTool.type === \"image\";\n\n    if (!allowOnPointerDown) {\n      return;\n    }\n\n    if (this.state.activeTool.type === \"text\") {\n      this.handleTextOnPointerDown(event, pointerDownState);\n    } else if (\n      this.state.activeTool.type === \"arrow\" ||\n      this.state.activeTool.type === \"line\"\n    ) {\n      this.handleLinearElementOnPointerDown(\n        event,\n        this.state.activeTool.type,\n        pointerDownState,\n      );\n    } else if (this.state.activeTool.type === \"image\") {\n      // reset image preview on pointerdown\n      setCursor(this.interactiveCanvas, CURSOR_TYPE.CROSSHAIR);\n\n      // retrieve the latest element as the state may be stale\n      const pendingImageElement =\n        this.state.pendingImageElementId &&\n        this.scene.getElement(this.state.pendingImageElementId);\n\n      if (!pendingImageElement) {\n        return;\n      }\n\n      this.setState({\n        newElement: pendingImageElement as ExcalidrawNonSelectionElement,\n        pendingImageElementId: null,\n        multiElement: null,\n      });\n\n      const { x, y } = viewportCoordsToSceneCoords(event, this.state);\n\n      const frame = this.getTopLayerFrameAtSceneCoords({ x, y });\n\n      mutateElement(pendingImageElement, {\n        x,\n        y,\n        frameId: frame ? frame.id : null,\n      });\n    } else if (this.state.activeTool.type === \"freedraw\") {\n      this.handleFreeDrawElementOnPointerDown(\n        event,\n        this.state.activeTool.type,\n        pointerDownState,\n      );\n    } else if (this.state.activeTool.type === \"custom\") {\n      setCursorForShape(this.interactiveCanvas, this.state);\n    } else if (\n      this.state.activeTool.type === TOOL_TYPE.frame ||\n      this.state.activeTool.type === TOOL_TYPE.magicframe\n    ) {\n      this.createFrameElementOnPointerDown(\n        pointerDownState,\n        this.state.activeTool.type,\n      );\n    } else if (this.state.activeTool.type === \"laser\") {\n      this.laserTrails.startPath(\n        pointerDownState.lastCoords.x,\n        pointerDownState.lastCoords.y,\n      );\n    } else if (\n      this.state.activeTool.type !== \"eraser\" &&\n      this.state.activeTool.type !== \"hand\"\n    ) {\n      this.createGenericElementOnPointerDown(\n        this.state.activeTool.type,\n        pointerDownState,\n      );\n    }\n\n    this.props?.onPointerDown?.(this.state.activeTool, pointerDownState);\n    this.onPointerDownEmitter.trigger(\n      this.state.activeTool,\n      pointerDownState,\n      event,\n    );\n\n    if (this.state.activeTool.type === \"eraser\") {\n      this.eraserTrail.startPath(\n        pointerDownState.lastCoords.x,\n        pointerDownState.lastCoords.y,\n      );\n    }\n\n    const onPointerMove =\n      this.onPointerMoveFromPointerDownHandler(pointerDownState);\n\n    const onPointerUp =\n      this.onPointerUpFromPointerDownHandler(pointerDownState);\n\n    const onKeyDown = this.onKeyDownFromPointerDownHandler(pointerDownState);\n    const onKeyUp = this.onKeyUpFromPointerDownHandler(pointerDownState);\n\n    this.missingPointerEventCleanupEmitter.once((_event) =>\n      onPointerUp(_event || event.nativeEvent),\n    );\n\n    if (!this.state.viewModeEnabled || this.state.activeTool.type === \"laser\") {\n      window.addEventListener(EVENT.POINTER_MOVE, onPointerMove);\n      window.addEventListener(EVENT.POINTER_UP, onPointerUp);\n      window.addEventListener(EVENT.KEYDOWN, onKeyDown);\n      window.addEventListener(EVENT.KEYUP, onKeyUp);\n      pointerDownState.eventListeners.onMove = onPointerMove;\n      pointerDownState.eventListeners.onUp = onPointerUp;\n      pointerDownState.eventListeners.onKeyUp = onKeyUp;\n      pointerDownState.eventListeners.onKeyDown = onKeyDown;\n    }\n  };\n\n  private handleCanvasPointerUp = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n  ) => {\n    this.removePointer(event);\n    this.lastPointerUpEvent = event;\n\n    const scenePointer = viewportCoordsToSceneCoords(\n      { clientX: event.clientX, clientY: event.clientY },\n      this.state,\n    );\n    const clicklength =\n      event.timeStamp - (this.lastPointerDownEvent?.timeStamp ?? 0);\n\n    if (this.device.editor.isMobile && clicklength < 300) {\n      const hitElement = this.getElementAtPosition(\n        scenePointer.x,\n        scenePointer.y,\n      );\n      if (\n        isIframeLikeElement(hitElement) &&\n        this.isIframeLikeElementCenter(\n          hitElement,\n          event,\n          scenePointer.x,\n          scenePointer.y,\n        )\n      ) {\n        this.handleEmbeddableCenterClick(hitElement);\n        return;\n      }\n    }\n\n    if (this.device.isTouchScreen) {\n      const hitElement = this.getElementAtPosition(\n        scenePointer.x,\n        scenePointer.y,\n      );\n      this.hitLinkElement = this.getElementLinkAtPosition(\n        scenePointer,\n        hitElement,\n      );\n    }\n\n    if (\n      this.hitLinkElement &&\n      !this.state.selectedElementIds[this.hitLinkElement.id]\n    ) {\n      if (\n        clicklength < 300 &&\n        isIframeLikeElement(this.hitLinkElement) &&\n        !isPointHittingLinkIcon(\n          this.hitLinkElement,\n          this.scene.getNonDeletedElementsMap(),\n          this.state,\n          pointFrom(scenePointer.x, scenePointer.y),\n        )\n      ) {\n        this.handleEmbeddableCenterClick(this.hitLinkElement);\n      } else {\n        this.redirectToLink(event, this.device.isTouchScreen);\n      }\n    } else if (this.state.viewModeEnabled) {\n      this.setState({\n        activeEmbeddable: null,\n        selectedElementIds: {},\n      });\n    }\n  };\n\n  private maybeOpenContextMenuAfterPointerDownOnTouchDevices = (\n    event: React.PointerEvent<HTMLElement>,\n  ): void => {\n    // deal with opening context menu on touch devices\n    if (event.pointerType === \"touch\") {\n      invalidateContextMenu = false;\n\n      if (touchTimeout) {\n        // If there's already a touchTimeout, this means that there's another\n        // touch down and we are doing another touch, so we shouldn't open the\n        // context menu.\n        invalidateContextMenu = true;\n      } else {\n        // open the context menu with the first touch's clientX and clientY\n        // if the touch is not moving\n        touchTimeout = window.setTimeout(() => {\n          touchTimeout = 0;\n          if (!invalidateContextMenu) {\n            this.handleCanvasContextMenu(event);\n          }\n        }, TOUCH_CTX_MENU_TIMEOUT);\n      }\n    }\n  };\n\n  private resetContextMenuTimer = () => {\n    clearTimeout(touchTimeout);\n    touchTimeout = 0;\n    invalidateContextMenu = false;\n  };\n\n  /**\n   * pointerup may not fire in certian cases (user tabs away...), so in order\n   * to properly cleanup pointerdown state, we need to fire any hanging\n   * pointerup handlers manually\n   */\n  private maybeCleanupAfterMissingPointerUp = (event: PointerEvent | null) => {\n    lastPointerUp?.();\n    this.missingPointerEventCleanupEmitter.trigger(event).clear();\n  };\n\n  // Returns whether the event is a panning\n  public handleCanvasPanUsingWheelOrSpaceDrag = (\n    event: React.PointerEvent<HTMLElement> | MouseEvent,\n  ): boolean => {\n    if (\n      !(\n        gesture.pointers.size <= 1 &&\n        (event.button === POINTER_BUTTON.WHEEL ||\n          (event.button === POINTER_BUTTON.MAIN && isHoldingSpace) ||\n          isHandToolActive(this.state) ||\n          this.state.viewModeEnabled)\n      )\n    ) {\n      return false;\n    }\n    isPanning = true;\n\n    // due to event.preventDefault below, container wouldn't get focus\n    // automatically\n    this.focusContainer();\n\n    // preventing defualt while text editing messes with cursor/focus\n    if (!this.state.editingTextElement) {\n      // necessary to prevent browser from scrolling the page if excalidraw\n      // not full-page #4489\n      //\n      // as such, the above is broken when panning canvas while in wysiwyg\n      event.preventDefault();\n    }\n\n    let nextPastePrevented = false;\n    const isLinux =\n      typeof window === undefined\n        ? false\n        : /Linux/.test(window.navigator.platform);\n\n    setCursor(this.interactiveCanvas, CURSOR_TYPE.GRABBING);\n    let { clientX: lastX, clientY: lastY } = event;\n    const onPointerMove = withBatchedUpdatesThrottled((event: PointerEvent) => {\n      const deltaX = lastX - event.clientX;\n      const deltaY = lastY - event.clientY;\n      lastX = event.clientX;\n      lastY = event.clientY;\n\n      /*\n       * Prevent paste event if we move while middle clicking on Linux.\n       * See issue #1383.\n       */\n      if (\n        isLinux &&\n        !nextPastePrevented &&\n        (Math.abs(deltaX) > 1 || Math.abs(deltaY) > 1)\n      ) {\n        nextPastePrevented = true;\n\n        /* Prevent the next paste event */\n        const preventNextPaste = (event: ClipboardEvent) => {\n          document.body.removeEventListener(EVENT.PASTE, preventNextPaste);\n          event.stopPropagation();\n        };\n\n        /*\n         * Reenable next paste in case of disabled middle click paste for\n         * any reason:\n         * - right click paste\n         * - empty clipboard\n         */\n        const enableNextPaste = () => {\n          setTimeout(() => {\n            document.body.removeEventListener(EVENT.PASTE, preventNextPaste);\n            window.removeEventListener(EVENT.POINTER_UP, enableNextPaste);\n          }, 100);\n        };\n\n        document.body.addEventListener(EVENT.PASTE, preventNextPaste);\n        window.addEventListener(EVENT.POINTER_UP, enableNextPaste);\n      }\n\n      this.translateCanvas({\n        scrollX: this.state.scrollX - deltaX / this.state.zoom.value,\n        scrollY: this.state.scrollY - deltaY / this.state.zoom.value,\n      });\n    });\n    const teardown = withBatchedUpdates(\n      (lastPointerUp = () => {\n        lastPointerUp = null;\n        isPanning = false;\n        if (!isHoldingSpace) {\n          if (this.state.viewModeEnabled) {\n            setCursor(this.interactiveCanvas, CURSOR_TYPE.GRAB);\n          } else {\n            setCursorForShape(this.interactiveCanvas, this.state);\n          }\n        }\n        this.setState({\n          cursorButton: \"up\",\n        });\n        this.savePointer(event.clientX, event.clientY, \"up\");\n        window.removeEventListener(EVENT.POINTER_MOVE, onPointerMove);\n        window.removeEventListener(EVENT.POINTER_UP, teardown);\n        window.removeEventListener(EVENT.BLUR, teardown);\n        onPointerMove.flush();\n      }),\n    );\n    window.addEventListener(EVENT.BLUR, teardown);\n    window.addEventListener(EVENT.POINTER_MOVE, onPointerMove, {\n      passive: true,\n    });\n    window.addEventListener(EVENT.POINTER_UP, teardown);\n    return true;\n  };\n\n  private updateGestureOnPointerDown(\n    event: React.PointerEvent<HTMLElement>,\n  ): void {\n    gesture.pointers.set(event.pointerId, {\n      x: event.clientX,\n      y: event.clientY,\n    });\n\n    if (gesture.pointers.size === 2) {\n      gesture.lastCenter = getCenter(gesture.pointers);\n      gesture.initialScale = this.state.zoom.value;\n      gesture.initialDistance = getDistance(\n        Array.from(gesture.pointers.values()),\n      );\n    }\n  }\n\n  private initialPointerDownState(\n    event: React.PointerEvent<HTMLElement>,\n  ): PointerDownState {\n    const origin = viewportCoordsToSceneCoords(event, this.state);\n    const selectedElements = this.scene.getSelectedElements(this.state);\n    const [minX, minY, maxX, maxY] = getCommonBounds(selectedElements);\n    const isElbowArrowOnly = selectedElements.findIndex(isElbowArrow) === 0;\n\n    return {\n      origin,\n      withCmdOrCtrl: event[KEYS.CTRL_OR_CMD],\n      originInGrid: tupleToCoors(\n        getGridPoint(\n          origin.x,\n          origin.y,\n          event[KEYS.CTRL_OR_CMD] || isElbowArrowOnly\n            ? null\n            : this.getEffectiveGridSize(),\n        ),\n      ),\n      scrollbars: isOverScrollBars(\n        currentScrollBars,\n        event.clientX - this.state.offsetLeft,\n        event.clientY - this.state.offsetTop,\n      ),\n      // we need to duplicate because we'll be updating this state\n      lastCoords: { ...origin },\n      originalElements: this.scene\n        .getNonDeletedElements()\n        .reduce((acc, element) => {\n          acc.set(element.id, deepCopyElement(element));\n          return acc;\n        }, new Map() as PointerDownState[\"originalElements\"]),\n      resize: {\n        handleType: false,\n        isResizing: false,\n        offset: { x: 0, y: 0 },\n        arrowDirection: \"origin\",\n        center: { x: (maxX + minX) / 2, y: (maxY + minY) / 2 },\n      },\n      hit: {\n        element: null,\n        allHitElements: [],\n        wasAddedToSelection: false,\n        hasBeenDuplicated: false,\n        hasHitCommonBoundingBoxOfSelectedElements:\n          this.isHittingCommonBoundingBoxOfSelectedElements(\n            origin,\n            selectedElements,\n          ),\n      },\n      drag: {\n        hasOccurred: false,\n        offset: null,\n      },\n      eventListeners: {\n        onMove: null,\n        onUp: null,\n        onKeyUp: null,\n        onKeyDown: null,\n      },\n      boxSelection: {\n        hasOccurred: false,\n      },\n    };\n  }\n\n  // Returns whether the event is a dragging a scrollbar\n  private handleDraggingScrollBar(\n    event: React.PointerEvent<HTMLElement>,\n    pointerDownState: PointerDownState,\n  ): boolean {\n    if (\n      !(pointerDownState.scrollbars.isOverEither && !this.state.multiElement)\n    ) {\n      return false;\n    }\n    isDraggingScrollBar = true;\n    pointerDownState.lastCoords.x = event.clientX;\n    pointerDownState.lastCoords.y = event.clientY;\n    const onPointerMove = withBatchedUpdatesThrottled((event: PointerEvent) => {\n      const target = event.target;\n      if (!(target instanceof HTMLElement)) {\n        return;\n      }\n\n      this.handlePointerMoveOverScrollbars(event, pointerDownState);\n    });\n    const onPointerUp = withBatchedUpdates(() => {\n      lastPointerUp = null;\n      isDraggingScrollBar = false;\n      setCursorForShape(this.interactiveCanvas, this.state);\n      this.setState({\n        cursorButton: \"up\",\n      });\n      this.savePointer(event.clientX, event.clientY, \"up\");\n      window.removeEventListener(EVENT.POINTER_MOVE, onPointerMove);\n      window.removeEventListener(EVENT.POINTER_UP, onPointerUp);\n      onPointerMove.flush();\n    });\n\n    lastPointerUp = onPointerUp;\n\n    window.addEventListener(EVENT.POINTER_MOVE, onPointerMove);\n    window.addEventListener(EVENT.POINTER_UP, onPointerUp);\n    return true;\n  }\n\n  private clearSelectionIfNotUsingSelection = (): void => {\n    if (this.state.activeTool.type !== \"selection\") {\n      this.setState({\n        selectedElementIds: makeNextSelectedElementIds({}, this.state),\n        selectedGroupIds: {},\n        editingGroupId: null,\n        activeEmbeddable: null,\n      });\n    }\n  };\n\n  /**\n   * @returns whether the pointer event has been completely handled\n   */\n  private handleSelectionOnPointerDown = (\n    event: React.PointerEvent<HTMLElement>,\n    pointerDownState: PointerDownState,\n  ): boolean => {\n    if (this.state.activeTool.type === \"selection\") {\n      const elements = this.scene.getNonDeletedElements();\n      const elementsMap = this.scene.getNonDeletedElementsMap();\n      const selectedElements = this.scene.getSelectedElements(this.state);\n\n      if (\n        selectedElements.length === 1 &&\n        !this.state.editingLinearElement &&\n        !isElbowArrow(selectedElements[0]) &&\n        !(\n          this.state.selectedLinearElement &&\n          this.state.selectedLinearElement.hoverPointIndex !== -1\n        )\n      ) {\n        const elementWithTransformHandleType =\n          getElementWithTransformHandleType(\n            elements,\n            this.state,\n            pointerDownState.origin.x,\n            pointerDownState.origin.y,\n            this.state.zoom,\n            event.pointerType,\n            this.scene.getNonDeletedElementsMap(),\n            this.device,\n          );\n        if (elementWithTransformHandleType != null) {\n          if (\n            elementWithTransformHandleType.transformHandleType === \"rotation\"\n          ) {\n            this.setState({\n              resizingElement: elementWithTransformHandleType.element,\n            });\n            pointerDownState.resize.handleType =\n              elementWithTransformHandleType.transformHandleType;\n          } else if (this.state.croppingElementId) {\n            pointerDownState.resize.handleType =\n              elementWithTransformHandleType.transformHandleType;\n          } else {\n            this.setState({\n              resizingElement: elementWithTransformHandleType.element,\n            });\n            pointerDownState.resize.handleType =\n              elementWithTransformHandleType.transformHandleType;\n          }\n        }\n      } else if (selectedElements.length > 1) {\n        pointerDownState.resize.handleType = getTransformHandleTypeFromCoords(\n          getCommonBounds(selectedElements),\n          pointerDownState.origin.x,\n          pointerDownState.origin.y,\n          this.state.zoom,\n          event.pointerType,\n          this.device,\n        );\n      }\n      if (pointerDownState.resize.handleType) {\n        pointerDownState.resize.isResizing = true;\n        pointerDownState.resize.offset = tupleToCoors(\n          getResizeOffsetXY(\n            pointerDownState.resize.handleType,\n            selectedElements,\n            elementsMap,\n            pointerDownState.origin.x,\n            pointerDownState.origin.y,\n          ),\n        );\n        if (\n          selectedElements.length === 1 &&\n          isLinearElement(selectedElements[0]) &&\n          selectedElements[0].points.length === 2\n        ) {\n          pointerDownState.resize.arrowDirection = getResizeArrowDirection(\n            pointerDownState.resize.handleType,\n            selectedElements[0],\n          );\n        }\n      } else {\n        if (this.state.selectedLinearElement) {\n          const linearElementEditor =\n            this.state.editingLinearElement || this.state.selectedLinearElement;\n          const ret = LinearElementEditor.handlePointerDown(\n            event,\n            this,\n            this.store,\n            pointerDownState.origin,\n            linearElementEditor,\n            this.scene,\n          );\n          if (ret.hitElement) {\n            pointerDownState.hit.element = ret.hitElement;\n          }\n          if (ret.linearElementEditor) {\n            this.setState({ selectedLinearElement: ret.linearElementEditor });\n\n            if (this.state.editingLinearElement) {\n              this.setState({ editingLinearElement: ret.linearElementEditor });\n            }\n          }\n          if (ret.didAddPoint) {\n            return true;\n          }\n        }\n        // hitElement may already be set above, so check first\n        pointerDownState.hit.element =\n          pointerDownState.hit.element ??\n          this.getElementAtPosition(\n            pointerDownState.origin.x,\n            pointerDownState.origin.y,\n          );\n\n        this.hitLinkElement = this.getElementLinkAtPosition(\n          pointerDownState.origin,\n          pointerDownState.hit.element,\n        );\n\n        if (this.hitLinkElement) {\n          return true;\n        }\n\n        if (\n          this.state.croppingElementId &&\n          pointerDownState.hit.element?.id !== this.state.croppingElementId\n        ) {\n          this.finishImageCropping();\n        }\n\n        if (pointerDownState.hit.element) {\n          // Early return if pointer is hitting link icon\n          const hitLinkElement = this.getElementLinkAtPosition(\n            {\n              x: pointerDownState.origin.x,\n              y: pointerDownState.origin.y,\n            },\n            pointerDownState.hit.element,\n          );\n          if (hitLinkElement) {\n            return false;\n          }\n        }\n\n        // For overlapped elements one position may hit\n        // multiple elements\n        pointerDownState.hit.allHitElements = this.getElementsAtPosition(\n          pointerDownState.origin.x,\n          pointerDownState.origin.y,\n        );\n\n        const hitElement = pointerDownState.hit.element;\n        const someHitElementIsSelected =\n          pointerDownState.hit.allHitElements.some((element) =>\n            this.isASelectedElement(element),\n          );\n        if (\n          (hitElement === null || !someHitElementIsSelected) &&\n          !event.shiftKey &&\n          !pointerDownState.hit.hasHitCommonBoundingBoxOfSelectedElements\n        ) {\n          this.clearSelection(hitElement);\n        }\n\n        if (this.state.editingLinearElement) {\n          this.setState({\n            selectedElementIds: makeNextSelectedElementIds(\n              {\n                [this.state.editingLinearElement.elementId]: true,\n              },\n              this.state,\n            ),\n          });\n          // If we click on something\n        } else if (hitElement != null) {\n          // on CMD/CTRL, drill down to hit element regardless of groups etc.\n          if (event[KEYS.CTRL_OR_CMD]) {\n            if (!this.state.selectedElementIds[hitElement.id]) {\n              pointerDownState.hit.wasAddedToSelection = true;\n            }\n            this.setState((prevState) => ({\n              ...editGroupForSelectedElement(prevState, hitElement),\n              previousSelectedElementIds: this.state.selectedElementIds,\n            }));\n            // mark as not completely handled so as to allow dragging etc.\n            return false;\n          }\n\n          // deselect if item is selected\n          // if shift is not clicked, this will always return true\n          // otherwise, it will trigger selection based on current\n          // state of the box\n          if (!this.state.selectedElementIds[hitElement.id]) {\n            // if we are currently editing a group, exiting editing mode and deselect the group.\n            if (\n              this.state.editingGroupId &&\n              !isElementInGroup(hitElement, this.state.editingGroupId)\n            ) {\n              this.setState({\n                selectedElementIds: makeNextSelectedElementIds({}, this.state),\n                selectedGroupIds: {},\n                editingGroupId: null,\n                activeEmbeddable: null,\n              });\n            }\n\n            // Add hit element to selection. At this point if we're not holding\n            // SHIFT the previously selected element(s) were deselected above\n            // (make sure you use setState updater to use latest state)\n            // With shift-selection, we want to make sure that frames and their containing\n            // elements are not selected at the same time.\n            if (\n              !someHitElementIsSelected &&\n              !pointerDownState.hit.hasHitCommonBoundingBoxOfSelectedElements\n            ) {\n              this.setState((prevState) => {\n                let nextSelectedElementIds: { [id: string]: true } = {\n                  ...prevState.selectedElementIds,\n                  [hitElement.id]: true,\n                };\n\n                const previouslySelectedElements: ExcalidrawElement[] = [];\n\n                Object.keys(prevState.selectedElementIds).forEach((id) => {\n                  const element = this.scene.getElement(id);\n                  element && previouslySelectedElements.push(element);\n                });\n\n                // if hitElement is frame-like, deselect all of its elements\n                // if they are selected\n                if (isFrameLikeElement(hitElement)) {\n                  getFrameChildren(\n                    previouslySelectedElements,\n                    hitElement.id,\n                  ).forEach((element) => {\n                    delete nextSelectedElementIds[element.id];\n                  });\n                } else if (hitElement.frameId) {\n                  // if hitElement is in a frame and its frame has been selected\n                  // disable selection for the given element\n                  if (nextSelectedElementIds[hitElement.frameId]) {\n                    delete nextSelectedElementIds[hitElement.id];\n                  }\n                } else {\n                  // hitElement is neither a frame nor an element in a frame\n                  // but since hitElement could be in a group with some frames\n                  // this means selecting hitElement will have the frames selected as well\n                  // because we want to keep the invariant:\n                  // - frames and their elements are not selected at the same time\n                  // we deselect elements in those frames that were previously selected\n\n                  const groupIds = hitElement.groupIds;\n                  const framesInGroups = new Set(\n                    groupIds\n                      .flatMap((gid) =>\n                        getElementsInGroup(\n                          this.scene.getNonDeletedElements(),\n                          gid,\n                        ),\n                      )\n                      .filter((element) => isFrameLikeElement(element))\n                      .map((frame) => frame.id),\n                  );\n\n                  if (framesInGroups.size > 0) {\n                    previouslySelectedElements.forEach((element) => {\n                      if (\n                        element.frameId &&\n                        framesInGroups.has(element.frameId)\n                      ) {\n                        // deselect element and groups containing the element\n                        delete nextSelectedElementIds[element.id];\n                        element.groupIds\n                          .flatMap((gid) =>\n                            getElementsInGroup(\n                              this.scene.getNonDeletedElements(),\n                              gid,\n                            ),\n                          )\n                          .forEach((element) => {\n                            delete nextSelectedElementIds[element.id];\n                          });\n                      }\n                    });\n                  }\n                }\n\n                // Finally, in shape selection mode, we'd like to\n                // keep only one shape or group selected at a time.\n                // This means, if the hitElement is a different shape or group\n                // than the previously selected ones, we deselect the previous ones\n                // and select the hitElement\n                if (prevState.openDialog?.name === \"elementLinkSelector\") {\n                  if (\n                    !hitElement.groupIds.some(\n                      (gid) => prevState.selectedGroupIds[gid],\n                    )\n                  ) {\n                    nextSelectedElementIds = {\n                      [hitElement.id]: true,\n                    };\n                  }\n                }\n\n                return {\n                  ...selectGroupsForSelectedElements(\n                    {\n                      editingGroupId: prevState.editingGroupId,\n                      selectedElementIds: nextSelectedElementIds,\n                    },\n                    this.scene.getNonDeletedElements(),\n                    prevState,\n                    this,\n                  ),\n                  showHyperlinkPopup:\n                    hitElement.link || isEmbeddableElement(hitElement)\n                      ? \"info\"\n                      : false,\n                };\n              });\n              pointerDownState.hit.wasAddedToSelection = true;\n            }\n          }\n        }\n\n        this.setState({\n          previousSelectedElementIds: this.state.selectedElementIds,\n        });\n      }\n    }\n    return false;\n  };\n\n  private isASelectedElement(hitElement: ExcalidrawElement | null): boolean {\n    return hitElement != null && this.state.selectedElementIds[hitElement.id];\n  }\n\n  private isHittingCommonBoundingBoxOfSelectedElements(\n    point: Readonly<{ x: number; y: number }>,\n    selectedElements: readonly ExcalidrawElement[],\n  ): boolean {\n    if (selectedElements.length < 2) {\n      return false;\n    }\n\n    // How many pixels off the shape boundary we still consider a hit\n    const threshold = this.getElementHitThreshold();\n    const [x1, y1, x2, y2] = getCommonBounds(selectedElements);\n    return (\n      point.x > x1 - threshold &&\n      point.x < x2 + threshold &&\n      point.y > y1 - threshold &&\n      point.y < y2 + threshold\n    );\n  }\n\n  private handleTextOnPointerDown = (\n    event: React.PointerEvent<HTMLElement>,\n    pointerDownState: PointerDownState,\n  ): void => {\n    // if we're currently still editing text, clicking outside\n    // should only finalize it, not create another (irrespective\n    // of state.activeTool.locked)\n    if (this.state.editingTextElement) {\n      return;\n    }\n    let sceneX = pointerDownState.origin.x;\n    let sceneY = pointerDownState.origin.y;\n\n    const element = this.getElementAtPosition(sceneX, sceneY, {\n      includeBoundTextElement: true,\n    });\n\n    // FIXME\n    let container = this.getTextBindableContainerAtPosition(sceneX, sceneY);\n\n    if (hasBoundTextElement(element)) {\n      container = element as ExcalidrawTextContainer;\n      sceneX = element.x + element.width / 2;\n      sceneY = element.y + element.height / 2;\n    }\n    this.startTextEditing({\n      sceneX,\n      sceneY,\n      insertAtParentCenter: !event.altKey,\n      container,\n      autoEdit: false,\n    });\n\n    resetCursor(this.interactiveCanvas);\n    if (!this.state.activeTool.locked) {\n      this.setState({\n        activeTool: updateActiveTool(this.state, { type: \"selection\" }),\n      });\n    }\n  };\n\n  private handleFreeDrawElementOnPointerDown = (\n    event: React.PointerEvent<HTMLElement>,\n    elementType: ExcalidrawFreeDrawElement[\"type\"],\n    pointerDownState: PointerDownState,\n  ) => {\n    // Begin a mark capture. This does not have to update state yet.\n    const [gridX, gridY] = getGridPoint(\n      pointerDownState.origin.x,\n      pointerDownState.origin.y,\n      null,\n    );\n\n    const topLayerFrame = this.getTopLayerFrameAtSceneCoords({\n      x: gridX,\n      y: gridY,\n    });\n\n    const simulatePressure = event.pressure === 0.5;\n\n    const element = newFreeDrawElement({\n      type: elementType,\n      x: gridX,\n      y: gridY,\n      strokeColor: this.state.currentItemStrokeColor,\n      backgroundColor: this.state.currentItemBackgroundColor,\n      fillStyle: this.state.currentItemFillStyle,\n      strokeWidth: this.state.currentItemStrokeWidth,\n      strokeStyle: this.state.currentItemStrokeStyle,\n      roughness: this.state.currentItemRoughness,\n      opacity: this.state.currentItemOpacity,\n      roundness: null,\n      simulatePressure,\n      locked: false,\n      frameId: topLayerFrame ? topLayerFrame.id : null,\n      points: [pointFrom<LocalPoint>(0, 0)],\n      pressures: simulatePressure ? [] : [event.pressure],\n    });\n\n    this.scene.insertElement(element);\n\n    this.setState((prevState) => {\n      const nextSelectedElementIds = {\n        ...prevState.selectedElementIds,\n      };\n      delete nextSelectedElementIds[element.id];\n      return {\n        selectedElementIds: makeNextSelectedElementIds(\n          nextSelectedElementIds,\n          prevState,\n        ),\n      };\n    });\n\n    const boundElement = getHoveredElementForBinding(\n      pointerDownState.origin,\n      this.scene.getNonDeletedElements(),\n      this.scene.getNonDeletedElementsMap(),\n      this.state.zoom,\n    );\n\n    this.setState({\n      newElement: element,\n      startBoundElement: boundElement,\n      suggestedBindings: [],\n    });\n  };\n\n  public insertIframeElement = ({\n    sceneX,\n    sceneY,\n    width,\n    height,\n  }: {\n    sceneX: number;\n    sceneY: number;\n    width: number;\n    height: number;\n  }) => {\n    const [gridX, gridY] = getGridPoint(\n      sceneX,\n      sceneY,\n      this.lastPointerDownEvent?.[KEYS.CTRL_OR_CMD]\n        ? null\n        : this.getEffectiveGridSize(),\n    );\n\n    const element = newIframeElement({\n      type: \"iframe\",\n      x: gridX,\n      y: gridY,\n      strokeColor: \"transparent\",\n      backgroundColor: \"transparent\",\n      fillStyle: this.state.currentItemFillStyle,\n      strokeWidth: this.state.currentItemStrokeWidth,\n      strokeStyle: this.state.currentItemStrokeStyle,\n      roughness: this.state.currentItemRoughness,\n      roundness: this.getCurrentItemRoundness(\"iframe\"),\n      opacity: this.state.currentItemOpacity,\n      locked: false,\n      width,\n      height,\n    });\n\n    this.scene.insertElement(element);\n\n    return element;\n  };\n\n  //create rectangle element with youtube top left on nearest grid point width / hight 640/360\n  public insertEmbeddableElement = ({\n    sceneX,\n    sceneY,\n    link,\n  }: {\n    sceneX: number;\n    sceneY: number;\n    link: string;\n  }) => {\n    const [gridX, gridY] = getGridPoint(\n      sceneX,\n      sceneY,\n      this.lastPointerDownEvent?.[KEYS.CTRL_OR_CMD]\n        ? null\n        : this.getEffectiveGridSize(),\n    );\n\n    const embedLink = getEmbedLink(link);\n\n    if (!embedLink) {\n      return;\n    }\n\n    if (embedLink.error instanceof URIError) {\n      this.setToast({\n        message: t(\"toast.unrecognizedLinkFormat\"),\n        closable: true,\n      });\n    }\n\n    const element = newEmbeddableElement({\n      type: \"embeddable\",\n      x: gridX,\n      y: gridY,\n      strokeColor: \"transparent\",\n      backgroundColor: \"transparent\",\n      fillStyle: this.state.currentItemFillStyle,\n      strokeWidth: this.state.currentItemStrokeWidth,\n      strokeStyle: this.state.currentItemStrokeStyle,\n      roughness: this.state.currentItemRoughness,\n      roundness: this.getCurrentItemRoundness(\"embeddable\"),\n      opacity: this.state.currentItemOpacity,\n      locked: false,\n      width: embedLink.intrinsicSize.w,\n      height: embedLink.intrinsicSize.h,\n      link,\n    });\n\n    this.scene.insertElement(element);\n\n    return element;\n  };\n\n  private createImageElement = ({\n    sceneX,\n    sceneY,\n    addToFrameUnderCursor = true,\n  }: {\n    sceneX: number;\n    sceneY: number;\n    addToFrameUnderCursor?: boolean;\n  }) => {\n    const [gridX, gridY] = getGridPoint(\n      sceneX,\n      sceneY,\n      this.lastPointerDownEvent?.[KEYS.CTRL_OR_CMD]\n        ? null\n        : this.getEffectiveGridSize(),\n    );\n\n    const topLayerFrame = addToFrameUnderCursor\n      ? this.getTopLayerFrameAtSceneCoords({\n          x: gridX,\n          y: gridY,\n        })\n      : null;\n\n    const element = newImageElement({\n      type: \"image\",\n      x: gridX,\n      y: gridY,\n      strokeColor: this.state.currentItemStrokeColor,\n      backgroundColor: this.state.currentItemBackgroundColor,\n      fillStyle: this.state.currentItemFillStyle,\n      strokeWidth: this.state.currentItemStrokeWidth,\n      strokeStyle: this.state.currentItemStrokeStyle,\n      roughness: this.state.currentItemRoughness,\n      roundness: null,\n      opacity: this.state.currentItemOpacity,\n      locked: false,\n      frameId: topLayerFrame ? topLayerFrame.id : null,\n    });\n\n    return element;\n  };\n\n  private handleLinearElementOnPointerDown = (\n    event: React.PointerEvent<HTMLElement>,\n    elementType: ExcalidrawLinearElement[\"type\"],\n    pointerDownState: PointerDownState,\n  ): void => {\n    if (this.state.multiElement) {\n      const { multiElement } = this.state;\n\n      // finalize if completing a loop\n      if (\n        multiElement.type === \"line\" &&\n        isPathALoop(multiElement.points, this.state.zoom.value)\n      ) {\n        mutateElement(multiElement, {\n          lastCommittedPoint:\n            multiElement.points[multiElement.points.length - 1],\n        });\n        this.actionManager.executeAction(actionFinalize);\n        return;\n      }\n\n      // Elbow arrows cannot be created by putting down points\n      // only the start and end points can be defined\n      if (isElbowArrow(multiElement) && multiElement.points.length > 1) {\n        mutateElement(multiElement, {\n          lastCommittedPoint:\n            multiElement.points[multiElement.points.length - 1],\n        });\n        this.actionManager.executeAction(actionFinalize);\n        return;\n      }\n\n      const { x: rx, y: ry, lastCommittedPoint } = multiElement;\n\n      // clicking inside commit zone \u2192 finalize arrow\n      if (\n        multiElement.points.length > 1 &&\n        lastCommittedPoint &&\n        pointDistance(\n          pointFrom(\n            pointerDownState.origin.x - rx,\n            pointerDownState.origin.y - ry,\n          ),\n          lastCommittedPoint,\n        ) < LINE_CONFIRM_THRESHOLD\n      ) {\n        this.actionManager.executeAction(actionFinalize);\n        return;\n      }\n\n      this.setState((prevState) => ({\n        selectedElementIds: makeNextSelectedElementIds(\n          {\n            ...prevState.selectedElementIds,\n            [multiElement.id]: true,\n          },\n          prevState,\n        ),\n      }));\n      // clicking outside commit zone \u2192 update reference for last committed\n      // point\n      mutateElement(multiElement, {\n        lastCommittedPoint: multiElement.points[multiElement.points.length - 1],\n      });\n      setCursor(this.interactiveCanvas, CURSOR_TYPE.POINTER);\n    } else {\n      const [gridX, gridY] = getGridPoint(\n        pointerDownState.origin.x,\n        pointerDownState.origin.y,\n        event[KEYS.CTRL_OR_CMD] ? null : this.getEffectiveGridSize(),\n      );\n\n      const topLayerFrame = this.getTopLayerFrameAtSceneCoords({\n        x: gridX,\n        y: gridY,\n      });\n\n      /* If arrow is pre-arrowheads, it will have undefined for both start and end arrowheads.\n      If so, we want it to be null for start and \"arrow\" for end. If the linear item is not\n      an arrow, we want it to be null for both. Otherwise, we want it to use the\n      values from appState. */\n\n      const { currentItemStartArrowhead, currentItemEndArrowhead } = this.state;\n      const [startArrowhead, endArrowhead] =\n        elementType === \"arrow\"\n          ? [currentItemStartArrowhead, currentItemEndArrowhead]\n          : [null, null];\n\n      const element =\n        elementType === \"arrow\"\n          ? newArrowElement({\n              type: elementType,\n              x: gridX,\n              y: gridY,\n              strokeColor: this.state.currentItemStrokeColor,\n              backgroundColor: this.state.currentItemBackgroundColor,\n              fillStyle: this.state.currentItemFillStyle,\n              strokeWidth: this.state.currentItemStrokeWidth,\n              strokeStyle: this.state.currentItemStrokeStyle,\n              roughness: this.state.currentItemRoughness,\n              opacity: this.state.currentItemOpacity,\n              roundness:\n                this.state.currentItemArrowType === ARROW_TYPE.round\n                  ? { type: ROUNDNESS.PROPORTIONAL_RADIUS }\n                  : // note, roundness doesn't have any effect for elbow arrows,\n                    // but it's best to set it to null as well\n                    null,\n              startArrowhead,\n              endArrowhead,\n              locked: false,\n              frameId: topLayerFrame ? topLayerFrame.id : null,\n              elbowed: this.state.currentItemArrowType === ARROW_TYPE.elbow,\n              fixedSegments:\n                this.state.currentItemArrowType === ARROW_TYPE.elbow\n                  ? []\n                  : null,\n            })\n          : newLinearElement({\n              type: elementType,\n              x: gridX,\n              y: gridY,\n              strokeColor: this.state.currentItemStrokeColor,\n              backgroundColor: this.state.currentItemBackgroundColor,\n              fillStyle: this.state.currentItemFillStyle,\n              strokeWidth: this.state.currentItemStrokeWidth,\n              strokeStyle: this.state.currentItemStrokeStyle,\n              roughness: this.state.currentItemRoughness,\n              opacity: this.state.currentItemOpacity,\n              roundness:\n                this.state.currentItemRoundness === \"round\"\n                  ? { type: ROUNDNESS.PROPORTIONAL_RADIUS }\n                  : null,\n              locked: false,\n              frameId: topLayerFrame ? topLayerFrame.id : null,\n            });\n      this.setState((prevState) => {\n        const nextSelectedElementIds = {\n          ...prevState.selectedElementIds,\n        };\n        delete nextSelectedElementIds[element.id];\n        return {\n          selectedElementIds: makeNextSelectedElementIds(\n            nextSelectedElementIds,\n            prevState,\n          ),\n        };\n      });\n      mutateElement(element, {\n        points: [...element.points, pointFrom<LocalPoint>(0, 0)],\n      });\n      const boundElement = getHoveredElementForBinding(\n        pointerDownState.origin,\n        this.scene.getNonDeletedElements(),\n        this.scene.getNonDeletedElementsMap(),\n        this.state.zoom,\n        isElbowArrow(element),\n        isElbowArrow(element),\n      );\n\n      this.scene.insertElement(element);\n      this.setState({\n        newElement: element,\n        startBoundElement: boundElement,\n        suggestedBindings: [],\n      });\n    }\n  };\n\n  private getCurrentItemRoundness(\n    elementType:\n      | \"selection\"\n      | \"rectangle\"\n      | \"diamond\"\n      | \"ellipse\"\n      | \"iframe\"\n      | \"embeddable\",\n  ) {\n    return this.state.currentItemRoundness === \"round\"\n      ? {\n          type: isUsingAdaptiveRadius(elementType)\n            ? ROUNDNESS.ADAPTIVE_RADIUS\n            : ROUNDNESS.PROPORTIONAL_RADIUS,\n        }\n      : null;\n  }\n\n  private createGenericElementOnPointerDown = (\n    elementType: ExcalidrawGenericElement[\"type\"] | \"embeddable\",\n    pointerDownState: PointerDownState,\n  ): void => {\n    const [gridX, gridY] = getGridPoint(\n      pointerDownState.origin.x,\n      pointerDownState.origin.y,\n      this.lastPointerDownEvent?.[KEYS.CTRL_OR_CMD]\n        ? null\n        : this.getEffectiveGridSize(),\n    );\n\n    const topLayerFrame = this.getTopLayerFrameAtSceneCoords({\n      x: gridX,\n      y: gridY,\n    });\n\n    const baseElementAttributes = {\n      x: gridX,\n      y: gridY,\n      strokeColor: this.state.currentItemStrokeColor,\n      backgroundColor: this.state.currentItemBackgroundColor,\n      fillStyle: this.state.currentItemFillStyle,\n      strokeWidth: this.state.currentItemStrokeWidth,\n      strokeStyle: this.state.currentItemStrokeStyle,\n      roughness: this.state.currentItemRoughness,\n      opacity: this.state.currentItemOpacity,\n      roundness: this.getCurrentItemRoundness(elementType),\n      locked: false,\n      frameId: topLayerFrame ? topLayerFrame.id : null,\n    } as const;\n\n    let element;\n    if (elementType === \"embeddable\") {\n      element = newEmbeddableElement({\n        type: \"embeddable\",\n        ...baseElementAttributes,\n      });\n    } else {\n      element = newElement({\n        type: elementType,\n        ...baseElementAttributes,\n      });\n    }\n\n    if (element.type === \"selection\") {\n      this.setState({\n        selectionElement: element,\n      });\n    } else {\n      this.scene.insertElement(element);\n      this.setState({\n        multiElement: null,\n        newElement: element,\n      });\n    }\n  };\n\n  private createFrameElementOnPointerDown = (\n    pointerDownState: PointerDownState,\n    type: Extract<ToolType, \"frame\" | \"magicframe\">,\n  ): void => {\n    const [gridX, gridY] = getGridPoint(\n      pointerDownState.origin.x,\n      pointerDownState.origin.y,\n      this.lastPointerDownEvent?.[KEYS.CTRL_OR_CMD]\n        ? null\n        : this.getEffectiveGridSize(),\n    );\n\n    const constructorOpts = {\n      x: gridX,\n      y: gridY,\n      opacity: this.state.currentItemOpacity,\n      locked: false,\n      ...FRAME_STYLE,\n    } as const;\n\n    const frame =\n      type === TOOL_TYPE.magicframe\n        ? newMagicFrameElement(constructorOpts)\n        : newFrameElement(constructorOpts);\n\n    this.scene.insertElement(frame);\n\n    this.setState({\n      multiElement: null,\n      newElement: frame,\n    });\n  };\n\n  private maybeCacheReferenceSnapPoints(\n    event: KeyboardModifiersObject,\n    selectedElements: ExcalidrawElement[],\n    recomputeAnyways: boolean = false,\n  ) {\n    if (\n      isSnappingEnabled({\n        event,\n        app: this,\n        selectedElements,\n      }) &&\n      (recomputeAnyways || !SnapCache.getReferenceSnapPoints())\n    ) {\n      SnapCache.setReferenceSnapPoints(\n        getReferenceSnapPoints(\n          this.scene.getNonDeletedElements(),\n          selectedElements,\n          this.state,\n          this.scene.getNonDeletedElementsMap(),\n        ),\n      );\n    }\n  }\n\n  private maybeCacheVisibleGaps(\n    event: KeyboardModifiersObject,\n    selectedElements: ExcalidrawElement[],\n    recomputeAnyways: boolean = false,\n  ) {\n    if (\n      isSnappingEnabled({\n        event,\n        app: this,\n        selectedElements,\n      }) &&\n      (recomputeAnyways || !SnapCache.getVisibleGaps())\n    ) {\n      SnapCache.setVisibleGaps(\n        getVisibleGaps(\n          this.scene.getNonDeletedElements(),\n          selectedElements,\n          this.state,\n          this.scene.getNonDeletedElementsMap(),\n        ),\n      );\n    }\n  }\n\n  private onKeyDownFromPointerDownHandler(\n    pointerDownState: PointerDownState,\n  ): (event: KeyboardEvent) => void {\n    return withBatchedUpdates((event: KeyboardEvent) => {\n      if (this.maybeHandleResize(pointerDownState, event)) {\n        return;\n      }\n      this.maybeDragNewGenericElement(pointerDownState, event);\n    });\n  }\n\n  private onKeyUpFromPointerDownHandler(\n    pointerDownState: PointerDownState,\n  ): (event: KeyboardEvent) => void {\n    return withBatchedUpdates((event: KeyboardEvent) => {\n      // Prevents focus from escaping excalidraw tab\n      event.key === KEYS.ALT && event.preventDefault();\n      if (this.maybeHandleResize(pointerDownState, event)) {\n        return;\n      }\n      this.maybeDragNewGenericElement(pointerDownState, event);\n    });\n  }\n\n  private onPointerMoveFromPointerDownHandler(\n    pointerDownState: PointerDownState,\n  ) {\n    return withBatchedUpdatesThrottled((event: PointerEvent) => {\n      if (this.state.openDialog?.name === \"elementLinkSelector\") {\n        return;\n      }\n      const pointerCoords = viewportCoordsToSceneCoords(event, this.state);\n\n      if (\n        this.state.selectedLinearElement &&\n        this.state.selectedLinearElement.elbowed &&\n        this.state.selectedLinearElement.pointerDownState.segmentMidpoint.index\n      ) {\n        const [gridX, gridY] = getGridPoint(\n          pointerCoords.x,\n          pointerCoords.y,\n          event[KEYS.CTRL_OR_CMD] ? null : this.getEffectiveGridSize(),\n        );\n\n        let index =\n          this.state.selectedLinearElement.pointerDownState.segmentMidpoint\n            .index;\n        if (index < 0) {\n          const nextCoords = LinearElementEditor.getSegmentMidpointHitCoords(\n            {\n              ...this.state.selectedLinearElement,\n              segmentMidPointHoveredCoords: null,\n            },\n            { x: gridX, y: gridY },\n            this.state,\n            this.scene.getNonDeletedElementsMap(),\n          );\n          index = nextCoords\n            ? LinearElementEditor.getSegmentMidPointIndex(\n                this.state.selectedLinearElement,\n                this.state,\n                nextCoords,\n                this.scene.getNonDeletedElementsMap(),\n              )\n            : -1;\n        }\n\n        const ret = LinearElementEditor.moveFixedSegment(\n          this.state.selectedLinearElement,\n          index,\n          gridX,\n          gridY,\n          this.scene.getNonDeletedElementsMap(),\n        );\n\n        flushSync(() => {\n          if (this.state.selectedLinearElement) {\n            this.setState({\n              selectedLinearElement: {\n                ...this.state.selectedLinearElement,\n                segmentMidPointHoveredCoords: ret.segmentMidPointHoveredCoords,\n                pointerDownState: ret.pointerDownState,\n              },\n            });\n          }\n        });\n        return;\n      }\n\n      const lastPointerCoords =\n        this.lastPointerMoveCoords ?? pointerDownState.origin;\n      this.lastPointerMoveCoords = pointerCoords;\n\n      // We need to initialize dragOffsetXY only after we've updated\n      // `state.selectedElementIds` on pointerDown. Doing it here in pointerMove\n      // event handler should hopefully ensure we're already working with\n      // the updated state.\n      if (pointerDownState.drag.offset === null) {\n        pointerDownState.drag.offset = tupleToCoors(\n          getDragOffsetXY(\n            this.scene.getSelectedElements(this.state),\n            pointerDownState.origin.x,\n            pointerDownState.origin.y,\n          ),\n        );\n      }\n      const target = event.target;\n      if (!(target instanceof HTMLElement)) {\n        return;\n      }\n\n      if (this.handlePointerMoveOverScrollbars(event, pointerDownState)) {\n        return;\n      }\n\n      if (isEraserActive(this.state)) {\n        this.handleEraser(event, pointerDownState, pointerCoords);\n        return;\n      }\n\n      if (this.state.activeTool.type === \"laser\") {\n        this.laserTrails.addPointToPath(pointerCoords.x, pointerCoords.y);\n      }\n\n      const [gridX, gridY] = getGridPoint(\n        pointerCoords.x,\n        pointerCoords.y,\n        event[KEYS.CTRL_OR_CMD] ? null : this.getEffectiveGridSize(),\n      );\n\n      // for arrows/lines, don't start dragging until a given threshold\n      // to ensure we don't create a 2-point arrow by mistake when\n      // user clicks mouse in a way that it moves a tiny bit (thus\n      // triggering pointermove)\n      if (\n        !pointerDownState.drag.hasOccurred &&\n        (this.state.activeTool.type === \"arrow\" ||\n          this.state.activeTool.type === \"line\")\n      ) {\n        if (\n          pointDistance(\n            pointFrom(pointerCoords.x, pointerCoords.y),\n            pointFrom(pointerDownState.origin.x, pointerDownState.origin.y),\n          ) < DRAGGING_THRESHOLD\n        ) {\n          return;\n        }\n      }\n      if (pointerDownState.resize.isResizing) {\n        pointerDownState.lastCoords.x = pointerCoords.x;\n        pointerDownState.lastCoords.y = pointerCoords.y;\n        if (this.maybeHandleCrop(pointerDownState, event)) {\n          return true;\n        }\n        if (this.maybeHandleResize(pointerDownState, event)) {\n          return true;\n        }\n      }\n      const elementsMap = this.scene.getNonDeletedElementsMap();\n\n      if (this.state.selectedLinearElement) {\n        const linearElementEditor =\n          this.state.editingLinearElement || this.state.selectedLinearElement;\n\n        if (\n          LinearElementEditor.shouldAddMidpoint(\n            this.state.selectedLinearElement,\n            pointerCoords,\n            this.state,\n            elementsMap,\n          )\n        ) {\n          const ret = LinearElementEditor.addMidpoint(\n            this.state.selectedLinearElement,\n            pointerCoords,\n            this,\n            !event[KEYS.CTRL_OR_CMD],\n            elementsMap,\n          );\n          if (!ret) {\n            return;\n          }\n\n          // Since we are reading from previous state which is not possible with\n          // automatic batching in React 18 hence using flush sync to synchronously\n          // update the state. Check https://github.com/excalidraw/excalidraw/pull/5508 for more details.\n\n          flushSync(() => {\n            if (this.state.selectedLinearElement) {\n              this.setState({\n                selectedLinearElement: {\n                  ...this.state.selectedLinearElement,\n                  pointerDownState: ret.pointerDownState,\n                  selectedPointsIndices: ret.selectedPointsIndices,\n                },\n              });\n            }\n            if (this.state.editingLinearElement) {\n              this.setState({\n                editingLinearElement: {\n                  ...this.state.editingLinearElement,\n                  pointerDownState: ret.pointerDownState,\n                  selectedPointsIndices: ret.selectedPointsIndices,\n                },\n              });\n            }\n          });\n\n          return;\n        } else if (\n          linearElementEditor.pointerDownState.segmentMidpoint.value !== null &&\n          !linearElementEditor.pointerDownState.segmentMidpoint.added\n        ) {\n          return;\n        }\n\n        const didDrag = LinearElementEditor.handlePointDragging(\n          event,\n          this,\n          pointerCoords.x,\n          pointerCoords.y,\n          (element, pointsSceneCoords) => {\n            this.maybeSuggestBindingsForLinearElementAtCoords(\n              element,\n              pointsSceneCoords,\n            );\n          },\n          linearElementEditor,\n          this.scene,\n        );\n        if (didDrag) {\n          pointerDownState.lastCoords.x = pointerCoords.x;\n          pointerDownState.lastCoords.y = pointerCoords.y;\n          pointerDownState.drag.hasOccurred = true;\n          if (\n            this.state.editingLinearElement &&\n            !this.state.editingLinearElement.isDragging\n          ) {\n            this.setState({\n              editingLinearElement: {\n                ...this.state.editingLinearElement,\n                isDragging: true,\n              },\n            });\n          }\n          if (!this.state.selectedLinearElement.isDragging) {\n            this.setState({\n              selectedLinearElement: {\n                ...this.state.selectedLinearElement,\n                isDragging: true,\n              },\n            });\n          }\n          return;\n        }\n      }\n\n      const hasHitASelectedElement = pointerDownState.hit.allHitElements.some(\n        (element) => this.isASelectedElement(element),\n      );\n\n      const isSelectingPointsInLineEditor =\n        this.state.editingLinearElement &&\n        event.shiftKey &&\n        this.state.editingLinearElement.elementId ===\n          pointerDownState.hit.element?.id;\n      if (\n        (hasHitASelectedElement ||\n          pointerDownState.hit.hasHitCommonBoundingBoxOfSelectedElements) &&\n        !isSelectingPointsInLineEditor\n      ) {\n        const selectedElements = this.scene.getSelectedElements(this.state);\n\n        if (selectedElements.every((element) => element.locked)) {\n          return;\n        }\n\n        const selectedElementsHasAFrame = selectedElements.find((e) =>\n          isFrameLikeElement(e),\n        );\n        const topLayerFrame = this.getTopLayerFrameAtSceneCoords(pointerCoords);\n        const frameToHighlight =\n          topLayerFrame && !selectedElementsHasAFrame ? topLayerFrame : null;\n        // Only update the state if there is a difference\n        if (this.state.frameToHighlight !== frameToHighlight) {\n          flushSync(() => {\n            this.setState({ frameToHighlight });\n          });\n        }\n\n        // Marking that click was used for dragging to check\n        // if elements should be deselected on pointerup\n        pointerDownState.drag.hasOccurred = true;\n\n        // prevent dragging even if we're no longer holding cmd/ctrl otherwise\n        // it would have weird results (stuff jumping all over the screen)\n        // Checking for editingTextElement to avoid jump while editing on mobile #6503\n        if (\n          selectedElements.length > 0 &&\n          !pointerDownState.withCmdOrCtrl &&\n          !this.state.editingTextElement &&\n          this.state.activeEmbeddable?.state !== \"active\"\n        ) {\n          const dragOffset = {\n            x: pointerCoords.x - pointerDownState.origin.x,\n            y: pointerCoords.y - pointerDownState.origin.y,\n          };\n\n          const originalElements = [\n            ...pointerDownState.originalElements.values(),\n          ];\n\n          // We only drag in one direction if shift is pressed\n          const lockDirection = event.shiftKey;\n\n          if (lockDirection) {\n            const distanceX = Math.abs(dragOffset.x);\n            const distanceY = Math.abs(dragOffset.y);\n\n            const lockX = lockDirection && distanceX < distanceY;\n            const lockY = lockDirection && distanceX > distanceY;\n\n            if (lockX) {\n              dragOffset.x = 0;\n            }\n\n            if (lockY) {\n              dragOffset.y = 0;\n            }\n          }\n\n          // #region move crop region\n          if (this.state.croppingElementId) {\n            const croppingElement = this.scene\n              .getNonDeletedElementsMap()\n              .get(this.state.croppingElementId);\n\n            if (\n              croppingElement &&\n              isImageElement(croppingElement) &&\n              croppingElement.crop !== null &&\n              pointerDownState.hit.element === croppingElement\n            ) {\n              const crop = croppingElement.crop;\n              const image =\n                isInitializedImageElement(croppingElement) &&\n                this.imageCache.get(croppingElement.fileId)?.image;\n\n              if (image && !(image instanceof Promise)) {\n                const instantDragOffset = vectorScale(\n                  vector(\n                    pointerCoords.x - lastPointerCoords.x,\n                    pointerCoords.y - lastPointerCoords.y,\n                  ),\n                  Math.max(this.state.zoom.value, 2),\n                );\n\n                const [x1, y1, x2, y2, cx, cy] = getElementAbsoluteCoords(\n                  croppingElement,\n                  elementsMap,\n                );\n\n                const topLeft = vectorFromPoint(\n                  pointRotateRads(\n                    pointFrom(x1, y1),\n                    pointFrom(cx, cy),\n                    croppingElement.angle,\n                  ),\n                );\n                const topRight = vectorFromPoint(\n                  pointRotateRads(\n                    pointFrom(x2, y1),\n                    pointFrom(cx, cy),\n                    croppingElement.angle,\n                  ),\n                );\n                const bottomLeft = vectorFromPoint(\n                  pointRotateRads(\n                    pointFrom(x1, y2),\n                    pointFrom(cx, cy),\n                    croppingElement.angle,\n                  ),\n                );\n                const topEdge = vectorNormalize(\n                  vectorSubtract(topRight, topLeft),\n                );\n                const leftEdge = vectorNormalize(\n                  vectorSubtract(bottomLeft, topLeft),\n                );\n\n                // project instantDrafOffset onto leftEdge and topEdge to decompose\n                const offsetVector = vector(\n                  vectorDot(instantDragOffset, topEdge),\n                  vectorDot(instantDragOffset, leftEdge),\n                );\n\n                const nextCrop = {\n                  ...crop,\n                  x: clamp(\n                    crop.x -\n                      offsetVector[0] * Math.sign(croppingElement.scale[0]),\n                    0,\n                    image.naturalWidth - crop.width,\n                  ),\n                  y: clamp(\n                    crop.y -\n                      offsetVector[1] * Math.sign(croppingElement.scale[1]),\n                    0,\n                    image.naturalHeight - crop.height,\n                  ),\n                };\n\n                mutateElement(croppingElement, {\n                  crop: nextCrop,\n                });\n\n                return;\n              }\n            }\n          }\n\n          // Snap cache *must* be synchronously popuplated before initial drag,\n          // otherwise the first drag even will not snap, causing a jump before\n          // it snaps to its position if previously snapped already.\n          this.maybeCacheVisibleGaps(event, selectedElements);\n          this.maybeCacheReferenceSnapPoints(event, selectedElements);\n\n          const { snapOffset, snapLines } = snapDraggedElements(\n            originalElements,\n            dragOffset,\n            this,\n            event,\n            this.scene.getNonDeletedElementsMap(),\n          );\n\n          this.setState({ snapLines });\n\n          // when we're editing the name of a frame, we want the user to be\n          // able to select and interact with the text input\n          if (!this.state.editingFrame) {\n            dragSelectedElements(\n              pointerDownState,\n              selectedElements,\n              dragOffset,\n              this.scene,\n              snapOffset,\n              event[KEYS.CTRL_OR_CMD] ? null : this.getEffectiveGridSize(),\n            );\n          }\n\n          this.setState({\n            selectedElementsAreBeingDragged: true,\n            // element is being dragged and selectionElement that was created on pointer down\n            // should be removed\n            selectionElement: null,\n          });\n\n          if (\n            selectedElements.length !== 1 ||\n            !isElbowArrow(selectedElements[0])\n          ) {\n            this.setState({\n              suggestedBindings: getSuggestedBindingsForArrows(\n                selectedElements,\n                this.scene.getNonDeletedElementsMap(),\n                this.state.zoom,\n              ),\n            });\n          }\n\n          // We duplicate the selected element if alt is pressed on pointer move\n          if (event.altKey && !pointerDownState.hit.hasBeenDuplicated) {\n            // Move the currently selected elements to the top of the z index stack, and\n            // put the duplicates where the selected elements used to be.\n            // (the origin point where the dragging started)\n\n            pointerDownState.hit.hasBeenDuplicated = true;\n\n            const nextElements = [];\n            const elementsToAppend = [];\n            const groupIdMap = new Map();\n            const oldIdToDuplicatedId = new Map();\n            const hitElement = pointerDownState.hit.element;\n            const selectedElementIds = new Set(\n              this.scene\n                .getSelectedElements({\n                  selectedElementIds: this.state.selectedElementIds,\n                  includeBoundTextElement: true,\n                  includeElementsInFrames: true,\n                })\n                .map((element) => element.id),\n            );\n\n            const elements = this.scene.getElementsIncludingDeleted();\n\n            for (const element of elements) {\n              const isInSelection =\n                selectedElementIds.has(element.id) ||\n                // case: the state.selectedElementIds might not have been\n                // updated yet by the time this mousemove event is fired\n                (element.id === hitElement?.id &&\n                  pointerDownState.hit.wasAddedToSelection);\n              // NOTE (mtolmacs): This is a temporary fix for very large scenes\n              if (\n                Math.abs(element.x) > 1e7 ||\n                Math.abs(element.x) > 1e7 ||\n                Math.abs(element.width) > 1e7 ||\n                Math.abs(element.height) > 1e7\n              ) {\n                console.error(\n                  `Alt+dragging element in scene with invalid dimensions`,\n                  element.x,\n                  element.y,\n                  element.width,\n                  element.height,\n                  isInSelection,\n                );\n\n                return;\n              }\n\n              if (isInSelection) {\n                const duplicatedElement = duplicateElement(\n                  this.state.editingGroupId,\n                  groupIdMap,\n                  element,\n                );\n\n                // NOTE (mtolmacs): This is a temporary fix for very large scenes\n                if (\n                  Math.abs(duplicatedElement.x) > 1e7 ||\n                  Math.abs(duplicatedElement.x) > 1e7 ||\n                  Math.abs(duplicatedElement.width) > 1e7 ||\n                  Math.abs(duplicatedElement.height) > 1e7\n                ) {\n                  console.error(\n                    `Alt+dragging duplicated element with invalid dimensions`,\n                    duplicatedElement.x,\n                    duplicatedElement.y,\n                    duplicatedElement.width,\n                    duplicatedElement.height,\n                  );\n\n                  return;\n                }\n\n                const origElement = pointerDownState.originalElements.get(\n                  element.id,\n                )!;\n\n                // NOTE (mtolmacs): This is a temporary fix for very large scenes\n                if (\n                  Math.abs(origElement.x) > 1e7 ||\n                  Math.abs(origElement.x) > 1e7 ||\n                  Math.abs(origElement.width) > 1e7 ||\n                  Math.abs(origElement.height) > 1e7\n                ) {\n                  console.error(\n                    `Alt+dragging duplicated element with invalid dimensions`,\n                    origElement.x,\n                    origElement.y,\n                    origElement.width,\n                    origElement.height,\n                  );\n\n                  return;\n                }\n\n                mutateElement(duplicatedElement, {\n                  x: origElement.x,\n                  y: origElement.y,\n                });\n\n                // put duplicated element to pointerDownState.originalElements\n                // so that we can snap to the duplicated element without releasing\n                pointerDownState.originalElements.set(\n                  duplicatedElement.id,\n                  duplicatedElement,\n                );\n\n                nextElements.push(duplicatedElement);\n                elementsToAppend.push(element);\n                oldIdToDuplicatedId.set(element.id, duplicatedElement.id);\n              } else {\n                nextElements.push(element);\n              }\n            }\n\n            let nextSceneElements: ExcalidrawElement[] = [\n              ...nextElements,\n              ...elementsToAppend,\n            ];\n\n            const mappedNewSceneElements = this.props.onDuplicate?.(\n              nextSceneElements,\n              elements,\n            );\n\n            nextSceneElements = mappedNewSceneElements || nextSceneElements;\n\n            syncMovedIndices(nextSceneElements, arrayToMap(elementsToAppend));\n\n            bindTextToShapeAfterDuplication(\n              nextElements,\n              elementsToAppend,\n              oldIdToDuplicatedId,\n            );\n            fixBindingsAfterDuplication(\n              nextSceneElements,\n              elementsToAppend,\n              oldIdToDuplicatedId,\n              \"duplicatesServeAsOld\",\n            );\n            bindElementsToFramesAfterDuplication(\n              nextSceneElements,\n              elementsToAppend,\n              oldIdToDuplicatedId,\n            );\n\n            this.scene.replaceAllElements(nextSceneElements);\n            this.maybeCacheVisibleGaps(event, selectedElements, true);\n            this.maybeCacheReferenceSnapPoints(event, selectedElements, true);\n          }\n\n          return;\n        }\n      }\n\n      if (this.state.selectionElement) {\n        pointerDownState.lastCoords.x = pointerCoords.x;\n        pointerDownState.lastCoords.y = pointerCoords.y;\n        this.maybeDragNewGenericElement(pointerDownState, event);\n      } else {\n        // It is very important to read this.state within each move event,\n        // otherwise we would read a stale one!\n        const newElement = this.state.newElement;\n\n        if (!newElement) {\n          return;\n        }\n\n        if (newElement.type === \"freedraw\") {\n          const points = newElement.points;\n          const dx = pointerCoords.x - newElement.x;\n          const dy = pointerCoords.y - newElement.y;\n\n          const lastPoint = points.length > 0 && points[points.length - 1];\n          const discardPoint =\n            lastPoint && lastPoint[0] === dx && lastPoint[1] === dy;\n\n          if (!discardPoint) {\n            const pressures = newElement.simulatePressure\n              ? newElement.pressures\n              : [...newElement.pressures, event.pressure];\n\n            mutateElement(\n              newElement,\n              {\n                points: [...points, pointFrom<LocalPoint>(dx, dy)],\n                pressures,\n              },\n              false,\n            );\n\n            this.setState({\n              newElement,\n            });\n          }\n        } else if (isLinearElement(newElement)) {\n          pointerDownState.drag.hasOccurred = true;\n          const points = newElement.points;\n          let dx = gridX - newElement.x;\n          let dy = gridY - newElement.y;\n\n          if (shouldRotateWithDiscreteAngle(event) && points.length === 2) {\n            ({ width: dx, height: dy } = getLockedLinearCursorAlignSize(\n              newElement.x,\n              newElement.y,\n              pointerCoords.x,\n              pointerCoords.y,\n            ));\n          }\n\n          if (points.length === 1) {\n            mutateElement(\n              newElement,\n              {\n                points: [...points, pointFrom<LocalPoint>(dx, dy)],\n              },\n              false,\n            );\n          } else if (\n            points.length === 2 ||\n            (points.length > 1 && isElbowArrow(newElement))\n          ) {\n            mutateElement(\n              newElement,\n              {\n                points: [...points.slice(0, -1), pointFrom<LocalPoint>(dx, dy)],\n              },\n              false,\n              { isDragging: true },\n            );\n          }\n\n          this.setState({\n            newElement,\n          });\n\n          if (isBindingElement(newElement, false)) {\n            // When creating a linear element by dragging\n            this.maybeSuggestBindingsForLinearElementAtCoords(\n              newElement,\n              [pointerCoords],\n              this.state.startBoundElement,\n            );\n          }\n        } else {\n          pointerDownState.lastCoords.x = pointerCoords.x;\n          pointerDownState.lastCoords.y = pointerCoords.y;\n          this.maybeDragNewGenericElement(pointerDownState, event, false);\n        }\n      }\n\n      if (this.state.activeTool.type === \"selection\") {\n        pointerDownState.boxSelection.hasOccurred = true;\n\n        const elements = this.scene.getNonDeletedElements();\n\n        // box-select line editor points\n        if (this.state.editingLinearElement) {\n          LinearElementEditor.handleBoxSelection(\n            event,\n            this.state,\n            this.setState.bind(this),\n            this.scene.getNonDeletedElementsMap(),\n          );\n          // regular box-select\n        } else {\n          let shouldReuseSelection = true;\n\n          if (!event.shiftKey && isSomeElementSelected(elements, this.state)) {\n            if (\n              pointerDownState.withCmdOrCtrl &&\n              pointerDownState.hit.element\n            ) {\n              this.setState((prevState) =>\n                selectGroupsForSelectedElements(\n                  {\n                    ...prevState,\n                    selectedElementIds: {\n                      [pointerDownState.hit.element!.id]: true,\n                    },\n                  },\n                  this.scene.getNonDeletedElements(),\n                  prevState,\n                  this,\n                ),\n              );\n            } else {\n              shouldReuseSelection = false;\n            }\n          }\n          const elementsWithinSelection = this.state.selectionElement\n            ? getElementsWithinSelection(\n                elements,\n                this.state.selectionElement,\n                this.scene.getNonDeletedElementsMap(),\n                false,\n              )\n            : [];\n\n          this.setState((prevState) => {\n            const nextSelectedElementIds = {\n              ...(shouldReuseSelection && prevState.selectedElementIds),\n              ...elementsWithinSelection.reduce(\n                (acc: Record<ExcalidrawElement[\"id\"], true>, element) => {\n                  acc[element.id] = true;\n                  return acc;\n                },\n                {},\n              ),\n            };\n\n            if (pointerDownState.hit.element) {\n              // if using ctrl/cmd, select the hitElement only if we\n              // haven't box-selected anything else\n              if (!elementsWithinSelection.length) {\n                nextSelectedElementIds[pointerDownState.hit.element.id] = true;\n              } else {\n                delete nextSelectedElementIds[pointerDownState.hit.element.id];\n              }\n            }\n\n            prevState = !shouldReuseSelection\n              ? { ...prevState, selectedGroupIds: {}, editingGroupId: null }\n              : prevState;\n\n            return {\n              ...selectGroupsForSelectedElements(\n                {\n                  editingGroupId: prevState.editingGroupId,\n                  selectedElementIds: nextSelectedElementIds,\n                },\n                this.scene.getNonDeletedElements(),\n                prevState,\n                this,\n              ),\n              // select linear element only when we haven't box-selected anything else\n              selectedLinearElement:\n                elementsWithinSelection.length === 1 &&\n                isLinearElement(elementsWithinSelection[0])\n                  ? new LinearElementEditor(elementsWithinSelection[0])\n                  : null,\n              showHyperlinkPopup:\n                elementsWithinSelection.length === 1 &&\n                (elementsWithinSelection[0].link ||\n                  isEmbeddableElement(elementsWithinSelection[0]))\n                  ? \"info\"\n                  : false,\n            };\n          });\n        }\n      }\n    });\n  }\n\n  // Returns whether the pointer move happened over either scrollbar\n  private handlePointerMoveOverScrollbars(\n    event: PointerEvent,\n    pointerDownState: PointerDownState,\n  ): boolean {\n    if (pointerDownState.scrollbars.isOverHorizontal) {\n      const x = event.clientX;\n      const dx = x - pointerDownState.lastCoords.x;\n      this.translateCanvas({\n        scrollX: this.state.scrollX - dx / this.state.zoom.value,\n      });\n      pointerDownState.lastCoords.x = x;\n      return true;\n    }\n\n    if (pointerDownState.scrollbars.isOverVertical) {\n      const y = event.clientY;\n      const dy = y - pointerDownState.lastCoords.y;\n      this.translateCanvas({\n        scrollY: this.state.scrollY - dy / this.state.zoom.value,\n      });\n      pointerDownState.lastCoords.y = y;\n      return true;\n    }\n    return false;\n  }\n\n  private onPointerUpFromPointerDownHandler(\n    pointerDownState: PointerDownState,\n  ): (event: PointerEvent) => void {\n    return withBatchedUpdates((childEvent: PointerEvent) => {\n      this.removePointer(childEvent);\n      if (pointerDownState.eventListeners.onMove) {\n        pointerDownState.eventListeners.onMove.flush();\n      }\n      const {\n        newElement,\n        resizingElement,\n        croppingElementId,\n        multiElement,\n        activeTool,\n        isResizing,\n        isRotating,\n        isCropping,\n      } = this.state;\n\n      this.setState((prevState) => ({\n        isResizing: false,\n        isRotating: false,\n        isCropping: false,\n        resizingElement: null,\n        selectionElement: null,\n        frameToHighlight: null,\n        elementsToHighlight: null,\n        cursorButton: \"up\",\n        snapLines: updateStable(prevState.snapLines, []),\n        originSnapOffset: null,\n      }));\n\n      this.lastPointerMoveCoords = null;\n\n      SnapCache.setReferenceSnapPoints(null);\n      SnapCache.setVisibleGaps(null);\n\n      this.savePointer(childEvent.clientX, childEvent.clientY, \"up\");\n\n      this.setState({\n        selectedElementsAreBeingDragged: false,\n      });\n      const elementsMap = this.scene.getNonDeletedElementsMap();\n\n      if (\n        pointerDownState.drag.hasOccurred &&\n        pointerDownState.hit?.element?.id\n      ) {\n        const element = elementsMap.get(pointerDownState.hit.element.id);\n        if (isBindableElement(element)) {\n          // Renormalize elbow arrows when they are changed via indirect move\n          element.boundElements\n            ?.filter((e) => e.type === \"arrow\")\n            .map((e) => elementsMap.get(e.id))\n            .filter((e) => isElbowArrow(e))\n            .forEach((e) => {\n              !!e && mutateElement(e, {}, true);\n            });\n        }\n      }\n\n      // Handle end of dragging a point of a linear element, might close a loop\n      // and sets binding element\n      if (this.state.editingLinearElement) {\n        if (\n          !pointerDownState.boxSelection.hasOccurred &&\n          pointerDownState.hit?.element?.id !==\n            this.state.editingLinearElement.elementId\n        ) {\n          this.actionManager.executeAction(actionFinalize);\n        } else {\n          const editingLinearElement = LinearElementEditor.handlePointerUp(\n            childEvent,\n            this.state.editingLinearElement,\n            this.state,\n            this.scene,\n          );\n          if (editingLinearElement !== this.state.editingLinearElement) {\n            this.setState({\n              editingLinearElement,\n              suggestedBindings: [],\n            });\n          }\n        }\n      } else if (this.state.selectedLinearElement) {\n        // Normalize elbow arrow points, remove close parallel segments\n        if (this.state.selectedLinearElement.elbowed) {\n          const element = LinearElementEditor.getElement(\n            this.state.selectedLinearElement.elementId,\n            this.scene.getNonDeletedElementsMap(),\n          );\n          if (element) {\n            mutateElement(element, {}, true);\n          }\n        }\n\n        if (\n          pointerDownState.hit?.element?.id !==\n          this.state.selectedLinearElement.elementId\n        ) {\n          const selectedELements = this.scene.getSelectedElements(this.state);\n          // set selectedLinearElement to null if there is more than one element selected since we don't want to show linear element handles\n          if (selectedELements.length > 1) {\n            this.setState({ selectedLinearElement: null });\n          }\n        } else {\n          const linearElementEditor = LinearElementEditor.handlePointerUp(\n            childEvent,\n            this.state.selectedLinearElement,\n            this.state,\n            this.scene,\n          );\n\n          const { startBindingElement, endBindingElement } =\n            linearElementEditor;\n          const element = this.scene.getElement(linearElementEditor.elementId);\n          if (isBindingElement(element)) {\n            bindOrUnbindLinearElement(\n              element,\n              startBindingElement,\n              endBindingElement,\n              elementsMap,\n              this.scene,\n            );\n          }\n\n          if (linearElementEditor !== this.state.selectedLinearElement) {\n            this.setState({\n              selectedLinearElement: {\n                ...linearElementEditor,\n                selectedPointsIndices: null,\n              },\n              suggestedBindings: [],\n            });\n          }\n        }\n      }\n\n      this.missingPointerEventCleanupEmitter.clear();\n\n      window.removeEventListener(\n        EVENT.POINTER_MOVE,\n        pointerDownState.eventListeners.onMove!,\n      );\n      window.removeEventListener(\n        EVENT.POINTER_UP,\n        pointerDownState.eventListeners.onUp!,\n      );\n      window.removeEventListener(\n        EVENT.KEYDOWN,\n        pointerDownState.eventListeners.onKeyDown!,\n      );\n      window.removeEventListener(\n        EVENT.KEYUP,\n        pointerDownState.eventListeners.onKeyUp!,\n      );\n\n      if (this.state.pendingImageElementId) {\n        this.setState({ pendingImageElementId: null });\n      }\n\n      this.props?.onPointerUp?.(activeTool, pointerDownState);\n      this.onPointerUpEmitter.trigger(\n        this.state.activeTool,\n        pointerDownState,\n        childEvent,\n      );\n\n      if (newElement?.type === \"freedraw\") {\n        const pointerCoords = viewportCoordsToSceneCoords(\n          childEvent,\n          this.state,\n        );\n\n        const points = newElement.points;\n        let dx = pointerCoords.x - newElement.x;\n        let dy = pointerCoords.y - newElement.y;\n\n        // Allows dots to avoid being flagged as infinitely small\n        if (dx === points[0][0] && dy === points[0][1]) {\n          dy += 0.0001;\n          dx += 0.0001;\n        }\n\n        const pressures = newElement.simulatePressure\n          ? []\n          : [...newElement.pressures, childEvent.pressure];\n\n        mutateElement(newElement, {\n          points: [...points, pointFrom<LocalPoint>(dx, dy)],\n          pressures,\n          lastCommittedPoint: pointFrom<LocalPoint>(dx, dy),\n        });\n\n        this.actionManager.executeAction(actionFinalize);\n\n        return;\n      }\n      if (isImageElement(newElement)) {\n        const imageElement = newElement;\n        try {\n          this.initializeImageDimensions(imageElement);\n          this.setState(\n            {\n              selectedElementIds: makeNextSelectedElementIds(\n                { [imageElement.id]: true },\n                this.state,\n              ),\n            },\n            () => {\n              this.actionManager.executeAction(actionFinalize);\n            },\n          );\n        } catch (error: any) {\n          console.error(error);\n          this.scene.replaceAllElements(\n            this.scene\n              .getElementsIncludingDeleted()\n              .filter((el) => el.id !== imageElement.id),\n          );\n          this.actionManager.executeAction(actionFinalize);\n        }\n        return;\n      }\n\n      if (isLinearElement(newElement)) {\n        if (newElement!.points.length > 1) {\n          this.store.shouldCaptureIncrement();\n        }\n        const pointerCoords = viewportCoordsToSceneCoords(\n          childEvent,\n          this.state,\n        );\n\n        if (!pointerDownState.drag.hasOccurred && newElement && !multiElement) {\n          mutateElement(newElement, {\n            points: [\n              ...newElement.points,\n              pointFrom<LocalPoint>(\n                pointerCoords.x - newElement.x,\n                pointerCoords.y - newElement.y,\n              ),\n            ],\n          });\n          this.setState({\n            multiElement: newElement,\n            newElement,\n          });\n        } else if (pointerDownState.drag.hasOccurred && !multiElement) {\n          if (\n            isBindingEnabled(this.state) &&\n            isBindingElement(newElement, false)\n          ) {\n            maybeBindLinearElement(\n              newElement,\n              this.state,\n              pointerCoords,\n              this.scene.getNonDeletedElementsMap(),\n              this.scene.getNonDeletedElements(),\n            );\n          }\n          this.setState({ suggestedBindings: [], startBoundElement: null });\n          if (!activeTool.locked) {\n            resetCursor(this.interactiveCanvas);\n            this.setState((prevState) => ({\n              newElement: null,\n              activeTool: updateActiveTool(this.state, {\n                type: \"selection\",\n              }),\n              selectedElementIds: makeNextSelectedElementIds(\n                {\n                  ...prevState.selectedElementIds,\n                  [newElement.id]: true,\n                },\n                prevState,\n              ),\n              selectedLinearElement: new LinearElementEditor(newElement),\n            }));\n          } else {\n            this.setState((prevState) => ({\n              newElement: null,\n            }));\n          }\n          // so that the scene gets rendered again to display the newly drawn linear as well\n          this.scene.triggerUpdate();\n        }\n        return;\n      }\n\n      if (isTextElement(newElement)) {\n        const minWidth = getMinTextElementWidth(\n          getFontString({\n            fontSize: newElement.fontSize,\n            fontFamily: newElement.fontFamily,\n          }),\n          newElement.lineHeight,\n        );\n\n        if (newElement.width < minWidth) {\n          mutateElement(newElement, {\n            autoResize: true,\n          });\n        }\n\n        this.resetCursor();\n\n        this.handleTextWysiwyg(newElement, {\n          isExistingElement: true,\n        });\n      }\n\n      if (\n        activeTool.type !== \"selection\" &&\n        newElement &&\n        isInvisiblySmallElement(newElement)\n      ) {\n        // remove invisible element which was added in onPointerDown\n        // update the store snapshot, so that invisible elements are not captured by the store\n        this.updateScene({\n          elements: this.scene\n            .getElementsIncludingDeleted()\n            .filter((el) => el.id !== newElement.id),\n          appState: {\n            newElement: null,\n          },\n          captureUpdate: CaptureUpdateAction.NEVER,\n        });\n\n        return;\n      }\n\n      if (isFrameLikeElement(newElement)) {\n        const elementsInsideFrame = getElementsInNewFrame(\n          this.scene.getElementsIncludingDeleted(),\n          newElement,\n          this.scene.getNonDeletedElementsMap(),\n        );\n\n        this.scene.replaceAllElements(\n          addElementsToFrame(\n            this.scene.getElementsMapIncludingDeleted(),\n            elementsInsideFrame,\n            newElement,\n            this.state,\n          ),\n        );\n      }\n\n      if (newElement) {\n        mutateElement(newElement, getNormalizedDimensions(newElement));\n        // the above does not guarantee the scene to be rendered again, hence the trigger below\n        this.scene.triggerUpdate();\n      }\n\n      if (pointerDownState.drag.hasOccurred) {\n        const sceneCoords = viewportCoordsToSceneCoords(childEvent, this.state);\n\n        // when editing the points of a linear element, we check if the\n        // linear element still is in the frame afterwards\n        // if not, the linear element will be removed from its frame (if any)\n        if (\n          this.state.selectedLinearElement &&\n          this.state.selectedLinearElement.isDragging\n        ) {\n          const linearElement = this.scene.getElement(\n            this.state.selectedLinearElement.elementId,\n          );\n\n          if (linearElement?.frameId) {\n            const frame = getContainingFrame(linearElement, elementsMap);\n\n            if (frame && linearElement) {\n              if (\n                !elementOverlapsWithFrame(\n                  linearElement,\n                  frame,\n                  this.scene.getNonDeletedElementsMap(),\n                )\n              ) {\n                // remove the linear element from all groups\n                // before removing it from the frame as well\n                mutateElement(linearElement, {\n                  groupIds: [],\n                });\n\n                removeElementsFromFrame(\n                  [linearElement],\n                  this.scene.getNonDeletedElementsMap(),\n                );\n\n                this.scene.triggerUpdate();\n              }\n            }\n          }\n        } else {\n          // update the relationships between selected elements and frames\n          const topLayerFrame = this.getTopLayerFrameAtSceneCoords(sceneCoords);\n\n          const selectedElements = this.scene.getSelectedElements(this.state);\n          let nextElements = this.scene.getElementsMapIncludingDeleted();\n\n          const updateGroupIdsAfterEditingGroup = (\n            elements: ExcalidrawElement[],\n          ) => {\n            if (elements.length > 0) {\n              for (const element of elements) {\n                const index = element.groupIds.indexOf(\n                  this.state.editingGroupId!,\n                );\n\n                mutateElement(\n                  element,\n                  {\n                    groupIds: element.groupIds.slice(0, index),\n                  },\n                  false,\n                );\n              }\n\n              nextElements.forEach((element) => {\n                if (\n                  element.groupIds.length &&\n                  getElementsInGroup(\n                    nextElements,\n                    element.groupIds[element.groupIds.length - 1],\n                  ).length < 2\n                ) {\n                  mutateElement(\n                    element,\n                    {\n                      groupIds: [],\n                    },\n                    false,\n                  );\n                }\n              });\n\n              this.setState({\n                editingGroupId: null,\n              });\n            }\n          };\n\n          if (\n            topLayerFrame &&\n            !this.state.selectedElementIds[topLayerFrame.id]\n          ) {\n            const elementsToAdd = selectedElements.filter(\n              (element) =>\n                element.frameId !== topLayerFrame.id &&\n                isElementInFrame(element, nextElements, this.state),\n            );\n\n            if (this.state.editingGroupId) {\n              updateGroupIdsAfterEditingGroup(elementsToAdd);\n            }\n\n            nextElements = addElementsToFrame(\n              nextElements,\n              elementsToAdd,\n              topLayerFrame,\n              this.state,\n            );\n          } else if (!topLayerFrame) {\n            if (this.state.editingGroupId) {\n              const elementsToRemove = selectedElements.filter(\n                (element) =>\n                  element.frameId &&\n                  !isElementInFrame(element, nextElements, this.state),\n              );\n\n              updateGroupIdsAfterEditingGroup(elementsToRemove);\n            }\n          }\n\n          nextElements = updateFrameMembershipOfSelectedElements(\n            nextElements,\n            this.state,\n            this,\n          );\n\n          this.scene.replaceAllElements(nextElements);\n        }\n      }\n\n      if (resizingElement) {\n        this.store.shouldCaptureIncrement();\n      }\n\n      if (resizingElement && isInvisiblySmallElement(resizingElement)) {\n        // update the store snapshot, so that invisible elements are not captured by the store\n        this.updateScene({\n          elements: this.scene\n            .getElementsIncludingDeleted()\n            .filter((el) => el.id !== resizingElement.id),\n          captureUpdate: CaptureUpdateAction.NEVER,\n        });\n      }\n\n      // handle frame membership for resizing frames and/or selected elements\n      if (pointerDownState.resize.isResizing) {\n        let nextElements = updateFrameMembershipOfSelectedElements(\n          this.scene.getElementsIncludingDeleted(),\n          this.state,\n          this,\n        );\n\n        const selectedFrames = this.scene\n          .getSelectedElements(this.state)\n          .filter((element): element is ExcalidrawFrameLikeElement =>\n            isFrameLikeElement(element),\n          );\n\n        for (const frame of selectedFrames) {\n          nextElements = replaceAllElementsInFrame(\n            nextElements,\n            getElementsInResizingFrame(\n              this.scene.getElementsIncludingDeleted(),\n              frame,\n              this.state,\n              elementsMap,\n            ),\n            frame,\n            this,\n          );\n        }\n\n        this.scene.replaceAllElements(nextElements);\n      }\n\n      // Code below handles selection when element(s) weren't\n      // drag or added to selection on pointer down phase.\n      const hitElement = pointerDownState.hit.element;\n      if (\n        this.state.selectedLinearElement?.elementId !== hitElement?.id &&\n        isLinearElement(hitElement)\n      ) {\n        const selectedElements = this.scene.getSelectedElements(this.state);\n        // set selectedLinearElement when no other element selected except\n        // the one we've hit\n        if (selectedElements.length === 1) {\n          this.setState({\n            selectedLinearElement: new LinearElementEditor(hitElement),\n          });\n        }\n      }\n\n      // click outside the cropping region to exit\n      if (\n        // not in the cropping mode at all\n        !croppingElementId ||\n        // in the cropping mode\n        (croppingElementId &&\n          // not cropping and no hit element\n          ((!hitElement && !isCropping) ||\n            // hitting something else\n            (hitElement && hitElement.id !== croppingElementId)))\n      ) {\n        this.finishImageCropping();\n      }\n\n      const pointerStart = this.lastPointerDownEvent;\n      const pointerEnd = this.lastPointerUpEvent || this.lastPointerMoveEvent;\n\n      if (isEraserActive(this.state) && pointerStart && pointerEnd) {\n        this.eraserTrail.endPath();\n\n        const draggedDistance = pointDistance(\n          pointFrom(pointerStart.clientX, pointerStart.clientY),\n          pointFrom(pointerEnd.clientX, pointerEnd.clientY),\n        );\n\n        if (draggedDistance === 0) {\n          const scenePointer = viewportCoordsToSceneCoords(\n            {\n              clientX: pointerEnd.clientX,\n              clientY: pointerEnd.clientY,\n            },\n            this.state,\n          );\n          const hitElements = this.getElementsAtPosition(\n            scenePointer.x,\n            scenePointer.y,\n          );\n          hitElements.forEach((hitElement) =>\n            this.elementsPendingErasure.add(hitElement.id),\n          );\n        }\n        this.eraseElements();\n        return;\n      } else if (this.elementsPendingErasure.size) {\n        this.restoreReadyToEraseElements();\n      }\n\n      if (\n        hitElement &&\n        !pointerDownState.drag.hasOccurred &&\n        !pointerDownState.hit.wasAddedToSelection &&\n        // if we're editing a line, pointerup shouldn't switch selection if\n        // box selected\n        (!this.state.editingLinearElement ||\n          !pointerDownState.boxSelection.hasOccurred)\n      ) {\n        // when inside line editor, shift selects points instead\n        if (childEvent.shiftKey && !this.state.editingLinearElement) {\n          if (this.state.selectedElementIds[hitElement.id]) {\n            if (isSelectedViaGroup(this.state, hitElement)) {\n              this.setState((_prevState) => {\n                const nextSelectedElementIds = {\n                  ..._prevState.selectedElementIds,\n                };\n\n                // We want to unselect all groups hitElement is part of\n                // as well as all elements that are part of the groups\n                // hitElement is part of\n                for (const groupedElement of hitElement.groupIds.flatMap(\n                  (groupId) =>\n                    getElementsInGroup(\n                      this.scene.getNonDeletedElements(),\n                      groupId,\n                    ),\n                )) {\n                  delete nextSelectedElementIds[groupedElement.id];\n                }\n\n                return {\n                  selectedGroupIds: {\n                    ..._prevState.selectedElementIds,\n                    ...hitElement.groupIds\n                      .map((gId) => ({ [gId]: false }))\n                      .reduce((prev, acc) => ({ ...prev, ...acc }), {}),\n                  },\n                  selectedElementIds: makeNextSelectedElementIds(\n                    nextSelectedElementIds,\n                    _prevState,\n                  ),\n                };\n              });\n              // if not dragging a linear element point (outside editor)\n            } else if (!this.state.selectedLinearElement?.isDragging) {\n              // remove element from selection while\n              // keeping prev elements selected\n\n              this.setState((prevState) => {\n                const newSelectedElementIds = {\n                  ...prevState.selectedElementIds,\n                };\n                delete newSelectedElementIds[hitElement!.id];\n                const newSelectedElements = getSelectedElements(\n                  this.scene.getNonDeletedElements(),\n                  { selectedElementIds: newSelectedElementIds },\n                );\n\n                return {\n                  ...selectGroupsForSelectedElements(\n                    {\n                      editingGroupId: prevState.editingGroupId,\n                      selectedElementIds: newSelectedElementIds,\n                    },\n                    this.scene.getNonDeletedElements(),\n                    prevState,\n                    this,\n                  ),\n                  // set selectedLinearElement only if thats the only element selected\n                  selectedLinearElement:\n                    newSelectedElements.length === 1 &&\n                    isLinearElement(newSelectedElements[0])\n                      ? new LinearElementEditor(newSelectedElements[0])\n                      : prevState.selectedLinearElement,\n                };\n              });\n            }\n          } else if (\n            hitElement.frameId &&\n            this.state.selectedElementIds[hitElement.frameId]\n          ) {\n            // when hitElement is part of a selected frame, deselect the frame\n            // to avoid frame and containing elements selected simultaneously\n            this.setState((prevState) => {\n              const nextSelectedElementIds: {\n                [id: string]: true;\n              } = {\n                ...prevState.selectedElementIds,\n                [hitElement.id]: true,\n              };\n              // deselect the frame\n              delete nextSelectedElementIds[hitElement.frameId!];\n\n              // deselect groups containing the frame\n              (this.scene.getElement(hitElement.frameId!)?.groupIds ?? [])\n                .flatMap((gid) =>\n                  getElementsInGroup(this.scene.getNonDeletedElements(), gid),\n                )\n                .forEach((element) => {\n                  delete nextSelectedElementIds[element.id];\n                });\n\n              return {\n                ...selectGroupsForSelectedElements(\n                  {\n                    editingGroupId: prevState.editingGroupId,\n                    selectedElementIds: nextSelectedElementIds,\n                  },\n                  this.scene.getNonDeletedElements(),\n                  prevState,\n                  this,\n                ),\n                showHyperlinkPopup:\n                  hitElement.link || isEmbeddableElement(hitElement)\n                    ? \"info\"\n                    : false,\n              };\n            });\n          } else {\n            // add element to selection while keeping prev elements selected\n            this.setState((_prevState) => ({\n              selectedElementIds: makeNextSelectedElementIds(\n                {\n                  ..._prevState.selectedElementIds,\n                  [hitElement!.id]: true,\n                },\n                _prevState,\n              ),\n            }));\n          }\n        } else {\n          this.setState((prevState) => ({\n            ...selectGroupsForSelectedElements(\n              {\n                editingGroupId: prevState.editingGroupId,\n                selectedElementIds: { [hitElement.id]: true },\n              },\n              this.scene.getNonDeletedElements(),\n              prevState,\n              this,\n            ),\n            selectedLinearElement:\n              isLinearElement(hitElement) &&\n              // Don't set `selectedLinearElement` if its same as the hitElement, this is mainly to prevent resetting the `hoverPointIndex` to -1.\n              // Future we should update the API to take care of setting the correct `hoverPointIndex` when initialized\n              prevState.selectedLinearElement?.elementId !== hitElement.id\n                ? new LinearElementEditor(hitElement)\n                : prevState.selectedLinearElement,\n          }));\n        }\n      }\n\n      if (\n        // not elbow midpoint dragged\n        !(hitElement && isElbowArrow(hitElement)) &&\n        // not dragged\n        !pointerDownState.drag.hasOccurred &&\n        // not resized\n        !this.state.isResizing &&\n        // only hitting the bounding box of the previous hit element\n        ((hitElement &&\n          hitElementBoundingBoxOnly(\n            {\n              x: pointerDownState.origin.x,\n              y: pointerDownState.origin.y,\n              element: hitElement,\n              shape: getElementShape(\n                hitElement,\n                this.scene.getNonDeletedElementsMap(),\n              ),\n              threshold: this.getElementHitThreshold(),\n              frameNameBound: isFrameLikeElement(hitElement)\n                ? this.frameNameBoundsCache.get(hitElement)\n                : null,\n            },\n            elementsMap,\n          )) ||\n          (!hitElement &&\n            pointerDownState.hit.hasHitCommonBoundingBoxOfSelectedElements))\n      ) {\n        if (this.state.editingLinearElement) {\n          this.setState({ editingLinearElement: null });\n        } else {\n          // Deselect selected elements\n          this.setState({\n            selectedElementIds: makeNextSelectedElementIds({}, this.state),\n            selectedGroupIds: {},\n            editingGroupId: null,\n            activeEmbeddable: null,\n          });\n        }\n        // reset cursor\n        setCursor(this.interactiveCanvas, CURSOR_TYPE.AUTO);\n        return;\n      }\n\n      if (!activeTool.locked && activeTool.type !== \"freedraw\" && newElement) {\n        this.setState((prevState) => ({\n          selectedElementIds: makeNextSelectedElementIds(\n            {\n              ...prevState.selectedElementIds,\n              [newElement.id]: true,\n            },\n            prevState,\n          ),\n          showHyperlinkPopup:\n            isEmbeddableElement(newElement) && !newElement.link\n              ? \"editor\"\n              : prevState.showHyperlinkPopup,\n        }));\n      }\n\n      if (\n        activeTool.type !== \"selection\" ||\n        isSomeElementSelected(this.scene.getNonDeletedElements(), this.state) ||\n        !isShallowEqual(\n          this.state.previousSelectedElementIds,\n          this.state.selectedElementIds,\n        )\n      ) {\n        this.store.shouldCaptureIncrement();\n      }\n\n      if (\n        pointerDownState.drag.hasOccurred ||\n        isResizing ||\n        isRotating ||\n        isCropping\n      ) {\n        // We only allow binding via linear elements, specifically via dragging\n        // the endpoints (\"start\" or \"end\").\n        const linearElements = this.scene\n          .getSelectedElements(this.state)\n          .filter(isLinearElement);\n\n        bindOrUnbindLinearElements(\n          linearElements,\n          this.scene.getNonDeletedElementsMap(),\n          this.scene.getNonDeletedElements(),\n          this.scene,\n          isBindingEnabled(this.state),\n          this.state.selectedLinearElement?.selectedPointsIndices ?? [],\n          this.state.zoom,\n        );\n      }\n\n      if (activeTool.type === \"laser\") {\n        this.laserTrails.endPath();\n        return;\n      }\n\n      if (!activeTool.locked && activeTool.type !== \"freedraw\") {\n        resetCursor(this.interactiveCanvas);\n        this.setState({\n          newElement: null,\n          suggestedBindings: [],\n          activeTool: updateActiveTool(this.state, { type: \"selection\" }),\n        });\n      } else {\n        this.setState({\n          newElement: null,\n          suggestedBindings: [],\n        });\n      }\n\n      if (\n        hitElement &&\n        this.lastPointerUpEvent &&\n        this.lastPointerDownEvent &&\n        this.lastPointerUpEvent.timeStamp -\n          this.lastPointerDownEvent.timeStamp <\n          300 &&\n        gesture.pointers.size <= 1 &&\n        isIframeLikeElement(hitElement) &&\n        this.isIframeLikeElementCenter(\n          hitElement,\n          this.lastPointerUpEvent,\n          pointerDownState.origin.x,\n          pointerDownState.origin.y,\n        )\n      ) {\n        this.handleEmbeddableCenterClick(hitElement);\n      }\n    });\n  }\n\n  private restoreReadyToEraseElements = () => {\n    this.elementsPendingErasure = new Set();\n    this.triggerRender();\n  };\n\n  private eraseElements = () => {\n    let didChange = false;\n    const elements = this.scene.getElementsIncludingDeleted().map((ele) => {\n      if (\n        this.elementsPendingErasure.has(ele.id) ||\n        (ele.frameId && this.elementsPendingErasure.has(ele.frameId)) ||\n        (isBoundToContainer(ele) &&\n          this.elementsPendingErasure.has(ele.containerId))\n      ) {\n        didChange = true;\n        return newElementWith(ele, { isDeleted: true });\n      }\n      return ele;\n    });\n\n    this.elementsPendingErasure = new Set();\n\n    if (didChange) {\n      this.store.shouldCaptureIncrement();\n      this.scene.replaceAllElements(elements);\n    }\n  };\n\n  private initializeImage = async ({\n    imageFile,\n    imageElement: _imageElement,\n    showCursorImagePreview = false,\n  }: {\n    imageFile: File;\n    imageElement: ExcalidrawImageElement;\n    showCursorImagePreview?: boolean;\n  }) => {\n    // at this point this should be guaranteed image file, but we do this check\n    // to satisfy TS down the line\n    if (!isSupportedImageFile(imageFile)) {\n      throw new Error(t(\"errors.unsupportedFileType\"));\n    }\n    const mimeType = imageFile.type;\n\n    setCursor(this.interactiveCanvas, \"wait\");\n\n    if (mimeType === MIME_TYPES.svg) {\n      try {\n        imageFile = SVGStringToFile(\n          normalizeSVG(await imageFile.text()),\n          imageFile.name,\n        );\n      } catch (error: any) {\n        console.warn(error);\n        throw new Error(t(\"errors.svgImageInsertError\"));\n      }\n    }\n\n    // generate image id (by default the file digest) before any\n    // resizing/compression takes place to keep it more portable\n    const fileId = await ((this.props.generateIdForFile?.(\n      imageFile,\n    ) as Promise<FileId>) || generateIdFromFile(imageFile));\n\n    if (!fileId) {\n      console.warn(\n        \"Couldn't generate file id or the supplied `generateIdForFile` didn't resolve to one.\",\n      );\n      throw new Error(t(\"errors.imageInsertError\"));\n    }\n\n    const existingFileData = this.files[fileId];\n    if (!existingFileData?.dataURL) {\n      try {\n        imageFile = await resizeImageFile(imageFile, {\n          maxWidthOrHeight: DEFAULT_MAX_IMAGE_WIDTH_OR_HEIGHT,\n        });\n      } catch (error: any) {\n        console.error(\n          \"Error trying to resizing image file on insertion\",\n          error,\n        );\n      }\n\n      if (imageFile.size > MAX_ALLOWED_FILE_BYTES) {\n        throw new Error(\n          t(\"errors.fileTooBig\", {\n            maxSize: `${Math.trunc(MAX_ALLOWED_FILE_BYTES / 1024 / 1024)}MB`,\n          }),\n        );\n      }\n    }\n\n    if (showCursorImagePreview) {\n      const dataURL = this.files[fileId]?.dataURL;\n      // optimization so that we don't unnecessarily resize the original\n      // full-size file for cursor preview\n      // (it's much faster to convert the resized dataURL to File)\n      const resizedFile = dataURL && dataURLToFile(dataURL);\n\n      this.setImagePreviewCursor(resizedFile || imageFile);\n    }\n\n    const dataURL =\n      this.files[fileId]?.dataURL || (await getDataURL(imageFile));\n\n    const imageElement = mutateElement(\n      _imageElement,\n      {\n        fileId,\n      },\n      false,\n    ) as NonDeleted<InitializedExcalidrawImageElement>;\n\n    return new Promise<NonDeleted<InitializedExcalidrawImageElement>>(\n      async (resolve, reject) => {\n        try {\n          this.addMissingFiles([\n            {\n              mimeType,\n              id: fileId,\n              dataURL,\n              created: Date.now(),\n              lastRetrieved: Date.now(),\n            },\n          ]);\n          const cachedImageData = this.imageCache.get(fileId);\n          if (!cachedImageData) {\n            this.addNewImagesToImageCache();\n            await this.updateImageCache([imageElement]);\n          }\n          if (cachedImageData?.image instanceof Promise) {\n            await cachedImageData.image;\n          }\n          if (\n            this.state.pendingImageElementId !== imageElement.id &&\n            this.state.newElement?.id !== imageElement.id\n          ) {\n            this.initializeImageDimensions(imageElement, true);\n          }\n          resolve(imageElement);\n        } catch (error: any) {\n          console.error(error);\n          reject(new Error(t(\"errors.imageInsertError\")));\n        } finally {\n          if (!showCursorImagePreview) {\n            resetCursor(this.interactiveCanvas);\n          }\n        }\n      },\n    );\n  };\n\n  /**\n   * inserts image into elements array and rerenders\n   */\n  insertImageElement = async (\n    imageElement: ExcalidrawImageElement,\n    imageFile: File,\n    showCursorImagePreview?: boolean,\n  ) => {\n    // we should be handling all cases upstream, but in case we forget to handle\n    // a future case, let's throw here\n    if (!this.isToolSupported(\"image\")) {\n      this.setState({ errorMessage: t(\"errors.imageToolNotSupported\") });\n      return;\n    }\n\n    this.scene.insertElement(imageElement);\n\n    try {\n      return await this.initializeImage({\n        imageFile,\n        imageElement,\n        showCursorImagePreview,\n      });\n    } catch (error: any) {\n      mutateElement(imageElement, {\n        isDeleted: true,\n      });\n      this.actionManager.executeAction(actionFinalize);\n      this.setState({\n        errorMessage: error.message || t(\"errors.imageInsertError\"),\n      });\n      return null;\n    }\n  };\n\n  private setImagePreviewCursor = async (imageFile: File) => {\n    // mustn't be larger than 128 px\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Basic_User_Interface/Using_URL_values_for_the_cursor_property\n    const cursorImageSizePx = 96;\n    let imagePreview;\n\n    try {\n      imagePreview = await resizeImageFile(imageFile, {\n        maxWidthOrHeight: cursorImageSizePx,\n      });\n    } catch (e: any) {\n      if (e.cause === \"UNSUPPORTED\") {\n        throw new Error(t(\"errors.unsupportedFileType\"));\n      }\n      throw e;\n    }\n\n    let previewDataURL = await getDataURL(imagePreview);\n\n    // SVG cannot be resized via `resizeImageFile` so we resize by rendering to\n    // a small canvas\n    if (imageFile.type === MIME_TYPES.svg) {\n      const img = await loadHTMLImageElement(previewDataURL);\n\n      let height = Math.min(img.height, cursorImageSizePx);\n      let width = height * (img.width / img.height);\n\n      if (width > cursorImageSizePx) {\n        width = cursorImageSizePx;\n        height = width * (img.height / img.width);\n      }\n\n      const canvas = document.createElement(\"canvas\");\n      canvas.height = height;\n      canvas.width = width;\n      const context = canvas.getContext(\"2d\")!;\n\n      context.drawImage(img, 0, 0, width, height);\n\n      previewDataURL = canvas.toDataURL(MIME_TYPES.svg) as DataURL;\n    }\n\n    if (this.state.pendingImageElementId) {\n      setCursor(this.interactiveCanvas, `url(${previewDataURL}) 4 4, auto`);\n    }\n  };\n\n  private onImageAction = async ({\n    insertOnCanvasDirectly,\n  }: {\n    insertOnCanvasDirectly: boolean;\n  }) => {\n    try {\n      const clientX = this.state.width / 2 + this.state.offsetLeft;\n      const clientY = this.state.height / 2 + this.state.offsetTop;\n\n      const { x, y } = viewportCoordsToSceneCoords(\n        { clientX, clientY },\n        this.state,\n      );\n\n      const imageFile = await fileOpen({\n        description: \"Image\",\n        extensions: Object.keys(\n          IMAGE_MIME_TYPES,\n        ) as (keyof typeof IMAGE_MIME_TYPES)[],\n      });\n\n      const imageElement = this.createImageElement({\n        sceneX: x,\n        sceneY: y,\n        addToFrameUnderCursor: false,\n      });\n\n      if (insertOnCanvasDirectly) {\n        this.insertImageElement(imageElement, imageFile);\n        this.initializeImageDimensions(imageElement);\n        this.setState(\n          {\n            selectedElementIds: makeNextSelectedElementIds(\n              { [imageElement.id]: true },\n              this.state,\n            ),\n          },\n          () => {\n            this.actionManager.executeAction(actionFinalize);\n          },\n        );\n      } else {\n        this.setState(\n          {\n            pendingImageElementId: imageElement.id,\n          },\n          () => {\n            this.insertImageElement(\n              imageElement,\n              imageFile,\n              /* showCursorImagePreview */ true,\n            );\n          },\n        );\n      }\n    } catch (error: any) {\n      if (error.name !== \"AbortError\") {\n        console.error(error);\n      } else {\n        console.warn(error);\n      }\n      this.setState(\n        {\n          pendingImageElementId: null,\n          newElement: null,\n          activeTool: updateActiveTool(this.state, { type: \"selection\" }),\n        },\n        () => {\n          this.actionManager.executeAction(actionFinalize);\n        },\n      );\n    }\n  };\n\n  initializeImageDimensions = (\n    imageElement: ExcalidrawImageElement,\n    forceNaturalSize = false,\n  ) => {\n    const image =\n      isInitializedImageElement(imageElement) &&\n      this.imageCache.get(imageElement.fileId)?.image;\n\n    if (!image || image instanceof Promise) {\n      if (\n        imageElement.width < DRAGGING_THRESHOLD / this.state.zoom.value &&\n        imageElement.height < DRAGGING_THRESHOLD / this.state.zoom.value\n      ) {\n        const placeholderSize = 100 / this.state.zoom.value;\n        mutateElement(imageElement, {\n          x: imageElement.x - placeholderSize / 2,\n          y: imageElement.y - placeholderSize / 2,\n          width: placeholderSize,\n          height: placeholderSize,\n        });\n      }\n\n      return;\n    }\n\n    if (\n      forceNaturalSize ||\n      // if user-created bounding box is below threshold, assume the\n      // intention was to click instead of drag, and use the image's\n      // intrinsic size\n      (imageElement.width < DRAGGING_THRESHOLD / this.state.zoom.value &&\n        imageElement.height < DRAGGING_THRESHOLD / this.state.zoom.value)\n    ) {\n      const minHeight = Math.max(this.state.height - 120, 160);\n      // max 65% of canvas height, clamped to <300px, vh - 120px>\n      const maxHeight = Math.min(\n        minHeight,\n        Math.floor(this.state.height * 0.5) / this.state.zoom.value,\n      );\n\n      const height = Math.min(image.naturalHeight, maxHeight);\n      const width = height * (image.naturalWidth / image.naturalHeight);\n\n      // add current imageElement width/height to account for previous centering\n      // of the placeholder image\n      const x = imageElement.x + imageElement.width / 2 - width / 2;\n      const y = imageElement.y + imageElement.height / 2 - height / 2;\n\n      mutateElement(imageElement, {\n        x,\n        y,\n        width,\n        height,\n        crop: null,\n      });\n    }\n  };\n\n  /** updates image cache, refreshing updated elements and/or setting status\n      to error for images that fail during <img> element creation */\n  private updateImageCache = async (\n    elements: readonly InitializedExcalidrawImageElement[],\n    files = this.files,\n  ) => {\n    const { updatedFiles, erroredFiles } = await _updateImageCache({\n      imageCache: this.imageCache,\n      fileIds: elements.map((element) => element.fileId),\n      files,\n    });\n    if (updatedFiles.size || erroredFiles.size) {\n      for (const element of elements) {\n        if (updatedFiles.has(element.fileId)) {\n          ShapeCache.delete(element);\n        }\n      }\n    }\n    if (erroredFiles.size) {\n      this.scene.replaceAllElements(\n        this.scene.getElementsIncludingDeleted().map((element) => {\n          if (\n            isInitializedImageElement(element) &&\n            erroredFiles.has(element.fileId)\n          ) {\n            return newElementWith(element, {\n              status: \"error\",\n            });\n          }\n          return element;\n        }),\n      );\n    }\n\n    return { updatedFiles, erroredFiles };\n  };\n\n  /** adds new images to imageCache and re-renders if needed */\n  private addNewImagesToImageCache = async (\n    imageElements: InitializedExcalidrawImageElement[] = getInitializedImageElements(\n      this.scene.getNonDeletedElements(),\n    ),\n    files: BinaryFiles = this.files,\n  ) => {\n    const uncachedImageElements = imageElements.filter(\n      (element) => !element.isDeleted && !this.imageCache.has(element.fileId),\n    );\n\n    if (uncachedImageElements.length) {\n      const { updatedFiles } = await this.updateImageCache(\n        uncachedImageElements,\n        files,\n      );\n      if (updatedFiles.size) {\n        this.scene.triggerUpdate();\n      }\n    }\n  };\n\n  /** generally you should use `addNewImagesToImageCache()` directly if you need\n   *  to render new images. This is just a failsafe  */\n  private scheduleImageRefresh = throttle(() => {\n    this.addNewImagesToImageCache();\n  }, IMAGE_RENDER_TIMEOUT);\n\n  private updateBindingEnabledOnPointerMove = (\n    event: React.PointerEvent<HTMLElement>,\n  ) => {\n    const shouldEnableBinding = shouldEnableBindingForPointerEvent(event);\n    if (this.state.isBindingEnabled !== shouldEnableBinding) {\n      this.setState({ isBindingEnabled: shouldEnableBinding });\n    }\n  };\n\n  private maybeSuggestBindingAtCursor = (\n    pointerCoords: {\n      x: number;\n      y: number;\n    },\n    considerAll: boolean,\n  ): void => {\n    const hoveredBindableElement = getHoveredElementForBinding(\n      pointerCoords,\n      this.scene.getNonDeletedElements(),\n      this.scene.getNonDeletedElementsMap(),\n      this.state.zoom,\n      false,\n      considerAll,\n    );\n    this.setState({\n      suggestedBindings:\n        hoveredBindableElement != null ? [hoveredBindableElement] : [],\n    });\n  };\n\n  private maybeSuggestBindingsForLinearElementAtCoords = (\n    linearElement: NonDeleted<ExcalidrawLinearElement>,\n    /** scene coords */\n    pointerCoords: {\n      x: number;\n      y: number;\n    }[],\n    // During line creation the start binding hasn't been written yet\n    // into `linearElement`\n    oppositeBindingBoundElement?: ExcalidrawBindableElement | null,\n  ): void => {\n    if (!pointerCoords.length) {\n      return;\n    }\n\n    const suggestedBindings = pointerCoords.reduce(\n      (acc: NonDeleted<ExcalidrawBindableElement>[], coords) => {\n        const hoveredBindableElement = getHoveredElementForBinding(\n          coords,\n          this.scene.getNonDeletedElements(),\n          this.scene.getNonDeletedElementsMap(),\n          this.state.zoom,\n          isElbowArrow(linearElement),\n          isElbowArrow(linearElement),\n        );\n        if (\n          hoveredBindableElement != null &&\n          !isLinearElementSimpleAndAlreadyBound(\n            linearElement,\n            oppositeBindingBoundElement?.id,\n            hoveredBindableElement,\n          )\n        ) {\n          acc.push(hoveredBindableElement);\n        }\n        return acc;\n      },\n      [],\n    );\n\n    this.setState({ suggestedBindings });\n  };\n\n  private clearSelection(hitElement: ExcalidrawElement | null): void {\n    this.setState((prevState) => ({\n      selectedElementIds: makeNextSelectedElementIds({}, prevState),\n      activeEmbeddable: null,\n      selectedGroupIds: {},\n      // Continue editing the same group if the user selected a different\n      // element from it\n      editingGroupId:\n        prevState.editingGroupId &&\n        hitElement != null &&\n        isElementInGroup(hitElement, prevState.editingGroupId)\n          ? prevState.editingGroupId\n          : null,\n    }));\n    this.setState({\n      selectedElementIds: makeNextSelectedElementIds({}, this.state),\n      activeEmbeddable: null,\n      previousSelectedElementIds: this.state.selectedElementIds,\n    });\n  }\n\n  private handleInteractiveCanvasRef = (canvas: HTMLCanvasElement | null) => {\n    // canvas is null when unmounting\n    if (canvas !== null) {\n      this.interactiveCanvas = canvas;\n\n      // -----------------------------------------------------------------------\n      // NOTE wheel, touchstart, touchend events must be registered outside\n      // of react because react binds them them passively (so we can't prevent\n      // default on them)\n      this.interactiveCanvas.addEventListener(\n        EVENT.TOUCH_START,\n        this.onTouchStart,\n        { passive: false },\n      );\n      this.interactiveCanvas.addEventListener(EVENT.TOUCH_END, this.onTouchEnd);\n      // -----------------------------------------------------------------------\n    } else {\n      this.interactiveCanvas?.removeEventListener(\n        EVENT.TOUCH_START,\n        this.onTouchStart,\n      );\n      this.interactiveCanvas?.removeEventListener(\n        EVENT.TOUCH_END,\n        this.onTouchEnd,\n      );\n    }\n  };\n\n  private handleAppOnDrop = async (event: React.DragEvent<HTMLDivElement>) => {\n    // must be retrieved first, in the same frame\n    const { file, fileHandle } = await getFileFromEvent(event);\n    const { x: sceneX, y: sceneY } = viewportCoordsToSceneCoords(\n      event,\n      this.state,\n    );\n\n    try {\n      // if image tool not supported, don't show an error here and let it fall\n      // through so we still support importing scene data from images. If no\n      // scene data encoded, we'll show an error then\n      if (isSupportedImageFile(file) && this.isToolSupported(\"image\")) {\n        // first attempt to decode scene from the image if it's embedded\n        // ---------------------------------------------------------------------\n\n        if (file?.type === MIME_TYPES.png || file?.type === MIME_TYPES.svg) {\n          try {\n            const scene = await loadFromBlob(\n              file,\n              this.state,\n              this.scene.getElementsIncludingDeleted(),\n              fileHandle,\n            );\n            this.syncActionResult({\n              ...scene,\n              appState: {\n                ...(scene.appState || this.state),\n                isLoading: false,\n              },\n              replaceFiles: true,\n              captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n            });\n            return;\n          } catch (error: any) {\n            // Don't throw for image scene daa\n            if (error.name !== \"EncodingError\") {\n              throw new Error(t(\"alerts.couldNotLoadInvalidFile\"));\n            }\n          }\n        }\n\n        // if no scene is embedded or we fail for whatever reason, fall back\n        // to importing as regular image\n        // ---------------------------------------------------------------------\n\n        const imageElement = this.createImageElement({ sceneX, sceneY });\n        this.insertImageElement(imageElement, file);\n        this.initializeImageDimensions(imageElement);\n        this.setState({\n          selectedElementIds: makeNextSelectedElementIds(\n            { [imageElement.id]: true },\n            this.state,\n          ),\n        });\n\n        return;\n      }\n    } catch (error: any) {\n      return this.setState({\n        isLoading: false,\n        errorMessage: error.message,\n      });\n    }\n\n    const libraryJSON = event.dataTransfer.getData(MIME_TYPES.excalidrawlib);\n    if (libraryJSON && typeof libraryJSON === \"string\") {\n      try {\n        const libraryItems = parseLibraryJSON(libraryJSON);\n        this.addElementsFromPasteOrLibrary({\n          elements: distributeLibraryItemsOnSquareGrid(libraryItems),\n          position: event,\n          files: null,\n        });\n      } catch (error: any) {\n        this.setState({ errorMessage: error.message });\n      }\n      return;\n    }\n\n    if (file) {\n      // Attempt to parse an excalidraw/excalidrawlib file\n      await this.loadFileToCanvas(file, fileHandle);\n    }\n\n    if (event.dataTransfer?.types?.includes(\"text/plain\")) {\n      const text = event.dataTransfer?.getData(\"text\");\n      if (\n        text &&\n        embeddableURLValidator(text, this.props.validateEmbeddable) &&\n        (/^(http|https):\\/\\/[^\\s/$.?#].[^\\s]*$/.test(text) ||\n          getEmbedLink(text)?.type === \"video\")\n      ) {\n        const embeddable = this.insertEmbeddableElement({\n          sceneX,\n          sceneY,\n          link: normalizeLink(text),\n        });\n        if (embeddable) {\n          this.setState({ selectedElementIds: { [embeddable.id]: true } });\n        }\n      }\n    }\n  };\n\n  loadFileToCanvas = async (\n    file: File,\n    fileHandle: FileSystemHandle | null,\n  ) => {\n    file = await normalizeFile(file);\n    try {\n      const elements = this.scene.getElementsIncludingDeleted();\n      let ret;\n      try {\n        ret = await loadSceneOrLibraryFromBlob(\n          file,\n          this.state,\n          elements,\n          fileHandle,\n        );\n      } catch (error: any) {\n        const imageSceneDataError = error instanceof ImageSceneDataError;\n        if (\n          imageSceneDataError &&\n          error.code === \"IMAGE_NOT_CONTAINS_SCENE_DATA\" &&\n          !this.isToolSupported(\"image\")\n        ) {\n          this.setState({\n            isLoading: false,\n            errorMessage: t(\"errors.imageToolNotSupported\"),\n          });\n          return;\n        }\n        const errorMessage = imageSceneDataError\n          ? t(\"alerts.cannotRestoreFromImage\")\n          : t(\"alerts.couldNotLoadInvalidFile\");\n        this.setState({\n          isLoading: false,\n          errorMessage,\n        });\n      }\n      if (!ret) {\n        return;\n      }\n\n      if (ret.type === MIME_TYPES.excalidraw) {\n        // restore the fractional indices by mutating elements\n        syncInvalidIndices(elements.concat(ret.data.elements));\n\n        // update the store snapshot for old elements, otherwise we would end up with duplicated fractional indices on undo\n        this.store.updateSnapshot(arrayToMap(elements), this.state);\n\n        this.setState({ isLoading: true });\n        this.syncActionResult({\n          ...ret.data,\n          appState: {\n            ...(ret.data.appState || this.state),\n            isLoading: false,\n          },\n          replaceFiles: true,\n          captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n        });\n      } else if (ret.type === MIME_TYPES.excalidrawlib) {\n        await this.library\n          .updateLibrary({\n            libraryItems: file,\n            merge: true,\n            openLibraryMenu: true,\n          })\n          .catch((error) => {\n            console.error(error);\n            this.setState({ errorMessage: t(\"errors.importLibraryError\") });\n          });\n      }\n    } catch (error: any) {\n      this.setState({ isLoading: false, errorMessage: error.message });\n    }\n  };\n\n  private handleCanvasContextMenu = (\n    event: React.MouseEvent<HTMLElement | HTMLCanvasElement>,\n  ) => {\n    event.preventDefault();\n\n    if (\n      ((\"pointerType\" in event.nativeEvent &&\n        event.nativeEvent.pointerType === \"touch\") ||\n        (\"pointerType\" in event.nativeEvent &&\n          event.nativeEvent.pointerType === \"pen\" &&\n          // always allow if user uses a pen secondary button\n          event.button !== POINTER_BUTTON.SECONDARY)) &&\n      this.state.activeTool.type !== \"selection\"\n    ) {\n      return;\n    }\n\n    const { x, y } = viewportCoordsToSceneCoords(event, this.state);\n    const element = this.getElementAtPosition(x, y, {\n      preferSelected: true,\n      includeLockedElements: true,\n    });\n\n    const selectedElements = this.scene.getSelectedElements(this.state);\n    const isHittingCommonBoundBox =\n      this.isHittingCommonBoundingBoxOfSelectedElements(\n        { x, y },\n        selectedElements,\n      );\n\n    const type = element || isHittingCommonBoundBox ? \"element\" : \"canvas\";\n\n    const container = this.excalidrawContainerRef.current!;\n    const { top: offsetTop, left: offsetLeft } =\n      container.getBoundingClientRect();\n    const left = event.clientX - offsetLeft;\n    const top = event.clientY - offsetTop;\n\n    trackEvent(\"contextMenu\", \"openContextMenu\", type);\n\n    this.setState(\n      {\n        ...(element && !this.state.selectedElementIds[element.id]\n          ? {\n              ...this.state,\n              ...selectGroupsForSelectedElements(\n                {\n                  editingGroupId: this.state.editingGroupId,\n                  selectedElementIds: { [element.id]: true },\n                },\n                this.scene.getNonDeletedElements(),\n                this.state,\n                this,\n              ),\n              selectedLinearElement: isLinearElement(element)\n                ? new LinearElementEditor(element)\n                : null,\n            }\n          : this.state),\n        showHyperlinkPopup: false,\n      },\n      () => {\n        this.setState({\n          contextMenu: { top, left, items: this.getContextMenuItems(type) },\n        });\n      },\n    );\n  };\n\n  private maybeDragNewGenericElement = (\n    pointerDownState: PointerDownState,\n    event: MouseEvent | KeyboardEvent,\n    informMutation = true,\n  ): void => {\n    const selectionElement = this.state.selectionElement;\n    const pointerCoords = pointerDownState.lastCoords;\n    if (selectionElement && this.state.activeTool.type !== \"eraser\") {\n      dragNewElement({\n        newElement: selectionElement,\n        elementType: this.state.activeTool.type,\n        originX: pointerDownState.origin.x,\n        originY: pointerDownState.origin.y,\n        x: pointerCoords.x,\n        y: pointerCoords.y,\n        width: distance(pointerDownState.origin.x, pointerCoords.x),\n        height: distance(pointerDownState.origin.y, pointerCoords.y),\n        shouldMaintainAspectRatio: shouldMaintainAspectRatio(event),\n        shouldResizeFromCenter: shouldResizeFromCenter(event),\n        zoom: this.state.zoom.value,\n        informMutation,\n      });\n      return;\n    }\n\n    const newElement = this.state.newElement;\n    if (!newElement) {\n      return;\n    }\n\n    let [gridX, gridY] = getGridPoint(\n      pointerCoords.x,\n      pointerCoords.y,\n      event[KEYS.CTRL_OR_CMD] ? null : this.getEffectiveGridSize(),\n    );\n\n    const image =\n      isInitializedImageElement(newElement) &&\n      this.imageCache.get(newElement.fileId)?.image;\n    const aspectRatio =\n      image && !(image instanceof Promise) ? image.width / image.height : null;\n\n    this.maybeCacheReferenceSnapPoints(event, [newElement]);\n\n    const { snapOffset, snapLines } = snapNewElement(\n      newElement,\n      this,\n      event,\n      {\n        x:\n          pointerDownState.originInGrid.x +\n          (this.state.originSnapOffset?.x ?? 0),\n        y:\n          pointerDownState.originInGrid.y +\n          (this.state.originSnapOffset?.y ?? 0),\n      },\n      {\n        x: gridX - pointerDownState.originInGrid.x,\n        y: gridY - pointerDownState.originInGrid.y,\n      },\n      this.scene.getNonDeletedElementsMap(),\n    );\n\n    gridX += snapOffset.x;\n    gridY += snapOffset.y;\n\n    this.setState({\n      snapLines,\n    });\n\n    dragNewElement({\n      newElement,\n      elementType: this.state.activeTool.type,\n      originX: pointerDownState.originInGrid.x,\n      originY: pointerDownState.originInGrid.y,\n      x: gridX,\n      y: gridY,\n      width: distance(pointerDownState.originInGrid.x, gridX),\n      height: distance(pointerDownState.originInGrid.y, gridY),\n      shouldMaintainAspectRatio: isImageElement(newElement)\n        ? !shouldMaintainAspectRatio(event)\n        : shouldMaintainAspectRatio(event),\n      shouldResizeFromCenter: shouldResizeFromCenter(event),\n      zoom: this.state.zoom.value,\n      widthAspectRatio: aspectRatio,\n      originOffset: this.state.originSnapOffset,\n      informMutation,\n    });\n\n    this.setState({\n      newElement,\n    });\n\n    // highlight elements that are to be added to frames on frames creation\n    if (\n      this.state.activeTool.type === TOOL_TYPE.frame ||\n      this.state.activeTool.type === TOOL_TYPE.magicframe\n    ) {\n      this.setState({\n        elementsToHighlight: getElementsInResizingFrame(\n          this.scene.getNonDeletedElements(),\n          newElement as ExcalidrawFrameLikeElement,\n          this.state,\n          this.scene.getNonDeletedElementsMap(),\n        ),\n      });\n    }\n  };\n\n  private maybeHandleCrop = (\n    pointerDownState: PointerDownState,\n    event: MouseEvent | KeyboardEvent,\n  ): boolean => {\n    // to crop, we must already be in the cropping mode, where croppingElement has been set\n    if (!this.state.croppingElementId) {\n      return false;\n    }\n\n    const transformHandleType = pointerDownState.resize.handleType;\n    const pointerCoords = pointerDownState.lastCoords;\n    const [x, y] = getGridPoint(\n      pointerCoords.x - pointerDownState.resize.offset.x,\n      pointerCoords.y - pointerDownState.resize.offset.y,\n      event[KEYS.CTRL_OR_CMD] ? null : this.getEffectiveGridSize(),\n    );\n\n    const croppingElement = this.scene\n      .getNonDeletedElementsMap()\n      .get(this.state.croppingElementId);\n\n    if (\n      transformHandleType &&\n      croppingElement &&\n      isImageElement(croppingElement)\n    ) {\n      const croppingAtStateStart = pointerDownState.originalElements.get(\n        croppingElement.id,\n      );\n\n      const image =\n        isInitializedImageElement(croppingElement) &&\n        this.imageCache.get(croppingElement.fileId)?.image;\n\n      if (\n        croppingAtStateStart &&\n        isImageElement(croppingAtStateStart) &&\n        image &&\n        !(image instanceof Promise)\n      ) {\n        const [gridX, gridY] = getGridPoint(\n          pointerCoords.x,\n          pointerCoords.y,\n          event[KEYS.CTRL_OR_CMD] ? null : this.getEffectiveGridSize(),\n        );\n\n        const dragOffset = {\n          x: gridX - pointerDownState.originInGrid.x,\n          y: gridY - pointerDownState.originInGrid.y,\n        };\n\n        this.maybeCacheReferenceSnapPoints(event, [croppingElement]);\n\n        const { snapOffset, snapLines } = snapResizingElements(\n          [croppingElement],\n          [croppingAtStateStart],\n          this,\n          event,\n          dragOffset,\n          transformHandleType,\n        );\n\n        mutateElement(\n          croppingElement,\n          cropElement(\n            croppingElement,\n            transformHandleType,\n            image.naturalWidth,\n            image.naturalHeight,\n            x + snapOffset.x,\n            y + snapOffset.y,\n            event.shiftKey\n              ? croppingAtStateStart.width / croppingAtStateStart.height\n              : undefined,\n          ),\n        );\n\n        updateBoundElements(\n          croppingElement,\n          this.scene.getNonDeletedElementsMap(),\n          {\n            newSize: {\n              width: croppingElement.width,\n              height: croppingElement.height,\n            },\n          },\n        );\n\n        this.setState({\n          isCropping: transformHandleType && transformHandleType !== \"rotation\",\n          snapLines,\n        });\n      }\n\n      return true;\n    }\n\n    return false;\n  };\n\n  private maybeHandleResize = (\n    pointerDownState: PointerDownState,\n    event: MouseEvent | KeyboardEvent,\n  ): boolean => {\n    const selectedElements = this.scene.getSelectedElements(this.state);\n    const selectedFrames = selectedElements.filter(\n      (element): element is ExcalidrawFrameLikeElement =>\n        isFrameLikeElement(element),\n    );\n\n    const transformHandleType = pointerDownState.resize.handleType;\n\n    if (\n      // Frames cannot be rotated.\n      (selectedFrames.length > 0 && transformHandleType === \"rotation\") ||\n      // Elbow arrows cannot be transformed (resized or rotated).\n      (selectedElements.length === 1 && isElbowArrow(selectedElements[0])) ||\n      // Do not resize when in crop mode\n      this.state.croppingElementId\n    ) {\n      return false;\n    }\n\n    this.setState({\n      // TODO: rename this state field to \"isScaling\" to distinguish\n      // it from the generic \"isResizing\" which includes scaling and\n      // rotating\n      isResizing: transformHandleType && transformHandleType !== \"rotation\",\n      isRotating: transformHandleType === \"rotation\",\n      activeEmbeddable: null,\n    });\n    const pointerCoords = pointerDownState.lastCoords;\n    let [resizeX, resizeY] = getGridPoint(\n      pointerCoords.x - pointerDownState.resize.offset.x,\n      pointerCoords.y - pointerDownState.resize.offset.y,\n      event[KEYS.CTRL_OR_CMD] ? null : this.getEffectiveGridSize(),\n    );\n\n    const frameElementsOffsetsMap = new Map<\n      string,\n      {\n        x: number;\n        y: number;\n      }\n    >();\n\n    selectedFrames.forEach((frame) => {\n      const elementsInFrame = getFrameChildren(\n        this.scene.getNonDeletedElements(),\n        frame.id,\n      );\n\n      elementsInFrame.forEach((element) => {\n        frameElementsOffsetsMap.set(frame.id + element.id, {\n          x: element.x - frame.x,\n          y: element.y - frame.y,\n        });\n      });\n    });\n\n    // check needed for avoiding flickering when a key gets pressed\n    // during dragging\n    if (!this.state.selectedElementsAreBeingDragged) {\n      const [gridX, gridY] = getGridPoint(\n        pointerCoords.x,\n        pointerCoords.y,\n        event[KEYS.CTRL_OR_CMD] ? null : this.getEffectiveGridSize(),\n      );\n\n      const dragOffset = {\n        x: gridX - pointerDownState.originInGrid.x,\n        y: gridY - pointerDownState.originInGrid.y,\n      };\n\n      const originalElements = [...pointerDownState.originalElements.values()];\n\n      this.maybeCacheReferenceSnapPoints(event, selectedElements);\n\n      const { snapOffset, snapLines } = snapResizingElements(\n        selectedElements,\n        getSelectedElements(originalElements, this.state),\n        this,\n        event,\n        dragOffset,\n        transformHandleType,\n      );\n\n      resizeX += snapOffset.x;\n      resizeY += snapOffset.y;\n\n      this.setState({\n        snapLines,\n      });\n    }\n\n    if (\n      transformElements(\n        pointerDownState.originalElements,\n        transformHandleType,\n        selectedElements,\n        this.scene.getElementsMapIncludingDeleted(),\n        this.scene,\n        shouldRotateWithDiscreteAngle(event),\n        shouldResizeFromCenter(event),\n        selectedElements.some((element) => isImageElement(element))\n          ? !shouldMaintainAspectRatio(event)\n          : shouldMaintainAspectRatio(event),\n        resizeX,\n        resizeY,\n        pointerDownState.resize.center.x,\n        pointerDownState.resize.center.y,\n      )\n    ) {\n      const suggestedBindings = getSuggestedBindingsForArrows(\n        selectedElements,\n        this.scene.getNonDeletedElementsMap(),\n        this.state.zoom,\n      );\n\n      const elementsToHighlight = new Set<ExcalidrawElement>();\n      selectedFrames.forEach((frame) => {\n        getElementsInResizingFrame(\n          this.scene.getNonDeletedElements(),\n          frame,\n          this.state,\n          this.scene.getNonDeletedElementsMap(),\n        ).forEach((element) => elementsToHighlight.add(element));\n      });\n\n      this.setState({\n        elementsToHighlight: [...elementsToHighlight],\n        suggestedBindings,\n      });\n\n      return true;\n    }\n    return false;\n  };\n\n  private getContextMenuItems = (\n    type: \"canvas\" | \"element\",\n  ): ContextMenuItems => {\n    const options: ContextMenuItems = [];\n\n    options.push(actionCopyAsPng, actionCopyAsSvg);\n\n    // canvas contextMenu\n    // -------------------------------------------------------------------------\n\n    if (type === \"canvas\") {\n      if (this.state.viewModeEnabled) {\n        return [\n          ...options,\n          actionToggleGridMode,\n          actionToggleZenMode,\n          actionToggleViewMode,\n          actionToggleStats,\n        ];\n      }\n\n      return [\n        actionPaste,\n        CONTEXT_MENU_SEPARATOR,\n        actionCopyAsPng,\n        actionCopyAsSvg,\n        copyText,\n        CONTEXT_MENU_SEPARATOR,\n        actionSelectAll,\n        actionUnlockAllElements,\n        CONTEXT_MENU_SEPARATOR,\n        actionToggleGridMode,\n        actionToggleObjectsSnapMode,\n        actionToggleZenMode,\n        actionToggleViewMode,\n        actionToggleStats,\n      ];\n    }\n\n    // element contextMenu\n    // -------------------------------------------------------------------------\n\n    options.push(copyText);\n\n    if (this.state.viewModeEnabled) {\n      return [actionCopy, ...options];\n    }\n\n    return [\n      CONTEXT_MENU_SEPARATOR,\n      actionCut,\n      actionCopy,\n      actionPaste,\n      CONTEXT_MENU_SEPARATOR,\n      actionSelectAllElementsInFrame,\n      actionRemoveAllElementsFromFrame,\n      actionWrapSelectionInFrame,\n      CONTEXT_MENU_SEPARATOR,\n      actionToggleCropEditor,\n      CONTEXT_MENU_SEPARATOR,\n      ...options,\n      CONTEXT_MENU_SEPARATOR,\n      actionCopyStyles,\n      actionPasteStyles,\n      CONTEXT_MENU_SEPARATOR,\n      actionGroup,\n      actionTextAutoResize,\n      actionUnbindText,\n      actionBindText,\n      actionWrapTextInContainer,\n      actionUngroup,\n      CONTEXT_MENU_SEPARATOR,\n      actionAddToLibrary,\n      CONTEXT_MENU_SEPARATOR,\n      actionSendBackward,\n      actionBringForward,\n      actionSendToBack,\n      actionBringToFront,\n      CONTEXT_MENU_SEPARATOR,\n      actionFlipHorizontal,\n      actionFlipVertical,\n      CONTEXT_MENU_SEPARATOR,\n      actionToggleLinearEditor,\n      CONTEXT_MENU_SEPARATOR,\n      actionLink,\n      actionCopyElementLink,\n      CONTEXT_MENU_SEPARATOR,\n      actionDuplicateSelection,\n      actionToggleElementLock,\n      CONTEXT_MENU_SEPARATOR,\n      actionDeleteSelected,\n    ];\n  };\n\n  private handleWheel = withBatchedUpdates(\n    (\n      event: WheelEvent | React.WheelEvent<HTMLDivElement | HTMLCanvasElement>,\n    ) => {\n      // if not scrolling on canvas/wysiwyg, ignore\n      if (\n        !(\n          event.target instanceof HTMLCanvasElement ||\n          event.target instanceof HTMLTextAreaElement ||\n          event.target instanceof HTMLIFrameElement\n        )\n      ) {\n        // prevent zooming the browser (but allow scrolling DOM)\n        if (event[KEYS.CTRL_OR_CMD]) {\n          event.preventDefault();\n        }\n\n        return;\n      }\n\n      event.preventDefault();\n\n      if (isPanning) {\n        return;\n      }\n\n      const { deltaX, deltaY } = event;\n      // note that event.ctrlKey is necessary to handle pinch zooming\n      if (event.metaKey || event.ctrlKey) {\n        const sign = Math.sign(deltaY);\n        const MAX_STEP = ZOOM_STEP * 100;\n        const absDelta = Math.abs(deltaY);\n        let delta = deltaY;\n        if (absDelta > MAX_STEP) {\n          delta = MAX_STEP * sign;\n        }\n\n        let newZoom = this.state.zoom.value - delta / 100;\n        // increase zoom steps the more zoomed-in we are (applies to >100% only)\n        newZoom +=\n          Math.log10(Math.max(1, this.state.zoom.value)) *\n          -sign *\n          // reduced amplification for small deltas (small movements on a trackpad)\n          Math.min(1, absDelta / 20);\n\n        this.translateCanvas((state) => ({\n          ...getStateForZoom(\n            {\n              viewportX: this.lastViewportPosition.x,\n              viewportY: this.lastViewportPosition.y,\n              nextZoom: getNormalizedZoom(newZoom),\n            },\n            state,\n          ),\n          shouldCacheIgnoreZoom: true,\n        }));\n        this.resetShouldCacheIgnoreZoomDebounced();\n        return;\n      }\n\n      // scroll horizontally when shift pressed\n      if (event.shiftKey) {\n        this.translateCanvas(({ zoom, scrollX }) => ({\n          // on Mac, shift+wheel tends to result in deltaX\n          scrollX: scrollX - (deltaY || deltaX) / zoom.value,\n        }));\n        return;\n      }\n\n      this.translateCanvas(({ zoom, scrollX, scrollY }) => ({\n        scrollX: scrollX - deltaX / zoom.value,\n        scrollY: scrollY - deltaY / zoom.value,\n      }));\n    },\n  );\n\n  private getTextWysiwygSnappedToCenterPosition(\n    x: number,\n    y: number,\n    appState: AppState,\n    container?: ExcalidrawTextContainer | null,\n  ) {\n    if (container) {\n      let elementCenterX = container.x + container.width / 2;\n      let elementCenterY = container.y + container.height / 2;\n\n      const elementCenter = getContainerCenter(\n        container,\n        appState,\n        this.scene.getNonDeletedElementsMap(),\n      );\n      if (elementCenter) {\n        elementCenterX = elementCenter.x;\n        elementCenterY = elementCenter.y;\n      }\n      const distanceToCenter = Math.hypot(\n        x - elementCenterX,\n        y - elementCenterY,\n      );\n      const isSnappedToCenter =\n        distanceToCenter < TEXT_TO_CENTER_SNAP_THRESHOLD;\n      if (isSnappedToCenter) {\n        const { x: viewportX, y: viewportY } = sceneCoordsToViewportCoords(\n          { sceneX: elementCenterX, sceneY: elementCenterY },\n          appState,\n        );\n        return { viewportX, viewportY, elementCenterX, elementCenterY };\n      }\n    }\n  }\n\n  private savePointer = (x: number, y: number, button: \"up\" | \"down\") => {\n    if (!x || !y) {\n      return;\n    }\n    const { x: sceneX, y: sceneY } = viewportCoordsToSceneCoords(\n      { clientX: x, clientY: y },\n      this.state,\n    );\n\n    if (isNaN(sceneX) || isNaN(sceneY)) {\n      // sometimes the pointer goes off screen\n    }\n\n    const pointer: CollaboratorPointer = {\n      x: sceneX,\n      y: sceneY,\n      tool: this.state.activeTool.type === \"laser\" ? \"laser\" : \"pointer\",\n    };\n\n    this.props.onPointerUpdate?.({\n      pointer,\n      button,\n      pointersMap: gesture.pointers,\n    });\n  };\n\n  private resetShouldCacheIgnoreZoomDebounced = debounce(() => {\n    if (!this.unmounted) {\n      this.setState({ shouldCacheIgnoreZoom: false });\n    }\n  }, 300);\n\n  private updateDOMRect = (cb?: () => void) => {\n    if (this.excalidrawContainerRef?.current) {\n      const excalidrawContainer = this.excalidrawContainerRef.current;\n      const {\n        width,\n        height,\n        left: offsetLeft,\n        top: offsetTop,\n      } = excalidrawContainer.getBoundingClientRect();\n      const {\n        width: currentWidth,\n        height: currentHeight,\n        offsetTop: currentOffsetTop,\n        offsetLeft: currentOffsetLeft,\n      } = this.state;\n\n      if (\n        width === currentWidth &&\n        height === currentHeight &&\n        offsetLeft === currentOffsetLeft &&\n        offsetTop === currentOffsetTop\n      ) {\n        if (cb) {\n          cb();\n        }\n        return;\n      }\n\n      this.setState(\n        {\n          width,\n          height,\n          offsetLeft,\n          offsetTop,\n        },\n        () => {\n          cb && cb();\n        },\n      );\n    }\n  };\n\n  public refresh = () => {\n    this.setState({ ...this.getCanvasOffsets() });\n  };\n\n  private getCanvasOffsets(): Pick<AppState, \"offsetTop\" | \"offsetLeft\"> {\n    if (this.excalidrawContainerRef?.current) {\n      const excalidrawContainer = this.excalidrawContainerRef.current;\n      const { left, top } = excalidrawContainer.getBoundingClientRect();\n      return {\n        offsetLeft: left,\n        offsetTop: top,\n      };\n    }\n    return {\n      offsetLeft: 0,\n      offsetTop: 0,\n    };\n  }\n\n  private async updateLanguage() {\n    const currentLang =\n      languages.find((lang) => lang.code === this.props.langCode) ||\n      defaultLang;\n    await setLanguage(currentLang);\n    this.setAppState({});\n  }\n}\n\n// -----------------------------------------------------------------------------\n// TEST HOOKS\n// -----------------------------------------------------------------------------\ndeclare global {\n  interface Window {\n    h: {\n      scene: Scene;\n      elements: readonly ExcalidrawElement[];\n      state: AppState;\n      setState: React.Component<any, AppState>[\"setState\"];\n      app: InstanceType<typeof App>;\n      history: History;\n      store: Store;\n    };\n  }\n}\n\nexport const createTestHook = () => {\n  if (import.meta.env.MODE === ENV.TEST || import.meta.env.DEV) {\n    window.h = window.h || ({} as Window[\"h\"]);\n\n    Object.defineProperties(window.h, {\n      elements: {\n        configurable: true,\n        get() {\n          return this.app?.scene.getElementsIncludingDeleted();\n        },\n        set(elements: ExcalidrawElement[]) {\n          return this.app?.scene.replaceAllElements(\n            syncInvalidIndices(elements),\n          );\n        },\n      },\n      scene: {\n        configurable: true,\n        get() {\n          return this.app?.scene;\n        },\n      },\n    });\n  }\n};\n\ncreateTestHook();\nexport default App;\n", "import \"./ToolIcon.scss\";\n\nimport type { CSSProperties } from \"react\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport clsx from \"clsx\";\nimport { useExcalidrawContainer } from \"./App\";\nimport { AbortError } from \"../errors\";\nimport Spinner from \"./Spinner\";\nimport type { PointerType } from \"../element/types\";\nimport { isPromiseLike } from \"../utils\";\n\nexport type ToolButtonSize = \"small\" | \"medium\";\n\ntype ToolButtonBaseProps = {\n  icon?: React.ReactNode;\n  \"aria-label\": string;\n  \"aria-keyshortcuts\"?: string;\n  \"data-testid\"?: string;\n  label?: string;\n  title?: string;\n  name?: string;\n  id?: string;\n  size?: ToolButtonSize;\n  keyBindingLabel?: string | null;\n  showAriaLabel?: boolean;\n  hidden?: boolean;\n  visible?: boolean;\n  selected?: boolean;\n  disabled?: boolean;\n  className?: string;\n  style?: CSSProperties;\n  isLoading?: boolean;\n};\n\ntype ToolButtonProps =\n  | (ToolButtonBaseProps & {\n      type: \"button\";\n      children?: React.ReactNode;\n      onClick?(event: React.MouseEvent): void;\n    })\n  | (ToolButtonBaseProps & {\n      type: \"submit\";\n      children?: React.ReactNode;\n      onClick?(event: React.MouseEvent): void;\n    })\n  | (ToolButtonBaseProps & {\n      type: \"icon\";\n      children?: React.ReactNode;\n      onClick?(): void;\n    })\n  | (ToolButtonBaseProps & {\n      type: \"radio\";\n      checked: boolean;\n      onChange?(data: { pointerType: PointerType | null }): void;\n      onPointerDown?(data: { pointerType: PointerType }): void;\n    });\n\nexport const ToolButton = React.forwardRef(\n  (\n    {\n      size = \"medium\",\n      visible = true,\n      className = \"\",\n      ...props\n    }: ToolButtonProps,\n    ref,\n  ) => {\n    const { id: excalId } = useExcalidrawContainer();\n    const innerRef = React.useRef(null);\n    React.useImperativeHandle(ref, () => innerRef.current);\n    const sizeCn = `ToolIcon_size_${size}`;\n\n    const [isLoading, setIsLoading] = useState(false);\n\n    const isMountedRef = useRef(true);\n\n    const onClick = async (event: React.MouseEvent) => {\n      const ret = \"onClick\" in props && props.onClick?.(event);\n\n      if (isPromiseLike(ret)) {\n        try {\n          setIsLoading(true);\n          await ret;\n        } catch (error: any) {\n          if (!(error instanceof AbortError)) {\n            throw error;\n          } else {\n            console.warn(error);\n          }\n        } finally {\n          if (isMountedRef.current) {\n            setIsLoading(false);\n          }\n        }\n      }\n    };\n\n    useEffect(() => {\n      isMountedRef.current = true;\n      return () => {\n        isMountedRef.current = false;\n      };\n    }, []);\n\n    const lastPointerTypeRef = useRef<PointerType | null>(null);\n\n    if (\n      props.type === \"button\" ||\n      props.type === \"icon\" ||\n      props.type === \"submit\"\n    ) {\n      const type = (props.type === \"icon\" ? \"button\" : props.type) as\n        | \"button\"\n        | \"submit\";\n      return (\n        <button\n          className={clsx(\n            \"ToolIcon_type_button\",\n            sizeCn,\n            className,\n            visible && !props.hidden\n              ? \"ToolIcon_type_button--show\"\n              : \"ToolIcon_type_button--hide\",\n            {\n              ToolIcon: !props.hidden,\n              \"ToolIcon--selected\": props.selected,\n              \"ToolIcon--plain\": props.type === \"icon\",\n            },\n          )}\n          style={props.style}\n          data-testid={props[\"data-testid\"]}\n          hidden={props.hidden}\n          title={props.title}\n          aria-label={props[\"aria-label\"]}\n          type={type}\n          onClick={onClick}\n          ref={innerRef}\n          disabled={isLoading || props.isLoading || !!props.disabled}\n        >\n          {(props.icon || props.label) && (\n            <div\n              className=\"ToolIcon__icon\"\n              aria-hidden=\"true\"\n              aria-disabled={!!props.disabled}\n            >\n              {props.icon || props.label}\n              {props.keyBindingLabel && (\n                <span className=\"ToolIcon__keybinding\">\n                  {props.keyBindingLabel}\n                </span>\n              )}\n              {props.isLoading && <Spinner />}\n            </div>\n          )}\n          {props.showAriaLabel && (\n            <div className=\"ToolIcon__label\">\n              {props[\"aria-label\"]} {isLoading && <Spinner />}\n            </div>\n          )}\n          {props.children}\n        </button>\n      );\n    }\n\n    return (\n      <label\n        className={clsx(\"ToolIcon\", className)}\n        title={props.title}\n        onPointerDown={(event) => {\n          lastPointerTypeRef.current = event.pointerType || null;\n          props.onPointerDown?.({ pointerType: event.pointerType || null });\n        }}\n        onPointerUp={() => {\n          requestAnimationFrame(() => {\n            lastPointerTypeRef.current = null;\n          });\n        }}\n      >\n        <input\n          className={`ToolIcon_type_radio ${sizeCn}`}\n          type=\"radio\"\n          name={props.name}\n          aria-label={props[\"aria-label\"]}\n          aria-keyshortcuts={props[\"aria-keyshortcuts\"]}\n          data-testid={props[\"data-testid\"]}\n          id={`${excalId}-${props.id}`}\n          onChange={() => {\n            props.onChange?.({ pointerType: lastPointerTypeRef.current });\n          }}\n          checked={props.checked}\n          ref={innerRef}\n        />\n        <div className=\"ToolIcon__icon\">\n          {props.icon}\n          {props.keyBindingLabel && (\n            <span className=\"ToolIcon__keybinding\">\n              {props.keyBindingLabel}\n            </span>\n          )}\n        </div>\n      </label>\n    );\n  },\n);\n\nToolButton.displayName = \"ToolButton\";\n", "import { getSelectedElements, isSomeElementSelected } from \"../scene\";\nimport { KEYS } from \"../keys\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { t } from \"../i18n\";\nimport { register } from \"./register\";\nimport { getNonDeletedElements } from \"../element\";\nimport type { ExcalidrawElement } from \"../element/types\";\nimport type { AppClassProperties, AppState } from \"../types\";\nimport { mutateElement, newElementWith } from \"../element/mutateElement\";\nimport { getElementsInGroup, selectGroupsForSelectedElements } from \"../groups\";\nimport { LinearElementEditor } from \"../element/linearElementEditor\";\nimport { fixBindingsAfterDeletion } from \"../element/binding\";\nimport {\n  isBoundToContainer,\n  isElbowArrow,\n  isFrameLikeElement,\n} from \"../element/typeChecks\";\nimport { updateActiveTool } from \"../utils\";\nimport { TrashIcon } from \"../components/icons\";\nimport { CaptureUpdateAction } from \"../store\";\nimport { getContainerElement } from \"../element/textElement\";\nimport { getFrameChildren } from \"../frame\";\n\nconst deleteSelectedElements = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  app: AppClassProperties,\n) => {\n  const framesToBeDeleted = new Set(\n    getSelectedElements(\n      elements.filter((el) => isFrameLikeElement(el)),\n      appState,\n    ).map((el) => el.id),\n  );\n\n  const selectedElementIds: Record<ExcalidrawElement[\"id\"], true> = {};\n\n  const elementsMap = app.scene.getNonDeletedElementsMap();\n\n  const processedElements = new Set<ExcalidrawElement[\"id\"]>();\n\n  for (const frameId of framesToBeDeleted) {\n    const frameChildren = getFrameChildren(elements, frameId);\n    for (const el of frameChildren) {\n      if (processedElements.has(el.id)) {\n        continue;\n      }\n\n      if (isBoundToContainer(el)) {\n        const containerElement = getContainerElement(el, elementsMap);\n        if (containerElement) {\n          selectedElementIds[containerElement.id] = true;\n        }\n      } else {\n        selectedElementIds[el.id] = true;\n      }\n      processedElements.add(el.id);\n    }\n  }\n\n  let shouldSelectEditingGroup = true;\n\n  const nextElements = elements.map((el) => {\n    if (appState.selectedElementIds[el.id]) {\n      const boundElement = isBoundToContainer(el)\n        ? getContainerElement(el, elementsMap)\n        : null;\n\n      if (el.frameId && framesToBeDeleted.has(el.frameId)) {\n        shouldSelectEditingGroup = false;\n        selectedElementIds[el.id] = true;\n        return el;\n      }\n\n      if (\n        boundElement?.frameId &&\n        framesToBeDeleted.has(boundElement?.frameId)\n      ) {\n        return el;\n      }\n\n      if (el.boundElements) {\n        el.boundElements.forEach((candidate) => {\n          const bound = app.scene.getNonDeletedElementsMap().get(candidate.id);\n          if (bound && isElbowArrow(bound)) {\n            mutateElement(bound, {\n              startBinding:\n                el.id === bound.startBinding?.elementId\n                  ? null\n                  : bound.startBinding,\n              endBinding:\n                el.id === bound.endBinding?.elementId ? null : bound.endBinding,\n            });\n            mutateElement(bound, { points: bound.points });\n          }\n        });\n      }\n      return newElementWith(el, { isDeleted: true });\n    }\n\n    // if deleting a frame, remove the children from it and select them\n    if (el.frameId && framesToBeDeleted.has(el.frameId)) {\n      shouldSelectEditingGroup = false;\n      if (!isBoundToContainer(el)) {\n        selectedElementIds[el.id] = true;\n      }\n      return newElementWith(el, { frameId: null });\n    }\n\n    if (isBoundToContainer(el) && appState.selectedElementIds[el.containerId]) {\n      return newElementWith(el, { isDeleted: true });\n    }\n    return el;\n  });\n\n  let nextEditingGroupId = appState.editingGroupId;\n\n  // select next eligible element in currently editing group or supergroup\n  if (shouldSelectEditingGroup && appState.editingGroupId) {\n    const elems = getElementsInGroup(\n      nextElements,\n      appState.editingGroupId,\n    ).filter((el) => !el.isDeleted);\n    if (elems.length > 1) {\n      if (elems[0]) {\n        selectedElementIds[elems[0].id] = true;\n      }\n    } else {\n      nextEditingGroupId = null;\n      if (elems[0]) {\n        selectedElementIds[elems[0].id] = true;\n      }\n\n      const lastElementInGroup = elems[0];\n      if (lastElementInGroup) {\n        const editingGroupIdx = lastElementInGroup.groupIds.findIndex(\n          (groupId) => {\n            return groupId === appState.editingGroupId;\n          },\n        );\n        const superGroupId = lastElementInGroup.groupIds[editingGroupIdx + 1];\n        if (superGroupId) {\n          const elems = getElementsInGroup(nextElements, superGroupId).filter(\n            (el) => !el.isDeleted,\n          );\n          if (elems.length > 1) {\n            nextEditingGroupId = superGroupId;\n\n            elems.forEach((el) => {\n              selectedElementIds[el.id] = true;\n            });\n          }\n        }\n      }\n    }\n  }\n\n  return {\n    elements: nextElements,\n    appState: {\n      ...appState,\n      ...selectGroupsForSelectedElements(\n        {\n          selectedElementIds,\n          editingGroupId: nextEditingGroupId,\n        },\n        nextElements,\n        appState,\n        null,\n      ),\n    },\n  };\n};\n\nconst handleGroupEditingState = (\n  appState: AppState,\n  elements: readonly ExcalidrawElement[],\n): AppState => {\n  if (appState.editingGroupId) {\n    const siblingElements = getElementsInGroup(\n      getNonDeletedElements(elements),\n      appState.editingGroupId!,\n    );\n    if (siblingElements.length) {\n      return {\n        ...appState,\n        selectedElementIds: { [siblingElements[0].id]: true },\n      };\n    }\n  }\n  return appState;\n};\n\nexport const actionDeleteSelected = register({\n  name: \"deleteSelectedElements\",\n  label: \"labels.delete\",\n  icon: TrashIcon,\n  trackEvent: { category: \"element\", action: \"delete\" },\n  perform: (elements, appState, formData, app) => {\n    if (appState.editingLinearElement) {\n      const {\n        elementId,\n        selectedPointsIndices,\n        startBindingElement,\n        endBindingElement,\n      } = appState.editingLinearElement;\n      const elementsMap = app.scene.getNonDeletedElementsMap();\n      const element = LinearElementEditor.getElement(elementId, elementsMap);\n      if (!element) {\n        return false;\n      }\n      // case: no point selected \u2192 do nothing, as deleting the whole element\n      // is most likely a mistake, where you wanted to delete a specific point\n      // but failed to select it (or you thought it's selected, while it was\n      // only in a hover state)\n      if (selectedPointsIndices == null) {\n        return false;\n      }\n\n      // case: deleting last remaining point\n      if (element.points.length < 2) {\n        const nextElements = elements.map((el) => {\n          if (el.id === element.id) {\n            return newElementWith(el, { isDeleted: true });\n          }\n          return el;\n        });\n        const nextAppState = handleGroupEditingState(appState, nextElements);\n\n        return {\n          elements: nextElements,\n          appState: {\n            ...nextAppState,\n            editingLinearElement: null,\n          },\n          captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n        };\n      }\n\n      // We cannot do this inside `movePoint` because it is also called\n      // when deleting the uncommitted point (which hasn't caused any binding)\n      const binding = {\n        startBindingElement: selectedPointsIndices?.includes(0)\n          ? null\n          : startBindingElement,\n        endBindingElement: selectedPointsIndices?.includes(\n          element.points.length - 1,\n        )\n          ? null\n          : endBindingElement,\n      };\n\n      LinearElementEditor.deletePoints(element, selectedPointsIndices);\n\n      return {\n        elements,\n        appState: {\n          ...appState,\n          editingLinearElement: {\n            ...appState.editingLinearElement,\n            ...binding,\n            selectedPointsIndices:\n              selectedPointsIndices?.[0] > 0\n                ? [selectedPointsIndices[0] - 1]\n                : [0],\n          },\n        },\n        captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n      };\n    }\n\n    let { elements: nextElements, appState: nextAppState } =\n      deleteSelectedElements(elements, appState, app);\n\n    fixBindingsAfterDeletion(\n      nextElements,\n      nextElements.filter((el) => el.isDeleted),\n    );\n\n    nextAppState = handleGroupEditingState(nextAppState, nextElements);\n\n    return {\n      elements: nextElements,\n      appState: {\n        ...nextAppState,\n        activeTool: updateActiveTool(appState, { type: \"selection\" }),\n        multiElement: null,\n        activeEmbeddable: null,\n      },\n      captureUpdate: isSomeElementSelected(\n        getNonDeletedElements(elements),\n        appState,\n      )\n        ? CaptureUpdateAction.IMMEDIATELY\n        : CaptureUpdateAction.EVENTUALLY,\n    };\n  },\n  keyTest: (event, appState, elements) =>\n    (event.key === KEYS.BACKSPACE || event.key === KEYS.DELETE) &&\n    !event[KEYS.CTRL_OR_CMD],\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={TrashIcon}\n      title={t(\"labels.delete\")}\n      aria-label={t(\"labels.delete\")}\n      onClick={() => updateData(null)}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n", "import { isFrameLikeElement } from \"./element/typeChecks\";\nimport type {\n  ExcalidrawElement,\n  ExcalidrawFrameLikeElement,\n} from \"./element/types\";\nimport { syncMovedIndices } from \"./fractionalIndex\";\nimport { getElementsInGroup } from \"./groups\";\nimport { getSelectedElements } from \"./scene\";\nimport Scene from \"./scene/Scene\";\nimport type { AppState } from \"./types\";\nimport { arrayToMap, findIndex, findLastIndex } from \"./utils\";\n\nconst isOfTargetFrame = (element: ExcalidrawElement, frameId: string) => {\n  return element.frameId === frameId || element.id === frameId;\n};\n\n/**\n * Returns indices of elements to move based on selected elements.\n * Includes contiguous deleted elements that are between two selected elements,\n *  e.g.: [0 (selected), 1 (deleted), 2 (deleted), 3 (selected)]\n *\n * Specified elements (elementsToBeMoved) take precedence over\n * appState.selectedElementsIds\n */\nconst getIndicesToMove = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  elementsToBeMoved?: readonly ExcalidrawElement[],\n) => {\n  let selectedIndices: number[] = [];\n  let deletedIndices: number[] = [];\n  let includeDeletedIndex = null;\n  let index = -1;\n  const selectedElementIds = arrayToMap(\n    elementsToBeMoved\n      ? elementsToBeMoved\n      : getSelectedElements(elements, appState, {\n          includeBoundTextElement: true,\n          includeElementsInFrames: true,\n        }),\n  );\n  while (++index < elements.length) {\n    const element = elements[index];\n    if (selectedElementIds.get(element.id)) {\n      if (deletedIndices.length) {\n        selectedIndices = selectedIndices.concat(deletedIndices);\n        deletedIndices = [];\n      }\n      selectedIndices.push(index);\n      includeDeletedIndex = index + 1;\n    } else if (element.isDeleted && includeDeletedIndex === index) {\n      includeDeletedIndex = index + 1;\n      deletedIndices.push(index);\n    } else {\n      deletedIndices = [];\n    }\n  }\n  return selectedIndices;\n};\n\nconst toContiguousGroups = (array: number[]) => {\n  let cursor = 0;\n  return array.reduce((acc, value, index) => {\n    if (index > 0 && array[index - 1] !== value - 1) {\n      cursor = ++cursor;\n    }\n    (acc[cursor] || (acc[cursor] = [])).push(value);\n    return acc;\n  }, [] as number[][]);\n};\n\n/**\n * @returns index of target element, consindering tightly-bound elements\n * (currently non-linear elements bound to a container) as a one unit.\n * If no binding present, returns `undefined`.\n */\nconst getTargetIndexAccountingForBinding = (\n  nextElement: ExcalidrawElement,\n  elements: readonly ExcalidrawElement[],\n  direction: \"left\" | \"right\",\n) => {\n  if (\"containerId\" in nextElement && nextElement.containerId) {\n    const containerElement = Scene.getScene(nextElement)!.getElement(\n      nextElement.containerId,\n    );\n    if (containerElement) {\n      return direction === \"left\"\n        ? Math.min(\n            elements.indexOf(containerElement),\n            elements.indexOf(nextElement),\n          )\n        : Math.max(\n            elements.indexOf(containerElement),\n            elements.indexOf(nextElement),\n          );\n    }\n  } else {\n    const boundElementId = nextElement.boundElements?.find(\n      (binding) => binding.type !== \"arrow\",\n    )?.id;\n    if (boundElementId) {\n      const boundTextElement =\n        Scene.getScene(nextElement)!.getElement(boundElementId);\n      if (boundTextElement) {\n        return direction === \"left\"\n          ? Math.min(\n              elements.indexOf(boundTextElement),\n              elements.indexOf(nextElement),\n            )\n          : Math.max(\n              elements.indexOf(boundTextElement),\n              elements.indexOf(nextElement),\n            );\n      }\n    }\n  }\n};\n\nconst getContiguousFrameRangeElements = (\n  allElements: readonly ExcalidrawElement[],\n  frameId: ExcalidrawFrameLikeElement[\"id\"],\n) => {\n  let rangeStart = -1;\n  let rangeEnd = -1;\n  allElements.forEach((element, index) => {\n    if (isOfTargetFrame(element, frameId)) {\n      if (rangeStart === -1) {\n        rangeStart = index;\n      }\n      rangeEnd = index;\n    }\n  });\n  if (rangeStart === -1) {\n    return [];\n  }\n  return allElements.slice(rangeStart, rangeEnd + 1);\n};\n\n/**\n * Returns next candidate index that's available to be moved to. Currently that\n *  is a non-deleted element, and not inside a group (unless we're editing it).\n */\nconst getTargetIndex = (\n  appState: AppState,\n  elements: readonly ExcalidrawElement[],\n  boundaryIndex: number,\n  direction: \"left\" | \"right\",\n  /**\n   * Frame id if moving frame children.\n   * If whole frame (including all children) is being moved, supply `null`.\n   */\n  containingFrame: ExcalidrawFrameLikeElement[\"id\"] | null,\n) => {\n  const sourceElement = elements[boundaryIndex];\n\n  const indexFilter = (element: ExcalidrawElement) => {\n    if (element.isDeleted) {\n      return false;\n    }\n    if (containingFrame) {\n      return element.frameId === containingFrame;\n    }\n    // if we're editing group, find closest sibling irrespective of whether\n    // there's a different-group element between them (for legacy reasons)\n    if (appState.editingGroupId) {\n      return element.groupIds.includes(appState.editingGroupId);\n    }\n    return true;\n  };\n\n  const candidateIndex =\n    direction === \"left\"\n      ? findLastIndex(\n          elements,\n          (el) => indexFilter(el),\n          Math.max(0, boundaryIndex - 1),\n        )\n      : findIndex(elements, (el) => indexFilter(el), boundaryIndex + 1);\n\n  const nextElement = elements[candidateIndex];\n\n  if (!nextElement) {\n    return -1;\n  }\n\n  if (appState.editingGroupId) {\n    if (\n      // candidate element is a sibling in current editing group \u2192 return\n      sourceElement?.groupIds.join(\"\") === nextElement?.groupIds.join(\"\")\n    ) {\n      return (\n        getTargetIndexAccountingForBinding(nextElement, elements, direction) ??\n        candidateIndex\n      );\n    } else if (!nextElement?.groupIds.includes(appState.editingGroupId)) {\n      // candidate element is outside current editing group \u2192 prevent\n      return -1;\n    }\n  }\n\n  if (\n    !containingFrame &&\n    (nextElement.frameId || isFrameLikeElement(nextElement))\n  ) {\n    const frameElements = getContiguousFrameRangeElements(\n      elements,\n      nextElement.frameId || nextElement.id,\n    );\n    return direction === \"left\"\n      ? elements.indexOf(frameElements[0])\n      : elements.indexOf(frameElements[frameElements.length - 1]);\n  }\n\n  if (!nextElement.groupIds.length) {\n    return (\n      getTargetIndexAccountingForBinding(nextElement, elements, direction) ??\n      candidateIndex\n    );\n  }\n\n  const siblingGroupId = appState.editingGroupId\n    ? nextElement.groupIds[\n        nextElement.groupIds.indexOf(appState.editingGroupId) - 1\n      ]\n    : nextElement.groupIds[nextElement.groupIds.length - 1];\n\n  const elementsInSiblingGroup = getElementsInGroup(elements, siblingGroupId);\n\n  if (elementsInSiblingGroup.length) {\n    // assumes getElementsInGroup() returned elements are sorted\n    // by zIndex (ascending)\n    return direction === \"left\"\n      ? elements.indexOf(elementsInSiblingGroup[0])\n      : elements.indexOf(\n          elementsInSiblingGroup[elementsInSiblingGroup.length - 1],\n        );\n  }\n\n  return candidateIndex;\n};\n\nconst getTargetElementsMap = <T extends ExcalidrawElement>(\n  elements: readonly T[],\n  indices: number[],\n) => {\n  return indices.reduce((acc, index) => {\n    const element = elements[index];\n    acc.set(element.id, element);\n    return acc;\n  }, new Map<string, ExcalidrawElement>());\n};\n\nconst shiftElementsByOne = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  direction: \"left\" | \"right\",\n) => {\n  const indicesToMove = getIndicesToMove(elements, appState);\n  const targetElementsMap = getTargetElementsMap(elements, indicesToMove);\n\n  let groupedIndices = toContiguousGroups(indicesToMove);\n\n  if (direction === \"right\") {\n    groupedIndices = groupedIndices.reverse();\n  }\n\n  const selectedFrames = new Set<ExcalidrawFrameLikeElement[\"id\"]>(\n    indicesToMove\n      .filter((idx) => isFrameLikeElement(elements[idx]))\n      .map((idx) => elements[idx].id),\n  );\n\n  groupedIndices.forEach((indices, i) => {\n    const leadingIndex = indices[0];\n    const trailingIndex = indices[indices.length - 1];\n    const boundaryIndex = direction === \"left\" ? leadingIndex : trailingIndex;\n\n    const containingFrame = indices.some((idx) => {\n      const el = elements[idx];\n      return el.frameId && selectedFrames.has(el.frameId);\n    })\n      ? null\n      : elements[boundaryIndex]?.frameId;\n\n    const targetIndex = getTargetIndex(\n      appState,\n      elements,\n      boundaryIndex,\n      direction,\n      containingFrame,\n    );\n\n    if (targetIndex === -1 || boundaryIndex === targetIndex) {\n      return;\n    }\n\n    const leadingElements =\n      direction === \"left\"\n        ? elements.slice(0, targetIndex)\n        : elements.slice(0, leadingIndex);\n    const targetElements = elements.slice(leadingIndex, trailingIndex + 1);\n    const displacedElements =\n      direction === \"left\"\n        ? elements.slice(targetIndex, leadingIndex)\n        : elements.slice(trailingIndex + 1, targetIndex + 1);\n    const trailingElements =\n      direction === \"left\"\n        ? elements.slice(trailingIndex + 1)\n        : elements.slice(targetIndex + 1);\n\n    elements =\n      direction === \"left\"\n        ? [\n            ...leadingElements,\n            ...targetElements,\n            ...displacedElements,\n            ...trailingElements,\n          ]\n        : [\n            ...leadingElements,\n            ...displacedElements,\n            ...targetElements,\n            ...trailingElements,\n          ];\n  });\n\n  syncMovedIndices(elements, targetElementsMap);\n\n  return elements;\n};\n\nconst shiftElementsToEnd = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  direction: \"left\" | \"right\",\n  containingFrame: ExcalidrawFrameLikeElement[\"id\"] | null,\n  elementsToBeMoved?: readonly ExcalidrawElement[],\n) => {\n  const indicesToMove = getIndicesToMove(elements, appState, elementsToBeMoved);\n  const targetElementsMap = getTargetElementsMap(elements, indicesToMove);\n  const displacedElements: ExcalidrawElement[] = [];\n\n  let leadingIndex: number;\n  let trailingIndex: number;\n  if (direction === \"left\") {\n    if (containingFrame) {\n      leadingIndex = findIndex(elements, (el) =>\n        isOfTargetFrame(el, containingFrame),\n      );\n    } else if (appState.editingGroupId) {\n      const groupElements = getElementsInGroup(\n        elements,\n        appState.editingGroupId,\n      );\n      if (!groupElements.length) {\n        return elements;\n      }\n      leadingIndex = elements.indexOf(groupElements[0]);\n    } else {\n      leadingIndex = 0;\n    }\n\n    trailingIndex = indicesToMove[indicesToMove.length - 1];\n  } else {\n    if (containingFrame) {\n      trailingIndex = findLastIndex(elements, (el) =>\n        isOfTargetFrame(el, containingFrame),\n      );\n    } else if (appState.editingGroupId) {\n      const groupElements = getElementsInGroup(\n        elements,\n        appState.editingGroupId,\n      );\n      if (!groupElements.length) {\n        return elements;\n      }\n      trailingIndex = elements.indexOf(groupElements[groupElements.length - 1]);\n    } else {\n      trailingIndex = elements.length - 1;\n    }\n\n    leadingIndex = indicesToMove[0];\n  }\n\n  if (leadingIndex === -1) {\n    leadingIndex = 0;\n  }\n\n  for (let index = leadingIndex; index < trailingIndex + 1; index++) {\n    if (!indicesToMove.includes(index)) {\n      displacedElements.push(elements[index]);\n    }\n  }\n\n  const targetElements = Array.from(targetElementsMap.values());\n  const leadingElements = elements.slice(0, leadingIndex);\n  const trailingElements = elements.slice(trailingIndex + 1);\n  const nextElements =\n    direction === \"left\"\n      ? [\n          ...leadingElements,\n          ...targetElements,\n          ...displacedElements,\n          ...trailingElements,\n        ]\n      : [\n          ...leadingElements,\n          ...displacedElements,\n          ...targetElements,\n          ...trailingElements,\n        ];\n\n  syncMovedIndices(nextElements, targetElementsMap);\n\n  return nextElements;\n};\n\nfunction shiftElementsAccountingForFrames(\n  allElements: readonly ExcalidrawElement[],\n  appState: AppState,\n  direction: \"left\" | \"right\",\n  shiftFunction: (\n    elements: readonly ExcalidrawElement[],\n    appState: AppState,\n    direction: \"left\" | \"right\",\n    containingFrame: ExcalidrawFrameLikeElement[\"id\"] | null,\n    elementsToBeMoved?: readonly ExcalidrawElement[],\n  ) => ExcalidrawElement[] | readonly ExcalidrawElement[],\n) {\n  const elementsToMove = arrayToMap(\n    getSelectedElements(allElements, appState, {\n      includeBoundTextElement: true,\n      includeElementsInFrames: true,\n    }),\n  );\n\n  const frameAwareContiguousElementsToMove: {\n    regularElements: ExcalidrawElement[];\n    frameChildren: Map<ExcalidrawFrameLikeElement[\"id\"], ExcalidrawElement[]>;\n  } = { regularElements: [], frameChildren: new Map() };\n\n  const fullySelectedFrames = new Set<ExcalidrawFrameLikeElement[\"id\"]>();\n\n  for (const element of allElements) {\n    if (elementsToMove.has(element.id) && isFrameLikeElement(element)) {\n      fullySelectedFrames.add(element.id);\n    }\n  }\n\n  for (const element of allElements) {\n    if (elementsToMove.has(element.id)) {\n      if (\n        isFrameLikeElement(element) ||\n        (element.frameId && fullySelectedFrames.has(element.frameId))\n      ) {\n        frameAwareContiguousElementsToMove.regularElements.push(element);\n      } else if (!element.frameId) {\n        frameAwareContiguousElementsToMove.regularElements.push(element);\n      } else {\n        const frameChildren =\n          frameAwareContiguousElementsToMove.frameChildren.get(\n            element.frameId,\n          ) || [];\n        frameChildren.push(element);\n        frameAwareContiguousElementsToMove.frameChildren.set(\n          element.frameId,\n          frameChildren,\n        );\n      }\n    }\n  }\n\n  let nextElements = allElements;\n\n  const frameChildrenSets = Array.from(\n    frameAwareContiguousElementsToMove.frameChildren.entries(),\n  );\n\n  for (const [frameId, children] of frameChildrenSets) {\n    nextElements = shiftFunction(\n      allElements,\n      appState,\n      direction,\n      frameId,\n      children,\n    );\n  }\n\n  return shiftFunction(\n    nextElements,\n    appState,\n    direction,\n    null,\n    frameAwareContiguousElementsToMove.regularElements,\n  );\n}\n\n// public API\n// -----------------------------------------------------------------------------\n\nexport const moveOneLeft = (\n  allElements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  return shiftElementsByOne(allElements, appState, \"left\");\n};\n\nexport const moveOneRight = (\n  allElements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  return shiftElementsByOne(allElements, appState, \"right\");\n};\n\nexport const moveAllLeft = (\n  allElements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  return shiftElementsAccountingForFrames(\n    allElements,\n    appState,\n    \"left\",\n    shiftElementsToEnd,\n  );\n};\n\nexport const moveAllRight = (\n  allElements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  return shiftElementsAccountingForFrames(\n    allElements,\n    appState,\n    \"right\",\n    shiftElementsToEnd,\n  );\n};\n", "import {\n  moveOneLeft,\n  moveOneRight,\n  moveAllLeft,\n  moveAllRight,\n} from \"../zindex\";\nimport { KEYS, CODES } from \"../keys\";\nimport { t } from \"../i18n\";\nimport { getShortcutKey } from \"../utils\";\nimport { register } from \"./register\";\nimport {\n  BringForwardIcon,\n  BringToFrontIcon,\n  SendBackwardIcon,\n  SendToBackIcon,\n} from \"../components/icons\";\nimport { isDarwin } from \"../constants\";\nimport { CaptureUpdateAction } from \"../store\";\n\nexport const actionSendBackward = register({\n  name: \"sendBackward\",\n  label: \"labels.sendBackward\",\n  keywords: [\"move down\", \"zindex\", \"layer\"],\n  icon: SendBackwardIcon,\n  trackEvent: { category: \"element\" },\n  perform: (elements, appState) => {\n    return {\n      elements: moveOneLeft(elements, appState),\n      appState,\n      captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n    };\n  },\n  keyPriority: 40,\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] &&\n    !event.shiftKey &&\n    event.code === CODES.BRACKET_LEFT,\n  PanelComponent: ({ updateData, appState }) => (\n    <button\n      type=\"button\"\n      className=\"zIndexButton\"\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.sendBackward\")} \u2014 ${getShortcutKey(\"CtrlOrCmd+[\")}`}\n    >\n      {SendBackwardIcon}\n    </button>\n  ),\n});\n\nexport const actionBringForward = register({\n  name: \"bringForward\",\n  label: \"labels.bringForward\",\n  keywords: [\"move up\", \"zindex\", \"layer\"],\n  icon: BringForwardIcon,\n  trackEvent: { category: \"element\" },\n  perform: (elements, appState) => {\n    return {\n      elements: moveOneRight(elements, appState),\n      appState,\n      captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n    };\n  },\n  keyPriority: 40,\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] &&\n    !event.shiftKey &&\n    event.code === CODES.BRACKET_RIGHT,\n  PanelComponent: ({ updateData, appState }) => (\n    <button\n      type=\"button\"\n      className=\"zIndexButton\"\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.bringForward\")} \u2014 ${getShortcutKey(\"CtrlOrCmd+]\")}`}\n    >\n      {BringForwardIcon}\n    </button>\n  ),\n});\n\nexport const actionSendToBack = register({\n  name: \"sendToBack\",\n  label: \"labels.sendToBack\",\n  keywords: [\"move down\", \"zindex\", \"layer\"],\n  icon: SendToBackIcon,\n  trackEvent: { category: \"element\" },\n  perform: (elements, appState) => {\n    return {\n      elements: moveAllLeft(elements, appState),\n      appState,\n      captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n    };\n  },\n  keyTest: (event) =>\n    isDarwin\n      ? event[KEYS.CTRL_OR_CMD] &&\n        event.altKey &&\n        event.code === CODES.BRACKET_LEFT\n      : event[KEYS.CTRL_OR_CMD] &&\n        event.shiftKey &&\n        event.code === CODES.BRACKET_LEFT,\n  PanelComponent: ({ updateData, appState }) => (\n    <button\n      type=\"button\"\n      className=\"zIndexButton\"\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.sendToBack\")} \u2014 ${\n        isDarwin\n          ? getShortcutKey(\"CtrlOrCmd+Alt+[\")\n          : getShortcutKey(\"CtrlOrCmd+Shift+[\")\n      }`}\n    >\n      {SendToBackIcon}\n    </button>\n  ),\n});\n\nexport const actionBringToFront = register({\n  name: \"bringToFront\",\n  label: \"labels.bringToFront\",\n  keywords: [\"move up\", \"zindex\", \"layer\"],\n  icon: BringToFrontIcon,\n  trackEvent: { category: \"element\" },\n\n  perform: (elements, appState) => {\n    return {\n      elements: moveAllRight(elements, appState),\n      appState,\n      captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n    };\n  },\n  keyTest: (event) =>\n    isDarwin\n      ? event[KEYS.CTRL_OR_CMD] &&\n        event.altKey &&\n        event.code === CODES.BRACKET_RIGHT\n      : event[KEYS.CTRL_OR_CMD] &&\n        event.shiftKey &&\n        event.code === CODES.BRACKET_RIGHT,\n  PanelComponent: ({ updateData, appState }) => (\n    <button\n      type=\"button\"\n      className=\"zIndexButton\"\n      onClick={(event) => updateData(null)}\n      title={`${t(\"labels.bringToFront\")} \u2014 ${\n        isDarwin\n          ? getShortcutKey(\"CtrlOrCmd+Alt+]\")\n          : getShortcutKey(\"CtrlOrCmd+Shift+]\")\n      }`}\n    >\n      {BringToFrontIcon}\n    </button>\n  ),\n});\n", "import { KEYS } from \"../keys\";\nimport { register } from \"./register\";\nimport { selectGroupsForSelectedElements } from \"../groups\";\nimport { getNonDeletedElements, isTextElement } from \"../element\";\nimport type { ExcalidrawElement } from \"../element/types\";\nimport { isLinearElement } from \"../element/typeChecks\";\nimport { LinearElementEditor } from \"../element/linearElementEditor\";\nimport { selectAllIcon } from \"../components/icons\";\nimport { CaptureUpdateAction } from \"../store\";\n\nexport const actionSelectAll = register({\n  name: \"selectAll\",\n  label: \"labels.selectAll\",\n  icon: selectAllIcon,\n  trackEvent: { category: \"canvas\" },\n  viewMode: false,\n  perform: (elements, appState, value, app) => {\n    if (appState.editingLinearElement) {\n      return false;\n    }\n\n    const selectedElementIds = elements\n      .filter(\n        (element) =>\n          !element.isDeleted &&\n          !(isTextElement(element) && element.containerId) &&\n          !element.locked,\n      )\n      .reduce((map: Record<ExcalidrawElement[\"id\"], true>, element) => {\n        map[element.id] = true;\n        return map;\n      }, {});\n\n    return {\n      appState: {\n        ...appState,\n        ...selectGroupsForSelectedElements(\n          {\n            editingGroupId: null,\n            selectedElementIds,\n          },\n          getNonDeletedElements(elements),\n          appState,\n          app,\n        ),\n        selectedLinearElement:\n          // single linear element selected\n          Object.keys(selectedElementIds).length === 1 &&\n          isLinearElement(elements[0])\n            ? new LinearElementEditor(elements[0])\n            : null,\n      },\n      captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n    };\n  },\n  keyTest: (event) => event[KEYS.CTRL_OR_CMD] && event.key === KEYS.A,\n});\n", "import { arrayToMapWithIndex } from \"../utils\";\nimport type { ExcalidrawElement } from \"./types\";\n\nconst normalizeGroupElementOrder = (elements: readonly ExcalidrawElement[]) => {\n  const origElements: ExcalidrawElement[] = elements.slice();\n  const sortedElements = new Set<ExcalidrawElement>();\n\n  const orderInnerGroups = (\n    elements: readonly ExcalidrawElement[],\n  ): ExcalidrawElement[] => {\n    const firstGroupSig = elements[0]?.groupIds?.join(\"\");\n    const aGroup: ExcalidrawElement[] = [elements[0]];\n    const bGroup: ExcalidrawElement[] = [];\n    for (const element of elements.slice(1)) {\n      if (element.groupIds?.join(\"\") === firstGroupSig) {\n        aGroup.push(element);\n      } else {\n        bGroup.push(element);\n      }\n    }\n    return bGroup.length ? [...aGroup, ...orderInnerGroups(bGroup)] : aGroup;\n  };\n\n  const groupHandledElements = new Map<string, true>();\n\n  origElements.forEach((element, idx) => {\n    if (groupHandledElements.has(element.id)) {\n      return;\n    }\n    if (element.groupIds?.length) {\n      const topGroup = element.groupIds[element.groupIds.length - 1];\n      const groupElements = origElements.slice(idx).filter((element) => {\n        const ret = element?.groupIds?.some((id) => id === topGroup);\n        if (ret) {\n          groupHandledElements.set(element!.id, true);\n        }\n        return ret;\n      });\n\n      for (const elem of orderInnerGroups(groupElements)) {\n        sortedElements.add(elem);\n      }\n    } else {\n      sortedElements.add(element);\n    }\n  });\n\n  // if there's a bug which resulted in losing some of the elements, return\n  // original instead as that's better than losing data\n  if (sortedElements.size !== elements.length) {\n    console.error(\"normalizeGroupElementOrder: lost some elements... bailing!\");\n    return elements;\n  }\n\n  return [...sortedElements];\n};\n\n/**\n * In theory, when we have text elements bound to a container, they\n * should be right after the container element in the elements array.\n * However, this is not guaranteed due to old and potential future bugs.\n *\n * This function sorts containers and their bound texts together. It prefers\n * original z-index of container (i.e. it moves bound text elements after\n * containers).\n */\nconst normalizeBoundElementsOrder = (\n  elements: readonly ExcalidrawElement[],\n) => {\n  const elementsMap = arrayToMapWithIndex(elements);\n\n  const origElements: (ExcalidrawElement | null)[] = elements.slice();\n  const sortedElements = new Set<ExcalidrawElement>();\n\n  origElements.forEach((element, idx) => {\n    if (!element) {\n      return;\n    }\n    if (element.boundElements?.length) {\n      sortedElements.add(element);\n      origElements[idx] = null;\n      element.boundElements.forEach((boundElement) => {\n        const child = elementsMap.get(boundElement.id);\n        if (child && boundElement.type === \"text\") {\n          sortedElements.add(child[0]);\n          origElements[child[1]] = null;\n        }\n      });\n    } else if (element.type === \"text\" && element.containerId) {\n      const parent = elementsMap.get(element.containerId);\n      if (!parent?.[0].boundElements?.find((x) => x.id === element.id)) {\n        sortedElements.add(element);\n        origElements[idx] = null;\n\n        // if element has a container and container lists it, skip this element\n        // as it'll be taken care of by the container\n      }\n    } else {\n      sortedElements.add(element);\n      origElements[idx] = null;\n    }\n  });\n\n  // if there's a bug which resulted in losing some of the elements, return\n  // original instead as that's better than losing data\n  if (sortedElements.size !== elements.length) {\n    console.error(\n      \"normalizeBoundElementsOrder: lost some elements... bailing!\",\n    );\n    return elements;\n  }\n\n  return [...sortedElements];\n};\n\nexport const normalizeElementOrder = (\n  elements: readonly ExcalidrawElement[],\n) => {\n  return normalizeBoundElementsOrder(normalizeGroupElementOrder(elements));\n};\n", "import { KEYS } from \"../keys\";\nimport { register } from \"./register\";\nimport type { ExcalidrawElement } from \"../element/types\";\nimport { duplicateElement, getNonDeletedElements } from \"../element\";\nimport { isSomeElementSelected } from \"../scene\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { t } from \"../i18n\";\nimport {\n  arrayToMap,\n  castArray,\n  findLastIndex,\n  getShortcutKey,\n  invariant,\n} from \"../utils\";\nimport { LinearElementEditor } from \"../element/linearElementEditor\";\nimport {\n  selectGroupsForSelectedElements,\n  getSelectedGroupForElement,\n  getElementsInGroup,\n} from \"../groups\";\nimport type { AppState } from \"../types\";\nimport { fixBindingsAfterDuplication } from \"../element/binding\";\nimport type { ActionResult } from \"./types\";\nimport { DEFAULT_GRID_SIZE } from \"../constants\";\nimport {\n  bindTextToShapeAfterDuplication,\n  getBoundTextElement,\n  getContainerElement,\n} from \"../element/textElement\";\nimport {\n  hasBoundTextElement,\n  isBoundToContainer,\n  isFrameLikeElement,\n} from \"../element/typeChecks\";\nimport { normalizeElementOrder } from \"../element/sortElements\";\nimport { DuplicateIcon } from \"../components/icons\";\nimport {\n  bindElementsToFramesAfterDuplication,\n  getFrameChildren,\n} from \"../frame\";\nimport {\n  excludeElementsInFramesFromSelection,\n  getSelectedElements,\n} from \"../scene/selection\";\nimport { CaptureUpdateAction } from \"../store\";\n\nexport const actionDuplicateSelection = register({\n  name: \"duplicateSelection\",\n  label: \"labels.duplicateSelection\",\n  icon: DuplicateIcon,\n  trackEvent: { category: \"element\" },\n  perform: (elements, appState, formData, app) => {\n    // duplicate selected point(s) if editing a line\n    if (appState.editingLinearElement) {\n      // TODO: Invariants should be checked here instead of duplicateSelectedPoints()\n      try {\n        const newAppState = LinearElementEditor.duplicateSelectedPoints(\n          appState,\n          app.scene.getNonDeletedElementsMap(),\n        );\n\n        return {\n          elements,\n          appState: newAppState,\n          captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n        };\n      } catch {\n        return false;\n      }\n    }\n\n    const nextState = duplicateElements(elements, appState);\n\n    if (app.props.onDuplicate && nextState.elements) {\n      const mappedElements = app.props.onDuplicate(\n        nextState.elements,\n        elements,\n      );\n      if (mappedElements) {\n        nextState.elements = mappedElements;\n      }\n    }\n\n    return {\n      ...nextState,\n      captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n    };\n  },\n  keyTest: (event) => event[KEYS.CTRL_OR_CMD] && event.key === KEYS.D,\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={DuplicateIcon}\n      title={`${t(\"labels.duplicateSelection\")} \u2014 ${getShortcutKey(\n        \"CtrlOrCmd+D\",\n      )}`}\n      aria-label={t(\"labels.duplicateSelection\")}\n      onClick={() => updateData(null)}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n\nconst duplicateElements = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n): Partial<Exclude<ActionResult, false>> => {\n  // ---------------------------------------------------------------------------\n\n  const groupIdMap = new Map();\n  const newElements: ExcalidrawElement[] = [];\n  const oldElements: ExcalidrawElement[] = [];\n  const oldIdToDuplicatedId = new Map();\n  const duplicatedElementsMap = new Map<string, ExcalidrawElement>();\n\n  const elementsMap = arrayToMap(elements);\n\n  const duplicateAndOffsetElement = <\n    T extends ExcalidrawElement | ExcalidrawElement[],\n  >(\n    element: T,\n  ): T extends ExcalidrawElement[]\n    ? ExcalidrawElement[]\n    : ExcalidrawElement | null => {\n    const elements = castArray(element);\n\n    const _newElements = elements.reduce(\n      (acc: ExcalidrawElement[], element) => {\n        if (processedIds.has(element.id)) {\n          return acc;\n        }\n\n        processedIds.set(element.id, true);\n\n        const newElement = duplicateElement(\n          appState.editingGroupId,\n          groupIdMap,\n          element,\n          {\n            x: element.x + DEFAULT_GRID_SIZE / 2,\n            y: element.y + DEFAULT_GRID_SIZE / 2,\n          },\n        );\n\n        processedIds.set(newElement.id, true);\n\n        duplicatedElementsMap.set(newElement.id, newElement);\n        oldIdToDuplicatedId.set(element.id, newElement.id);\n\n        oldElements.push(element);\n        newElements.push(newElement);\n\n        acc.push(newElement);\n        return acc;\n      },\n      [],\n    );\n\n    return (\n      Array.isArray(element) ? _newElements : _newElements[0] || null\n    ) as T extends ExcalidrawElement[]\n      ? ExcalidrawElement[]\n      : ExcalidrawElement | null;\n  };\n\n  elements = normalizeElementOrder(elements);\n\n  const idsOfElementsToDuplicate = arrayToMap(\n    getSelectedElements(elements, appState, {\n      includeBoundTextElement: true,\n      includeElementsInFrames: true,\n    }),\n  );\n\n  // Ids of elements that have already been processed so we don't push them\n  // into the array twice if we end up backtracking when retrieving\n  // discontiguous group of elements (can happen due to a bug, or in edge\n  // cases such as a group containing deleted elements which were not selected).\n  //\n  // This is not enough to prevent duplicates, so we do a second loop afterwards\n  // to remove them.\n  //\n  // For convenience we mark even the newly created ones even though we don't\n  // loop over them.\n  const processedIds = new Map<ExcalidrawElement[\"id\"], true>();\n\n  const elementsWithClones: ExcalidrawElement[] = elements.slice();\n\n  const insertAfterIndex = (\n    index: number,\n    elements: ExcalidrawElement | null | ExcalidrawElement[],\n  ) => {\n    invariant(index !== -1, \"targetIndex === -1 \");\n\n    if (!Array.isArray(elements) && !elements) {\n      return;\n    }\n\n    elementsWithClones.splice(index + 1, 0, ...castArray(elements));\n  };\n\n  const frameIdsToDuplicate = new Set(\n    elements\n      .filter(\n        (el) => idsOfElementsToDuplicate.has(el.id) && isFrameLikeElement(el),\n      )\n      .map((el) => el.id),\n  );\n\n  for (const element of elements) {\n    if (processedIds.has(element.id)) {\n      continue;\n    }\n\n    if (!idsOfElementsToDuplicate.has(element.id)) {\n      continue;\n    }\n\n    // groups\n    // -------------------------------------------------------------------------\n\n    const groupId = getSelectedGroupForElement(appState, element);\n    if (groupId) {\n      const groupElements = getElementsInGroup(elements, groupId).flatMap(\n        (element) =>\n          isFrameLikeElement(element)\n            ? [...getFrameChildren(elements, element.id), element]\n            : [element],\n      );\n\n      const targetIndex = findLastIndex(elementsWithClones, (el) => {\n        return el.groupIds?.includes(groupId);\n      });\n\n      insertAfterIndex(targetIndex, duplicateAndOffsetElement(groupElements));\n      continue;\n    }\n\n    // frame duplication\n    // -------------------------------------------------------------------------\n\n    if (element.frameId && frameIdsToDuplicate.has(element.frameId)) {\n      continue;\n    }\n\n    if (isFrameLikeElement(element)) {\n      const frameId = element.id;\n\n      const frameChildren = getFrameChildren(elements, frameId);\n\n      const targetIndex = findLastIndex(elementsWithClones, (el) => {\n        return el.frameId === frameId || el.id === frameId;\n      });\n\n      insertAfterIndex(\n        targetIndex,\n        duplicateAndOffsetElement([...frameChildren, element]),\n      );\n      continue;\n    }\n\n    // text container\n    // -------------------------------------------------------------------------\n\n    if (hasBoundTextElement(element)) {\n      const boundTextElement = getBoundTextElement(element, elementsMap);\n\n      const targetIndex = findLastIndex(elementsWithClones, (el) => {\n        return (\n          el.id === element.id ||\n          (\"containerId\" in el && el.containerId === element.id)\n        );\n      });\n\n      if (boundTextElement) {\n        insertAfterIndex(\n          targetIndex,\n          duplicateAndOffsetElement([element, boundTextElement]),\n        );\n      } else {\n        insertAfterIndex(targetIndex, duplicateAndOffsetElement(element));\n      }\n\n      continue;\n    }\n\n    if (isBoundToContainer(element)) {\n      const container = getContainerElement(element, elementsMap);\n\n      const targetIndex = findLastIndex(elementsWithClones, (el) => {\n        return el.id === element.id || el.id === container?.id;\n      });\n\n      if (container) {\n        insertAfterIndex(\n          targetIndex,\n          duplicateAndOffsetElement([container, element]),\n        );\n      } else {\n        insertAfterIndex(targetIndex, duplicateAndOffsetElement(element));\n      }\n\n      continue;\n    }\n\n    // default duplication (regular elements)\n    // -------------------------------------------------------------------------\n\n    insertAfterIndex(\n      findLastIndex(elementsWithClones, (el) => el.id === element.id),\n      duplicateAndOffsetElement(element),\n    );\n  }\n\n  // ---------------------------------------------------------------------------\n\n  bindTextToShapeAfterDuplication(\n    elementsWithClones,\n    oldElements,\n    oldIdToDuplicatedId,\n  );\n  fixBindingsAfterDuplication(\n    elementsWithClones,\n    oldElements,\n    oldIdToDuplicatedId,\n  );\n  bindElementsToFramesAfterDuplication(\n    elementsWithClones,\n    oldElements,\n    oldIdToDuplicatedId,\n  );\n\n  const nextElementsToSelect =\n    excludeElementsInFramesFromSelection(newElements);\n\n  return {\n    elements: elementsWithClones,\n    appState: {\n      ...appState,\n      ...selectGroupsForSelectedElements(\n        {\n          editingGroupId: appState.editingGroupId,\n          selectedElementIds: nextElementsToSelect.reduce(\n            (acc: Record<ExcalidrawElement[\"id\"], true>, element) => {\n              if (!isBoundToContainer(element)) {\n                acc[element.id] = true;\n              }\n              return acc;\n            },\n            {},\n          ),\n        },\n        getNonDeletedElements(elementsWithClones),\n        appState,\n        null,\n      ),\n    },\n  };\n};\n", "import { useEffect, useMemo, useRef, useState } from \"react\";\nimport type { AppClassProperties, AppState, Primitive } from \"../types\";\nimport type { CaptureUpdateActionType } from \"../store\";\nimport {\n  DEFAULT_ELEMENT_BACKGROUND_COLOR_PALETTE,\n  DEFAULT_ELEMENT_BACKGROUND_PICKS,\n  DEFAULT_ELEMENT_STROKE_COLOR_PALETTE,\n  DEFAULT_ELEMENT_STROKE_PICKS,\n} from \"../colors\";\nimport { trackEvent } from \"../analytics\";\nimport { ButtonIconSelect } from \"../components/ButtonIconSelect\";\nimport { ColorPicker } from \"../components/ColorPicker/ColorPicker\";\nimport { IconPicker } from \"../components/IconPicker\";\nimport { FontPicker } from \"../components/FontPicker/FontPicker\";\n// TODO barnabasmolnar/editor-redesign\n// TextAlignTopIcon, TextAlignBottomIcon,TextAlignMiddleIcon,\n// ArrowHead icons\nimport {\n  ArrowheadArrowIcon,\n  ArrowheadBarIcon,\n  ArrowheadCircleIcon,\n  ArrowheadTriangleIcon,\n  ArrowheadNoneIcon,\n  StrokeStyleDashedIcon,\n  StrokeStyleDottedIcon,\n  TextAlignTopIcon,\n  TextAlignBottomIcon,\n  TextAlignMiddleIcon,\n  FillHachureIcon,\n  FillCrossHatchIcon,\n  FillSolidIcon,\n  SloppinessArchitectIcon,\n  SloppinessArtistIcon,\n  SloppinessCartoonistIcon,\n  StrokeWidthBaseIcon,\n  StrokeWidthBoldIcon,\n  StrokeWidthExtraBoldIcon,\n  FontSizeSmallIcon,\n  FontSizeMediumIcon,\n  FontSizeLargeIcon,\n  FontSizeExtraLargeIcon,\n  EdgeSharpIcon,\n  EdgeRoundIcon,\n  TextAlignLeftIcon,\n  TextAlignCenterIcon,\n  TextAlignRightIcon,\n  FillZigZagIcon,\n  ArrowheadTriangleOutlineIcon,\n  ArrowheadCircleOutlineIcon,\n  ArrowheadDiamondIcon,\n  ArrowheadDiamondOutlineIcon,\n  fontSizeIcon,\n  sharpArrowIcon,\n  roundArrowIcon,\n  elbowArrowIcon,\n  ArrowheadCrowfootIcon,\n  ArrowheadCrowfootOneIcon,\n  ArrowheadCrowfootOneOrManyIcon,\n} from \"../components/icons\";\nimport {\n  ARROW_TYPE,\n  DEFAULT_FONT_FAMILY,\n  DEFAULT_FONT_SIZE,\n  FONT_FAMILY,\n  ROUNDNESS,\n  STROKE_WIDTH,\n  VERTICAL_ALIGN,\n} from \"../constants\";\nimport {\n  getNonDeletedElements,\n  isTextElement,\n  redrawTextBoundingBox,\n} from \"../element\";\nimport { mutateElement, newElementWith } from \"../element/mutateElement\";\nimport { getBoundTextElement } from \"../element/textElement\";\nimport {\n  isArrowElement,\n  isBoundToContainer,\n  isElbowArrow,\n  isLinearElement,\n  isUsingAdaptiveRadius,\n} from \"../element/typeChecks\";\nimport type {\n  Arrowhead,\n  ExcalidrawBindableElement,\n  ExcalidrawElement,\n  ExcalidrawLinearElement,\n  ExcalidrawTextElement,\n  FontFamilyValues,\n  TextAlign,\n  VerticalAlign,\n  NonDeletedSceneElementsMap,\n} from \"../element/types\";\nimport { getLanguage, t } from \"../i18n\";\nimport { KEYS } from \"../keys\";\nimport { randomInteger } from \"../random\";\nimport {\n  canHaveArrowheads,\n  getCommonAttributeOfSelectedElements,\n  getSelectedElements,\n  getTargetElements,\n  isSomeElementSelected,\n} from \"../scene\";\nimport { hasStrokeColor } from \"../scene/comparisons\";\nimport {\n  arrayToMap,\n  getFontFamilyString,\n  getShortcutKey,\n  tupleToCoors,\n} from \"../utils\";\nimport { register } from \"./register\";\nimport { CaptureUpdateAction } from \"../store\";\nimport { Fonts, getLineHeight } from \"../fonts\";\nimport {\n  bindLinearElement,\n  bindPointToSnapToElementOutline,\n  calculateFixedPointForElbowArrowBinding,\n  getHoveredElementForBinding,\n  updateBoundElements,\n} from \"../element/binding\";\nimport { LinearElementEditor } from \"../element/linearElementEditor\";\nimport type { LocalPoint } from \"@excalidraw/math\";\nimport { pointFrom } from \"@excalidraw/math\";\nimport { Range } from \"../components/Range\";\n\nconst FONT_SIZE_RELATIVE_INCREASE_STEP = 0.1;\n\nexport const changeProperty = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  callback: (element: ExcalidrawElement) => ExcalidrawElement,\n  includeBoundText = false,\n) => {\n  const selectedElementIds = arrayToMap(\n    getSelectedElements(elements, appState, {\n      includeBoundTextElement: includeBoundText,\n    }),\n  );\n\n  return elements.map((element) => {\n    if (\n      selectedElementIds.get(element.id) ||\n      element.id === appState.editingTextElement?.id\n    ) {\n      return callback(element);\n    }\n    return element;\n  });\n};\n\nexport const getFormValue = function <T extends Primitive>(\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  getAttribute: (element: ExcalidrawElement) => T,\n  isRelevantElement: true | ((element: ExcalidrawElement) => boolean),\n  defaultValue: T | ((isSomeElementSelected: boolean) => T),\n): T {\n  const editingTextElement = appState.editingTextElement;\n  const nonDeletedElements = getNonDeletedElements(elements);\n\n  let ret: T | null = null;\n\n  if (editingTextElement) {\n    ret = getAttribute(editingTextElement);\n  }\n\n  if (!ret) {\n    const hasSelection = isSomeElementSelected(nonDeletedElements, appState);\n\n    if (hasSelection) {\n      ret =\n        getCommonAttributeOfSelectedElements(\n          isRelevantElement === true\n            ? nonDeletedElements\n            : nonDeletedElements.filter((el) => isRelevantElement(el)),\n          appState,\n          getAttribute,\n        ) ??\n        (typeof defaultValue === \"function\"\n          ? defaultValue(true)\n          : defaultValue);\n    } else {\n      ret =\n        typeof defaultValue === \"function\" ? defaultValue(false) : defaultValue;\n    }\n  }\n\n  return ret;\n};\n\nconst offsetElementAfterFontResize = (\n  prevElement: ExcalidrawTextElement,\n  nextElement: ExcalidrawTextElement,\n) => {\n  if (isBoundToContainer(nextElement) || !nextElement.autoResize) {\n    return nextElement;\n  }\n  return mutateElement(\n    nextElement,\n    {\n      x:\n        prevElement.textAlign === \"left\"\n          ? prevElement.x\n          : prevElement.x +\n            (prevElement.width - nextElement.width) /\n              (prevElement.textAlign === \"center\" ? 2 : 1),\n      // centering vertically is non-standard, but for Excalidraw I think\n      // it makes sense\n      y: prevElement.y + (prevElement.height - nextElement.height) / 2,\n    },\n    false,\n  );\n};\n\nconst changeFontSize = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  app: AppClassProperties,\n  getNewFontSize: (element: ExcalidrawTextElement) => number,\n  fallbackValue?: ExcalidrawTextElement[\"fontSize\"],\n) => {\n  const newFontSizes = new Set<number>();\n\n  const updatedElements = changeProperty(\n    elements,\n    appState,\n    (oldElement) => {\n      if (isTextElement(oldElement)) {\n        const newFontSize = getNewFontSize(oldElement);\n        newFontSizes.add(newFontSize);\n\n        let newElement: ExcalidrawTextElement = newElementWith(oldElement, {\n          fontSize: newFontSize,\n        });\n        redrawTextBoundingBox(\n          newElement,\n          app.scene.getContainerElement(oldElement),\n          app.scene.getNonDeletedElementsMap(),\n        );\n\n        newElement = offsetElementAfterFontResize(oldElement, newElement);\n\n        return newElement;\n      }\n      return oldElement;\n    },\n    true,\n  );\n\n  // Update arrow elements after text elements have been updated\n  const updatedElementsMap = arrayToMap(updatedElements);\n  getSelectedElements(elements, appState, {\n    includeBoundTextElement: true,\n  }).forEach((element) => {\n    if (isTextElement(element)) {\n      updateBoundElements(\n        element,\n        updatedElementsMap as NonDeletedSceneElementsMap,\n      );\n    }\n  });\n\n  return {\n    elements: updatedElements,\n    appState: {\n      ...appState,\n      // update state only if we've set all select text elements to\n      // the same font size\n      currentItemFontSize:\n        newFontSizes.size === 1\n          ? [...newFontSizes][0]\n          : fallbackValue ?? appState.currentItemFontSize,\n    },\n    captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n  };\n};\n\n// -----------------------------------------------------------------------------\n\nexport const actionChangeStrokeColor = register({\n  name: \"changeStrokeColor\",\n  label: \"labels.stroke\",\n  trackEvent: false,\n  perform: (elements, appState, value) => {\n    return {\n      ...(value.currentItemStrokeColor && {\n        elements: changeProperty(\n          elements,\n          appState,\n          (el) => {\n            return hasStrokeColor(el.type)\n              ? newElementWith(el, {\n                  strokeColor: value.currentItemStrokeColor,\n                })\n              : el;\n          },\n          true,\n        ),\n      }),\n      appState: {\n        ...appState,\n        ...value,\n      },\n      captureUpdate: !!value.currentItemStrokeColor\n        ? CaptureUpdateAction.IMMEDIATELY\n        : CaptureUpdateAction.EVENTUALLY,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData, appProps }) => (\n    <>\n      <h3 aria-hidden=\"true\">{t(\"labels.stroke\")}</h3>\n      <ColorPicker\n        topPicks={DEFAULT_ELEMENT_STROKE_PICKS}\n        palette={DEFAULT_ELEMENT_STROKE_COLOR_PALETTE}\n        type=\"elementStroke\"\n        label={t(\"labels.stroke\")}\n        color={getFormValue(\n          elements,\n          appState,\n          (element) => element.strokeColor,\n          true,\n          appState.currentItemStrokeColor,\n        )}\n        onChange={(color) => updateData({ currentItemStrokeColor: color })}\n        elements={elements}\n        appState={appState}\n        updateData={updateData}\n      />\n    </>\n  ),\n});\n\nexport const actionChangeBackgroundColor = register({\n  name: \"changeBackgroundColor\",\n  label: \"labels.changeBackground\",\n  trackEvent: false,\n  perform: (elements, appState, value) => {\n    return {\n      ...(value.currentItemBackgroundColor && {\n        elements: changeProperty(elements, appState, (el) =>\n          newElementWith(el, {\n            backgroundColor: value.currentItemBackgroundColor,\n          }),\n        ),\n      }),\n      appState: {\n        ...appState,\n        ...value,\n      },\n      captureUpdate: !!value.currentItemBackgroundColor\n        ? CaptureUpdateAction.IMMEDIATELY\n        : CaptureUpdateAction.EVENTUALLY,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData, appProps }) => (\n    <>\n      <h3 aria-hidden=\"true\">{t(\"labels.background\")}</h3>\n      <ColorPicker\n        topPicks={DEFAULT_ELEMENT_BACKGROUND_PICKS}\n        palette={DEFAULT_ELEMENT_BACKGROUND_COLOR_PALETTE}\n        type=\"elementBackground\"\n        label={t(\"labels.background\")}\n        color={getFormValue(\n          elements,\n          appState,\n          (element) => element.backgroundColor,\n          true,\n          appState.currentItemBackgroundColor,\n        )}\n        onChange={(color) => updateData({ currentItemBackgroundColor: color })}\n        elements={elements}\n        appState={appState}\n        updateData={updateData}\n      />\n    </>\n  ),\n});\n\nexport const actionChangeFillStyle = register({\n  name: \"changeFillStyle\",\n  label: \"labels.fill\",\n  trackEvent: false,\n  perform: (elements, appState, value, app) => {\n    trackEvent(\n      \"element\",\n      \"changeFillStyle\",\n      `${value} (${app.device.editor.isMobile ? \"mobile\" : \"desktop\"})`,\n    );\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          fillStyle: value,\n        }),\n      ),\n      appState: { ...appState, currentItemFillStyle: value },\n      captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => {\n    const selectedElements = getSelectedElements(elements, appState);\n    const allElementsZigZag =\n      selectedElements.length > 0 &&\n      selectedElements.every((el) => el.fillStyle === \"zigzag\");\n\n    return (\n      <fieldset>\n        <legend>{t(\"labels.fill\")}</legend>\n        <ButtonIconSelect\n          type=\"button\"\n          options={[\n            {\n              value: \"hachure\",\n              text: `${\n                allElementsZigZag ? t(\"labels.zigzag\") : t(\"labels.hachure\")\n              } (${getShortcutKey(\"Alt-Click\")})`,\n              icon: allElementsZigZag ? FillZigZagIcon : FillHachureIcon,\n              active: allElementsZigZag ? true : undefined,\n              testId: `fill-hachure`,\n            },\n            {\n              value: \"cross-hatch\",\n              text: t(\"labels.crossHatch\"),\n              icon: FillCrossHatchIcon,\n              testId: `fill-cross-hatch`,\n            },\n            {\n              value: \"solid\",\n              text: t(\"labels.solid\"),\n              icon: FillSolidIcon,\n              testId: `fill-solid`,\n            },\n          ]}\n          value={getFormValue(\n            elements,\n            appState,\n            (element) => element.fillStyle,\n            (element) => element.hasOwnProperty(\"fillStyle\"),\n            (hasSelection) =>\n              hasSelection ? null : appState.currentItemFillStyle,\n          )}\n          onClick={(value, event) => {\n            const nextValue =\n              event.altKey &&\n              value === \"hachure\" &&\n              selectedElements.every((el) => el.fillStyle === \"hachure\")\n                ? \"zigzag\"\n                : value;\n\n            updateData(nextValue);\n          }}\n        />\n      </fieldset>\n    );\n  },\n});\n\nexport const actionChangeStrokeWidth = register({\n  name: \"changeStrokeWidth\",\n  label: \"labels.strokeWidth\",\n  trackEvent: false,\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          strokeWidth: value,\n        }),\n      ),\n      appState: { ...appState, currentItemStrokeWidth: value },\n      captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.strokeWidth\")}</legend>\n      <ButtonIconSelect\n        group=\"stroke-width\"\n        options={[\n          {\n            value: STROKE_WIDTH.thin,\n            text: t(\"labels.thin\"),\n            icon: StrokeWidthBaseIcon,\n            testId: \"strokeWidth-thin\",\n          },\n          {\n            value: STROKE_WIDTH.bold,\n            text: t(\"labels.bold\"),\n            icon: StrokeWidthBoldIcon,\n            testId: \"strokeWidth-bold\",\n          },\n          {\n            value: STROKE_WIDTH.extraBold,\n            text: t(\"labels.extraBold\"),\n            icon: StrokeWidthExtraBoldIcon,\n            testId: \"strokeWidth-extraBold\",\n          },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => element.strokeWidth,\n          (element) => element.hasOwnProperty(\"strokeWidth\"),\n          (hasSelection) =>\n            hasSelection ? null : appState.currentItemStrokeWidth,\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionChangeSloppiness = register({\n  name: \"changeSloppiness\",\n  label: \"labels.sloppiness\",\n  trackEvent: false,\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          seed: randomInteger(),\n          roughness: value,\n        }),\n      ),\n      appState: { ...appState, currentItemRoughness: value },\n      captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.sloppiness\")}</legend>\n      <ButtonIconSelect\n        group=\"sloppiness\"\n        options={[\n          {\n            value: 0,\n            text: t(\"labels.architect\"),\n            icon: SloppinessArchitectIcon,\n          },\n          {\n            value: 1,\n            text: t(\"labels.artist\"),\n            icon: SloppinessArtistIcon,\n          },\n          {\n            value: 2,\n            text: t(\"labels.cartoonist\"),\n            icon: SloppinessCartoonistIcon,\n          },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => element.roughness,\n          (element) => element.hasOwnProperty(\"roughness\"),\n          (hasSelection) =>\n            hasSelection ? null : appState.currentItemRoughness,\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionChangeStrokeStyle = register({\n  name: \"changeStrokeStyle\",\n  label: \"labels.strokeStyle\",\n  trackEvent: false,\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          strokeStyle: value,\n        }),\n      ),\n      appState: { ...appState, currentItemStrokeStyle: value },\n      captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.strokeStyle\")}</legend>\n      <ButtonIconSelect\n        group=\"strokeStyle\"\n        options={[\n          {\n            value: \"solid\",\n            text: t(\"labels.strokeStyle_solid\"),\n            icon: StrokeWidthBaseIcon,\n          },\n          {\n            value: \"dashed\",\n            text: t(\"labels.strokeStyle_dashed\"),\n            icon: StrokeStyleDashedIcon,\n          },\n          {\n            value: \"dotted\",\n            text: t(\"labels.strokeStyle_dotted\"),\n            icon: StrokeStyleDottedIcon,\n          },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => element.strokeStyle,\n          (element) => element.hasOwnProperty(\"strokeStyle\"),\n          (hasSelection) =>\n            hasSelection ? null : appState.currentItemStrokeStyle,\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionChangeOpacity = register({\n  name: \"changeOpacity\",\n  label: \"labels.opacity\",\n  trackEvent: false,\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(\n        elements,\n        appState,\n        (el) =>\n          newElementWith(el, {\n            opacity: value,\n          }),\n        true,\n      ),\n      appState: { ...appState, currentItemOpacity: value },\n      captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <Range\n      updateData={updateData}\n      elements={elements}\n      appState={appState}\n      testId=\"opacity\"\n    />\n  ),\n});\n\nexport const actionChangeFontSize = register({\n  name: \"changeFontSize\",\n  label: \"labels.fontSize\",\n  trackEvent: false,\n  perform: (elements, appState, value, app) => {\n    return changeFontSize(elements, appState, app, () => value, value);\n  },\n  PanelComponent: ({ elements, appState, updateData, app }) => (\n    <fieldset>\n      <legend>{t(\"labels.fontSize\")}</legend>\n      <ButtonIconSelect\n        group=\"font-size\"\n        options={[\n          {\n            value: 16,\n            text: t(\"labels.small\"),\n            icon: FontSizeSmallIcon,\n            testId: \"fontSize-small\",\n          },\n          {\n            value: 20,\n            text: t(\"labels.medium\"),\n            icon: FontSizeMediumIcon,\n            testId: \"fontSize-medium\",\n          },\n          {\n            value: 28,\n            text: t(\"labels.large\"),\n            icon: FontSizeLargeIcon,\n            testId: \"fontSize-large\",\n          },\n          {\n            value: 36,\n            text: t(\"labels.veryLarge\"),\n            icon: FontSizeExtraLargeIcon,\n            testId: \"fontSize-veryLarge\",\n          },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => {\n            if (isTextElement(element)) {\n              return element.fontSize;\n            }\n            const boundTextElement = getBoundTextElement(\n              element,\n              app.scene.getNonDeletedElementsMap(),\n            );\n            if (boundTextElement) {\n              return boundTextElement.fontSize;\n            }\n            return null;\n          },\n          (element) =>\n            isTextElement(element) ||\n            getBoundTextElement(\n              element,\n              app.scene.getNonDeletedElementsMap(),\n            ) !== null,\n          (hasSelection) =>\n            hasSelection\n              ? null\n              : appState.currentItemFontSize || DEFAULT_FONT_SIZE,\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionDecreaseFontSize = register({\n  name: \"decreaseFontSize\",\n  label: \"labels.decreaseFontSize\",\n  icon: fontSizeIcon,\n  trackEvent: false,\n  perform: (elements, appState, value, app) => {\n    return changeFontSize(elements, appState, app, (element) =>\n      Math.round(\n        // get previous value before relative increase (doesn't work fully\n        // due to rounding and float precision issues)\n        (1 / (1 + FONT_SIZE_RELATIVE_INCREASE_STEP)) * element.fontSize,\n      ),\n    );\n  },\n  keyTest: (event) => {\n    return (\n      event[KEYS.CTRL_OR_CMD] &&\n      event.shiftKey &&\n      // KEYS.COMMA needed for MacOS\n      (event.key === KEYS.CHEVRON_LEFT || event.key === KEYS.COMMA)\n    );\n  },\n});\n\nexport const actionIncreaseFontSize = register({\n  name: \"increaseFontSize\",\n  label: \"labels.increaseFontSize\",\n  icon: fontSizeIcon,\n  trackEvent: false,\n  perform: (elements, appState, value, app) => {\n    return changeFontSize(elements, appState, app, (element) =>\n      Math.round(element.fontSize * (1 + FONT_SIZE_RELATIVE_INCREASE_STEP)),\n    );\n  },\n  keyTest: (event) => {\n    return (\n      event[KEYS.CTRL_OR_CMD] &&\n      event.shiftKey &&\n      // KEYS.PERIOD needed for MacOS\n      (event.key === KEYS.CHEVRON_RIGHT || event.key === KEYS.PERIOD)\n    );\n  },\n});\n\ntype ChangeFontFamilyData = Partial<\n  Pick<\n    AppState,\n    \"openPopup\" | \"currentItemFontFamily\" | \"currentHoveredFontFamily\"\n  >\n> & {\n  /** cache of selected & editing elements populated on opened popup */\n  cachedElements?: Map<string, ExcalidrawElement>;\n  /** flag to reset all elements to their cached versions  */\n  resetAll?: true;\n  /** flag to reset all containers to their cached versions */\n  resetContainers?: true;\n};\n\nexport const actionChangeFontFamily = register({\n  name: \"changeFontFamily\",\n  label: \"labels.fontFamily\",\n  trackEvent: false,\n  perform: (elements, appState, value, app) => {\n    const { cachedElements, resetAll, resetContainers, ...nextAppState } =\n      value as ChangeFontFamilyData;\n\n    if (resetAll) {\n      const nextElements = changeProperty(\n        elements,\n        appState,\n        (element) => {\n          const cachedElement = cachedElements?.get(element.id);\n          if (cachedElement) {\n            const newElement = newElementWith(element, {\n              ...cachedElement,\n            });\n\n            return newElement;\n          }\n\n          return element;\n        },\n        true,\n      );\n\n      return {\n        elements: nextElements,\n        appState: {\n          ...appState,\n          ...nextAppState,\n        },\n        captureUpdate: CaptureUpdateAction.NEVER,\n      };\n    }\n\n    const { currentItemFontFamily, currentHoveredFontFamily } = value;\n\n    let nextCaptureUpdateAction: CaptureUpdateActionType =\n      CaptureUpdateAction.EVENTUALLY;\n    let nextFontFamily: FontFamilyValues | undefined;\n    let skipOnHoverRender = false;\n\n    if (currentItemFontFamily) {\n      nextFontFamily = currentItemFontFamily;\n      nextCaptureUpdateAction = CaptureUpdateAction.IMMEDIATELY;\n    } else if (currentHoveredFontFamily) {\n      nextFontFamily = currentHoveredFontFamily;\n      nextCaptureUpdateAction = CaptureUpdateAction.EVENTUALLY;\n\n      const selectedTextElements = getSelectedElements(elements, appState, {\n        includeBoundTextElement: true,\n      }).filter((element) => isTextElement(element));\n\n      // skip on hover re-render for more than 200 text elements or for text element with more than 5000 chars combined\n      if (selectedTextElements.length > 200) {\n        skipOnHoverRender = true;\n      } else {\n        let i = 0;\n        let textLengthAccumulator = 0;\n\n        while (\n          i < selectedTextElements.length &&\n          textLengthAccumulator < 5000\n        ) {\n          const textElement = selectedTextElements[i] as ExcalidrawTextElement;\n          textLengthAccumulator += textElement?.originalText.length || 0;\n          i++;\n        }\n\n        if (textLengthAccumulator > 5000) {\n          skipOnHoverRender = true;\n        }\n      }\n    }\n\n    const result = {\n      appState: {\n        ...appState,\n        ...nextAppState,\n      },\n      captureUpdate: nextCaptureUpdateAction,\n    };\n\n    if (nextFontFamily && !skipOnHoverRender) {\n      const elementContainerMapping = new Map<\n        ExcalidrawTextElement,\n        ExcalidrawElement | null\n      >();\n      let uniqueChars = new Set<string>();\n      let skipFontFaceCheck = false;\n\n      const fontsCache = Array.from(Fonts.loadedFontsCache.values());\n      const fontFamily = Object.entries(FONT_FAMILY).find(\n        ([_, value]) => value === nextFontFamily,\n      )?.[0];\n\n      // skip `document.font.check` check on hover, if at least one font family has loaded as it's super slow (could result in slightly different bbox, which is fine)\n      if (\n        currentHoveredFontFamily &&\n        fontFamily &&\n        fontsCache.some((sig) => sig.startsWith(fontFamily))\n      ) {\n        skipFontFaceCheck = true;\n      }\n\n      // following causes re-render so make sure we changed the family\n      // otherwise it could cause unexpected issues, such as preventing opening the popover when in wysiwyg\n      Object.assign(result, {\n        elements: changeProperty(\n          elements,\n          appState,\n          (oldElement) => {\n            if (\n              isTextElement(oldElement) &&\n              (oldElement.fontFamily !== nextFontFamily ||\n                currentItemFontFamily) // force update on selection\n            ) {\n              const newElement: ExcalidrawTextElement = newElementWith(\n                oldElement,\n                {\n                  fontFamily: nextFontFamily,\n                  lineHeight: getLineHeight(nextFontFamily!),\n                },\n              );\n\n              const cachedContainer =\n                cachedElements?.get(oldElement.containerId || \"\") || {};\n\n              const container = app.scene.getContainerElement(oldElement);\n\n              if (resetContainers && container && cachedContainer) {\n                // reset the container back to it's cached version\n                mutateElement(container, { ...cachedContainer }, false);\n              }\n\n              if (!skipFontFaceCheck) {\n                uniqueChars = new Set([\n                  ...uniqueChars,\n                  ...Array.from(newElement.originalText),\n                ]);\n              }\n\n              elementContainerMapping.set(newElement, container);\n\n              return newElement;\n            }\n\n            return oldElement;\n          },\n          true,\n        ),\n      });\n\n      // size is irrelevant, but necessary\n      const fontString = `10px ${getFontFamilyString({\n        fontFamily: nextFontFamily,\n      })}`;\n      const chars = Array.from(uniqueChars.values()).join();\n\n      if (skipFontFaceCheck || window.document.fonts.check(fontString, chars)) {\n        // we either skip the check (have at least one font face loaded) or do the check and find out all the font faces have loaded\n        for (const [element, container] of elementContainerMapping) {\n          // trigger synchronous redraw\n          redrawTextBoundingBox(\n            element,\n            container,\n            app.scene.getNonDeletedElementsMap(),\n            false,\n          );\n        }\n      } else {\n        // otherwise try to load all font faces for the given chars and redraw elements once our font faces loaded\n        window.document.fonts.load(fontString, chars).then((fontFaces) => {\n          for (const [element, container] of elementContainerMapping) {\n            // use latest element state to ensure we don't have closure over an old instance in order to avoid possible race conditions (i.e. font faces load out-of-order while rapidly switching fonts)\n            const latestElement = app.scene.getElement(element.id);\n            const latestContainer = container\n              ? app.scene.getElement(container.id)\n              : null;\n\n            if (latestElement) {\n              // trigger async redraw\n              redrawTextBoundingBox(\n                latestElement as ExcalidrawTextElement,\n                latestContainer,\n                app.scene.getNonDeletedElementsMap(),\n                false,\n              );\n            }\n          }\n\n          // trigger update once we've mutated all the elements, which also updates our cache\n          app.fonts.onLoaded(fontFaces);\n        });\n      }\n    }\n\n    return result;\n  },\n  PanelComponent: ({ elements, appState, app, updateData }) => {\n    const cachedElementsRef = useRef<Map<string, ExcalidrawElement>>(new Map());\n    const prevSelectedFontFamilyRef = useRef<number | null>(null);\n    // relying on state batching as multiple `FontPicker` handlers could be called in rapid succession and we want to combine them\n    const [batchedData, setBatchedData] = useState<ChangeFontFamilyData>({});\n    const isUnmounted = useRef(true);\n\n    const selectedFontFamily = useMemo(() => {\n      const getFontFamily = (\n        elementsArray: readonly ExcalidrawElement[],\n        elementsMap: Map<string, ExcalidrawElement>,\n      ) =>\n        getFormValue(\n          elementsArray,\n          appState,\n          (element) => {\n            if (isTextElement(element)) {\n              return element.fontFamily;\n            }\n            const boundTextElement = getBoundTextElement(element, elementsMap);\n            if (boundTextElement) {\n              return boundTextElement.fontFamily;\n            }\n            return null;\n          },\n          (element) =>\n            isTextElement(element) ||\n            getBoundTextElement(element, elementsMap) !== null,\n          (hasSelection) =>\n            hasSelection\n              ? null\n              : appState.currentItemFontFamily || DEFAULT_FONT_FAMILY,\n        );\n\n      // popup opened, use cached elements\n      if (\n        batchedData.openPopup === \"fontFamily\" &&\n        appState.openPopup === \"fontFamily\"\n      ) {\n        return getFontFamily(\n          Array.from(cachedElementsRef.current?.values() ?? []),\n          cachedElementsRef.current,\n        );\n      }\n\n      // popup closed, use all elements\n      if (!batchedData.openPopup && appState.openPopup !== \"fontFamily\") {\n        return getFontFamily(elements, app.scene.getNonDeletedElementsMap());\n      }\n\n      // popup props are not in sync, hence we are in the middle of an update, so keeping the previous value we've had\n      return prevSelectedFontFamilyRef.current;\n    }, [batchedData.openPopup, appState, elements, app.scene]);\n\n    useEffect(() => {\n      prevSelectedFontFamilyRef.current = selectedFontFamily;\n    }, [selectedFontFamily]);\n\n    useEffect(() => {\n      if (Object.keys(batchedData).length) {\n        updateData(batchedData);\n        // reset the data after we've used the data\n        setBatchedData({});\n      }\n      // call update only on internal state changes\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [batchedData]);\n\n    useEffect(() => {\n      isUnmounted.current = false;\n\n      return () => {\n        isUnmounted.current = true;\n      };\n    }, []);\n\n    return (\n      <fieldset>\n        <legend>{t(\"labels.fontFamily\")}</legend>\n        <FontPicker\n          isOpened={appState.openPopup === \"fontFamily\"}\n          selectedFontFamily={selectedFontFamily}\n          hoveredFontFamily={appState.currentHoveredFontFamily}\n          onSelect={(fontFamily) => {\n            setBatchedData({\n              openPopup: null,\n              currentHoveredFontFamily: null,\n              currentItemFontFamily: fontFamily,\n            });\n\n            // defensive clear so immediate close won't abuse the cached elements\n            cachedElementsRef.current.clear();\n          }}\n          onHover={(fontFamily) => {\n            setBatchedData({\n              currentHoveredFontFamily: fontFamily,\n              cachedElements: new Map(cachedElementsRef.current),\n              resetContainers: true,\n            });\n          }}\n          onLeave={() => {\n            setBatchedData({\n              currentHoveredFontFamily: null,\n              cachedElements: new Map(cachedElementsRef.current),\n              resetAll: true,\n            });\n          }}\n          onPopupChange={(open) => {\n            if (open) {\n              // open, populate the cache from scratch\n              cachedElementsRef.current.clear();\n\n              const { editingTextElement } = appState;\n\n              // still check type to be safe\n              if (editingTextElement?.type === \"text\") {\n                // retrieve the latest version from the scene, as `editingTextElement` isn't mutated\n                const latesteditingTextElement = app.scene.getElement(\n                  editingTextElement.id,\n                );\n\n                // inside the wysiwyg editor\n                cachedElementsRef.current.set(\n                  editingTextElement.id,\n                  newElementWith(\n                    latesteditingTextElement || editingTextElement,\n                    {},\n                    true,\n                  ),\n                );\n              } else {\n                const selectedElements = getSelectedElements(\n                  elements,\n                  appState,\n                  {\n                    includeBoundTextElement: true,\n                  },\n                );\n\n                for (const element of selectedElements) {\n                  cachedElementsRef.current.set(\n                    element.id,\n                    newElementWith(element, {}, true),\n                  );\n                }\n              }\n\n              setBatchedData({\n                openPopup: \"fontFamily\",\n              });\n            } else {\n              // close, use the cache and clear it afterwards\n              const data = {\n                openPopup: null,\n                currentHoveredFontFamily: null,\n                cachedElements: new Map(cachedElementsRef.current),\n                resetAll: true,\n              } as ChangeFontFamilyData;\n\n              if (isUnmounted.current) {\n                // in case the component was unmounted by the parent, trigger the update directly\n                updateData({ ...batchedData, ...data });\n              } else {\n                setBatchedData(data);\n              }\n\n              cachedElementsRef.current.clear();\n            }\n          }}\n        />\n      </fieldset>\n    );\n  },\n});\n\nexport const actionChangeTextAlign = register({\n  name: \"changeTextAlign\",\n  label: \"Change text alignment\",\n  trackEvent: false,\n  perform: (elements, appState, value, app) => {\n    return {\n      elements: changeProperty(\n        elements,\n        appState,\n        (oldElement) => {\n          if (isTextElement(oldElement)) {\n            const newElement: ExcalidrawTextElement = newElementWith(\n              oldElement,\n              { textAlign: value },\n            );\n            redrawTextBoundingBox(\n              newElement,\n              app.scene.getContainerElement(oldElement),\n              app.scene.getNonDeletedElementsMap(),\n            );\n            return newElement;\n          }\n\n          return oldElement;\n        },\n        true,\n      ),\n      appState: {\n        ...appState,\n        currentItemTextAlign: value,\n      },\n      captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData, app }) => {\n    const elementsMap = app.scene.getNonDeletedElementsMap();\n    return (\n      <fieldset>\n        <legend>{t(\"labels.textAlign\")}</legend>\n        <ButtonIconSelect<TextAlign | false>\n          group=\"text-align\"\n          options={[\n            {\n              value: \"left\",\n              text: t(\"labels.left\"),\n              icon: TextAlignLeftIcon,\n              testId: \"align-left\",\n            },\n            {\n              value: \"center\",\n              text: t(\"labels.center\"),\n              icon: TextAlignCenterIcon,\n              testId: \"align-horizontal-center\",\n            },\n            {\n              value: \"right\",\n              text: t(\"labels.right\"),\n              icon: TextAlignRightIcon,\n              testId: \"align-right\",\n            },\n          ]}\n          value={getFormValue(\n            elements,\n            appState,\n            (element) => {\n              if (isTextElement(element)) {\n                return element.textAlign;\n              }\n              const boundTextElement = getBoundTextElement(\n                element,\n                elementsMap,\n              );\n              if (boundTextElement) {\n                return boundTextElement.textAlign;\n              }\n              return null;\n            },\n            (element) =>\n              isTextElement(element) ||\n              getBoundTextElement(element, elementsMap) !== null,\n            (hasSelection) =>\n              hasSelection ? null : appState.currentItemTextAlign,\n          )}\n          onChange={(value) => updateData(value)}\n        />\n      </fieldset>\n    );\n  },\n});\n\nexport const actionChangeVerticalAlign = register({\n  name: \"changeVerticalAlign\",\n  label: \"Change vertical alignment\",\n  trackEvent: { category: \"element\" },\n  perform: (elements, appState, value, app) => {\n    return {\n      elements: changeProperty(\n        elements,\n        appState,\n        (oldElement) => {\n          if (isTextElement(oldElement)) {\n            const newElement: ExcalidrawTextElement = newElementWith(\n              oldElement,\n              { verticalAlign: value },\n            );\n\n            redrawTextBoundingBox(\n              newElement,\n              app.scene.getContainerElement(oldElement),\n              app.scene.getNonDeletedElementsMap(),\n            );\n            return newElement;\n          }\n\n          return oldElement;\n        },\n        true,\n      ),\n      appState: {\n        ...appState,\n      },\n      captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData, app }) => {\n    return (\n      <fieldset>\n        <ButtonIconSelect<VerticalAlign | false>\n          group=\"text-align\"\n          options={[\n            {\n              value: VERTICAL_ALIGN.TOP,\n              text: t(\"labels.alignTop\"),\n              icon: <TextAlignTopIcon theme={appState.theme} />,\n              testId: \"align-top\",\n            },\n            {\n              value: VERTICAL_ALIGN.MIDDLE,\n              text: t(\"labels.centerVertically\"),\n              icon: <TextAlignMiddleIcon theme={appState.theme} />,\n              testId: \"align-middle\",\n            },\n            {\n              value: VERTICAL_ALIGN.BOTTOM,\n              text: t(\"labels.alignBottom\"),\n              icon: <TextAlignBottomIcon theme={appState.theme} />,\n              testId: \"align-bottom\",\n            },\n          ]}\n          value={getFormValue(\n            elements,\n            appState,\n            (element) => {\n              if (isTextElement(element) && element.containerId) {\n                return element.verticalAlign;\n              }\n              const boundTextElement = getBoundTextElement(\n                element,\n                app.scene.getNonDeletedElementsMap(),\n              );\n              if (boundTextElement) {\n                return boundTextElement.verticalAlign;\n              }\n              return null;\n            },\n            (element) =>\n              isTextElement(element) ||\n              getBoundTextElement(\n                element,\n                app.scene.getNonDeletedElementsMap(),\n              ) !== null,\n            (hasSelection) => (hasSelection ? null : VERTICAL_ALIGN.MIDDLE),\n          )}\n          onChange={(value) => updateData(value)}\n        />\n      </fieldset>\n    );\n  },\n});\n\nexport const actionChangeRoundness = register({\n  name: \"changeRoundness\",\n  label: \"Change edge roundness\",\n  trackEvent: false,\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) => {\n        if (isElbowArrow(el)) {\n          return el;\n        }\n\n        return newElementWith(el, {\n          roundness:\n            value === \"round\"\n              ? {\n                  type: isUsingAdaptiveRadius(el.type)\n                    ? ROUNDNESS.ADAPTIVE_RADIUS\n                    : ROUNDNESS.PROPORTIONAL_RADIUS,\n                }\n              : null,\n        });\n      }),\n      appState: {\n        ...appState,\n        currentItemRoundness: value,\n      },\n      captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => {\n    const targetElements = getTargetElements(\n      getNonDeletedElements(elements),\n      appState,\n    );\n\n    const hasLegacyRoundness = targetElements.some(\n      (el) => el.roundness?.type === ROUNDNESS.LEGACY,\n    );\n\n    return (\n      <fieldset>\n        <legend>{t(\"labels.edges\")}</legend>\n        <ButtonIconSelect\n          group=\"edges\"\n          options={[\n            {\n              value: \"sharp\",\n              text: t(\"labels.sharp\"),\n              icon: EdgeSharpIcon,\n            },\n            {\n              value: \"round\",\n              text: t(\"labels.round\"),\n              icon: EdgeRoundIcon,\n            },\n          ]}\n          value={getFormValue(\n            elements,\n            appState,\n            (element) =>\n              hasLegacyRoundness ? null : element.roundness ? \"round\" : \"sharp\",\n            (element) =>\n              !isArrowElement(element) && element.hasOwnProperty(\"roundness\"),\n            (hasSelection) =>\n              hasSelection ? null : appState.currentItemRoundness,\n          )}\n          onChange={(value) => updateData(value)}\n        />\n      </fieldset>\n    );\n  },\n});\n\nconst getArrowheadOptions = (flip: boolean) => {\n  return [\n    {\n      value: null,\n      text: t(\"labels.arrowhead_none\"),\n      keyBinding: \"q\",\n      icon: ArrowheadNoneIcon,\n    },\n    {\n      value: \"arrow\",\n      text: t(\"labels.arrowhead_arrow\"),\n      keyBinding: \"w\",\n      icon: <ArrowheadArrowIcon flip={flip} />,\n    },\n    {\n      value: \"triangle\",\n      text: t(\"labels.arrowhead_triangle\"),\n      icon: <ArrowheadTriangleIcon flip={flip} />,\n      keyBinding: \"e\",\n    },\n    {\n      value: \"triangle_outline\",\n      text: t(\"labels.arrowhead_triangle_outline\"),\n      icon: <ArrowheadTriangleOutlineIcon flip={flip} />,\n      keyBinding: \"r\",\n    },\n    {\n      value: \"circle\",\n      text: t(\"labels.arrowhead_circle\"),\n      keyBinding: \"a\",\n      icon: <ArrowheadCircleIcon flip={flip} />,\n    },\n    {\n      value: \"circle_outline\",\n      text: t(\"labels.arrowhead_circle_outline\"),\n      keyBinding: \"s\",\n      icon: <ArrowheadCircleOutlineIcon flip={flip} />,\n    },\n    {\n      value: \"diamond\",\n      text: t(\"labels.arrowhead_diamond\"),\n      icon: <ArrowheadDiamondIcon flip={flip} />,\n      keyBinding: \"d\",\n    },\n    {\n      value: \"diamond_outline\",\n      text: t(\"labels.arrowhead_diamond_outline\"),\n      icon: <ArrowheadDiamondOutlineIcon flip={flip} />,\n      keyBinding: \"f\",\n    },\n    {\n      value: \"bar\",\n      text: t(\"labels.arrowhead_bar\"),\n      keyBinding: \"z\",\n      icon: <ArrowheadBarIcon flip={flip} />,\n    },\n    {\n      value: \"crowfoot_one\",\n      text: t(\"labels.arrowhead_crowfoot_one\"),\n      icon: <ArrowheadCrowfootOneIcon flip={flip} />,\n      keyBinding: \"c\",\n    },\n    {\n      value: \"crowfoot_many\",\n      text: t(\"labels.arrowhead_crowfoot_many\"),\n      icon: <ArrowheadCrowfootIcon flip={flip} />,\n      keyBinding: \"x\",\n    },\n    {\n      value: \"crowfoot_one_or_many\",\n      text: t(\"labels.arrowhead_crowfoot_one_or_many\"),\n      icon: <ArrowheadCrowfootOneOrManyIcon flip={flip} />,\n      keyBinding: \"v\",\n    },\n  ] as const;\n};\n\nexport const actionChangeArrowhead = register({\n  name: \"changeArrowhead\",\n  label: \"Change arrowheads\",\n  trackEvent: false,\n  perform: (\n    elements,\n    appState,\n    value: { position: \"start\" | \"end\"; type: Arrowhead },\n  ) => {\n    return {\n      elements: changeProperty(elements, appState, (el) => {\n        if (isLinearElement(el)) {\n          const { position, type } = value;\n\n          if (position === \"start\") {\n            const element: ExcalidrawLinearElement = newElementWith(el, {\n              startArrowhead: type,\n            });\n            return element;\n          } else if (position === \"end\") {\n            const element: ExcalidrawLinearElement = newElementWith(el, {\n              endArrowhead: type,\n            });\n            return element;\n          }\n        }\n\n        return el;\n      }),\n      appState: {\n        ...appState,\n        [value.position === \"start\"\n          ? \"currentItemStartArrowhead\"\n          : \"currentItemEndArrowhead\"]: value.type,\n      },\n      captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => {\n    const isRTL = getLanguage().rtl;\n\n    return (\n      <fieldset>\n        <legend>{t(\"labels.arrowheads\")}</legend>\n        <div className=\"iconSelectList buttonList\">\n          <IconPicker\n            label=\"arrowhead_start\"\n            options={getArrowheadOptions(!isRTL)}\n            value={getFormValue<Arrowhead | null>(\n              elements,\n              appState,\n              (element) =>\n                isLinearElement(element) && canHaveArrowheads(element.type)\n                  ? element.startArrowhead\n                  : appState.currentItemStartArrowhead,\n              true,\n              appState.currentItemStartArrowhead,\n            )}\n            onChange={(value) => updateData({ position: \"start\", type: value })}\n            numberOfOptionsToAlwaysShow={4}\n          />\n          <IconPicker\n            label=\"arrowhead_end\"\n            group=\"arrowheads\"\n            options={getArrowheadOptions(!!isRTL)}\n            value={getFormValue<Arrowhead | null>(\n              elements,\n              appState,\n              (element) =>\n                isLinearElement(element) && canHaveArrowheads(element.type)\n                  ? element.endArrowhead\n                  : appState.currentItemEndArrowhead,\n              true,\n              appState.currentItemEndArrowhead,\n            )}\n            onChange={(value) => updateData({ position: \"end\", type: value })}\n            numberOfOptionsToAlwaysShow={4}\n          />\n        </div>\n      </fieldset>\n    );\n  },\n});\n\nexport const actionChangeArrowType = register({\n  name: \"changeArrowType\",\n  label: \"Change arrow types\",\n  trackEvent: false,\n  perform: (elements, appState, value, app) => {\n    const newElements = changeProperty(elements, appState, (el) => {\n      if (!isArrowElement(el)) {\n        return el;\n      }\n      const newElement = newElementWith(el, {\n        roundness:\n          value === ARROW_TYPE.round\n            ? {\n                type: ROUNDNESS.PROPORTIONAL_RADIUS,\n              }\n            : null,\n        elbowed: value === ARROW_TYPE.elbow,\n        points:\n          value === ARROW_TYPE.elbow || el.elbowed\n            ? [el.points[0], el.points[el.points.length - 1]]\n            : el.points,\n      });\n\n      if (isElbowArrow(newElement)) {\n        const elementsMap = app.scene.getNonDeletedElementsMap();\n\n        app.dismissLinearEditor();\n\n        const startGlobalPoint =\n          LinearElementEditor.getPointAtIndexGlobalCoordinates(\n            newElement,\n            0,\n            elementsMap,\n          );\n        const endGlobalPoint =\n          LinearElementEditor.getPointAtIndexGlobalCoordinates(\n            newElement,\n            -1,\n            elementsMap,\n          );\n        const startHoveredElement =\n          !newElement.startBinding &&\n          getHoveredElementForBinding(\n            tupleToCoors(startGlobalPoint),\n            elements,\n            elementsMap,\n            appState.zoom,\n            false,\n            true,\n          );\n        const endHoveredElement =\n          !newElement.endBinding &&\n          getHoveredElementForBinding(\n            tupleToCoors(endGlobalPoint),\n            elements,\n            elementsMap,\n            appState.zoom,\n            false,\n            true,\n          );\n        const startElement = startHoveredElement\n          ? startHoveredElement\n          : newElement.startBinding &&\n            (elementsMap.get(\n              newElement.startBinding.elementId,\n            ) as ExcalidrawBindableElement);\n        const endElement = endHoveredElement\n          ? endHoveredElement\n          : newElement.endBinding &&\n            (elementsMap.get(\n              newElement.endBinding.elementId,\n            ) as ExcalidrawBindableElement);\n\n        const finalStartPoint = startHoveredElement\n          ? bindPointToSnapToElementOutline(\n              newElement,\n              startHoveredElement,\n              \"start\",\n            )\n          : startGlobalPoint;\n        const finalEndPoint = endHoveredElement\n          ? bindPointToSnapToElementOutline(\n              newElement,\n              endHoveredElement,\n              \"end\",\n            )\n          : endGlobalPoint;\n\n        startHoveredElement &&\n          bindLinearElement(\n            newElement,\n            startHoveredElement,\n            \"start\",\n            elementsMap,\n          );\n        endHoveredElement &&\n          bindLinearElement(newElement, endHoveredElement, \"end\", elementsMap);\n\n        mutateElement(newElement, {\n          points: [finalStartPoint, finalEndPoint].map(\n            (p): LocalPoint =>\n              pointFrom(p[0] - newElement.x, p[1] - newElement.y),\n          ),\n          ...(startElement && newElement.startBinding\n            ? {\n                startBinding: {\n                  // @ts-ignore TS cannot discern check above\n                  ...newElement.startBinding!,\n                  ...calculateFixedPointForElbowArrowBinding(\n                    newElement,\n                    startElement,\n                    \"start\",\n                    elementsMap,\n                  ),\n                },\n              }\n            : {}),\n          ...(endElement && newElement.endBinding\n            ? {\n                endBinding: {\n                  // @ts-ignore TS cannot discern check above\n                  ...newElement.endBinding,\n                  ...calculateFixedPointForElbowArrowBinding(\n                    newElement,\n                    endElement,\n                    \"end\",\n                    elementsMap,\n                  ),\n                },\n              }\n            : {}),\n        });\n\n        LinearElementEditor.updateEditorMidPointsCache(\n          newElement,\n          elementsMap,\n          app.state,\n        );\n      }\n\n      return newElement;\n    });\n\n    const newState = {\n      ...appState,\n      currentItemArrowType: value,\n    };\n\n    // Change the arrow type and update any other state settings for\n    // the arrow.\n    const selectedId = appState.selectedLinearElement?.elementId;\n    if (selectedId) {\n      const selected = newElements.find((el) => el.id === selectedId);\n      if (selected) {\n        newState.selectedLinearElement = new LinearElementEditor(\n          selected as ExcalidrawLinearElement,\n        );\n      }\n    }\n\n    return {\n      elements: newElements,\n      appState: newState,\n      captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => {\n    return (\n      <fieldset>\n        <legend>{t(\"labels.arrowtypes\")}</legend>\n        <ButtonIconSelect\n          group=\"arrowtypes\"\n          options={[\n            {\n              value: ARROW_TYPE.sharp,\n              text: t(\"labels.arrowtype_sharp\"),\n              icon: sharpArrowIcon,\n              testId: \"sharp-arrow\",\n            },\n            {\n              value: ARROW_TYPE.round,\n              text: t(\"labels.arrowtype_round\"),\n              icon: roundArrowIcon,\n              testId: \"round-arrow\",\n            },\n            {\n              value: ARROW_TYPE.elbow,\n              text: t(\"labels.arrowtype_elbowed\"),\n              icon: elbowArrowIcon,\n              testId: \"elbow-arrow\",\n            },\n          ]}\n          value={getFormValue(\n            elements,\n            appState,\n            (element) => {\n              if (isArrowElement(element)) {\n                return element.elbowed\n                  ? ARROW_TYPE.elbow\n                  : element.roundness\n                  ? ARROW_TYPE.round\n                  : ARROW_TYPE.sharp;\n              }\n\n              return null;\n            },\n            (element) => isArrowElement(element),\n            (hasSelection) =>\n              hasSelection ? null : appState.currentItemArrowType,\n          )}\n          onChange={(value) => updateData(value)}\n        />\n      </fieldset>\n    );\n  },\n});\n", "// place here categories that you want to track. We want to track just a\n// small subset of categories at a given time.\nconst ALLOWED_CATEGORIES_TO_TRACK = new Set([\"command_palette\", \"export\"]);\n\nexport const trackEvent = (\n  category: string,\n  action: string,\n  label?: string,\n  value?: number,\n) => {\n  try {\n    if (\n      typeof window === \"undefined\" ||\n      import.meta.env.VITE_WORKER_ID ||\n      import.meta.env.VITE_APP_ENABLE_TRACKING !== \"true\"\n    ) {\n      return;\n    }\n\n    if (!ALLOWED_CATEGORIES_TO_TRACK.has(category)) {\n      return;\n    }\n\n    if (import.meta.env.DEV) {\n      // comment out to debug in dev\n      return;\n    }\n\n    if (!import.meta.env.PROD) {\n      console.info(\"trackEvent\", { category, action, label, value });\n    }\n\n    if (window.sa_event) {\n      window.sa_event(action, {\n        category,\n        label,\n        value,\n      });\n    }\n  } catch (error) {\n    console.error(\"error during analytics\", error);\n  }\n};\n", "import type { JSX } from \"react\";\nimport clsx from \"clsx\";\nimport { ButtonIcon } from \"./ButtonIcon\";\n\n// TODO: It might be \"clever\" to add option.icon to the existing component <ButtonSelect />\nexport const ButtonIconSelect = <T extends Object>(\n  props: {\n    options: {\n      value: T;\n      text: string;\n      icon: JSX.Element;\n      testId?: string;\n      /** if not supplied, defaults to value identity check */\n      active?: boolean;\n    }[];\n    value: T | null;\n    type?: \"radio\" | \"button\";\n  } & (\n    | { type?: \"radio\"; group: string; onChange: (value: T) => void }\n    | {\n        type: \"button\";\n        onClick: (\n          value: T,\n          event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n        ) => void;\n      }\n  ),\n) => (\n  <div className=\"buttonList\">\n    {props.options.map((option) =>\n      props.type === \"button\" ? (\n        <ButtonIcon\n          key={option.text}\n          icon={option.icon}\n          title={option.text}\n          testId={option.testId}\n          active={option.active ?? props.value === option.value}\n          onClick={(event) => props.onClick(option.value, event)}\n        />\n      ) : (\n        <label\n          key={option.text}\n          className={clsx({ active: props.value === option.value })}\n          title={option.text}\n        >\n          <input\n            type=\"radio\"\n            name={props.group}\n            onChange={() => props.onChange(option.value)}\n            checked={props.value === option.value}\n            data-testid={option.testId}\n          />\n          {option.icon}\n        </label>\n      ),\n    )}\n  </div>\n);\n", "import { forwardRef } from \"react\";\nimport type { JSX } from \"react\";\nimport clsx from \"clsx\";\n\nimport \"./ButtonIcon.scss\";\n\ninterface ButtonIconProps {\n  icon: JSX.Element;\n  title: string;\n  className?: string;\n  testId?: string;\n  /** if not supplied, defaults to value identity check */\n  active?: boolean;\n  /** include standalone style (could interfere with parent styles) */\n  standalone?: boolean;\n  onClick: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n}\n\nexport const ButtonIcon = forwardRef<HTMLButtonElement, ButtonIconProps>(\n  (props, ref) => {\n    const { title, className, testId, active, standalone, icon, onClick } =\n      props;\n    return (\n      <button\n        type=\"button\"\n        ref={ref}\n        key={title}\n        title={title}\n        data-testid={testId}\n        className={clsx(className, { standalone, active })}\n        onClick={onClick}\n      >\n        {icon}\n      </button>\n    );\n  },\n);\n", "import clsx from \"clsx\";\nimport type { ColorPickerType } from \"./colorPickerUtils\";\nimport {\n  DEFAULT_CANVAS_BACKGROUND_PICKS,\n  DEFAULT_ELEMENT_BACKGROUND_PICKS,\n  DEFAULT_ELEMENT_STROKE_PICKS,\n} from \"../../colors\";\n\ninterface TopPicksProps {\n  onChange: (color: string) => void;\n  type: ColorPickerType;\n  activeColor: string;\n  topPicks?: readonly string[];\n}\n\nexport const TopPicks = ({\n  onChange,\n  type,\n  activeColor,\n  topPicks,\n}: TopPicksProps) => {\n  let colors;\n  if (type === \"elementStroke\") {\n    colors = DEFAULT_ELEMENT_STROKE_PICKS;\n  }\n\n  if (type === \"elementBackground\") {\n    colors = DEFAULT_ELEMENT_BACKGROUND_PICKS;\n  }\n\n  if (type === \"canvasBackground\") {\n    colors = DEFAULT_CANVAS_BACKGROUND_PICKS;\n  }\n\n  // this one can overwrite defaults\n  if (topPicks) {\n    colors = topPicks;\n  }\n\n  if (!colors) {\n    console.error(\"Invalid type for TopPicks\");\n    return null;\n  }\n\n  return (\n    <div className=\"color-picker__top-picks\">\n      {colors.map((color: string) => (\n        <button\n          className={clsx(\"color-picker__button\", {\n            active: color === activeColor,\n            \"is-transparent\": color === \"transparent\" || !color,\n          })}\n          style={{ \"--swatch-color\": color }}\n          key={color}\n          type=\"button\"\n          title={color}\n          onClick={() => onChange(color)}\n          data-testid={`color-top-pick-${color}`}\n        >\n          <div className=\"color-picker__button-outline\" />\n        </button>\n      ))}\n    </div>\n  );\n};\n", "export const ButtonSeparator = () => (\n  <div\n    style={{\n      width: 1,\n      height: \"1rem\",\n      backgroundColor: \"var(--default-border-color)\",\n      margin: \"0 auto\",\n    }}\n  />\n);\n", "import React, { useEffect, useState } from \"react\";\nimport { t } from \"../../i18n\";\n\nimport type { ExcalidrawElement } from \"../../element/types\";\nimport { ShadeList } from \"./ShadeList\";\n\nimport PickerColorList from \"./PickerColorList\";\nimport { useAtom } from \"../../editor-jotai\";\nimport { CustomColorList } from \"./CustomColorList\";\nimport { colorPickerKeyNavHandler } from \"./keyboardNavHandlers\";\nimport PickerHeading from \"./PickerHeading\";\nimport type { ColorPickerType } from \"./colorPickerUtils\";\nimport {\n  activeColorPickerSectionAtom,\n  getColorNameAndShadeFromColor,\n  getMostUsedCustomColors,\n  isCustomColor,\n} from \"./colorPickerUtils\";\nimport type { ColorPaletteCustom } from \"../../colors\";\nimport {\n  DEFAULT_ELEMENT_BACKGROUND_COLOR_INDEX,\n  DEFAULT_ELEMENT_STROKE_COLOR_INDEX,\n} from \"../../colors\";\nimport { KEYS } from \"../../keys\";\nimport { EVENT } from \"../../constants\";\n\ninterface PickerProps {\n  color: string;\n  onChange: (color: string) => void;\n  label: string;\n  type: ColorPickerType;\n  elements: readonly ExcalidrawElement[];\n  palette: ColorPaletteCustom;\n  updateData: (formData?: any) => void;\n  children?: React.ReactNode;\n  onEyeDropperToggle: (force?: boolean) => void;\n  onEscape: (event: React.KeyboardEvent | KeyboardEvent) => void;\n}\n\nexport const Picker = ({\n  color,\n  onChange,\n  label,\n  type,\n  elements,\n  palette,\n  updateData,\n  children,\n  onEyeDropperToggle,\n  onEscape,\n}: PickerProps) => {\n  const [customColors] = React.useState(() => {\n    if (type === \"canvasBackground\") {\n      return [];\n    }\n    return getMostUsedCustomColors(elements, type, palette);\n  });\n\n  const [activeColorPickerSection, setActiveColorPickerSection] = useAtom(\n    activeColorPickerSectionAtom,\n  );\n\n  const colorObj = getColorNameAndShadeFromColor({\n    color,\n    palette,\n  });\n\n  useEffect(() => {\n    if (!activeColorPickerSection) {\n      const isCustom = isCustomColor({ color, palette });\n      const isCustomButNotInList = isCustom && !customColors.includes(color);\n\n      setActiveColorPickerSection(\n        isCustomButNotInList\n          ? \"hex\"\n          : isCustom\n          ? \"custom\"\n          : colorObj?.shade != null\n          ? \"shades\"\n          : \"baseColors\",\n      );\n    }\n  }, [\n    activeColorPickerSection,\n    color,\n    palette,\n    setActiveColorPickerSection,\n    colorObj,\n    customColors,\n  ]);\n\n  const [activeShade, setActiveShade] = useState(\n    colorObj?.shade ??\n      (type === \"elementBackground\"\n        ? DEFAULT_ELEMENT_BACKGROUND_COLOR_INDEX\n        : DEFAULT_ELEMENT_STROKE_COLOR_INDEX),\n  );\n\n  useEffect(() => {\n    if (colorObj?.shade != null) {\n      setActiveShade(colorObj.shade);\n    }\n\n    const keyup = (event: KeyboardEvent) => {\n      if (event.key === KEYS.ALT) {\n        onEyeDropperToggle(false);\n      }\n    };\n    document.addEventListener(EVENT.KEYUP, keyup, { capture: true });\n    return () => {\n      document.removeEventListener(EVENT.KEYUP, keyup, { capture: true });\n    };\n  }, [colorObj, onEyeDropperToggle]);\n\n  const pickerRef = React.useRef<HTMLDivElement>(null);\n\n  return (\n    <div role=\"dialog\" aria-modal=\"true\" aria-label={t(\"labels.colorPicker\")}>\n      <div\n        ref={pickerRef}\n        onKeyDown={(event) => {\n          const handled = colorPickerKeyNavHandler({\n            event,\n            activeColorPickerSection,\n            palette,\n            color,\n            onChange,\n            onEyeDropperToggle,\n            customColors,\n            setActiveColorPickerSection,\n            updateData,\n            activeShade,\n            onEscape,\n          });\n\n          if (handled) {\n            event.preventDefault();\n            event.stopPropagation();\n          }\n        }}\n        className=\"color-picker-content properties-content\"\n        // to allow focusing by clicking but not by tabbing\n        tabIndex={-1}\n      >\n        {!!customColors.length && (\n          <div>\n            <PickerHeading>\n              {t(\"colorPicker.mostUsedCustomColors\")}\n            </PickerHeading>\n            <CustomColorList\n              colors={customColors}\n              color={color}\n              label={t(\"colorPicker.mostUsedCustomColors\")}\n              onChange={onChange}\n            />\n          </div>\n        )}\n\n        <div>\n          <PickerHeading>{t(\"colorPicker.colors\")}</PickerHeading>\n          <PickerColorList\n            color={color}\n            label={label}\n            palette={palette}\n            onChange={onChange}\n            activeShade={activeShade}\n          />\n        </div>\n\n        <div>\n          <PickerHeading>{t(\"colorPicker.shades\")}</PickerHeading>\n          <ShadeList hex={color} onChange={onChange} palette={palette} />\n        </div>\n        {children}\n      </div>\n    </div>\n  );\n};\n", "import clsx from \"clsx\";\nimport { useAtom } from \"../../editor-jotai\";\nimport { useEffect, useRef } from \"react\";\nimport {\n  activeColorPickerSectionAtom,\n  getColorNameAndShadeFromColor,\n} from \"./colorPickerUtils\";\nimport HotkeyLabel from \"./HotkeyLabel\";\nimport { t } from \"../../i18n\";\nimport type { ColorPaletteCustom } from \"../../colors\";\n\ninterface ShadeListProps {\n  hex: string;\n  onChange: (color: string) => void;\n  palette: ColorPaletteCustom;\n}\n\nexport const ShadeList = ({ hex, onChange, palette }: ShadeListProps) => {\n  const colorObj = getColorNameAndShadeFromColor({\n    color: hex || \"transparent\",\n    palette,\n  });\n\n  const [activeColorPickerSection, setActiveColorPickerSection] = useAtom(\n    activeColorPickerSectionAtom,\n  );\n\n  const btnRef = useRef<HTMLButtonElement>(null);\n\n  useEffect(() => {\n    if (btnRef.current && activeColorPickerSection === \"shades\") {\n      btnRef.current.focus();\n    }\n  }, [colorObj, activeColorPickerSection]);\n\n  if (colorObj) {\n    const { colorName, shade } = colorObj;\n\n    const shades = palette[colorName];\n\n    if (Array.isArray(shades)) {\n      return (\n        <div className=\"color-picker-content--default shades\">\n          {shades.map((color, i) => (\n            <button\n              ref={\n                i === shade && activeColorPickerSection === \"shades\"\n                  ? btnRef\n                  : undefined\n              }\n              tabIndex={-1}\n              key={i}\n              type=\"button\"\n              className={clsx(\n                \"color-picker__button color-picker__button--large\",\n                { active: i === shade },\n              )}\n              aria-label=\"Shade\"\n              title={`${colorName} - ${i + 1}`}\n              style={color ? { \"--swatch-color\": color } : undefined}\n              onClick={() => {\n                onChange(color);\n                setActiveColorPickerSection(\"shades\");\n              }}\n            >\n              <div className=\"color-picker__button-outline\" />\n              <HotkeyLabel color={color} keyLabel={i + 1} isShade />\n            </button>\n          ))}\n        </div>\n      );\n    }\n  }\n\n  return (\n    <div\n      className=\"color-picker-content--default\"\n      style={{ position: \"relative\" }}\n      tabIndex={-1}\n    >\n      <button\n        type=\"button\"\n        tabIndex={-1}\n        className=\"color-picker__button color-picker__button--large color-picker__button--no-focus-visible\"\n      />\n      <div\n        tabIndex={-1}\n        style={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          textAlign: \"center\",\n          fontSize: \"0.75rem\",\n        }}\n      >\n        {t(\"colorPicker.noShades\")}\n      </div>\n    </div>\n  );\n};\n", "import type { ExcalidrawElement } from \"../../element/types\";\nimport type { ColorPickerColor, ColorPaletteCustom } from \"../../colors\";\nimport { MAX_CUSTOM_COLORS_USED_IN_CANVAS } from \"../../colors\";\nimport { atom } from \"../../editor-jotai\";\n\nexport const getColorNameAndShadeFromColor = ({\n  palette,\n  color,\n}: {\n  palette: ColorPaletteCustom;\n  color: string;\n}): {\n  colorName: ColorPickerColor;\n  shade: number | null;\n} | null => {\n  for (const [colorName, colorVal] of Object.entries(palette)) {\n    if (Array.isArray(colorVal)) {\n      const shade = colorVal.indexOf(color);\n      if (shade > -1) {\n        return { colorName: colorName as ColorPickerColor, shade };\n      }\n    } else if (colorVal === color) {\n      return { colorName: colorName as ColorPickerColor, shade: null };\n    }\n  }\n  return null;\n};\n\nexport const colorPickerHotkeyBindings = [\n  [\"q\", \"w\", \"e\", \"r\", \"t\"],\n  [\"a\", \"s\", \"d\", \"f\", \"g\"],\n  [\"z\", \"x\", \"c\", \"v\", \"b\"],\n].flat();\n\nexport const isCustomColor = ({\n  color,\n  palette,\n}: {\n  color: string;\n  palette: ColorPaletteCustom;\n}) => {\n  const paletteValues = Object.values(palette).flat();\n  return !paletteValues.includes(color);\n};\n\nexport const getMostUsedCustomColors = (\n  elements: readonly ExcalidrawElement[],\n  type: \"elementBackground\" | \"elementStroke\",\n  palette: ColorPaletteCustom,\n) => {\n  const elementColorTypeMap = {\n    elementBackground: \"backgroundColor\",\n    elementStroke: \"strokeColor\",\n  };\n\n  const colors = elements.filter((element) => {\n    if (element.isDeleted) {\n      return false;\n    }\n\n    const color =\n      element[elementColorTypeMap[type] as \"backgroundColor\" | \"strokeColor\"];\n\n    return isCustomColor({ color, palette });\n  });\n\n  const colorCountMap = new Map<string, number>();\n  colors.forEach((element) => {\n    const color =\n      element[elementColorTypeMap[type] as \"backgroundColor\" | \"strokeColor\"];\n    if (colorCountMap.has(color)) {\n      colorCountMap.set(color, colorCountMap.get(color)! + 1);\n    } else {\n      colorCountMap.set(color, 1);\n    }\n  });\n\n  return [...colorCountMap.entries()]\n    .sort((a, b) => b[1] - a[1])\n    .map((c) => c[0])\n    .slice(0, MAX_CUSTOM_COLORS_USED_IN_CANVAS);\n};\n\nexport type ActiveColorPickerSectionAtomType =\n  | \"custom\"\n  | \"baseColors\"\n  | \"shades\"\n  | \"hex\"\n  | null;\nexport const activeColorPickerSectionAtom =\n  atom<ActiveColorPickerSectionAtomType>(null);\n\nconst calculateContrast = (r: number, g: number, b: number) => {\n  const yiq = (r * 299 + g * 587 + b * 114) / 1000;\n  return yiq >= 160 ? \"black\" : \"white\";\n};\n\n// inspiration from https://stackoverflow.com/a/11868398\nexport const getContrastYIQ = (bgHex: string, isCustomColor: boolean) => {\n  if (isCustomColor) {\n    const style = new Option().style;\n    style.color = bgHex;\n\n    if (style.color) {\n      const rgb = style.color\n        .replace(/^(rgb|rgba)\\(/, \"\")\n        .replace(/\\)$/, \"\")\n        .replace(/\\s/g, \"\")\n        .split(\",\");\n      const r = parseInt(rgb[0]);\n      const g = parseInt(rgb[1]);\n      const b = parseInt(rgb[2]);\n\n      return calculateContrast(r, g, b);\n    }\n  }\n\n  // TODO: ? is this wanted?\n  if (bgHex === \"transparent\") {\n    return \"black\";\n  }\n\n  const r = parseInt(bgHex.substring(1, 3), 16);\n  const g = parseInt(bgHex.substring(3, 5), 16);\n  const b = parseInt(bgHex.substring(5, 7), 16);\n\n  return calculateContrast(r, g, b);\n};\n\nexport type ColorPickerType =\n  | \"canvasBackground\"\n  | \"elementBackground\"\n  | \"elementStroke\";\n", "import React from \"react\";\nimport { getContrastYIQ } from \"./colorPickerUtils\";\n\ninterface HotkeyLabelProps {\n  color: string;\n  keyLabel: string | number;\n  isCustomColor?: boolean;\n  isShade?: boolean;\n}\nconst HotkeyLabel = ({\n  color,\n  keyLabel,\n  isCustomColor = false,\n  isShade = false,\n}: HotkeyLabelProps) => {\n  return (\n    <div\n      className=\"color-picker__button__hotkey-label\"\n      style={{\n        color: getContrastYIQ(color, isCustomColor),\n      }}\n    >\n      {isShade && \"\u21E7\"}\n      {keyLabel}\n    </div>\n  );\n};\n\nexport default HotkeyLabel;\n", "import clsx from \"clsx\";\nimport { useAtom } from \"../../editor-jotai\";\nimport { useEffect, useRef } from \"react\";\nimport {\n  activeColorPickerSectionAtom,\n  colorPickerHotkeyBindings,\n  getColorNameAndShadeFromColor,\n} from \"./colorPickerUtils\";\nimport HotkeyLabel from \"./HotkeyLabel\";\nimport type { ColorPaletteCustom } from \"../../colors\";\nimport type { TranslationKeys } from \"../../i18n\";\nimport { t } from \"../../i18n\";\n\ninterface PickerColorListProps {\n  palette: ColorPaletteCustom;\n  color: string;\n  onChange: (color: string) => void;\n  label: string;\n  activeShade: number;\n}\n\nconst PickerColorList = ({\n  palette,\n  color,\n  onChange,\n  label,\n  activeShade,\n}: PickerColorListProps) => {\n  const colorObj = getColorNameAndShadeFromColor({\n    color: color || \"transparent\",\n    palette,\n  });\n  const [activeColorPickerSection, setActiveColorPickerSection] = useAtom(\n    activeColorPickerSectionAtom,\n  );\n\n  const btnRef = useRef<HTMLButtonElement>(null);\n\n  useEffect(() => {\n    if (btnRef.current && activeColorPickerSection === \"baseColors\") {\n      btnRef.current.focus();\n    }\n  }, [colorObj?.colorName, activeColorPickerSection]);\n\n  return (\n    <div className=\"color-picker-content--default\">\n      {Object.entries(palette).map(([key, value], index) => {\n        const color =\n          (Array.isArray(value) ? value[activeShade] : value) || \"transparent\";\n\n        const keybinding = colorPickerHotkeyBindings[index];\n        const label = t(\n          `colors.${key.replace(/\\d+/, \"\")}` as unknown as TranslationKeys,\n          null,\n          \"\",\n        );\n\n        return (\n          <button\n            ref={colorObj?.colorName === key ? btnRef : undefined}\n            tabIndex={-1}\n            type=\"button\"\n            className={clsx(\n              \"color-picker__button color-picker__button--large\",\n              {\n                active: colorObj?.colorName === key,\n                \"is-transparent\": color === \"transparent\" || !color,\n              },\n            )}\n            onClick={() => {\n              onChange(color);\n              setActiveColorPickerSection(\"baseColors\");\n            }}\n            title={`${label}${\n              color.startsWith(\"#\") ? ` ${color}` : \"\"\n            } \u2014 ${keybinding}`}\n            aria-label={`${label} \u2014 ${keybinding}`}\n            style={color ? { \"--swatch-color\": color } : undefined}\n            data-testid={`color-${key}`}\n            key={key}\n          >\n            <div className=\"color-picker__button-outline\" />\n            <HotkeyLabel color={color} keyLabel={keybinding} />\n          </button>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default PickerColorList;\n", "import clsx from \"clsx\";\nimport { useAtom } from \"../../editor-jotai\";\nimport { useEffect, useRef } from \"react\";\nimport { activeColorPickerSectionAtom } from \"./colorPickerUtils\";\nimport HotkeyLabel from \"./HotkeyLabel\";\n\ninterface CustomColorListProps {\n  colors: string[];\n  color: string;\n  onChange: (color: string) => void;\n  label: string;\n}\n\nexport const CustomColorList = ({\n  colors,\n  color,\n  onChange,\n  label,\n}: CustomColorListProps) => {\n  const [activeColorPickerSection, setActiveColorPickerSection] = useAtom(\n    activeColorPickerSectionAtom,\n  );\n\n  const btnRef = useRef<HTMLButtonElement>(null);\n\n  useEffect(() => {\n    if (btnRef.current) {\n      btnRef.current.focus();\n    }\n  }, [color, activeColorPickerSection]);\n\n  return (\n    <div className=\"color-picker-content--default\">\n      {colors.map((c, i) => {\n        return (\n          <button\n            ref={color === c ? btnRef : undefined}\n            tabIndex={-1}\n            type=\"button\"\n            className={clsx(\n              \"color-picker__button color-picker__button--large\",\n              {\n                active: color === c,\n                \"is-transparent\": c === \"transparent\" || !c,\n              },\n            )}\n            onClick={() => {\n              onChange(c);\n              setActiveColorPickerSection(\"custom\");\n            }}\n            title={c}\n            aria-label={label}\n            style={{ \"--swatch-color\": c }}\n            key={i}\n          >\n            <div className=\"color-picker__button-outline\" />\n            <HotkeyLabel color={c} keyLabel={i + 1} isCustomColor />\n          </button>\n        );\n      })}\n    </div>\n  );\n};\n", "import { KEYS } from \"../../keys\";\nimport type {\n  ColorPickerColor,\n  ColorPalette,\n  ColorPaletteCustom,\n} from \"../../colors\";\nimport { COLORS_PER_ROW, COLOR_PALETTE } from \"../../colors\";\nimport type { ValueOf } from \"../../utility-types\";\nimport type { ActiveColorPickerSectionAtomType } from \"./colorPickerUtils\";\nimport {\n  colorPickerHotkeyBindings,\n  getColorNameAndShadeFromColor,\n} from \"./colorPickerUtils\";\n\nconst arrowHandler = (\n  eventKey: string,\n  currentIndex: number | null,\n  length: number,\n) => {\n  const rows = Math.ceil(length / COLORS_PER_ROW);\n\n  currentIndex = currentIndex ?? -1;\n\n  switch (eventKey) {\n    case \"ArrowLeft\": {\n      const prevIndex = currentIndex - 1;\n      return prevIndex < 0 ? length - 1 : prevIndex;\n    }\n    case \"ArrowRight\": {\n      return (currentIndex + 1) % length;\n    }\n    case \"ArrowDown\": {\n      const nextIndex = currentIndex + COLORS_PER_ROW;\n      return nextIndex >= length ? currentIndex % COLORS_PER_ROW : nextIndex;\n    }\n    case \"ArrowUp\": {\n      const prevIndex = currentIndex - COLORS_PER_ROW;\n      const newIndex =\n        prevIndex < 0 ? COLORS_PER_ROW * rows + prevIndex : prevIndex;\n      return newIndex >= length ? undefined : newIndex;\n    }\n  }\n};\n\ninterface HotkeyHandlerProps {\n  e: React.KeyboardEvent;\n  colorObj: { colorName: ColorPickerColor; shade: number | null } | null;\n  onChange: (color: string) => void;\n  palette: ColorPaletteCustom;\n  customColors: string[];\n  setActiveColorPickerSection: (\n    update: React.SetStateAction<ActiveColorPickerSectionAtomType>,\n  ) => void;\n  activeShade: number;\n}\n\n/**\n * @returns true if the event was handled\n */\nconst hotkeyHandler = ({\n  e,\n  colorObj,\n  onChange,\n  palette,\n  customColors,\n  setActiveColorPickerSection,\n  activeShade,\n}: HotkeyHandlerProps): boolean => {\n  if (colorObj?.shade != null) {\n    // shift + numpad is extremely messed up on windows apparently\n    if (\n      [\"Digit1\", \"Digit2\", \"Digit3\", \"Digit4\", \"Digit5\"].includes(e.code) &&\n      e.shiftKey\n    ) {\n      const newShade = Number(e.code.slice(-1)) - 1;\n      onChange(palette[colorObj.colorName][newShade]);\n      setActiveColorPickerSection(\"shades\");\n      return true;\n    }\n  }\n\n  if ([\"1\", \"2\", \"3\", \"4\", \"5\"].includes(e.key)) {\n    const c = customColors[Number(e.key) - 1];\n    if (c) {\n      onChange(customColors[Number(e.key) - 1]);\n      setActiveColorPickerSection(\"custom\");\n      return true;\n    }\n  }\n\n  if (colorPickerHotkeyBindings.includes(e.key)) {\n    const index = colorPickerHotkeyBindings.indexOf(e.key);\n    const paletteKey = Object.keys(palette)[index] as keyof ColorPalette;\n    const paletteValue = palette[paletteKey];\n    const r = Array.isArray(paletteValue)\n      ? paletteValue[activeShade]\n      : paletteValue;\n    onChange(r);\n    setActiveColorPickerSection(\"baseColors\");\n    return true;\n  }\n  return false;\n};\n\ninterface ColorPickerKeyNavHandlerProps {\n  event: React.KeyboardEvent;\n  activeColorPickerSection: ActiveColorPickerSectionAtomType;\n  palette: ColorPaletteCustom;\n  color: string;\n  onChange: (color: string) => void;\n  customColors: string[];\n  setActiveColorPickerSection: (\n    update: React.SetStateAction<ActiveColorPickerSectionAtomType>,\n  ) => void;\n  updateData: (formData?: any) => void;\n  activeShade: number;\n  onEyeDropperToggle: (force?: boolean) => void;\n  onEscape: (event: React.KeyboardEvent | KeyboardEvent) => void;\n}\n\n/**\n * @returns true if the event was handled\n */\nexport const colorPickerKeyNavHandler = ({\n  event,\n  activeColorPickerSection,\n  palette,\n  color,\n  onChange,\n  customColors,\n  setActiveColorPickerSection,\n  updateData,\n  activeShade,\n  onEyeDropperToggle,\n  onEscape,\n}: ColorPickerKeyNavHandlerProps): boolean => {\n  if (event[KEYS.CTRL_OR_CMD]) {\n    return false;\n  }\n\n  if (event.key === KEYS.ESCAPE) {\n    onEscape(event);\n    return true;\n  }\n\n  // checkt using `key` to ignore combos with Alt modifier\n  if (event.key === KEYS.ALT) {\n    onEyeDropperToggle(true);\n    return true;\n  }\n\n  if (event.key === KEYS.I) {\n    onEyeDropperToggle();\n    return true;\n  }\n\n  const colorObj = getColorNameAndShadeFromColor({ color, palette });\n\n  if (event.key === KEYS.TAB) {\n    const sectionsMap: Record<\n      NonNullable<ActiveColorPickerSectionAtomType>,\n      boolean\n    > = {\n      custom: !!customColors.length,\n      baseColors: true,\n      shades: colorObj?.shade != null,\n      hex: true,\n    };\n\n    const sections = Object.entries(sectionsMap).reduce((acc, [key, value]) => {\n      if (value) {\n        acc.push(key as ActiveColorPickerSectionAtomType);\n      }\n      return acc;\n    }, [] as ActiveColorPickerSectionAtomType[]);\n\n    const activeSectionIndex = sections.indexOf(activeColorPickerSection);\n    const indexOffset = event.shiftKey ? -1 : 1;\n    const nextSectionIndex =\n      activeSectionIndex + indexOffset > sections.length - 1\n        ? 0\n        : activeSectionIndex + indexOffset < 0\n        ? sections.length - 1\n        : activeSectionIndex + indexOffset;\n\n    const nextSection = sections[nextSectionIndex];\n\n    if (nextSection) {\n      setActiveColorPickerSection(nextSection);\n    }\n\n    if (nextSection === \"custom\") {\n      onChange(customColors[0]);\n    } else if (nextSection === \"baseColors\") {\n      const baseColorName = (\n        Object.entries(palette) as [string, ValueOf<ColorPalette>][]\n      ).find(([name, shades]) => {\n        if (Array.isArray(shades)) {\n          return shades.includes(color);\n        } else if (shades === color) {\n          return name;\n        }\n        return null;\n      });\n\n      if (!baseColorName) {\n        onChange(COLOR_PALETTE.black);\n      }\n    }\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    return true;\n  }\n\n  if (\n    hotkeyHandler({\n      e: event,\n      colorObj,\n      onChange,\n      palette,\n      customColors,\n      setActiveColorPickerSection,\n      activeShade,\n    })\n  ) {\n    return true;\n  }\n\n  if (activeColorPickerSection === \"shades\") {\n    if (colorObj) {\n      const { shade } = colorObj;\n      const newShade = arrowHandler(event.key, shade, COLORS_PER_ROW);\n\n      if (newShade !== undefined) {\n        onChange(palette[colorObj.colorName][newShade]);\n        return true;\n      }\n    }\n  }\n\n  if (activeColorPickerSection === \"baseColors\") {\n    if (colorObj) {\n      const { colorName } = colorObj;\n      const colorNames = Object.keys(palette) as (keyof ColorPalette)[];\n      const indexOfColorName = colorNames.indexOf(colorName);\n\n      const newColorIndex = arrowHandler(\n        event.key,\n        indexOfColorName,\n        colorNames.length,\n      );\n\n      if (newColorIndex !== undefined) {\n        const newColorName = colorNames[newColorIndex];\n        const newColorNameValue = palette[newColorName];\n\n        onChange(\n          Array.isArray(newColorNameValue)\n            ? newColorNameValue[activeShade]\n            : newColorNameValue,\n        );\n        return true;\n      }\n    }\n  }\n\n  if (activeColorPickerSection === \"custom\") {\n    const indexOfColor = customColors.indexOf(color);\n\n    const newColorIndex = arrowHandler(\n      event.key,\n      indexOfColor,\n      customColors.length,\n    );\n\n    if (newColorIndex !== undefined) {\n      const newColor = customColors[newColorIndex];\n      onChange(newColor);\n      return true;\n    }\n  }\n\n  return false;\n};\n", "import type { ReactNode } from \"react\";\n\nconst PickerHeading = ({ children }: { children: ReactNode }) => (\n  <div className=\"color-picker__heading\">{children}</div>\n);\n\nexport default PickerHeading;\n", "import { isTransparent } from \"../../utils\";\nimport type { ExcalidrawElement } from \"../../element/types\";\nimport type { AppState } from \"../../types\";\nimport { TopPicks } from \"./TopPicks\";\nimport { ButtonSeparator } from \"../ButtonSeparator\";\nimport { Picker } from \"./Picker\";\nimport * as Popover from \"@radix-ui/react-popover\";\nimport type { ColorPickerType } from \"./colorPickerUtils\";\nimport { activeColorPickerSectionAtom } from \"./colorPickerUtils\";\nimport { useExcalidrawContainer } from \"../App\";\nimport type { ColorTuple, ColorPaletteCustom } from \"../../colors\";\nimport { COLOR_PALETTE } from \"../../colors\";\nimport PickerHeading from \"./PickerHeading\";\nimport { t } from \"../../i18n\";\nimport clsx from \"clsx\";\nimport { useRef } from \"react\";\nimport { useAtom } from \"../../editor-jotai\";\nimport { ColorInput } from \"./ColorInput\";\nimport { activeEyeDropperAtom } from \"../EyeDropper\";\nimport { PropertiesPopover } from \"../PropertiesPopover\";\n\nimport \"./ColorPicker.scss\";\n\nconst isValidColor = (color: string) => {\n  const style = new Option().style;\n  style.color = color;\n  return !!style.color;\n};\n\nexport const getColor = (color: string): string | null => {\n  if (isTransparent(color)) {\n    return color;\n  }\n\n  // testing for `#` first fixes a bug on Electron (more specfically, an\n  // Obsidian popout window), where a hex color without `#` is (incorrectly)\n  // considered valid\n  return isValidColor(`#${color}`)\n    ? `#${color}`\n    : isValidColor(color)\n    ? color\n    : null;\n};\n\ninterface ColorPickerProps {\n  type: ColorPickerType;\n  color: string;\n  onChange: (color: string) => void;\n  label: string;\n  elements: readonly ExcalidrawElement[];\n  appState: AppState;\n  palette?: ColorPaletteCustom | null;\n  topPicks?: ColorTuple;\n  updateData: (formData?: any) => void;\n}\n\nconst ColorPickerPopupContent = ({\n  type,\n  color,\n  onChange,\n  label,\n  elements,\n  palette = COLOR_PALETTE,\n  updateData,\n}: Pick<\n  ColorPickerProps,\n  | \"type\"\n  | \"color\"\n  | \"onChange\"\n  | \"label\"\n  | \"elements\"\n  | \"palette\"\n  | \"updateData\"\n>) => {\n  const { container } = useExcalidrawContainer();\n  const [, setActiveColorPickerSection] = useAtom(activeColorPickerSectionAtom);\n\n  const [eyeDropperState, setEyeDropperState] = useAtom(activeEyeDropperAtom);\n\n  const colorInputJSX = (\n    <div>\n      <PickerHeading>{t(\"colorPicker.hexCode\")}</PickerHeading>\n      <ColorInput\n        color={color}\n        label={label}\n        onChange={(color) => {\n          onChange(color);\n        }}\n        colorPickerType={type}\n      />\n    </div>\n  );\n\n  const popoverRef = useRef<HTMLDivElement>(null);\n\n  const focusPickerContent = () => {\n    popoverRef.current\n      ?.querySelector<HTMLDivElement>(\".color-picker-content\")\n      ?.focus();\n  };\n\n  return (\n    <PropertiesPopover\n      container={container}\n      style={{ maxWidth: \"13rem\" }}\n      onFocusOutside={(event) => {\n        // refocus due to eye dropper\n        focusPickerContent();\n        event.preventDefault();\n      }}\n      onPointerDownOutside={(event) => {\n        if (eyeDropperState) {\n          // prevent from closing if we click outside the popover\n          // while eyedropping (e.g. click when clicking the sidebar;\n          // the eye-dropper-backdrop is prevented downstream)\n          event.preventDefault();\n        }\n      }}\n      onClose={() => {\n        updateData({ openPopup: null });\n        setActiveColorPickerSection(null);\n      }}\n    >\n      {palette ? (\n        <Picker\n          palette={palette}\n          color={color}\n          onChange={(changedColor) => {\n            onChange(changedColor);\n          }}\n          onEyeDropperToggle={(force) => {\n            setEyeDropperState((state) => {\n              if (force) {\n                state = state || {\n                  keepOpenOnAlt: true,\n                  onSelect: onChange,\n                  colorPickerType: type,\n                };\n                state.keepOpenOnAlt = true;\n                return state;\n              }\n\n              return force === false || state\n                ? null\n                : {\n                    keepOpenOnAlt: false,\n                    onSelect: onChange,\n                    colorPickerType: type,\n                  };\n            });\n          }}\n          onEscape={(event) => {\n            if (eyeDropperState) {\n              setEyeDropperState(null);\n            } else {\n              updateData({ openPopup: null });\n            }\n          }}\n          label={label}\n          type={type}\n          elements={elements}\n          updateData={updateData}\n        >\n          {colorInputJSX}\n        </Picker>\n      ) : (\n        colorInputJSX\n      )}\n    </PropertiesPopover>\n  );\n};\n\nconst ColorPickerTrigger = ({\n  label,\n  color,\n  type,\n}: {\n  color: string;\n  label: string;\n  type: ColorPickerType;\n}) => {\n  return (\n    <Popover.Trigger\n      type=\"button\"\n      className={clsx(\"color-picker__button active-color properties-trigger\", {\n        \"is-transparent\": color === \"transparent\" || !color,\n      })}\n      aria-label={label}\n      style={color ? { \"--swatch-color\": color } : undefined}\n      title={\n        type === \"elementStroke\"\n          ? t(\"labels.showStroke\")\n          : t(\"labels.showBackground\")\n      }\n    >\n      <div className=\"color-picker__button-outline\" />\n    </Popover.Trigger>\n  );\n};\n\nexport const ColorPicker = ({\n  type,\n  color,\n  onChange,\n  label,\n  elements,\n  palette = COLOR_PALETTE,\n  topPicks,\n  updateData,\n  appState,\n}: ColorPickerProps) => {\n  return (\n    <div>\n      <div role=\"dialog\" aria-modal=\"true\" className=\"color-picker-container\">\n        <TopPicks\n          activeColor={color}\n          onChange={onChange}\n          type={type}\n          topPicks={topPicks}\n        />\n        <ButtonSeparator />\n        <Popover.Root\n          open={appState.openPopup === type}\n          onOpenChange={(open) => {\n            updateData({ openPopup: open ? type : null });\n          }}\n        >\n          {/* serves as an active color indicator as well */}\n          <ColorPickerTrigger color={color} label={label} type={type} />\n          {/* popup content */}\n          {appState.openPopup === type && (\n            <ColorPickerPopupContent\n              type={type}\n              color={color}\n              onChange={onChange}\n              label={label}\n              elements={elements}\n              palette={palette}\n              updateData={updateData}\n            />\n          )}\n        </Popover.Root>\n      </div>\n    </div>\n  );\n};\n", "import { useCallback, useEffect, useRef, useState } from \"react\";\nimport { getColor } from \"./ColorPicker\";\nimport type { ColorPickerType } from \"./colorPickerUtils\";\nimport { activeColorPickerSectionAtom } from \"./colorPickerUtils\";\nimport { eyeDropperIcon } from \"../icons\";\nimport { useAtom } from \"../../editor-jotai\";\nimport { KEYS } from \"../../keys\";\nimport { activeEyeDropperAtom } from \"../EyeDropper\";\nimport clsx from \"clsx\";\nimport { t } from \"../../i18n\";\nimport { useDevice } from \"../App\";\nimport { getShortcutKey } from \"../../utils\";\n\ninterface ColorInputProps {\n  color: string;\n  onChange: (color: string) => void;\n  label: string;\n  colorPickerType: ColorPickerType;\n}\n\nexport const ColorInput = ({\n  color,\n  onChange,\n  label,\n  colorPickerType,\n}: ColorInputProps) => {\n  const device = useDevice();\n  const [innerValue, setInnerValue] = useState(color);\n  const [activeSection, setActiveColorPickerSection] = useAtom(\n    activeColorPickerSectionAtom,\n  );\n\n  useEffect(() => {\n    setInnerValue(color);\n  }, [color]);\n\n  const changeColor = useCallback(\n    (inputValue: string) => {\n      const value = inputValue.toLowerCase();\n      const color = getColor(value);\n\n      if (color) {\n        onChange(color);\n      }\n      setInnerValue(value);\n    },\n    [onChange],\n  );\n\n  const inputRef = useRef<HTMLInputElement>(null);\n  const eyeDropperTriggerRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [activeSection]);\n\n  const [eyeDropperState, setEyeDropperState] = useAtom(activeEyeDropperAtom);\n\n  useEffect(() => {\n    return () => {\n      setEyeDropperState(null);\n    };\n  }, [setEyeDropperState]);\n\n  return (\n    <div className=\"color-picker__input-label\">\n      <div className=\"color-picker__input-hash\">#</div>\n      <input\n        ref={activeSection === \"hex\" ? inputRef : undefined}\n        style={{ border: 0, padding: 0 }}\n        spellCheck={false}\n        className=\"color-picker-input\"\n        aria-label={label}\n        onChange={(event) => {\n          changeColor(event.target.value);\n        }}\n        value={(innerValue || \"\").replace(/^#/, \"\")}\n        onBlur={() => {\n          setInnerValue(color);\n        }}\n        tabIndex={-1}\n        onFocus={() => setActiveColorPickerSection(\"hex\")}\n        onKeyDown={(event) => {\n          if (event.key === KEYS.TAB) {\n            return;\n          } else if (event.key === KEYS.ESCAPE) {\n            eyeDropperTriggerRef.current?.focus();\n          }\n          event.stopPropagation();\n        }}\n      />\n      {/* TODO reenable on mobile with a better UX */}\n      {!device.editor.isMobile && (\n        <>\n          <div\n            style={{\n              width: \"1px\",\n              height: \"1.25rem\",\n              backgroundColor: \"var(--default-border-color)\",\n            }}\n          />\n          <div\n            ref={eyeDropperTriggerRef}\n            className={clsx(\"excalidraw-eye-dropper-trigger\", {\n              selected: eyeDropperState,\n            })}\n            onClick={() =>\n              setEyeDropperState((s) =>\n                s\n                  ? null\n                  : {\n                      keepOpenOnAlt: false,\n                      onSelect: (color) => onChange(color),\n                      colorPickerType,\n                    },\n              )\n            }\n            title={`${t(\n              \"labels.eyeDropper\",\n            )} \u2014 ${KEYS.I.toLocaleUpperCase()} or ${getShortcutKey(\"Alt\")} `}\n          >\n            {eyeDropperIcon}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n", "import { useEffect, useRef } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { rgbToHex } from \"../colors\";\nimport { EVENT } from \"../constants\";\nimport { useUIAppState } from \"../context/ui-appState\";\nimport { useCreatePortalContainer } from \"../hooks/useCreatePortalContainer\";\nimport { useOutsideClick } from \"../hooks/useOutsideClick\";\nimport { KEYS } from \"../keys\";\nimport { getSelectedElements } from \"../scene\";\nimport { useApp, useExcalidrawContainer, useExcalidrawElements } from \"./App\";\nimport { useStable } from \"../hooks/useStable\";\n\nimport \"./EyeDropper.scss\";\nimport type { ColorPickerType } from \"./ColorPicker/colorPickerUtils\";\nimport type { ExcalidrawElement } from \"../element/types\";\nimport { atom } from \"../editor-jotai\";\n\nexport type EyeDropperProperties = {\n  keepOpenOnAlt: boolean;\n  swapPreviewOnAlt?: boolean;\n  /** called when user picks color (on pointerup) */\n  onSelect: (color: string, event: PointerEvent) => void;\n  /**\n   * property of selected elements to update live when alt-dragging.\n   * Supply `null` if not applicable (e.g. updating the canvas bg instead of\n   * elements)\n   **/\n  colorPickerType: ColorPickerType;\n};\n\nexport const activeEyeDropperAtom = atom<null | EyeDropperProperties>(null);\n\nexport const EyeDropper: React.FC<{\n  onCancel: () => void;\n  onSelect: EyeDropperProperties[\"onSelect\"];\n  /** called when color changes, on pointerdown for preview */\n  onChange: (\n    type: ColorPickerType,\n    color: string,\n    selectedElements: ExcalidrawElement[],\n    event: { altKey: boolean },\n  ) => void;\n  colorPickerType: EyeDropperProperties[\"colorPickerType\"];\n}> = ({ onCancel, onChange, onSelect, colorPickerType }) => {\n  const eyeDropperContainer = useCreatePortalContainer({\n    className: \"excalidraw-eye-dropper-backdrop\",\n    parentSelector: \".excalidraw-eye-dropper-container\",\n  });\n  const appState = useUIAppState();\n  const elements = useExcalidrawElements();\n  const app = useApp();\n\n  const selectedElements = getSelectedElements(elements, appState);\n\n  const stableProps = useStable({\n    app,\n    onCancel,\n    onChange,\n    onSelect,\n    selectedElements,\n  });\n\n  const { container: excalidrawContainer } = useExcalidrawContainer();\n\n  useEffect(() => {\n    const colorPreviewDiv = ref.current;\n\n    if (!colorPreviewDiv || !app.canvas || !eyeDropperContainer) {\n      return;\n    }\n\n    let isHoldingPointerDown = false;\n\n    const ctx = app.canvas.getContext(\"2d\")!;\n\n    const getCurrentColor = ({\n      clientX,\n      clientY,\n    }: {\n      clientX: number;\n      clientY: number;\n    }) => {\n      const pixel = ctx.getImageData(\n        (clientX - appState.offsetLeft) * window.devicePixelRatio,\n        (clientY - appState.offsetTop) * window.devicePixelRatio,\n        1,\n        1,\n      ).data;\n\n      return rgbToHex(pixel[0], pixel[1], pixel[2]);\n    };\n\n    const mouseMoveListener = ({\n      clientX,\n      clientY,\n      altKey,\n    }: {\n      clientX: number;\n      clientY: number;\n      altKey: boolean;\n    }) => {\n      // FIXME swap offset when the preview gets outside viewport\n      colorPreviewDiv.style.top = `${clientY + 20}px`;\n      colorPreviewDiv.style.left = `${clientX + 20}px`;\n\n      const currentColor = getCurrentColor({ clientX, clientY });\n\n      if (isHoldingPointerDown) {\n        stableProps.onChange(\n          colorPickerType,\n          currentColor,\n          stableProps.selectedElements,\n          { altKey },\n        );\n      }\n\n      colorPreviewDiv.style.background = currentColor;\n    };\n\n    const onCancel = () => {\n      stableProps.onCancel();\n    };\n\n    const onSelect: Required<EyeDropperProperties>[\"onSelect\"] = (\n      color,\n      event,\n    ) => {\n      stableProps.onSelect(color, event);\n    };\n\n    const pointerDownListener = (event: PointerEvent) => {\n      isHoldingPointerDown = true;\n      // NOTE we can't event.preventDefault() as that would stop\n      // pointermove events\n      event.stopImmediatePropagation();\n    };\n\n    const pointerUpListener = (event: PointerEvent) => {\n      isHoldingPointerDown = false;\n\n      // since we're not preventing default on pointerdown, the focus would\n      // goes back to `body` so we want to refocus the editor container instead\n      excalidrawContainer?.focus();\n\n      event.stopImmediatePropagation();\n      event.preventDefault();\n\n      onSelect(getCurrentColor(event), event);\n    };\n\n    const keyDownListener = (event: KeyboardEvent) => {\n      if (event.key === KEYS.ESCAPE) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n        onCancel();\n      }\n    };\n\n    // -------------------------------------------------------------------------\n\n    eyeDropperContainer.tabIndex = -1;\n    // focus container so we can listen on keydown events\n    eyeDropperContainer.focus();\n\n    // init color preview else it would show only after the first mouse move\n    mouseMoveListener({\n      clientX: stableProps.app.lastViewportPosition.x,\n      clientY: stableProps.app.lastViewportPosition.y,\n      altKey: false,\n    });\n\n    eyeDropperContainer.addEventListener(EVENT.KEYDOWN, keyDownListener);\n    eyeDropperContainer.addEventListener(\n      EVENT.POINTER_DOWN,\n      pointerDownListener,\n    );\n    eyeDropperContainer.addEventListener(EVENT.POINTER_UP, pointerUpListener);\n    window.addEventListener(\"pointermove\", mouseMoveListener, {\n      passive: true,\n    });\n    window.addEventListener(EVENT.BLUR, onCancel);\n\n    return () => {\n      isHoldingPointerDown = false;\n      eyeDropperContainer.removeEventListener(EVENT.KEYDOWN, keyDownListener);\n      eyeDropperContainer.removeEventListener(\n        EVENT.POINTER_DOWN,\n        pointerDownListener,\n      );\n      eyeDropperContainer.removeEventListener(\n        EVENT.POINTER_UP,\n        pointerUpListener,\n      );\n      window.removeEventListener(\"pointermove\", mouseMoveListener);\n      window.removeEventListener(EVENT.BLUR, onCancel);\n    };\n  }, [\n    stableProps,\n    app.canvas,\n    eyeDropperContainer,\n    colorPickerType,\n    excalidrawContainer,\n    appState.offsetLeft,\n    appState.offsetTop,\n  ]);\n\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOutsideClick(\n    ref,\n    () => {\n      onCancel();\n    },\n    (event) => {\n      if (\n        event.target.closest(\n          \".excalidraw-eye-dropper-trigger, .excalidraw-eye-dropper-backdrop\",\n        )\n      ) {\n        return true;\n      }\n      // consider all other clicks as outside\n      return false;\n    },\n  );\n\n  if (!eyeDropperContainer) {\n    return null;\n  }\n\n  return createPortal(\n    <div ref={ref} className=\"excalidraw-eye-dropper-preview\" />,\n    eyeDropperContainer,\n  );\n};\n", "import React from \"react\";\nimport type { UIAppState } from \"../types\";\n\nexport const UIAppStateContext = React.createContext<UIAppState>(null!);\nexport const useUIAppState = () => React.useContext(UIAppStateContext);\n", "import { useState, useLayoutEffect } from \"react\";\nimport { useDevice, useExcalidrawContainer } from \"../components/App\";\nimport { THEME } from \"../constants\";\nimport { useUIAppState } from \"../context/ui-appState\";\n\nexport const useCreatePortalContainer = (opts?: {\n  className?: string;\n  parentSelector?: string;\n}) => {\n  const [div, setDiv] = useState<HTMLDivElement | null>(null);\n\n  const device = useDevice();\n  const { theme } = useUIAppState();\n\n  const { container: excalidrawContainer } = useExcalidrawContainer();\n\n  useLayoutEffect(() => {\n    if (div) {\n      div.className = \"\";\n      div.classList.add(\"excalidraw\", ...(opts?.className?.split(/\\s+/) || []));\n      div.classList.toggle(\"excalidraw--mobile\", device.editor.isMobile);\n      div.classList.toggle(\"theme--dark\", theme === THEME.DARK);\n    }\n  }, [div, theme, device.editor.isMobile, opts?.className]);\n\n  useLayoutEffect(() => {\n    const container = opts?.parentSelector\n      ? excalidrawContainer?.querySelector(opts.parentSelector)\n      : document.body;\n\n    if (!container) {\n      return;\n    }\n\n    const div = document.createElement(\"div\");\n\n    container.appendChild(div);\n\n    setDiv(div);\n\n    return () => {\n      container.removeChild(div);\n    };\n  }, [excalidrawContainer, opts?.parentSelector]);\n\n  return div;\n};\n", "import { useEffect } from \"react\";\nimport { EVENT } from \"../constants\";\n\nexport function useOutsideClick<T extends HTMLElement>(\n  ref: React.RefObject<T | null>,\n  /** if performance is of concern, memoize the callback */\n  callback: (event: Event) => void,\n  /**\n   * Optional callback which is called on every click.\n   *\n   * Should return `true` if click should be considered as inside the container,\n   * and `false` if it falls outside and should call the `callback`.\n   *\n   * Returning `true` overrides the default behavior and `callback` won't be\n   * called.\n   *\n   * Returning `undefined` will fallback to the default behavior.\n   */\n  isInside?: (\n    event: Event & { target: HTMLElement },\n    /** the element of the passed ref */\n    container: T,\n  ) => boolean | undefined,\n) {\n  useEffect(() => {\n    function onOutsideClick(event: Event) {\n      const _event = event as Event & { target: T };\n\n      if (!ref.current) {\n        return;\n      }\n\n      const isInsideOverride = isInside?.(_event, ref.current);\n\n      if (isInsideOverride === true) {\n        return;\n      } else if (isInsideOverride === false) {\n        return callback(_event);\n      }\n\n      // clicked element is in the descenendant of the target container\n      if (\n        ref.current.contains(_event.target) ||\n        // target is detached from DOM (happens when the element is removed\n        // on a pointerup event fired *before* this handler's pointerup is\n        // dispatched)\n        !document.documentElement.contains(_event.target)\n      ) {\n        return;\n      }\n\n      const isClickOnRadixPortal =\n        _event.target.closest(\"[data-radix-portal]\") ||\n        // when radix popup is in \"modal\" mode, it disables pointer events on\n        // the `body` element, so the target element is going to be the `html`\n        // (note: this won't work if we selectively re-enable pointer events on\n        // specific elements as we do with navbar or excalidraw UI elements)\n        (_event.target === document.documentElement &&\n          document.body.style.pointerEvents === \"none\");\n\n      // if clicking on radix portal, assume it's a popup that\n      // should be considered as part of the UI. Obviously this is a terrible\n      // hack you can end up click on radix popups that outside the tree,\n      // but it works for most cases and the downside is minimal for now\n      if (isClickOnRadixPortal) {\n        return;\n      }\n\n      // clicking on a container that ignores outside clicks\n      if (_event.target.closest(\"[data-prevent-outside-click]\")) {\n        return;\n      }\n\n      callback(_event);\n    }\n\n    // note: don't use `click` because it often reports incorrect `event.target`\n    document.addEventListener(EVENT.POINTER_DOWN, onOutsideClick);\n    document.addEventListener(EVENT.TOUCH_START, onOutsideClick);\n\n    return () => {\n      document.removeEventListener(EVENT.POINTER_DOWN, onOutsideClick);\n      document.removeEventListener(EVENT.TOUCH_START, onOutsideClick);\n    };\n  }, [ref, callback, isInside]);\n}\n", "import { useRef } from \"react\";\n\nexport const useStable = <T extends Record<string, any>>(value: T) => {\n  const ref = useRef<T>(value);\n  Object.assign(ref.current, value);\n  return ref.current;\n};\n", "import React, { type ReactNode } from \"react\";\nimport clsx from \"clsx\";\nimport * as Popover from \"@radix-ui/react-popover\";\n\nimport { useDevice } from \"./App\";\nimport { Island } from \"./Island\";\nimport { isInteractive } from \"../utils\";\n\ninterface PropertiesPopoverProps {\n  className?: string;\n  container: HTMLDivElement | null;\n  children: ReactNode;\n  style?: object;\n  onClose: () => void;\n  onKeyDown?: React.KeyboardEventHandler<HTMLDivElement>;\n  onPointerLeave?: React.PointerEventHandler<HTMLDivElement>;\n  onFocusOutside?: Popover.PopoverContentProps[\"onFocusOutside\"];\n  onPointerDownOutside?: Popover.PopoverContentProps[\"onPointerDownOutside\"];\n}\n\nexport const PropertiesPopover = React.forwardRef<\n  HTMLDivElement,\n  PropertiesPopoverProps\n>(\n  (\n    {\n      className,\n      container,\n      children,\n      style,\n      onClose,\n      onKeyDown,\n      onFocusOutside,\n      onPointerLeave,\n      onPointerDownOutside,\n    },\n    ref,\n  ) => {\n    const device = useDevice();\n\n    return (\n      <Popover.Portal container={container}>\n        <Popover.Content\n          ref={ref}\n          className={clsx(\"focus-visible-none\", className)}\n          data-prevent-outside-click\n          side={\n            device.editor.isMobile && !device.viewport.isLandscape\n              ? \"bottom\"\n              : \"right\"\n          }\n          align={\n            device.editor.isMobile && !device.viewport.isLandscape\n              ? \"center\"\n              : \"start\"\n          }\n          alignOffset={-16}\n          sideOffset={20}\n          style={{\n            zIndex: \"var(--zIndex-popup)\",\n          }}\n          onPointerLeave={onPointerLeave}\n          onKeyDown={onKeyDown}\n          onFocusOutside={onFocusOutside}\n          onPointerDownOutside={onPointerDownOutside}\n          onCloseAutoFocus={(e) => {\n            e.stopPropagation();\n            // prevents focusing the trigger\n            e.preventDefault();\n\n            // return focus to excalidraw container unless\n            // user focuses an interactive element, such as a button, or\n            // enters the text editor by clicking on canvas with the text tool\n            if (container && !isInteractive(document.activeElement)) {\n              container.focus();\n            }\n\n            onClose();\n          }}\n        >\n          <Island padding={3} style={style}>\n            {children}\n          </Island>\n          <Popover.Arrow\n            width={20}\n            height={10}\n            style={{\n              fill: \"var(--popup-bg-color)\",\n              filter: \"drop-shadow(rgba(0, 0, 0, 0.05) 0px 3px 2px)\",\n            }}\n          />\n        </Popover.Content>\n      </Popover.Portal>\n    );\n  },\n);\n", "import \"./Island.scss\";\n\nimport React from \"react\";\nimport clsx from \"clsx\";\n\ntype IslandProps = {\n  children: React.ReactNode;\n  padding?: number;\n  className?: string | boolean;\n  style?: object;\n};\n\nexport const Island = React.forwardRef<HTMLDivElement, IslandProps>(\n  ({ children, padding, className, style }, ref) => (\n    <div\n      className={clsx(\"Island\", className)}\n      style={{ \"--padding\": padding, ...style }}\n      ref={ref}\n    >\n      {children}\n    </div>\n  ),\n);\n", "import type { JSX } from \"react\";\nimport React, { useEffect } from \"react\";\nimport * as Popover from \"@radix-ui/react-popover\";\nimport { isArrowKey, KEYS } from \"../keys\";\nimport { getLanguage, t } from \"../i18n\";\nimport clsx from \"clsx\";\nimport Collapsible from \"./Stats/Collapsible\";\nimport { atom, useAtom } from \"../editor-jotai\";\nimport { useDevice } from \"./App\";\n\nimport \"./IconPicker.scss\";\n\nconst moreOptionsAtom = atom(false);\n\ntype Option<T> = {\n  value: T;\n  text: string;\n  icon: JSX.Element;\n  keyBinding: string | null;\n};\n\nfunction Picker<T>({\n  options,\n  value,\n  label,\n  onChange,\n  onClose,\n  numberOfOptionsToAlwaysShow = options.length,\n}: {\n  label: string;\n  value: T;\n  options: readonly Option<T>[];\n  onChange: (value: T) => void;\n  onClose: () => void;\n  numberOfOptionsToAlwaysShow?: number;\n}) {\n  const device = useDevice();\n\n  const handleKeyDown = (event: React.KeyboardEvent) => {\n    const pressedOption = options.find(\n      (option) => option.keyBinding === event.key.toLowerCase(),\n    )!;\n\n    if (!(event.metaKey || event.altKey || event.ctrlKey) && pressedOption) {\n      // Keybinding navigation\n      onChange(pressedOption.value);\n\n      event.preventDefault();\n    } else if (event.key === KEYS.TAB) {\n      const index = options.findIndex((option) => option.value === value);\n      const nextIndex = event.shiftKey\n        ? (options.length + index - 1) % options.length\n        : (index + 1) % options.length;\n      onChange(options[nextIndex].value);\n    } else if (isArrowKey(event.key)) {\n      // Arrow navigation\n      const isRTL = getLanguage().rtl;\n      const index = options.findIndex((option) => option.value === value);\n      if (index !== -1) {\n        const length = options.length;\n        let nextIndex = index;\n\n        switch (event.key) {\n          // Select the next option\n          case isRTL ? KEYS.ARROW_LEFT : KEYS.ARROW_RIGHT:\n            nextIndex = (index + 1) % length;\n            break;\n          // Select the previous option\n          case isRTL ? KEYS.ARROW_RIGHT : KEYS.ARROW_LEFT:\n            nextIndex = (length + index - 1) % length;\n            break;\n          // Go the next row\n          case KEYS.ARROW_DOWN: {\n            nextIndex = (index + (numberOfOptionsToAlwaysShow ?? 1)) % length;\n            break;\n          }\n          // Go the previous row\n          case KEYS.ARROW_UP: {\n            nextIndex =\n              (length + index - (numberOfOptionsToAlwaysShow ?? 1)) % length;\n            break;\n          }\n        }\n\n        onChange(options[nextIndex].value);\n      }\n      event.preventDefault();\n    } else if (event.key === KEYS.ESCAPE || event.key === KEYS.ENTER) {\n      // Close on escape or enter\n      event.preventDefault();\n      onClose();\n    }\n    event.nativeEvent.stopImmediatePropagation();\n    event.stopPropagation();\n  };\n\n  const [showMoreOptions, setShowMoreOptions] = useAtom(moreOptionsAtom);\n\n  const alwaysVisibleOptions = React.useMemo(\n    () => options.slice(0, numberOfOptionsToAlwaysShow),\n    [options, numberOfOptionsToAlwaysShow],\n  );\n  const moreOptions = React.useMemo(\n    () => options.slice(numberOfOptionsToAlwaysShow),\n    [options, numberOfOptionsToAlwaysShow],\n  );\n\n  useEffect(() => {\n    if (!alwaysVisibleOptions.some((option) => option.value === value)) {\n      setShowMoreOptions(true);\n    }\n  }, [value, alwaysVisibleOptions, setShowMoreOptions]);\n\n  const renderOptions = (options: Option<T>[]) => {\n    return (\n      <div className=\"picker-content\">\n        {options.map((option, i) => (\n          <button\n            type=\"button\"\n            className={clsx(\"picker-option\", {\n              active: value === option.value,\n            })}\n            onClick={(event) => {\n              onChange(option.value);\n            }}\n            title={`${option.text} ${\n              option.keyBinding && `\u2014 ${option.keyBinding.toUpperCase()}`\n            }`}\n            aria-label={option.text || \"none\"}\n            aria-keyshortcuts={option.keyBinding || undefined}\n            key={option.text}\n            ref={(ref) => {\n              if (value === option.value) {\n                // Use a timeout here to render focus properly\n                setTimeout(() => {\n                  ref?.focus();\n                }, 0);\n              }\n            }}\n          >\n            {option.icon}\n            {option.keyBinding && (\n              <span className=\"picker-keybinding\">{option.keyBinding}</span>\n            )}\n          </button>\n        ))}\n      </div>\n    );\n  };\n\n  return (\n    <Popover.Content\n      side={\n        device.editor.isMobile && !device.viewport.isLandscape\n          ? \"top\"\n          : \"bottom\"\n      }\n      align=\"start\"\n      sideOffset={12}\n      style={{ zIndex: \"var(--zIndex-popup)\" }}\n      onKeyDown={handleKeyDown}\n    >\n      <div\n        className={`picker`}\n        role=\"dialog\"\n        aria-modal=\"true\"\n        aria-label={label}\n      >\n        {renderOptions(alwaysVisibleOptions)}\n\n        {moreOptions.length > 0 && (\n          <Collapsible\n            label={t(\"labels.more_options\")}\n            open={showMoreOptions}\n            openTrigger={() => {\n              setShowMoreOptions((value) => !value);\n            }}\n            className=\"picker-collapsible\"\n          >\n            {renderOptions(moreOptions)}\n          </Collapsible>\n        )}\n      </div>\n    </Popover.Content>\n  );\n}\n\nexport function IconPicker<T>({\n  value,\n  label,\n  options,\n  onChange,\n  group = \"\",\n  numberOfOptionsToAlwaysShow,\n}: {\n  label: string;\n  value: T;\n  options: readonly {\n    value: T;\n    text: string;\n    icon: JSX.Element;\n    keyBinding: string | null;\n  }[];\n  onChange: (value: T) => void;\n  numberOfOptionsToAlwaysShow?: number;\n  group?: string;\n}) {\n  const [isActive, setActive] = React.useState(false);\n  const rPickerButton = React.useRef<any>(null);\n\n  return (\n    <div>\n      <Popover.Root open={isActive} onOpenChange={(open) => setActive(open)}>\n        <Popover.Trigger\n          name={group}\n          type=\"button\"\n          aria-label={label}\n          onClick={() => setActive(!isActive)}\n          ref={rPickerButton}\n          className={isActive ? \"active\" : \"\"}\n        >\n          {options.find((option) => option.value === value)?.icon}\n        </Popover.Trigger>\n        {isActive && (\n          <Picker\n            options={options}\n            value={value}\n            label={label}\n            onChange={onChange}\n            onClose={() => {\n              setActive(false);\n            }}\n            numberOfOptionsToAlwaysShow={numberOfOptionsToAlwaysShow}\n          />\n        )}\n      </Popover.Root>\n    </div>\n  );\n}\n", "export const InlineIcon = ({ icon }: { icon: React.ReactNode }) => {\n  return (\n    <span\n      style={{\n        width: \"1em\",\n        margin: \"0 0.5ex 0 0.5ex\",\n        display: \"inline-block\",\n        lineHeight: 0,\n        verticalAlign: \"middle\",\n      }}\n    >\n      {icon}\n    </span>\n  );\n};\n", "import { InlineIcon } from \"../InlineIcon\";\nimport { collapseDownIcon, collapseUpIcon } from \"../icons\";\n\ninterface CollapsibleProps {\n  label: React.ReactNode;\n  // having it controlled so that the state is managed outside\n  // this is to keep the user's previous choice even when the\n  // Collapsible is unmounted\n  open: boolean;\n  openTrigger: () => void;\n  children: React.ReactNode;\n  className?: string;\n}\n\nconst Collapsible = ({\n  label,\n  open,\n  openTrigger,\n  children,\n  className,\n}: CollapsibleProps) => {\n  return (\n    <>\n      <div\n        style={{\n          cursor: \"pointer\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n        className={className}\n        onClick={openTrigger}\n      >\n        {label}\n        <InlineIcon icon={open ? collapseUpIcon : collapseDownIcon} />\n      </div>\n      {open && (\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n          {children}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Collapsible;\n", "import React, { useCallback, useMemo } from \"react\";\nimport * as Popover from \"@radix-ui/react-popover\";\n\nimport { FontPickerList } from \"./FontPickerList\";\nimport { FontPickerTrigger } from \"./FontPickerTrigger\";\nimport { ButtonIconSelect } from \"../ButtonIconSelect\";\nimport {\n  FontFamilyCodeIcon,\n  FontFamilyNormalIcon,\n  FreedrawIcon,\n} from \"../icons\";\nimport { ButtonSeparator } from \"../ButtonSeparator\";\nimport type { FontFamilyValues } from \"../../element/types\";\nimport { FONT_FAMILY } from \"../../constants\";\nimport { t } from \"../../i18n\";\n\nimport \"./FontPicker.scss\";\n\nexport const DEFAULT_FONTS = [\n  {\n    value: FONT_FAMILY.Excalifont,\n    icon: FreedrawIcon,\n    text: t(\"labels.handDrawn\"),\n    testId: \"font-family-hand-drawn\",\n  },\n  {\n    value: FONT_FAMILY.Nunito,\n    icon: FontFamilyNormalIcon,\n    text: t(\"labels.normal\"),\n    testId: \"font-family-normal\",\n  },\n  {\n    value: FONT_FAMILY[\"Comic Shanns\"],\n    icon: FontFamilyCodeIcon,\n    text: t(\"labels.code\"),\n    testId: \"font-family-code\",\n  },\n];\n\nconst defaultFontFamilies = new Set(DEFAULT_FONTS.map((x) => x.value));\n\nexport const isDefaultFont = (fontFamily: number | null) => {\n  if (!fontFamily) {\n    return false;\n  }\n\n  return defaultFontFamilies.has(fontFamily);\n};\n\ninterface FontPickerProps {\n  isOpened: boolean;\n  selectedFontFamily: FontFamilyValues | null;\n  hoveredFontFamily: FontFamilyValues | null;\n  onSelect: (fontFamily: FontFamilyValues) => void;\n  onHover: (fontFamily: FontFamilyValues) => void;\n  onLeave: () => void;\n  onPopupChange: (open: boolean) => void;\n}\n\nexport const FontPicker = React.memo(\n  ({\n    isOpened,\n    selectedFontFamily,\n    hoveredFontFamily,\n    onSelect,\n    onHover,\n    onLeave,\n    onPopupChange,\n  }: FontPickerProps) => {\n    const defaultFonts = useMemo(() => DEFAULT_FONTS, []);\n    const onSelectCallback = useCallback(\n      (value: number | false) => {\n        if (value) {\n          onSelect(value);\n        }\n      },\n      [onSelect],\n    );\n\n    return (\n      <div role=\"dialog\" aria-modal=\"true\" className=\"FontPicker__container\">\n        <ButtonIconSelect<FontFamilyValues | false>\n          type=\"button\"\n          options={defaultFonts}\n          value={selectedFontFamily}\n          onClick={onSelectCallback}\n        />\n        <ButtonSeparator />\n        <Popover.Root open={isOpened} onOpenChange={onPopupChange}>\n          <FontPickerTrigger selectedFontFamily={selectedFontFamily} />\n          {isOpened && (\n            <FontPickerList\n              selectedFontFamily={selectedFontFamily}\n              hoveredFontFamily={hoveredFontFamily}\n              onSelect={onSelectCallback}\n              onHover={onHover}\n              onLeave={onLeave}\n              onOpen={() => onPopupChange(true)}\n              onClose={() => onPopupChange(false)}\n            />\n          )}\n        </Popover.Root>\n      </div>\n    );\n  },\n  (prev, next) =>\n    prev.isOpened === next.isOpened &&\n    prev.selectedFontFamily === next.selectedFontFamily &&\n    prev.hoveredFontFamily === next.hoveredFontFamily,\n);\n", "import type { JSX } from \"react\";\nimport React, {\n  useMemo,\n  useState,\n  useRef,\n  useEffect,\n  useCallback,\n  type KeyboardEventHandler,\n} from \"react\";\nimport { useApp, useAppProps, useExcalidrawContainer } from \"../App\";\nimport { PropertiesPopover } from \"../PropertiesPopover\";\nimport { QuickSearch } from \"../QuickSearch\";\nimport { ScrollableList } from \"../ScrollableList\";\nimport DropdownMenuGroup from \"../dropdownMenu/DropdownMenuGroup\";\nimport DropdownMenuItem, {\n  DropDownMenuItemBadgeType,\n  DropDownMenuItemBadge,\n} from \"../dropdownMenu/DropdownMenuItem\";\nimport { type FontFamilyValues } from \"../../element/types\";\nimport { arrayToList, debounce, getFontFamilyString } from \"../../utils\";\nimport { t } from \"../../i18n\";\nimport { fontPickerKeyHandler } from \"./keyboardNavHandlers\";\nimport { Fonts } from \"../../fonts\";\nimport type { ValueOf } from \"../../utility-types\";\nimport { FontFamilyNormalIcon } from \"../icons\";\n\nexport interface FontDescriptor {\n  value: number;\n  icon: JSX.Element;\n  text: string;\n  deprecated?: true;\n  badge?: {\n    type: ValueOf<typeof DropDownMenuItemBadgeType>;\n    placeholder: string;\n  };\n}\n\ninterface FontPickerListProps {\n  selectedFontFamily: FontFamilyValues | null;\n  hoveredFontFamily: FontFamilyValues | null;\n  onSelect: (value: number) => void;\n  onHover: (value: number) => void;\n  onLeave: () => void;\n  onOpen: () => void;\n  onClose: () => void;\n}\n\nexport const FontPickerList = React.memo(\n  ({\n    selectedFontFamily,\n    hoveredFontFamily,\n    onSelect,\n    onHover,\n    onLeave,\n    onOpen,\n    onClose,\n  }: FontPickerListProps) => {\n    const { container } = useExcalidrawContainer();\n    const { fonts } = useApp();\n    const { showDeprecatedFonts } = useAppProps();\n\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const inputRef = useRef<HTMLInputElement>(null);\n    const allFonts = useMemo(\n      () =>\n        Array.from(Fonts.registered.entries())\n          .filter(\n            ([_, { metadata }]) => !metadata.serverSide && !metadata.fallback,\n          )\n          .map(([familyId, { metadata, fontFaces }]) => {\n            const fontDescriptor = {\n              value: familyId,\n              icon: metadata.icon ?? FontFamilyNormalIcon,\n              text: fontFaces[0]?.fontFace?.family ?? \"Unknown\",\n            };\n\n            if (metadata.deprecated) {\n              Object.assign(fontDescriptor, {\n                deprecated: metadata.deprecated,\n                badge: {\n                  type: DropDownMenuItemBadgeType.RED,\n                  placeholder: t(\"fontList.badge.old\"),\n                },\n              });\n            }\n\n            return fontDescriptor as FontDescriptor;\n          })\n          .sort((a, b) =>\n            a.text.toLowerCase() > b.text.toLowerCase() ? 1 : -1,\n          ),\n      [],\n    );\n\n    const sceneFamilies = useMemo(\n      () => new Set(fonts.getSceneFamilies()),\n      // cache per selected font family, so hover re-render won't mess it up\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      [selectedFontFamily],\n    );\n\n    const sceneFonts = useMemo(\n      () => allFonts.filter((font) => sceneFamilies.has(font.value)), // always show all the fonts in the scene, even those that were deprecated\n      [allFonts, sceneFamilies],\n    );\n\n    const availableFonts = useMemo(\n      () =>\n        allFonts.filter(\n          (font) =>\n            !sceneFamilies.has(font.value) &&\n            (showDeprecatedFonts || !font.deprecated), // skip deprecated fonts\n        ),\n      [allFonts, sceneFamilies, showDeprecatedFonts],\n    );\n\n    const filteredFonts = useMemo(\n      () =>\n        arrayToList(\n          [...sceneFonts, ...availableFonts].filter((font) =>\n            font.text?.toLowerCase().includes(searchTerm),\n          ),\n        ),\n      [sceneFonts, availableFonts, searchTerm],\n    );\n\n    const hoveredFont = useMemo(() => {\n      let font;\n\n      if (hoveredFontFamily) {\n        font = filteredFonts.find((font) => font.value === hoveredFontFamily);\n      } else if (selectedFontFamily) {\n        font = filteredFonts.find((font) => font.value === selectedFontFamily);\n      }\n\n      if (!font && searchTerm) {\n        if (filteredFonts[0]?.value) {\n          // hover first element on search\n          onHover(filteredFonts[0].value);\n        } else {\n          // re-render cache on no results\n          onLeave();\n        }\n      }\n\n      return font;\n    }, [\n      hoveredFontFamily,\n      selectedFontFamily,\n      searchTerm,\n      filteredFonts,\n      onHover,\n      onLeave,\n    ]);\n\n    const onKeyDown = useCallback<KeyboardEventHandler<HTMLDivElement>>(\n      (event) => {\n        const handled = fontPickerKeyHandler({\n          event,\n          inputRef,\n          hoveredFont,\n          filteredFonts,\n          onSelect,\n          onHover,\n          onClose,\n        });\n\n        if (handled) {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n      },\n      [hoveredFont, filteredFonts, onSelect, onHover, onClose],\n    );\n\n    useEffect(() => {\n      onOpen();\n\n      return () => {\n        onClose();\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const sceneFilteredFonts = useMemo(\n      () => filteredFonts.filter((font) => sceneFamilies.has(font.value)),\n      [filteredFonts, sceneFamilies],\n    );\n\n    const availableFilteredFonts = useMemo(\n      () => filteredFonts.filter((font) => !sceneFamilies.has(font.value)),\n      [filteredFonts, sceneFamilies],\n    );\n\n    const renderFont = (font: FontDescriptor, index: number) => (\n      <DropdownMenuItem\n        key={font.value}\n        icon={font.icon}\n        value={font.value}\n        order={index}\n        textStyle={{\n          fontFamily: getFontFamilyString({ fontFamily: font.value }),\n        }}\n        hovered={font.value === hoveredFont?.value}\n        selected={font.value === selectedFontFamily}\n        // allow to tab between search and selected font\n        tabIndex={font.value === selectedFontFamily ? 0 : -1}\n        onClick={(e) => {\n          onSelect(Number(e.currentTarget.value));\n        }}\n        onMouseMove={() => {\n          if (hoveredFont?.value !== font.value) {\n            onHover(font.value);\n          }\n        }}\n      >\n        {font.text}\n        {font.badge && (\n          <DropDownMenuItemBadge type={font.badge.type}>\n            {font.badge.placeholder}\n          </DropDownMenuItemBadge>\n        )}\n      </DropdownMenuItem>\n    );\n\n    const groups = [];\n\n    if (sceneFilteredFonts.length) {\n      groups.push(\n        <DropdownMenuGroup title={t(\"fontList.sceneFonts\")} key=\"group_1\">\n          {sceneFilteredFonts.map(renderFont)}\n        </DropdownMenuGroup>,\n      );\n    }\n\n    if (availableFilteredFonts.length) {\n      groups.push(\n        <DropdownMenuGroup title={t(\"fontList.availableFonts\")} key=\"group_2\">\n          {availableFilteredFonts.map((font, index) =>\n            renderFont(font, index + sceneFilteredFonts.length),\n          )}\n        </DropdownMenuGroup>,\n      );\n    }\n\n    return (\n      <PropertiesPopover\n        className=\"properties-content\"\n        container={container}\n        style={{ width: \"15rem\" }}\n        onClose={onClose}\n        onPointerLeave={onLeave}\n        onKeyDown={onKeyDown}\n      >\n        <QuickSearch\n          ref={inputRef}\n          placeholder={t(\"quickSearch.placeholder\")}\n          onChange={debounce(setSearchTerm, 20)}\n        />\n        <ScrollableList\n          className=\"dropdown-menu fonts manual-hover\"\n          placeholder={t(\"fontList.empty\")}\n        >\n          {groups.length ? groups : null}\n        </ScrollableList>\n      </PropertiesPopover>\n    );\n  },\n  (prev, next) =>\n    prev.selectedFontFamily === next.selectedFontFamily &&\n    prev.hoveredFontFamily === next.hoveredFontFamily,\n);\n", "import clsx from \"clsx\";\nimport React from \"react\";\nimport { searchIcon } from \"./icons\";\n\nimport \"./QuickSearch.scss\";\n\ninterface QuickSearchProps {\n  className?: string;\n  placeholder: string;\n  onChange: (term: string) => void;\n}\n\nexport const QuickSearch = React.forwardRef<HTMLInputElement, QuickSearchProps>(\n  ({ className, placeholder, onChange }, ref) => {\n    return (\n      <div className={clsx(\"QuickSearch__wrapper\", className)}>\n        {searchIcon}\n        <input\n          ref={ref}\n          className=\"QuickSearch__input\"\n          type=\"text\"\n          placeholder={placeholder}\n          onChange={(e) => onChange(e.target.value.trim().toLowerCase())}\n        />\n      </div>\n    );\n  },\n);\n", "import clsx from \"clsx\";\nimport { Children } from \"react\";\n\nimport \"./ScrollableList.scss\";\n\ninterface ScrollableListProps {\n  className?: string;\n  placeholder: string;\n  children: React.ReactNode;\n}\n\nexport const ScrollableList = ({\n  className,\n  placeholder,\n  children,\n}: ScrollableListProps) => {\n  const isEmpty = !Children.count(children);\n\n  return (\n    <div className={clsx(\"ScrollableList__wrapper\", className)} role=\"menu\">\n      {isEmpty ? <div className=\"empty\">{placeholder}</div> : children}\n    </div>\n  );\n};\n", "import React from \"react\";\n\nconst MenuGroup = ({\n  children,\n  className = \"\",\n  style,\n  title,\n}: {\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n  title?: string;\n}) => {\n  return (\n    <div className={`dropdown-menu-group ${className}`} style={style}>\n      {title && <p className=\"dropdown-menu-group-title\">{title}</p>}\n      {children}\n    </div>\n  );\n};\n\nexport default MenuGroup;\nMenuGroup.displayName = \"DropdownMenuGroup\";\n", "import type { JSX } from \"react\";\nimport React, { useEffect, useRef } from \"react\";\nimport {\n  getDropdownMenuItemClassName,\n  useHandleDropdownMenuItemClick,\n} from \"./common\";\nimport MenuItemContent from \"./DropdownMenuItemContent\";\nimport { useExcalidrawAppState } from \"../App\";\nimport { THEME } from \"../../constants\";\nimport type { ValueOf } from \"../../utility-types\";\n\nconst DropdownMenuItem = ({\n  icon,\n  value,\n  order,\n  children,\n  shortcut,\n  className,\n  hovered,\n  selected,\n  textStyle,\n  onSelect,\n  onClick,\n  ...rest\n}: {\n  icon?: JSX.Element;\n  value?: string | number | undefined;\n  order?: number;\n  onSelect?: (event: Event) => void;\n  children: React.ReactNode;\n  shortcut?: string;\n  hovered?: boolean;\n  selected?: boolean;\n  textStyle?: React.CSSProperties;\n  className?: string;\n} & Omit<React.ButtonHTMLAttributes<HTMLButtonElement>, \"onSelect\">) => {\n  const handleClick = useHandleDropdownMenuItemClick(onClick, onSelect);\n  const ref = useRef<HTMLButtonElement>(null);\n\n  useEffect(() => {\n    if (hovered) {\n      if (order === 0) {\n        // scroll into the first item differently, so it's visible what is above (i.e. group title)\n        ref.current?.scrollIntoView({ block: \"end\" });\n      } else {\n        ref.current?.scrollIntoView({ block: \"nearest\" });\n      }\n    }\n  }, [hovered, order]);\n\n  return (\n    <button\n      {...rest}\n      ref={ref}\n      value={value}\n      onClick={handleClick}\n      className={getDropdownMenuItemClassName(className, selected, hovered)}\n      title={rest.title ?? rest[\"aria-label\"]}\n    >\n      <MenuItemContent textStyle={textStyle} icon={icon} shortcut={shortcut}>\n        {children}\n      </MenuItemContent>\n    </button>\n  );\n};\nDropdownMenuItem.displayName = \"DropdownMenuItem\";\n\nexport const DropDownMenuItemBadgeType = {\n  GREEN: \"green\",\n  RED: \"red\",\n  BLUE: \"blue\",\n} as const;\n\nexport const DropDownMenuItemBadge = ({\n  type = DropDownMenuItemBadgeType.BLUE,\n  children,\n}: {\n  type?: ValueOf<typeof DropDownMenuItemBadgeType>;\n  children: React.ReactNode;\n}) => {\n  const { theme } = useExcalidrawAppState();\n  const style = {\n    display: \"inline-flex\",\n    marginLeft: \"auto\",\n    padding: \"2px 4px\",\n    borderRadius: 6,\n    fontSize: 9,\n    fontFamily: \"Cascadia, monospace\",\n    border: theme === THEME.LIGHT ? \"1.5px solid white\" : \"none\",\n  };\n\n  switch (type) {\n    case DropDownMenuItemBadgeType.GREEN:\n      Object.assign(style, {\n        backgroundColor: \"var(--background-color-badge)\",\n        color: \"var(--color-badge)\",\n      });\n      break;\n    case DropDownMenuItemBadgeType.RED:\n      Object.assign(style, {\n        backgroundColor: \"pink\",\n        color: \"darkred\",\n      });\n      break;\n    case DropDownMenuItemBadgeType.BLUE:\n    default:\n      Object.assign(style, {\n        background: \"var(--color-promo)\",\n        color: \"var(--color-surface-lowest)\",\n      });\n  }\n\n  return (\n    <div className=\"DropDownMenuItemBadge\" style={style}>\n      {children}\n    </div>\n  );\n};\nDropDownMenuItemBadge.displayName = \"DropdownMenuItemBadge\";\n\nDropdownMenuItem.Badge = DropDownMenuItemBadge;\n\nexport default DropdownMenuItem;\n", "import React, { useContext } from \"react\";\nimport { EVENT } from \"../../constants\";\nimport { composeEventHandlers } from \"../../utils\";\n\nexport const DropdownMenuContentPropsContext = React.createContext<{\n  onSelect?: (event: Event) => void;\n}>({});\n\nexport const getDropdownMenuItemClassName = (\n  className = \"\",\n  selected = false,\n  hovered = false,\n) => {\n  return `dropdown-menu-item dropdown-menu-item-base ${className}\n  ${selected ? \"dropdown-menu-item--selected\" : \"\"} ${\n    hovered ? \"dropdown-menu-item--hovered\" : \"\"\n  }`.trim();\n};\n\nexport const useHandleDropdownMenuItemClick = (\n  origOnClick:\n    | React.MouseEventHandler<HTMLAnchorElement | HTMLButtonElement>\n    | undefined,\n  onSelect: ((event: Event) => void) | undefined,\n) => {\n  const DropdownMenuContentProps = useContext(DropdownMenuContentPropsContext);\n\n  return composeEventHandlers(origOnClick, (event) => {\n    const itemSelectEvent = new CustomEvent(EVENT.MENU_ITEM_SELECT, {\n      bubbles: true,\n      cancelable: true,\n    });\n    onSelect?.(itemSelectEvent);\n    if (!itemSelectEvent.defaultPrevented) {\n      DropdownMenuContentProps.onSelect?.(itemSelectEvent);\n    }\n  });\n};\n", "import type { JSX } from \"react\";\nimport { useDevice } from \"../App\";\n\nconst MenuItemContent = ({\n  textStyle,\n  icon,\n  shortcut,\n  children,\n}: {\n  icon?: JSX.Element;\n  shortcut?: string;\n  textStyle?: React.CSSProperties;\n  children: React.ReactNode;\n}) => {\n  const device = useDevice();\n  return (\n    <>\n      {icon && <div className=\"dropdown-menu-item__icon\">{icon}</div>}\n      <div style={textStyle} className=\"dropdown-menu-item__text\">\n        {children}\n      </div>\n      {shortcut && !device.editor.isMobile && (\n        <div className=\"dropdown-menu-item__shortcut\">{shortcut}</div>\n      )}\n    </>\n  );\n};\nexport default MenuItemContent;\n", "import type { Node } from \"../../utils\";\nimport { KEYS } from \"../../keys\";\nimport { type FontDescriptor } from \"./FontPickerList\";\n\ninterface FontPickerKeyNavHandlerProps {\n  event: React.KeyboardEvent<HTMLDivElement>;\n  inputRef: React.RefObject<HTMLInputElement | null>;\n  hoveredFont: Node<FontDescriptor> | undefined;\n  filteredFonts: Node<FontDescriptor>[];\n  onClose: () => void;\n  onSelect: (value: number) => void;\n  onHover: (value: number) => void;\n}\n\nexport const fontPickerKeyHandler = ({\n  event,\n  inputRef,\n  hoveredFont,\n  filteredFonts,\n  onClose,\n  onSelect,\n  onHover,\n}: FontPickerKeyNavHandlerProps) => {\n  if (\n    !event[KEYS.CTRL_OR_CMD] &&\n    event.shiftKey &&\n    event.key.toLowerCase() === KEYS.F\n  ) {\n    // refocus input on the popup trigger shortcut\n    inputRef.current?.focus();\n    return true;\n  }\n\n  if (event.key === KEYS.ESCAPE) {\n    onClose();\n    return true;\n  }\n\n  if (event.key === KEYS.ENTER) {\n    if (hoveredFont?.value) {\n      onSelect(hoveredFont.value);\n    }\n\n    return true;\n  }\n\n  if (event.key === KEYS.ARROW_DOWN) {\n    if (hoveredFont?.next) {\n      onHover(hoveredFont.next.value);\n    } else if (filteredFonts[0]?.value) {\n      onHover(filteredFonts[0].value);\n    }\n\n    return true;\n  }\n\n  if (event.key === KEYS.ARROW_UP) {\n    if (hoveredFont?.prev) {\n      onHover(hoveredFont.prev.value);\n    } else if (filteredFonts[filteredFonts.length - 1]?.value) {\n      onHover(filteredFonts[filteredFonts.length - 1].value);\n    }\n\n    return true;\n  }\n};\n", "import * as Popover from \"@radix-ui/react-popover\";\nimport { useMemo } from \"react\";\nimport { ButtonIcon } from \"../ButtonIcon\";\nimport { TextIcon } from \"../icons\";\nimport type { FontFamilyValues } from \"../../element/types\";\nimport { t } from \"../../i18n\";\nimport { isDefaultFont } from \"./FontPicker\";\n\ninterface FontPickerTriggerProps {\n  selectedFontFamily: FontFamilyValues | null;\n}\n\nexport const FontPickerTrigger = ({\n  selectedFontFamily,\n}: FontPickerTriggerProps) => {\n  const isTriggerActive = useMemo(\n    () => Boolean(selectedFontFamily && !isDefaultFont(selectedFontFamily)),\n    [selectedFontFamily],\n  );\n\n  return (\n    <Popover.Trigger asChild>\n      {/* Empty div as trigger so it's stretched 100% due to different button sizes */}\n      <div>\n        <ButtonIcon\n          standalone\n          icon={TextIcon}\n          title={t(\"labels.showFonts\")}\n          className=\"properties-trigger\"\n          testId={\"font-family-show-fonts\"}\n          active={isTriggerActive}\n          // no-op\n          onClick={() => {}}\n        />\n      </div>\n    </Popover.Trigger>\n  );\n};\n", "import React, { useEffect } from \"react\";\nimport { getFormValue } from \"../actions/actionProperties\";\nimport { t } from \"../i18n\";\nimport \"./Range.scss\";\n\nexport type RangeProps = {\n  updateData: (value: number) => void;\n  appState: any;\n  elements: any;\n  testId?: string;\n};\n\nexport const Range = ({\n  updateData,\n  appState,\n  elements,\n  testId,\n}: RangeProps) => {\n  const rangeRef = React.useRef<HTMLInputElement>(null);\n  const valueRef = React.useRef<HTMLDivElement>(null);\n  const value = getFormValue(\n    elements,\n    appState,\n    (element) => element.opacity,\n    true,\n    appState.currentItemOpacity,\n  );\n  useEffect(() => {\n    if (rangeRef.current && valueRef.current) {\n      const rangeElement = rangeRef.current;\n      const valueElement = valueRef.current;\n      const inputWidth = rangeElement.offsetWidth;\n      const thumbWidth = 15; // 15 is the width of the thumb\n      const position =\n        (value / 100) * (inputWidth - thumbWidth) + thumbWidth / 2;\n      valueElement.style.left = `${position}px`;\n      rangeElement.style.background = `linear-gradient(to right, var(--color-slider-track) 0%, var(--color-slider-track) ${value}%, var(--button-bg) ${value}%, var(--button-bg) 100%)`;\n    }\n  }, [value]);\n\n  return (\n    <label className=\"control-label\">\n      {t(\"labels.opacity\")}\n      <div className=\"range-wrapper\">\n        <input\n          ref={rangeRef}\n          type=\"range\"\n          min=\"0\"\n          max=\"100\"\n          step=\"10\"\n          onChange={(event) => {\n            updateData(+event.target.value);\n          }}\n          value={value}\n          className=\"range-input\"\n          data-testid={testId}\n        />\n        <div className=\"value-bubble\" ref={valueRef}>\n          {value !== 0 ? value : null}\n        </div>\n        <div className=\"zero-label\">0</div>\n      </div>\n    </label>\n  );\n};\n", "import type { AppState, NormalizedZoomValue } from \"../types\";\n\nexport const getStateForZoom = (\n  {\n    viewportX,\n    viewportY,\n    nextZoom,\n  }: {\n    viewportX: number;\n    viewportY: number;\n    nextZoom: NormalizedZoomValue;\n  },\n  appState: AppState,\n) => {\n  const appLayerX = viewportX - appState.offsetLeft;\n  const appLayerY = viewportY - appState.offsetTop;\n\n  const currentZoom = appState.zoom.value;\n\n  // get original scroll position without zoom\n  const baseScrollX = appState.scrollX + (appLayerX - appLayerX / currentZoom);\n  const baseScrollY = appState.scrollY + (appLayerY - appLayerY / currentZoom);\n\n  // get scroll offsets for target zoom level\n  const zoomOffsetScrollX = -(appLayerX - appLayerX / nextZoom);\n  const zoomOffsetScrollY = -(appLayerY - appLayerY / nextZoom);\n\n  return {\n    scrollX: baseScrollX + zoomOffsetScrollX,\n    scrollY: baseScrollY + zoomOffsetScrollY,\n    zoom: {\n      value: nextZoom,\n    },\n  };\n};\n", "import \"./Tooltip.scss\";\n\nimport React, { useEffect } from \"react\";\n\nexport const getTooltipDiv = () => {\n  const existingDiv = document.querySelector<HTMLDivElement>(\n    \".excalidraw-tooltip\",\n  );\n  if (existingDiv) {\n    return existingDiv;\n  }\n  const div = document.createElement(\"div\");\n  document.body.appendChild(div);\n  div.classList.add(\"excalidraw-tooltip\");\n  return div;\n};\n\nexport const updateTooltipPosition = (\n  tooltip: HTMLDivElement,\n  item: {\n    left: number;\n    top: number;\n    width: number;\n    height: number;\n  },\n  position: \"bottom\" | \"top\" = \"bottom\",\n) => {\n  const tooltipRect = tooltip.getBoundingClientRect();\n\n  const viewportWidth = window.innerWidth;\n  const viewportHeight = window.innerHeight;\n\n  const margin = 5;\n\n  let left = item.left + item.width / 2 - tooltipRect.width / 2;\n  if (left < 0) {\n    left = margin;\n  } else if (left + tooltipRect.width >= viewportWidth) {\n    left = viewportWidth - tooltipRect.width - margin;\n  }\n\n  let top: number;\n\n  if (position === \"bottom\") {\n    top = item.top + item.height + margin;\n    if (top + tooltipRect.height >= viewportHeight) {\n      top = item.top - tooltipRect.height - margin;\n    }\n  } else {\n    top = item.top - tooltipRect.height - margin;\n    if (top < 0) {\n      top = item.top + item.height + margin;\n    }\n  }\n\n  Object.assign(tooltip.style, {\n    top: `${top}px`,\n    left: `${left}px`,\n  });\n};\n\nconst updateTooltip = (\n  item: HTMLDivElement,\n  tooltip: HTMLDivElement,\n  label: string,\n  long: boolean,\n) => {\n  tooltip.classList.add(\"excalidraw-tooltip--visible\");\n  tooltip.style.minWidth = long ? \"50ch\" : \"10ch\";\n  tooltip.style.maxWidth = long ? \"50ch\" : \"15ch\";\n\n  tooltip.textContent = label;\n\n  const itemRect = item.getBoundingClientRect();\n  updateTooltipPosition(tooltip, itemRect);\n};\n\ntype TooltipProps = {\n  children: React.ReactNode;\n  label: string;\n  long?: boolean;\n  style?: React.CSSProperties;\n  disabled?: boolean;\n};\n\nexport const Tooltip = ({\n  children,\n  label,\n  long = false,\n  style,\n  disabled,\n}: TooltipProps) => {\n  useEffect(() => {\n    return () =>\n      getTooltipDiv().classList.remove(\"excalidraw-tooltip--visible\");\n  }, []);\n  if (disabled) {\n    return null;\n  }\n  return (\n    <div\n      className=\"excalidraw-tooltip-wrapper\"\n      onPointerEnter={(event) =>\n        updateTooltip(\n          event.currentTarget as HTMLDivElement,\n          getTooltipDiv(),\n          label,\n          long,\n        )\n      }\n      onPointerLeave={() =>\n        getTooltipDiv().classList.remove(\"excalidraw-tooltip--visible\")\n      }\n      style={style}\n    >\n      {children}\n    </div>\n  );\n};\n", "import { ColorPicker } from \"../components/ColorPicker/ColorPicker\";\nimport {\n  handIcon,\n  MoonIcon,\n  SunIcon,\n  TrashIcon,\n  zoomAreaIcon,\n  ZoomInIcon,\n  ZoomOutIcon,\n  ZoomResetIcon,\n} from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport {\n  CURSOR_TYPE,\n  MAX_ZOOM,\n  MIN_ZOOM,\n  THEME,\n  ZOOM_STEP,\n} from \"../constants\";\nimport { getCommonBounds, getNonDeletedElements } from \"../element\";\nimport type { ExcalidrawElement } from \"../element/types\";\nimport { t } from \"../i18n\";\nimport { CODES, KEYS } from \"../keys\";\nimport { getNormalizedZoom } from \"../scene\";\nimport { centerScrollOn } from \"../scene/scroll\";\nimport { getStateForZoom } from \"../scene/zoom\";\nimport type { AppState, Offsets } from \"../types\";\nimport { getShortcutKey, updateActiveTool } from \"../utils\";\nimport { register } from \"./register\";\nimport { Tooltip } from \"../components/Tooltip\";\nimport { newElementWith } from \"../element/mutateElement\";\nimport {\n  getDefaultAppState,\n  isEraserActive,\n  isHandToolActive,\n} from \"../appState\";\nimport { DEFAULT_CANVAS_BACKGROUND_PICKS } from \"../colors\";\nimport type { SceneBounds } from \"../element/bounds\";\nimport { setCursor } from \"../cursor\";\nimport { CaptureUpdateAction } from \"../store\";\nimport { clamp, roundToStep } from \"@excalidraw/math\";\n\nexport const actionChangeViewBackgroundColor = register({\n  name: \"changeViewBackgroundColor\",\n  label: \"labels.canvasBackground\",\n  paletteName: \"Change canvas background color\",\n  trackEvent: false,\n  predicate: (elements, appState, props, app) => {\n    return (\n      !!app.props.UIOptions.canvasActions.changeViewBackgroundColor &&\n      !appState.viewModeEnabled\n    );\n  },\n  perform: (_, appState, value) => {\n    return {\n      appState: { ...appState, ...value },\n      captureUpdate: !!value.viewBackgroundColor\n        ? CaptureUpdateAction.IMMEDIATELY\n        : CaptureUpdateAction.EVENTUALLY,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData, appProps }) => {\n    // FIXME move me to src/components/mainMenu/DefaultItems.tsx\n    return (\n      <ColorPicker\n        palette={null}\n        topPicks={DEFAULT_CANVAS_BACKGROUND_PICKS}\n        label={t(\"labels.canvasBackground\")}\n        type=\"canvasBackground\"\n        color={appState.viewBackgroundColor}\n        onChange={(color) => updateData({ viewBackgroundColor: color })}\n        data-testid=\"canvas-background-picker\"\n        elements={elements}\n        appState={appState}\n        updateData={updateData}\n      />\n    );\n  },\n});\n\nexport const actionClearCanvas = register({\n  name: \"clearCanvas\",\n  label: \"labels.clearCanvas\",\n  paletteName: \"Clear canvas\",\n  icon: TrashIcon,\n  trackEvent: { category: \"canvas\" },\n  predicate: (elements, appState, props, app) => {\n    return (\n      !!app.props.UIOptions.canvasActions.clearCanvas &&\n      !appState.viewModeEnabled &&\n      appState.openDialog?.name !== \"elementLinkSelector\"\n    );\n  },\n  perform: (elements, appState, _, app) => {\n    app.imageCache.clear();\n    return {\n      elements: elements.map((element) =>\n        newElementWith(element, { isDeleted: true }),\n      ),\n      appState: {\n        ...getDefaultAppState(),\n        files: {},\n        theme: appState.theme,\n        penMode: appState.penMode,\n        penDetected: appState.penDetected,\n        exportBackground: appState.exportBackground,\n        exportEmbedScene: appState.exportEmbedScene,\n        gridSize: appState.gridSize,\n        gridStep: appState.gridStep,\n        gridModeEnabled: appState.gridModeEnabled,\n        stats: appState.stats,\n        pasteDialog: appState.pasteDialog,\n        activeTool:\n          appState.activeTool.type === \"image\"\n            ? { ...appState.activeTool, type: \"selection\" }\n            : appState.activeTool,\n      },\n      captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n    };\n  },\n});\n\nexport const actionZoomIn = register({\n  name: \"zoomIn\",\n  label: \"buttons.zoomIn\",\n  viewMode: true,\n  icon: ZoomInIcon,\n  trackEvent: { category: \"canvas\" },\n  perform: (_elements, appState, _, app) => {\n    return {\n      appState: {\n        ...appState,\n        ...getStateForZoom(\n          {\n            viewportX: appState.width / 2 + appState.offsetLeft,\n            viewportY: appState.height / 2 + appState.offsetTop,\n            nextZoom: getNormalizedZoom(appState.zoom.value + ZOOM_STEP),\n          },\n          appState,\n        ),\n        userToFollow: null,\n      },\n      captureUpdate: CaptureUpdateAction.EVENTUALLY,\n    };\n  },\n  PanelComponent: ({ updateData, appState }) => (\n    <ToolButton\n      type=\"button\"\n      className=\"zoom-in-button zoom-button\"\n      icon={ZoomInIcon}\n      title={`${t(\"buttons.zoomIn\")} \u2014 ${getShortcutKey(\"CtrlOrCmd++\")}`}\n      aria-label={t(\"buttons.zoomIn\")}\n      disabled={appState.zoom.value >= MAX_ZOOM}\n      onClick={() => {\n        updateData(null);\n      }}\n    />\n  ),\n  keyTest: (event) =>\n    (event.code === CODES.EQUAL || event.code === CODES.NUM_ADD) &&\n    (event[KEYS.CTRL_OR_CMD] || event.shiftKey),\n});\n\nexport const actionZoomOut = register({\n  name: \"zoomOut\",\n  label: \"buttons.zoomOut\",\n  icon: ZoomOutIcon,\n  viewMode: true,\n  trackEvent: { category: \"canvas\" },\n  perform: (_elements, appState, _, app) => {\n    return {\n      appState: {\n        ...appState,\n        ...getStateForZoom(\n          {\n            viewportX: appState.width / 2 + appState.offsetLeft,\n            viewportY: appState.height / 2 + appState.offsetTop,\n            nextZoom: getNormalizedZoom(appState.zoom.value - ZOOM_STEP),\n          },\n          appState,\n        ),\n        userToFollow: null,\n      },\n      captureUpdate: CaptureUpdateAction.EVENTUALLY,\n    };\n  },\n  PanelComponent: ({ updateData, appState }) => (\n    <ToolButton\n      type=\"button\"\n      className=\"zoom-out-button zoom-button\"\n      icon={ZoomOutIcon}\n      title={`${t(\"buttons.zoomOut\")} \u2014 ${getShortcutKey(\"CtrlOrCmd+-\")}`}\n      aria-label={t(\"buttons.zoomOut\")}\n      disabled={appState.zoom.value <= MIN_ZOOM}\n      onClick={() => {\n        updateData(null);\n      }}\n    />\n  ),\n  keyTest: (event) =>\n    (event.code === CODES.MINUS || event.code === CODES.NUM_SUBTRACT) &&\n    (event[KEYS.CTRL_OR_CMD] || event.shiftKey),\n});\n\nexport const actionResetZoom = register({\n  name: \"resetZoom\",\n  label: \"buttons.resetZoom\",\n  icon: ZoomResetIcon,\n  viewMode: true,\n  trackEvent: { category: \"canvas\" },\n  perform: (_elements, appState, _, app) => {\n    return {\n      appState: {\n        ...appState,\n        ...getStateForZoom(\n          {\n            viewportX: appState.width / 2 + appState.offsetLeft,\n            viewportY: appState.height / 2 + appState.offsetTop,\n            nextZoom: getNormalizedZoom(1),\n          },\n          appState,\n        ),\n        userToFollow: null,\n      },\n      captureUpdate: CaptureUpdateAction.EVENTUALLY,\n    };\n  },\n  PanelComponent: ({ updateData, appState }) => (\n    <Tooltip label={t(\"buttons.resetZoom\")} style={{ height: \"100%\" }}>\n      <ToolButton\n        type=\"button\"\n        className=\"reset-zoom-button zoom-button\"\n        title={t(\"buttons.resetZoom\")}\n        aria-label={t(\"buttons.resetZoom\")}\n        onClick={() => {\n          updateData(null);\n        }}\n      >\n        {(appState.zoom.value * 100).toFixed(0)}%\n      </ToolButton>\n    </Tooltip>\n  ),\n  keyTest: (event) =>\n    (event.code === CODES.ZERO || event.code === CODES.NUM_ZERO) &&\n    (event[KEYS.CTRL_OR_CMD] || event.shiftKey),\n});\n\nconst zoomValueToFitBoundsOnViewport = (\n  bounds: SceneBounds,\n  viewportDimensions: { width: number; height: number },\n  viewportZoomFactor: number = 1, // default to 1 if not provided\n) => {\n  const [x1, y1, x2, y2] = bounds;\n  const commonBoundsWidth = x2 - x1;\n  const zoomValueForWidth = viewportDimensions.width / commonBoundsWidth;\n  const commonBoundsHeight = y2 - y1;\n  const zoomValueForHeight = viewportDimensions.height / commonBoundsHeight;\n  const smallestZoomValue = Math.min(zoomValueForWidth, zoomValueForHeight);\n\n  const adjustedZoomValue =\n    smallestZoomValue * clamp(viewportZoomFactor, 0.1, 1);\n\n  return Math.min(adjustedZoomValue, 1);\n};\n\nexport const zoomToFitBounds = ({\n  bounds,\n  appState,\n  canvasOffsets,\n  fitToViewport = false,\n  viewportZoomFactor = 1,\n  minZoom = -Infinity,\n  maxZoom = Infinity,\n}: {\n  bounds: SceneBounds;\n  canvasOffsets?: Offsets;\n  appState: Readonly<AppState>;\n  /** whether to fit content to viewport (beyond >100%) */\n  fitToViewport: boolean;\n  /** zoom content to cover X of the viewport, when fitToViewport=true */\n  viewportZoomFactor?: number;\n  minZoom?: number;\n  maxZoom?: number;\n}) => {\n  viewportZoomFactor = clamp(viewportZoomFactor, MIN_ZOOM, MAX_ZOOM);\n\n  const [x1, y1, x2, y2] = bounds;\n  const centerX = (x1 + x2) / 2;\n  const centerY = (y1 + y2) / 2;\n\n  const canvasOffsetLeft = canvasOffsets?.left ?? 0;\n  const canvasOffsetTop = canvasOffsets?.top ?? 0;\n  const canvasOffsetRight = canvasOffsets?.right ?? 0;\n  const canvasOffsetBottom = canvasOffsets?.bottom ?? 0;\n\n  const effectiveCanvasWidth =\n    appState.width - canvasOffsetLeft - canvasOffsetRight;\n  const effectiveCanvasHeight =\n    appState.height - canvasOffsetTop - canvasOffsetBottom;\n\n  let adjustedZoomValue;\n\n  if (fitToViewport) {\n    const commonBoundsWidth = x2 - x1;\n    const commonBoundsHeight = y2 - y1;\n\n    adjustedZoomValue =\n      Math.min(\n        effectiveCanvasWidth / commonBoundsWidth,\n        effectiveCanvasHeight / commonBoundsHeight,\n      ) * viewportZoomFactor;\n  } else {\n    adjustedZoomValue = zoomValueToFitBoundsOnViewport(\n      bounds,\n      {\n        width: effectiveCanvasWidth,\n        height: effectiveCanvasHeight,\n      },\n      viewportZoomFactor,\n    );\n  }\n\n  const newZoomValue = getNormalizedZoom(\n    clamp(roundToStep(adjustedZoomValue, ZOOM_STEP, \"floor\"), minZoom, maxZoom),\n  );\n\n  const centerScroll = centerScrollOn({\n    scenePoint: { x: centerX, y: centerY },\n    viewportDimensions: {\n      width: appState.width,\n      height: appState.height,\n    },\n    offsets: canvasOffsets,\n    zoom: { value: newZoomValue },\n  });\n\n  return {\n    appState: {\n      ...appState,\n      scrollX: centerScroll.scrollX,\n      scrollY: centerScroll.scrollY,\n      zoom: { value: newZoomValue },\n    },\n    captureUpdate: CaptureUpdateAction.EVENTUALLY,\n  };\n};\n\nexport const zoomToFit = ({\n  canvasOffsets,\n  targetElements,\n  appState,\n  fitToViewport,\n  viewportZoomFactor,\n  minZoom,\n  maxZoom,\n}: {\n  canvasOffsets?: Offsets;\n  targetElements: readonly ExcalidrawElement[];\n  appState: Readonly<AppState>;\n  /** whether to fit content to viewport (beyond >100%) */\n  fitToViewport: boolean;\n  /** zoom content to cover X of the viewport, when fitToViewport=true */\n  viewportZoomFactor?: number;\n  minZoom?: number;\n  maxZoom?: number;\n}) => {\n  const commonBounds = getCommonBounds(getNonDeletedElements(targetElements));\n\n  return zoomToFitBounds({\n    canvasOffsets,\n    bounds: commonBounds,\n    appState,\n    fitToViewport,\n    viewportZoomFactor,\n    minZoom,\n    maxZoom,\n  });\n};\n\n// Note, this action differs from actionZoomToFitSelection in that it doesn't\n// zoom beyond 100%. In other words, if the content is smaller than viewport\n// size, it won't be zoomed in.\nexport const actionZoomToFitSelectionInViewport = register({\n  name: \"zoomToFitSelectionInViewport\",\n  label: \"labels.zoomToFitViewport\",\n  icon: zoomAreaIcon,\n  trackEvent: { category: \"canvas\" },\n  perform: (elements, appState, _, app) => {\n    const selectedElements = app.scene.getSelectedElements(appState);\n    return zoomToFit({\n      targetElements: selectedElements.length ? selectedElements : elements,\n      appState: {\n        ...appState,\n        userToFollow: null,\n      },\n      fitToViewport: false,\n      canvasOffsets: app.getEditorUIOffsets(),\n    });\n  },\n  // NOTE shift-2 should have been assigned actionZoomToFitSelection.\n  // TBD on how proceed\n  keyTest: (event) =>\n    event.code === CODES.TWO &&\n    event.shiftKey &&\n    !event.altKey &&\n    !event[KEYS.CTRL_OR_CMD],\n});\n\nexport const actionZoomToFitSelection = register({\n  name: \"zoomToFitSelection\",\n  label: \"helpDialog.zoomToSelection\",\n  icon: zoomAreaIcon,\n  trackEvent: { category: \"canvas\" },\n  perform: (elements, appState, _, app) => {\n    const selectedElements = app.scene.getSelectedElements(appState);\n    return zoomToFit({\n      targetElements: selectedElements.length ? selectedElements : elements,\n      appState: {\n        ...appState,\n        userToFollow: null,\n      },\n      fitToViewport: true,\n      canvasOffsets: app.getEditorUIOffsets(),\n    });\n  },\n  // NOTE this action should use shift-2 per figma, alas\n  keyTest: (event) =>\n    event.code === CODES.THREE &&\n    event.shiftKey &&\n    !event.altKey &&\n    !event[KEYS.CTRL_OR_CMD],\n});\n\nexport const actionZoomToFit = register({\n  name: \"zoomToFit\",\n  label: \"helpDialog.zoomToFit\",\n  icon: zoomAreaIcon,\n  viewMode: true,\n  trackEvent: { category: \"canvas\" },\n  perform: (elements, appState, _, app) =>\n    zoomToFit({\n      targetElements: elements,\n      appState: {\n        ...appState,\n        userToFollow: null,\n      },\n      fitToViewport: false,\n      canvasOffsets: app.getEditorUIOffsets(),\n    }),\n  keyTest: (event) =>\n    event.code === CODES.ONE &&\n    event.shiftKey &&\n    !event.altKey &&\n    !event[KEYS.CTRL_OR_CMD],\n});\n\nexport const actionToggleTheme = register({\n  name: \"toggleTheme\",\n  label: (_, appState) => {\n    return appState.theme === THEME.DARK\n      ? \"buttons.lightMode\"\n      : \"buttons.darkMode\";\n  },\n  keywords: [\"toggle\", \"dark\", \"light\", \"mode\", \"theme\"],\n  icon: (appState) => (appState.theme === THEME.LIGHT ? MoonIcon : SunIcon),\n  viewMode: true,\n  trackEvent: { category: \"canvas\" },\n  perform: (_, appState, value) => {\n    return {\n      appState: {\n        ...appState,\n        theme:\n          value || (appState.theme === THEME.LIGHT ? THEME.DARK : THEME.LIGHT),\n      },\n      captureUpdate: CaptureUpdateAction.EVENTUALLY,\n    };\n  },\n  keyTest: (event) => event.altKey && event.shiftKey && event.code === CODES.D,\n  predicate: (elements, appState, props, app) => {\n    return !!app.props.UIOptions.canvasActions.toggleTheme;\n  },\n});\n\nexport const actionToggleEraserTool = register({\n  name: \"toggleEraserTool\",\n  label: \"toolBar.eraser\",\n  trackEvent: { category: \"toolbar\" },\n  perform: (elements, appState) => {\n    let activeTool: AppState[\"activeTool\"];\n\n    if (isEraserActive(appState)) {\n      activeTool = updateActiveTool(appState, {\n        ...(appState.activeTool.lastActiveTool || {\n          type: \"selection\",\n        }),\n        lastActiveToolBeforeEraser: null,\n      });\n    } else {\n      activeTool = updateActiveTool(appState, {\n        type: \"eraser\",\n        lastActiveToolBeforeEraser: appState.activeTool,\n      });\n    }\n\n    return {\n      appState: {\n        ...appState,\n        selectedElementIds: {},\n        selectedGroupIds: {},\n        activeEmbeddable: null,\n        activeTool,\n      },\n      captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n    };\n  },\n  keyTest: (event) => event.key === KEYS.E,\n});\n\nexport const actionToggleHandTool = register({\n  name: \"toggleHandTool\",\n  label: \"toolBar.hand\",\n  paletteName: \"Toggle hand tool\",\n  trackEvent: { category: \"toolbar\" },\n  icon: handIcon,\n  viewMode: false,\n  perform: (elements, appState, _, app) => {\n    let activeTool: AppState[\"activeTool\"];\n\n    if (isHandToolActive(appState)) {\n      activeTool = updateActiveTool(appState, {\n        ...(appState.activeTool.lastActiveTool || {\n          type: \"selection\",\n        }),\n        lastActiveToolBeforeEraser: null,\n      });\n    } else {\n      activeTool = updateActiveTool(appState, {\n        type: \"hand\",\n        lastActiveToolBeforeEraser: appState.activeTool,\n      });\n      setCursor(app.interactiveCanvas, CURSOR_TYPE.GRAB);\n    }\n\n    return {\n      appState: {\n        ...appState,\n        selectedElementIds: {},\n        selectedGroupIds: {},\n        activeEmbeddable: null,\n        activeTool,\n      },\n      captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n    };\n  },\n  keyTest: (event) =>\n    !event.altKey && !event[KEYS.CTRL_OR_CMD] && event.key === KEYS.H,\n});\n", "import { KEYS } from \"../keys\";\nimport { isInvisiblySmallElement } from \"../element\";\nimport { arrayToMap, updateActiveTool } from \"../utils\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { done } from \"../components/icons\";\nimport { t } from \"../i18n\";\nimport { register } from \"./register\";\nimport { mutateElement } from \"../element/mutateElement\";\nimport { LinearElementEditor } from \"../element/linearElementEditor\";\nimport {\n  maybeBindLinearElement,\n  bindOrUnbindLinearElement,\n} from \"../element/binding\";\nimport { isBindingElement, isLinearElement } from \"../element/typeChecks\";\nimport type { AppState } from \"../types\";\nimport { resetCursor } from \"../cursor\";\nimport { CaptureUpdateAction } from \"../store\";\nimport { pointFrom } from \"@excalidraw/math\";\nimport { isPathALoop } from \"../shapes\";\n\nexport const actionFinalize = register({\n  name: \"finalize\",\n  label: \"\",\n  trackEvent: false,\n  perform: (elements, appState, _, app) => {\n    const { interactiveCanvas, focusContainer, scene } = app;\n\n    const elementsMap = scene.getNonDeletedElementsMap();\n\n    if (appState.editingLinearElement) {\n      const { elementId, startBindingElement, endBindingElement } =\n        appState.editingLinearElement;\n      const element = LinearElementEditor.getElement(elementId, elementsMap);\n\n      if (element) {\n        if (isBindingElement(element)) {\n          bindOrUnbindLinearElement(\n            element,\n            startBindingElement,\n            endBindingElement,\n            elementsMap,\n            scene,\n          );\n        }\n        return {\n          elements:\n            element.points.length < 2 || isInvisiblySmallElement(element)\n              ? elements.filter((el) => el.id !== element.id)\n              : undefined,\n          appState: {\n            ...appState,\n            cursorButton: \"up\",\n            editingLinearElement: null,\n          },\n          captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n        };\n      }\n    }\n\n    let newElements = elements;\n\n    const pendingImageElement =\n      appState.pendingImageElementId &&\n      scene.getElement(appState.pendingImageElementId);\n\n    if (pendingImageElement) {\n      mutateElement(pendingImageElement, { isDeleted: true }, false);\n    }\n\n    if (window.document.activeElement instanceof HTMLElement) {\n      focusContainer();\n    }\n\n    const multiPointElement = appState.multiElement\n      ? appState.multiElement\n      : appState.newElement?.type === \"freedraw\"\n      ? appState.newElement\n      : null;\n\n    if (multiPointElement) {\n      // pen and mouse have hover\n      if (\n        multiPointElement.type !== \"freedraw\" &&\n        appState.lastPointerDownWith !== \"touch\"\n      ) {\n        const { points, lastCommittedPoint } = multiPointElement;\n        if (\n          !lastCommittedPoint ||\n          points[points.length - 1] !== lastCommittedPoint\n        ) {\n          mutateElement(multiPointElement, {\n            points: multiPointElement.points.slice(0, -1),\n          });\n        }\n      }\n\n      if (isInvisiblySmallElement(multiPointElement)) {\n        // TODO: #7348 in theory this gets recorded by the store, so the invisible elements could be restored by the undo/redo, which might be not what we would want\n        newElements = newElements.filter(\n          (el) => el.id !== multiPointElement.id,\n        );\n      }\n\n      // If the multi point line closes the loop,\n      // set the last point to first point.\n      // This ensures that loop remains closed at different scales.\n      const isLoop = isPathALoop(multiPointElement.points, appState.zoom.value);\n      if (\n        multiPointElement.type === \"line\" ||\n        multiPointElement.type === \"freedraw\"\n      ) {\n        if (isLoop) {\n          const linePoints = multiPointElement.points;\n          const firstPoint = linePoints[0];\n          mutateElement(multiPointElement, {\n            points: linePoints.map((p, index) =>\n              index === linePoints.length - 1\n                ? pointFrom(firstPoint[0], firstPoint[1])\n                : p,\n            ),\n          });\n        }\n      }\n\n      if (\n        isBindingElement(multiPointElement) &&\n        !isLoop &&\n        multiPointElement.points.length > 1\n      ) {\n        const [x, y] = LinearElementEditor.getPointAtIndexGlobalCoordinates(\n          multiPointElement,\n          -1,\n          arrayToMap(elements),\n        );\n        maybeBindLinearElement(\n          multiPointElement,\n          appState,\n          { x, y },\n          elementsMap,\n          elements,\n        );\n      }\n    }\n\n    if (\n      (!appState.activeTool.locked &&\n        appState.activeTool.type !== \"freedraw\") ||\n      !multiPointElement\n    ) {\n      resetCursor(interactiveCanvas);\n    }\n\n    let activeTool: AppState[\"activeTool\"];\n    if (appState.activeTool.type === \"eraser\") {\n      activeTool = updateActiveTool(appState, {\n        ...(appState.activeTool.lastActiveTool || {\n          type: \"selection\",\n        }),\n        lastActiveToolBeforeEraser: null,\n      });\n    } else {\n      activeTool = updateActiveTool(appState, {\n        type: \"selection\",\n      });\n    }\n\n    return {\n      elements: newElements,\n      appState: {\n        ...appState,\n        cursorButton: \"up\",\n        activeTool:\n          (appState.activeTool.locked ||\n            appState.activeTool.type === \"freedraw\") &&\n          multiPointElement\n            ? appState.activeTool\n            : activeTool,\n        activeEmbeddable: null,\n        newElement: null,\n        selectionElement: null,\n        multiElement: null,\n        editingTextElement: null,\n        startBoundElement: null,\n        suggestedBindings: [],\n        selectedElementIds:\n          multiPointElement &&\n          !appState.activeTool.locked &&\n          appState.activeTool.type !== \"freedraw\"\n            ? {\n                ...appState.selectedElementIds,\n                [multiPointElement.id]: true,\n              }\n            : appState.selectedElementIds,\n        // To select the linear element when user has finished mutipoint editing\n        selectedLinearElement:\n          multiPointElement && isLinearElement(multiPointElement)\n            ? new LinearElementEditor(multiPointElement)\n            : appState.selectedLinearElement,\n        pendingImageElementId: null,\n      },\n      // TODO: #7348 we should not capture everything, but if we don't, it leads to incosistencies -> revisit\n      captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n    };\n  },\n  keyTest: (event, appState) =>\n    (event.key === KEYS.ESCAPE &&\n      (appState.editingLinearElement !== null ||\n        (!appState.newElement && appState.multiElement === null))) ||\n    ((event.key === KEYS.ESCAPE || event.key === KEYS.ENTER) &&\n      appState.multiElement !== null),\n  PanelComponent: ({ appState, updateData, data }) => (\n    <ToolButton\n      type=\"button\"\n      icon={done}\n      title={t(\"buttons.done\")}\n      aria-label={t(\"buttons.done\")}\n      onClick={updateData}\n      visible={appState.multiElement != null}\n      size={data?.size || \"medium\"}\n      style={{ pointerEvents: \"all\" }}\n    />\n  ),\n});\n", "import \"./TextInput.scss\";\n\nimport React, { useState } from \"react\";\nimport { focusNearestParent } from \"../utils\";\n\nimport \"./ProjectName.scss\";\nimport { useExcalidrawContainer } from \"./App\";\nimport { KEYS } from \"../keys\";\n\ntype Props = {\n  value: string;\n  onChange: (value: string) => void;\n  label: string;\n  ignoreFocus?: boolean;\n};\n\nexport const ProjectName = (props: Props) => {\n  const { id } = useExcalidrawContainer();\n  const [fileName, setFileName] = useState<string>(props.value);\n\n  const handleBlur = (event: any) => {\n    if (!props.ignoreFocus) {\n      focusNearestParent(event.target);\n    }\n    const value = event.target.value;\n    if (value !== props.value) {\n      props.onChange(value);\n    }\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLElement>) => {\n    if (event.key === KEYS.ENTER) {\n      event.preventDefault();\n      if (event.nativeEvent.isComposing || event.keyCode === 229) {\n        return;\n      }\n      event.currentTarget.blur();\n    }\n  };\n\n  return (\n    <div className=\"ProjectName\">\n      <label className=\"ProjectName-label\" htmlFor=\"filename\">\n        {`${props.label}:`}\n      </label>\n      <input\n        type=\"text\"\n        className=\"TextInput\"\n        onBlur={handleBlur}\n        onKeyDown={handleKeyDown}\n        id={`${id}-filename`}\n        value={fileName}\n        onChange={(event) => setFileName(event.target.value)}\n      />\n    </div>\n  );\n};\n", "import \"./ToolIcon.scss\";\n\nimport { t } from \"../i18n\";\nimport { ToolButton } from \"./ToolButton\";\nimport { THEME } from \"../constants\";\nimport type { Theme } from \"../element/types\";\n\n// We chose to use only explicit toggle and not a third option for system value,\n// but this could be added in the future.\nexport const DarkModeToggle = (props: {\n  value: Theme;\n  onChange: (value: Theme) => void;\n  title?: string;\n}) => {\n  const title =\n    props.title ||\n    (props.value === THEME.DARK\n      ? t(\"buttons.lightMode\")\n      : t(\"buttons.darkMode\"));\n\n  return (\n    <ToolButton\n      type=\"icon\"\n      icon={props.value === THEME.LIGHT ? ICONS.MOON : ICONS.SUN}\n      title={title}\n      aria-label={title}\n      onClick={() =>\n        props.onChange(props.value === THEME.DARK ? THEME.LIGHT : THEME.DARK)\n      }\n      data-testid=\"toggle-dark-mode\"\n    />\n  );\n};\n\nconst ICONS = {\n  SUN: (\n    <svg width=\"512\" height=\"512\" className=\"rtl-mirror\" viewBox=\"0 0 512 512\">\n      <path\n        fill=\"currentColor\"\n        d=\"M256 160c-52.9 0-96 43.1-96 96s43.1 96 96 96 96-43.1 96-96-43.1-96-96-96zm246.4 80.5l-94.7-47.3 33.5-100.4c4.5-13.6-8.4-26.5-21.9-21.9l-100.4 33.5-47.4-94.8c-6.4-12.8-24.6-12.8-31 0l-47.3 94.7L92.7 70.8c-13.6-4.5-26.5 8.4-21.9 21.9l33.5 100.4-94.7 47.4c-12.8 6.4-12.8 24.6 0 31l94.7 47.3-33.5 100.5c-4.5 13.6 8.4 26.5 21.9 21.9l100.4-33.5 47.3 94.7c6.4 12.8 24.6 12.8 31 0l47.3-94.7 100.4 33.5c13.6 4.5 26.5-8.4 21.9-21.9l-33.5-100.4 94.7-47.3c13-6.5 13-24.7.2-31.1zm-155.9 106c-49.9 49.9-131.1 49.9-181 0-49.9-49.9-49.9-131.1 0-181 49.9-49.9 131.1-49.9 181 0 49.9 49.9 49.9 131.1 0 181z\"\n      ></path>\n    </svg>\n  ),\n  MOON: (\n    <svg width=\"512\" height=\"512\" className=\"rtl-mirror\" viewBox=\"0 0 512 512\">\n      <path\n        fill=\"currentColor\"\n        d=\"M283.211 512c78.962 0 151.079-35.925 198.857-94.792 7.068-8.708-.639-21.43-11.562-19.35-124.203 23.654-238.262-71.576-238.262-196.954 0-72.222 38.662-138.635 101.498-174.394 9.686-5.512 7.25-20.197-3.756-22.23A258.156 258.156 0 0 0 283.211 0c-141.309 0-256 114.511-256 256 0 141.309 114.511 256 256 256z\"\n      ></path>\n    </svg>\n  ),\n};\n", "import {\n  copyBlobToClipboardAsPng,\n  copyTextToSystemClipboard,\n} from \"../clipboard\";\nimport {\n  DEFAULT_EXPORT_PADDING,\n  DEFAULT_FILENAME,\n  IMAGE_MIME_TYPES,\n  isFirefox,\n  MIME_TYPES,\n} from \"../constants\";\nimport { getNonDeletedElements } from \"../element\";\nimport { isFrameLikeElement } from \"../element/typeChecks\";\nimport type {\n  ExcalidrawElement,\n  ExcalidrawFrameLikeElement,\n  NonDeletedExcalidrawElement,\n} from \"../element/types\";\nimport { getElementsOverlappingFrame } from \"../frame\";\nimport { t } from \"../i18n\";\nimport { getSelectedElements, isSomeElementSelected } from \"../scene\";\nimport { exportToCanvas, exportToSvg } from \"../scene/export\";\nimport type { ExportType } from \"../scene/types\";\nimport type { AppState, BinaryFiles } from \"../types\";\nimport { cloneJSON } from \"../utils\";\nimport { canvasToBlob } from \"./blob\";\nimport type { FileSystemHandle } from \"./filesystem\";\nimport { fileSave } from \"./filesystem\";\nimport { serializeAsJSON } from \"./json\";\n\nexport { loadFromBlob } from \"./blob\";\nexport { loadFromJSON, saveAsJSON } from \"./json\";\n\nexport type ExportedElements = readonly NonDeletedExcalidrawElement[] & {\n  _brand: \"exportedElements\";\n};\n\nexport const prepareElementsForExport = (\n  elements: readonly ExcalidrawElement[],\n  { selectedElementIds }: Pick<AppState, \"selectedElementIds\">,\n  exportSelectionOnly: boolean,\n) => {\n  elements = getNonDeletedElements(elements);\n\n  const isExportingSelection =\n    exportSelectionOnly &&\n    isSomeElementSelected(elements, { selectedElementIds });\n\n  let exportingFrame: ExcalidrawFrameLikeElement | null = null;\n  let exportedElements = isExportingSelection\n    ? getSelectedElements(\n        elements,\n        { selectedElementIds },\n        {\n          includeBoundTextElement: true,\n        },\n      )\n    : elements;\n\n  if (isExportingSelection) {\n    if (\n      exportedElements.length === 1 &&\n      isFrameLikeElement(exportedElements[0])\n    ) {\n      exportingFrame = exportedElements[0];\n      exportedElements = getElementsOverlappingFrame(elements, exportingFrame);\n    } else if (exportedElements.length > 1) {\n      exportedElements = getSelectedElements(\n        elements,\n        { selectedElementIds },\n        {\n          includeBoundTextElement: true,\n          includeElementsInFrames: true,\n        },\n      );\n    }\n  }\n\n  return {\n    exportingFrame,\n    exportedElements: cloneJSON(exportedElements) as ExportedElements,\n  };\n};\n\nexport const exportCanvas = async (\n  type: Omit<ExportType, \"backend\">,\n  elements: ExportedElements,\n  appState: AppState,\n  files: BinaryFiles,\n  {\n    exportBackground,\n    exportPadding = DEFAULT_EXPORT_PADDING,\n    viewBackgroundColor,\n    name = appState.name || DEFAULT_FILENAME,\n    fileHandle = null,\n    exportingFrame = null,\n  }: {\n    exportBackground: boolean;\n    exportPadding?: number;\n    viewBackgroundColor: string;\n    /** filename, if applicable */\n    name?: string;\n    fileHandle?: FileSystemHandle | null;\n    exportingFrame: ExcalidrawFrameLikeElement | null;\n  },\n) => {\n  if (elements.length === 0) {\n    throw new Error(t(\"alerts.cannotExportEmptyCanvas\"));\n  }\n  if (type === \"svg\" || type === \"clipboard-svg\") {\n    const svgPromise = exportToSvg(\n      elements,\n      {\n        exportBackground,\n        exportWithDarkMode: appState.exportWithDarkMode,\n        viewBackgroundColor,\n        exportPadding,\n        exportScale: appState.exportScale,\n        exportEmbedScene: appState.exportEmbedScene && type === \"svg\",\n      },\n      files,\n      { exportingFrame },\n    );\n\n    if (type === \"svg\") {\n      return fileSave(\n        svgPromise.then((svg) => {\n          return new Blob([svg.outerHTML], { type: MIME_TYPES.svg });\n        }),\n        {\n          description: \"Export to SVG\",\n          name,\n          extension: appState.exportEmbedScene ? \"excalidraw.svg\" : \"svg\",\n          mimeTypes: [IMAGE_MIME_TYPES.svg],\n          fileHandle,\n        },\n      );\n    } else if (type === \"clipboard-svg\") {\n      const svg = await svgPromise.then((svg) => svg.outerHTML);\n      try {\n        await copyTextToSystemClipboard(svg);\n      } catch (e) {\n        throw new Error(t(\"errors.copyToSystemClipboardFailed\"));\n      }\n      return;\n    }\n  }\n\n  const tempCanvas = exportToCanvas(elements, appState, files, {\n    exportBackground,\n    viewBackgroundColor,\n    exportPadding,\n    exportingFrame,\n  });\n\n  if (type === \"png\") {\n    let blob = canvasToBlob(tempCanvas);\n\n    if (appState.exportEmbedScene) {\n      blob = blob.then((blob) =>\n        import(\"./image\").then(({ encodePngMetadata }) =>\n          encodePngMetadata({\n            blob,\n            metadata: serializeAsJSON(elements, appState, files, \"local\"),\n          }),\n        ),\n      );\n    }\n\n    return fileSave(blob, {\n      description: \"Export to PNG\",\n      name,\n      extension: appState.exportEmbedScene ? \"excalidraw.png\" : \"png\",\n      mimeTypes: [IMAGE_MIME_TYPES.png],\n      fileHandle,\n    });\n  } else if (type === \"clipboard\") {\n    try {\n      const blob = canvasToBlob(tempCanvas);\n      await copyBlobToClipboardAsPng(blob);\n    } catch (error: any) {\n      console.warn(error);\n      if (error.name === \"CANVAS_POSSIBLY_TOO_BIG\") {\n        throw new Error(t(\"canvasError.canvasTooBig\"));\n      }\n      // TypeError *probably* suggests ClipboardItem not defined, which\n      // people on Firefox can enable through a flag, so let's tell them.\n      if (isFirefox && error.name === \"TypeError\") {\n        throw new Error(\n          `${t(\"alerts.couldNotCopyToClipboard\")}\\n\\n${t(\n            \"hints.firefox_clipboard_write\",\n          )}`,\n        );\n      } else {\n        throw new Error(t(\"alerts.couldNotCopyToClipboard\"));\n      }\n    }\n  } else {\n    // shouldn't happen\n    throw new Error(\"Unsupported export type\");\n  }\n};\n", "import type { ExcalidrawElement } from \"../element/types\";\nimport type { AppState, BinaryFiles } from \"../types\";\nimport { exportCanvas, prepareElementsForExport } from \".\";\nimport { getFileHandleType, isImageFileHandleType } from \"./blob\";\n\nexport const resaveAsImageWithScene = async (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  files: BinaryFiles,\n  name: string,\n) => {\n  const { exportBackground, viewBackgroundColor, fileHandle } = appState;\n\n  const fileHandleType = getFileHandleType(fileHandle);\n\n  if (!fileHandle || !isImageFileHandleType(fileHandleType)) {\n    throw new Error(\n      \"fileHandle should exist and should be of type svg or png when resaving\",\n    );\n  }\n  appState = {\n    ...appState,\n    exportEmbedScene: true,\n  };\n\n  const { exportedElements, exportingFrame } = prepareElementsForExport(\n    elements,\n    appState,\n    false,\n  );\n\n  await exportCanvas(fileHandleType, exportedElements, appState, files, {\n    exportBackground,\n    viewBackgroundColor,\n    name,\n    fileHandle,\n    exportingFrame,\n  });\n\n  return { fileHandle };\n};\n", "import React from \"react\";\nimport clsx from \"clsx\";\nimport { checkIcon } from \"./icons\";\n\nimport \"./CheckboxItem.scss\";\n\nexport const CheckboxItem: React.FC<{\n  checked: boolean;\n  onChange: (checked: boolean, event: React.MouseEvent) => void;\n  className?: string;\n  children?: React.ReactNode;\n}> = ({ children, checked, onChange, className }) => {\n  return (\n    <div\n      className={clsx(\"Checkbox\", className, { \"is-checked\": checked })}\n      onClick={(event) => {\n        onChange(!checked, event);\n        (\n          (event.currentTarget as HTMLDivElement).querySelector(\n            \".Checkbox-box\",\n          ) as HTMLButtonElement\n        ).focus();\n      }}\n    >\n      <button\n        type=\"button\"\n        className=\"Checkbox-box\"\n        role=\"checkbox\"\n        aria-checked={checked}\n      >\n        {checkIcon}\n      </button>\n      <div className=\"Checkbox-label\">{children}</div>\n    </div>\n  );\n};\n", "import { ExportIcon, questionCircle, saveAs } from \"../components/icons\";\nimport { ProjectName } from \"../components/ProjectName\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { Tooltip } from \"../components/Tooltip\";\nimport { DarkModeToggle } from \"../components/DarkModeToggle\";\nimport { loadFromJSON, saveAsJSON } from \"../data\";\nimport { resaveAsImageWithScene } from \"../data/resave\";\nimport { t } from \"../i18n\";\nimport { useDevice } from \"../components/App\";\nimport { KEYS } from \"../keys\";\nimport { register } from \"./register\";\nimport { CheckboxItem } from \"../components/CheckboxItem\";\nimport { getExportSize } from \"../scene/export\";\nimport { DEFAULT_EXPORT_PADDING, EXPORT_SCALES, THEME } from \"../constants\";\nimport { getSelectedElements, isSomeElementSelected } from \"../scene\";\nimport { getNonDeletedElements } from \"../element\";\nimport { isImageFileHandle } from \"../data/blob\";\nimport { nativeFileSystemSupported } from \"../data/filesystem\";\nimport type { Theme } from \"../element/types\";\n\nimport \"../components/ToolIcon.scss\";\nimport { CaptureUpdateAction } from \"../store\";\n\nexport const actionChangeProjectName = register({\n  name: \"changeProjectName\",\n  label: \"labels.fileTitle\",\n  trackEvent: false,\n  perform: (_elements, appState, value) => {\n    return {\n      appState: { ...appState, name: value },\n      captureUpdate: CaptureUpdateAction.EVENTUALLY,\n    };\n  },\n  PanelComponent: ({ appState, updateData, appProps, data, app }) => (\n    <ProjectName\n      label={t(\"labels.fileTitle\")}\n      value={app.getName()}\n      onChange={(name: string) => updateData(name)}\n      ignoreFocus={data?.ignoreFocus ?? false}\n    />\n  ),\n});\n\nexport const actionChangeExportScale = register({\n  name: \"changeExportScale\",\n  label: \"imageExportDialog.scale\",\n  trackEvent: { category: \"export\", action: \"scale\" },\n  perform: (_elements, appState, value) => {\n    return {\n      appState: { ...appState, exportScale: value },\n      captureUpdate: CaptureUpdateAction.EVENTUALLY,\n    };\n  },\n  PanelComponent: ({ elements: allElements, appState, updateData }) => {\n    const elements = getNonDeletedElements(allElements);\n    const exportSelected = isSomeElementSelected(elements, appState);\n    const exportedElements = exportSelected\n      ? getSelectedElements(elements, appState)\n      : elements;\n\n    return (\n      <>\n        {EXPORT_SCALES.map((s) => {\n          const [width, height] = getExportSize(\n            exportedElements,\n            DEFAULT_EXPORT_PADDING,\n            s,\n          );\n\n          const scaleButtonTitle = `${t(\n            \"imageExportDialog.label.scale\",\n          )} ${s}x (${width}x${height})`;\n\n          return (\n            <ToolButton\n              key={s}\n              size=\"small\"\n              type=\"radio\"\n              icon={`${s}x`}\n              name=\"export-canvas-scale\"\n              title={scaleButtonTitle}\n              aria-label={scaleButtonTitle}\n              id=\"export-canvas-scale\"\n              checked={s === appState.exportScale}\n              onChange={() => updateData(s)}\n            />\n          );\n        })}\n      </>\n    );\n  },\n});\n\nexport const actionChangeExportBackground = register({\n  name: \"changeExportBackground\",\n  label: \"imageExportDialog.label.withBackground\",\n  trackEvent: { category: \"export\", action: \"toggleBackground\" },\n  perform: (_elements, appState, value) => {\n    return {\n      appState: { ...appState, exportBackground: value },\n      captureUpdate: CaptureUpdateAction.EVENTUALLY,\n    };\n  },\n  PanelComponent: ({ appState, updateData }) => (\n    <CheckboxItem\n      checked={appState.exportBackground}\n      onChange={(checked) => updateData(checked)}\n    >\n      {t(\"imageExportDialog.label.withBackground\")}\n    </CheckboxItem>\n  ),\n});\n\nexport const actionChangeExportEmbedScene = register({\n  name: \"changeExportEmbedScene\",\n  label: \"imageExportDialog.tooltip.embedScene\",\n  trackEvent: { category: \"export\", action: \"embedScene\" },\n  perform: (_elements, appState, value) => {\n    return {\n      appState: { ...appState, exportEmbedScene: value },\n      captureUpdate: CaptureUpdateAction.EVENTUALLY,\n    };\n  },\n  PanelComponent: ({ appState, updateData }) => (\n    <CheckboxItem\n      checked={appState.exportEmbedScene}\n      onChange={(checked) => updateData(checked)}\n    >\n      {t(\"imageExportDialog.label.embedScene\")}\n      <Tooltip label={t(\"imageExportDialog.tooltip.embedScene\")} long={true}>\n        <div className=\"excalidraw-tooltip-icon\">{questionCircle}</div>\n      </Tooltip>\n    </CheckboxItem>\n  ),\n});\n\nexport const actionSaveToActiveFile = register({\n  name: \"saveToActiveFile\",\n  label: \"buttons.save\",\n  icon: ExportIcon,\n  trackEvent: { category: \"export\" },\n  predicate: (elements, appState, props, app) => {\n    return (\n      !!app.props.UIOptions.canvasActions.saveToActiveFile &&\n      !!appState.fileHandle &&\n      !appState.viewModeEnabled\n    );\n  },\n  perform: async (elements, appState, value, app) => {\n    const fileHandleExists = !!appState.fileHandle;\n\n    try {\n      const { fileHandle } = isImageFileHandle(appState.fileHandle)\n        ? await resaveAsImageWithScene(\n            elements,\n            appState,\n            app.files,\n            app.getName(),\n          )\n        : await saveAsJSON(elements, appState, app.files, app.getName());\n\n      return {\n        captureUpdate: CaptureUpdateAction.EVENTUALLY,\n        appState: {\n          ...appState,\n          fileHandle,\n          toast: fileHandleExists\n            ? {\n                message: fileHandle?.name\n                  ? t(\"toast.fileSavedToFilename\").replace(\n                      \"{filename}\",\n                      `\"${fileHandle.name}\"`,\n                    )\n                  : t(\"toast.fileSaved\"),\n              }\n            : null,\n        },\n      };\n    } catch (error: any) {\n      if (error?.name !== \"AbortError\") {\n        console.error(error);\n      } else {\n        console.warn(error);\n      }\n      return { captureUpdate: CaptureUpdateAction.EVENTUALLY };\n    }\n  },\n  keyTest: (event) =>\n    event.key === KEYS.S && event[KEYS.CTRL_OR_CMD] && !event.shiftKey,\n});\n\nexport const actionSaveFileToDisk = register({\n  name: \"saveFileToDisk\",\n  label: \"exportDialog.disk_title\",\n  icon: ExportIcon,\n  viewMode: true,\n  trackEvent: { category: \"export\" },\n  perform: async (elements, appState, value, app) => {\n    try {\n      const { fileHandle } = await saveAsJSON(\n        elements,\n        {\n          ...appState,\n          fileHandle: null,\n        },\n        app.files,\n        app.getName(),\n      );\n      return {\n        captureUpdate: CaptureUpdateAction.EVENTUALLY,\n        appState: {\n          ...appState,\n          openDialog: null,\n          fileHandle,\n          toast: { message: t(\"toast.fileSaved\") },\n        },\n      };\n    } catch (error: any) {\n      if (error?.name !== \"AbortError\") {\n        console.error(error);\n      } else {\n        console.warn(error);\n      }\n      return { captureUpdate: CaptureUpdateAction.EVENTUALLY };\n    }\n  },\n  keyTest: (event) =>\n    event.key === KEYS.S && event.shiftKey && event[KEYS.CTRL_OR_CMD],\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={saveAs}\n      title={t(\"buttons.saveAs\")}\n      aria-label={t(\"buttons.saveAs\")}\n      showAriaLabel={useDevice().editor.isMobile}\n      hidden={!nativeFileSystemSupported}\n      onClick={() => updateData(null)}\n      data-testid=\"save-as-button\"\n    />\n  ),\n});\n\nexport const actionLoadScene = register({\n  name: \"loadScene\",\n  label: \"buttons.load\",\n  trackEvent: { category: \"export\" },\n  predicate: (elements, appState, props, app) => {\n    return (\n      !!app.props.UIOptions.canvasActions.loadScene && !appState.viewModeEnabled\n    );\n  },\n  perform: async (elements, appState, _, app) => {\n    try {\n      const {\n        elements: loadedElements,\n        appState: loadedAppState,\n        files,\n      } = await loadFromJSON(appState, elements);\n      return {\n        elements: loadedElements,\n        appState: loadedAppState,\n        files,\n        captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n      };\n    } catch (error: any) {\n      if (error?.name === \"AbortError\") {\n        console.warn(error);\n        return false;\n      }\n      return {\n        elements,\n        appState: { ...appState, errorMessage: error.message },\n        files: app.files,\n        captureUpdate: CaptureUpdateAction.EVENTUALLY,\n      };\n    }\n  },\n  keyTest: (event) => event[KEYS.CTRL_OR_CMD] && event.key === KEYS.O,\n});\n\nexport const actionExportWithDarkMode = register({\n  name: \"exportWithDarkMode\",\n  label: \"imageExportDialog.label.darkMode\",\n  trackEvent: { category: \"export\", action: \"toggleTheme\" },\n  perform: (_elements, appState, value) => {\n    return {\n      appState: { ...appState, exportWithDarkMode: value },\n      captureUpdate: CaptureUpdateAction.EVENTUALLY,\n    };\n  },\n  PanelComponent: ({ appState, updateData }) => (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        marginTop: \"-45px\",\n        marginBottom: \"10px\",\n      }}\n    >\n      <DarkModeToggle\n        value={appState.exportWithDarkMode ? THEME.DARK : THEME.LIGHT}\n        onChange={(theme: Theme) => {\n          updateData(theme === THEME.DARK);\n        }}\n        title={t(\"imageExportDialog.label.darkMode\")}\n      />\n    </div>\n  ),\n});\n", "import {\n  isTextElement,\n  isExcalidrawElement,\n  redrawTextBoundingBox,\n} from \"../element\";\nimport { CODES, KEYS } from \"../keys\";\nimport { t } from \"../i18n\";\nimport { register } from \"./register\";\nimport { newElementWith } from \"../element/mutateElement\";\nimport {\n  DEFAULT_FONT_SIZE,\n  DEFAULT_FONT_FAMILY,\n  DEFAULT_TEXT_ALIGN,\n} from \"../constants\";\nimport { getBoundTextElement } from \"../element/textElement\";\nimport {\n  hasBoundTextElement,\n  canApplyRoundnessTypeToElement,\n  getDefaultRoundnessTypeForElement,\n  isFrameLikeElement,\n  isArrowElement,\n} from \"../element/typeChecks\";\nimport { getSelectedElements } from \"../scene\";\nimport type { ExcalidrawTextElement } from \"../element/types\";\nimport { paintIcon } from \"../components/icons\";\nimport { CaptureUpdateAction } from \"../store\";\nimport { getLineHeight } from \"../fonts\";\n\n// `copiedStyles` is exported only for tests.\nexport let copiedStyles: string = \"{}\";\n\nexport const actionCopyStyles = register({\n  name: \"copyStyles\",\n  label: \"labels.copyStyles\",\n  icon: paintIcon,\n  trackEvent: { category: \"element\" },\n  perform: (elements, appState, formData, app) => {\n    const elementsCopied = [];\n    const element = elements.find((el) => appState.selectedElementIds[el.id]);\n    elementsCopied.push(element);\n    if (element && hasBoundTextElement(element)) {\n      const boundTextElement = getBoundTextElement(\n        element,\n        app.scene.getNonDeletedElementsMap(),\n      );\n      elementsCopied.push(boundTextElement);\n    }\n    if (element) {\n      copiedStyles = JSON.stringify(elementsCopied);\n    }\n    return {\n      appState: {\n        ...appState,\n        toast: { message: t(\"toast.copyStyles\") },\n      },\n      captureUpdate: CaptureUpdateAction.EVENTUALLY,\n    };\n  },\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] && event.altKey && event.code === CODES.C,\n});\n\nexport const actionPasteStyles = register({\n  name: \"pasteStyles\",\n  label: \"labels.pasteStyles\",\n  icon: paintIcon,\n  trackEvent: { category: \"element\" },\n  perform: (elements, appState, formData, app) => {\n    const elementsCopied = JSON.parse(copiedStyles);\n    const pastedElement = elementsCopied[0];\n    const boundTextElement = elementsCopied[1];\n    if (!isExcalidrawElement(pastedElement)) {\n      return { elements, captureUpdate: CaptureUpdateAction.EVENTUALLY };\n    }\n\n    const selectedElements = getSelectedElements(elements, appState, {\n      includeBoundTextElement: true,\n    });\n    const selectedElementIds = selectedElements.map((element) => element.id);\n    return {\n      elements: elements.map((element) => {\n        if (selectedElementIds.includes(element.id)) {\n          let elementStylesToCopyFrom = pastedElement;\n          if (isTextElement(element) && element.containerId) {\n            elementStylesToCopyFrom = boundTextElement;\n          }\n          if (!elementStylesToCopyFrom) {\n            return element;\n          }\n          let newElement = newElementWith(element, {\n            backgroundColor: elementStylesToCopyFrom?.backgroundColor,\n            strokeWidth: elementStylesToCopyFrom?.strokeWidth,\n            strokeColor: elementStylesToCopyFrom?.strokeColor,\n            strokeStyle: elementStylesToCopyFrom?.strokeStyle,\n            fillStyle: elementStylesToCopyFrom?.fillStyle,\n            opacity: elementStylesToCopyFrom?.opacity,\n            roughness: elementStylesToCopyFrom?.roughness,\n            roundness: elementStylesToCopyFrom.roundness\n              ? canApplyRoundnessTypeToElement(\n                  elementStylesToCopyFrom.roundness.type,\n                  element,\n                )\n                ? elementStylesToCopyFrom.roundness\n                : getDefaultRoundnessTypeForElement(element)\n              : null,\n          });\n\n          if (isTextElement(newElement)) {\n            const fontSize =\n              (elementStylesToCopyFrom as ExcalidrawTextElement).fontSize ||\n              DEFAULT_FONT_SIZE;\n            const fontFamily =\n              (elementStylesToCopyFrom as ExcalidrawTextElement).fontFamily ||\n              DEFAULT_FONT_FAMILY;\n            newElement = newElementWith(newElement, {\n              fontSize,\n              fontFamily,\n              textAlign:\n                (elementStylesToCopyFrom as ExcalidrawTextElement).textAlign ||\n                DEFAULT_TEXT_ALIGN,\n              lineHeight:\n                (elementStylesToCopyFrom as ExcalidrawTextElement).lineHeight ||\n                getLineHeight(fontFamily),\n            });\n            let container = null;\n            if (newElement.containerId) {\n              container =\n                selectedElements.find(\n                  (element) =>\n                    isTextElement(newElement) &&\n                    element.id === newElement.containerId,\n                ) || null;\n            }\n            redrawTextBoundingBox(\n              newElement,\n              container,\n              app.scene.getNonDeletedElementsMap(),\n            );\n          }\n\n          if (\n            newElement.type === \"arrow\" &&\n            isArrowElement(elementStylesToCopyFrom)\n          ) {\n            newElement = newElementWith(newElement, {\n              startArrowhead: elementStylesToCopyFrom.startArrowhead,\n              endArrowhead: elementStylesToCopyFrom.endArrowhead,\n            });\n          }\n\n          if (isFrameLikeElement(element)) {\n            newElement = newElementWith(newElement, {\n              roundness: null,\n              backgroundColor: \"transparent\",\n            });\n          }\n\n          return newElement;\n        }\n        return element;\n      }),\n      captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n    };\n  },\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] && event.altKey && event.code === CODES.V,\n});\n", "import { HamburgerMenuIcon, HelpIconThin, palette } from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { t } from \"../i18n\";\nimport { showSelectedShapeActions, getNonDeletedElements } from \"../element\";\nimport { register } from \"./register\";\nimport { KEYS } from \"../keys\";\nimport { CaptureUpdateAction } from \"../store\";\n\nexport const actionToggleCanvasMenu = register({\n  name: \"toggleCanvasMenu\",\n  label: \"buttons.menu\",\n  trackEvent: { category: \"menu\" },\n  perform: (_, appState) => ({\n    appState: {\n      ...appState,\n      openMenu: appState.openMenu === \"canvas\" ? null : \"canvas\",\n    },\n    captureUpdate: CaptureUpdateAction.EVENTUALLY,\n  }),\n  PanelComponent: ({ appState, updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={HamburgerMenuIcon}\n      aria-label={t(\"buttons.menu\")}\n      onClick={updateData}\n      selected={appState.openMenu === \"canvas\"}\n    />\n  ),\n});\n\nexport const actionToggleEditMenu = register({\n  name: \"toggleEditMenu\",\n  label: \"buttons.edit\",\n  trackEvent: { category: \"menu\" },\n  perform: (_elements, appState) => ({\n    appState: {\n      ...appState,\n      openMenu: appState.openMenu === \"shape\" ? null : \"shape\",\n    },\n    captureUpdate: CaptureUpdateAction.EVENTUALLY,\n  }),\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      visible={showSelectedShapeActions(\n        appState,\n        getNonDeletedElements(elements),\n      )}\n      type=\"button\"\n      icon={palette}\n      aria-label={t(\"buttons.edit\")}\n      onClick={updateData}\n      selected={appState.openMenu === \"shape\"}\n    />\n  ),\n});\n\nexport const actionShortcuts = register({\n  name: \"toggleShortcuts\",\n  label: \"welcomeScreen.defaults.helpHint\",\n  icon: HelpIconThin,\n  viewMode: true,\n  trackEvent: { category: \"menu\", action: \"toggleHelpDialog\" },\n  perform: (_elements, appState, _, { focusContainer }) => {\n    if (appState.openDialog?.name === \"help\") {\n      focusContainer();\n    }\n    return {\n      appState: {\n        ...appState,\n        openDialog:\n          appState.openDialog?.name === \"help\"\n            ? null\n            : {\n                name: \"help\",\n              },\n      },\n      captureUpdate: CaptureUpdateAction.EVENTUALLY,\n    };\n  },\n  keyTest: (event) => event.key === KEYS.QUESTION_MARK,\n});\n", "import { KEYS } from \"../keys\";\nimport { t } from \"../i18n\";\nimport { arrayToMap, getShortcutKey } from \"../utils\";\nimport { register } from \"./register\";\nimport { UngroupIcon, GroupIcon } from \"../components/icons\";\nimport { newElementWith } from \"../element/mutateElement\";\nimport { isSomeElementSelected } from \"../scene\";\nimport {\n  getSelectedGroupIds,\n  selectGroup,\n  selectGroupsForSelectedElements,\n  getElementsInGroup,\n  addToGroup,\n  removeFromSelectedGroups,\n  isElementInGroup,\n} from \"../groups\";\nimport { getNonDeletedElements } from \"../element\";\nimport { randomId } from \"../random\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport type {\n  ExcalidrawElement,\n  ExcalidrawTextElement,\n  OrderedExcalidrawElement,\n} from \"../element/types\";\nimport type { AppClassProperties, AppState } from \"../types\";\nimport { isBoundToContainer } from \"../element/typeChecks\";\nimport {\n  frameAndChildrenSelectedTogether,\n  getElementsInResizingFrame,\n  getFrameLikeElements,\n  getRootElements,\n  groupByFrameLikes,\n  removeElementsFromFrame,\n  replaceAllElementsInFrame,\n} from \"../frame\";\nimport { syncMovedIndices } from \"../fractionalIndex\";\nimport { CaptureUpdateAction } from \"../store\";\n\nconst allElementsInSameGroup = (elements: readonly ExcalidrawElement[]) => {\n  if (elements.length >= 2) {\n    const groupIds = elements[0].groupIds;\n    for (const groupId of groupIds) {\n      if (\n        elements.reduce(\n          (acc, element) => acc && isElementInGroup(element, groupId),\n          true,\n        )\n      ) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nconst enableActionGroup = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  app: AppClassProperties,\n) => {\n  const selectedElements = app.scene.getSelectedElements({\n    selectedElementIds: appState.selectedElementIds,\n    includeBoundTextElement: true,\n  });\n\n  return (\n    selectedElements.length >= 2 &&\n    !allElementsInSameGroup(selectedElements) &&\n    !frameAndChildrenSelectedTogether(selectedElements)\n  );\n};\n\nexport const actionGroup = register({\n  name: \"group\",\n  label: \"labels.group\",\n  icon: (appState) => <GroupIcon theme={appState.theme} />,\n  trackEvent: { category: \"element\" },\n  perform: (elements, appState, _, app) => {\n    const selectedElements = getRootElements(\n      app.scene.getSelectedElements({\n        selectedElementIds: appState.selectedElementIds,\n        includeBoundTextElement: true,\n      }),\n    );\n    if (selectedElements.length < 2) {\n      // nothing to group\n      return {\n        appState,\n        elements,\n        captureUpdate: CaptureUpdateAction.EVENTUALLY,\n      };\n    }\n    // if everything is already grouped into 1 group, there is nothing to do\n    const selectedGroupIds = getSelectedGroupIds(appState);\n    if (selectedGroupIds.length === 1) {\n      const selectedGroupId = selectedGroupIds[0];\n      const elementIdsInGroup = new Set(\n        getElementsInGroup(elements, selectedGroupId).map(\n          (element) => element.id,\n        ),\n      );\n      const selectedElementIds = new Set(\n        selectedElements.map((element) => element.id),\n      );\n      const combinedSet = new Set([\n        ...Array.from(elementIdsInGroup),\n        ...Array.from(selectedElementIds),\n      ]);\n      if (combinedSet.size === elementIdsInGroup.size) {\n        // no incremental ids in the selected ids\n        return {\n          appState,\n          elements,\n          captureUpdate: CaptureUpdateAction.EVENTUALLY,\n        };\n      }\n    }\n\n    let nextElements = [...elements];\n\n    // this includes the case where we are grouping elements inside a frame\n    // and elements outside that frame\n    const groupingElementsFromDifferentFrames =\n      new Set(selectedElements.map((element) => element.frameId)).size > 1;\n    // when it happens, we want to remove elements that are in the frame\n    // and are going to be grouped from the frame (mouthful, I know)\n    if (groupingElementsFromDifferentFrames) {\n      const frameElementsMap = groupByFrameLikes(selectedElements);\n\n      frameElementsMap.forEach((elementsInFrame, frameId) => {\n        removeElementsFromFrame(\n          elementsInFrame,\n          app.scene.getNonDeletedElementsMap(),\n        );\n      });\n    }\n\n    const newGroupId = randomId();\n    const selectElementIds = arrayToMap(selectedElements);\n\n    nextElements = nextElements.map((element) => {\n      if (!selectElementIds.get(element.id)) {\n        return element;\n      }\n      return newElementWith(element, {\n        groupIds: addToGroup(\n          element.groupIds,\n          newGroupId,\n          appState.editingGroupId,\n        ),\n      });\n    });\n    // keep the z order within the group the same, but move them\n    // to the z order of the highest element in the layer stack\n    const elementsInGroup = getElementsInGroup(nextElements, newGroupId);\n    const lastElementInGroup = elementsInGroup[elementsInGroup.length - 1];\n    const lastGroupElementIndex = nextElements.lastIndexOf(\n      lastElementInGroup as OrderedExcalidrawElement,\n    );\n    const elementsAfterGroup = nextElements.slice(lastGroupElementIndex + 1);\n    const elementsBeforeGroup = nextElements\n      .slice(0, lastGroupElementIndex)\n      .filter(\n        (updatedElement) => !isElementInGroup(updatedElement, newGroupId),\n      );\n    const reorderedElements = syncMovedIndices(\n      [...elementsBeforeGroup, ...elementsInGroup, ...elementsAfterGroup],\n      arrayToMap(elementsInGroup),\n    );\n\n    return {\n      appState: {\n        ...appState,\n        ...selectGroup(\n          newGroupId,\n          { ...appState, selectedGroupIds: {} },\n          getNonDeletedElements(nextElements),\n        ),\n      },\n      elements: reorderedElements,\n      captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n    };\n  },\n  predicate: (elements, appState, _, app) =>\n    enableActionGroup(elements, appState, app),\n  keyTest: (event) =>\n    !event.shiftKey && event[KEYS.CTRL_OR_CMD] && event.key === KEYS.G,\n  PanelComponent: ({ elements, appState, updateData, app }) => (\n    <ToolButton\n      hidden={!enableActionGroup(elements, appState, app)}\n      type=\"button\"\n      icon={<GroupIcon theme={appState.theme} />}\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.group\")} \u2014 ${getShortcutKey(\"CtrlOrCmd+G\")}`}\n      aria-label={t(\"labels.group\")}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    ></ToolButton>\n  ),\n});\n\nexport const actionUngroup = register({\n  name: \"ungroup\",\n  label: \"labels.ungroup\",\n  icon: (appState) => <UngroupIcon theme={appState.theme} />,\n  trackEvent: { category: \"element\" },\n  perform: (elements, appState, _, app) => {\n    const groupIds = getSelectedGroupIds(appState);\n    const elementsMap = arrayToMap(elements);\n\n    if (groupIds.length === 0) {\n      return {\n        appState,\n        elements,\n        captureUpdate: CaptureUpdateAction.EVENTUALLY,\n      };\n    }\n\n    let nextElements = [...elements];\n\n    const boundTextElementIds: ExcalidrawTextElement[\"id\"][] = [];\n    nextElements = nextElements.map((element) => {\n      if (isBoundToContainer(element)) {\n        boundTextElementIds.push(element.id);\n      }\n      const nextGroupIds = removeFromSelectedGroups(\n        element.groupIds,\n        appState.selectedGroupIds,\n      );\n      if (nextGroupIds.length === element.groupIds.length) {\n        return element;\n      }\n      return newElementWith(element, {\n        groupIds: nextGroupIds,\n      });\n    });\n\n    const updateAppState = selectGroupsForSelectedElements(\n      appState,\n      getNonDeletedElements(nextElements),\n      appState,\n      null,\n    );\n\n    const selectedElements = app.scene.getSelectedElements(appState);\n\n    const selectedElementFrameIds = new Set(\n      selectedElements\n        .filter((element) => element.frameId)\n        .map((element) => element.frameId!),\n    );\n\n    const targetFrames = getFrameLikeElements(elements).filter((frame) =>\n      selectedElementFrameIds.has(frame.id),\n    );\n\n    targetFrames.forEach((frame) => {\n      if (frame) {\n        nextElements = replaceAllElementsInFrame(\n          nextElements,\n          getElementsInResizingFrame(\n            nextElements,\n            frame,\n            appState,\n            elementsMap,\n          ),\n          frame,\n          app,\n        );\n      }\n    });\n\n    // remove binded text elements from selection\n    updateAppState.selectedElementIds = Object.entries(\n      updateAppState.selectedElementIds,\n    ).reduce(\n      (acc: { [key: ExcalidrawElement[\"id\"]]: true }, [id, selected]) => {\n        if (selected && !boundTextElementIds.includes(id)) {\n          acc[id] = true;\n        }\n        return acc;\n      },\n      {},\n    );\n\n    return {\n      appState: { ...appState, ...updateAppState },\n      elements: nextElements,\n      captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n    };\n  },\n  keyTest: (event) =>\n    event.shiftKey &&\n    event[KEYS.CTRL_OR_CMD] &&\n    event.key === KEYS.G.toUpperCase(),\n  predicate: (elements, appState) => getSelectedGroupIds(appState).length > 0,\n\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      type=\"button\"\n      hidden={getSelectedGroupIds(appState).length === 0}\n      icon={<UngroupIcon theme={appState.theme} />}\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.ungroup\")} \u2014 ${getShortcutKey(\"CtrlOrCmd+Shift+G\")}`}\n      aria-label={t(\"labels.ungroup\")}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    ></ToolButton>\n  ),\n});\n", "/**\n * https://stackoverflow.com/a/3368118\n * Draws a rounded rectangle using the current state of the canvas.\n * @param {CanvasRenderingContext2D} context\n * @param {Number} x The top left x coordinate\n * @param {Number} y The top left y coordinate\n * @param {Number} width The width of the rectangle\n * @param {Number} height The height of the rectangle\n * @param {Number} radius The corner radius\n */\nexport const roundRect = (\n  context: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  radius: number,\n  strokeColor?: string,\n) => {\n  context.beginPath();\n  context.moveTo(x + radius, y);\n  context.lineTo(x + width - radius, y);\n  context.quadraticCurveTo(x + width, y, x + width, y + radius);\n  context.lineTo(x + width, y + height - radius);\n  context.quadraticCurveTo(\n    x + width,\n    y + height,\n    x + width - radius,\n    y + height,\n  );\n  context.lineTo(x + radius, y + height);\n  context.quadraticCurveTo(x, y + height, x, y + height - radius);\n  context.lineTo(x, y + radius);\n  context.quadraticCurveTo(x, y, x + radius, y);\n  context.closePath();\n  context.fill();\n  if (strokeColor) {\n    context.strokeStyle = strokeColor;\n  }\n  context.stroke();\n};\n", "import {\n  COLOR_CHARCOAL_BLACK,\n  COLOR_VOICE_CALL,\n  COLOR_WHITE,\n  THEME,\n  UserIdleState,\n} from \"./constants\";\nimport { roundRect } from \"./renderer/roundRect\";\nimport type { InteractiveCanvasRenderConfig } from \"./scene/types\";\nimport type {\n  Collaborator,\n  InteractiveCanvasAppState,\n  SocketId,\n} from \"./types\";\n\nfunction hashToInteger(id: string) {\n  let hash = 0;\n  if (id.length === 0) {\n    return hash;\n  }\n  for (let i = 0; i < id.length; i++) {\n    const char = id.charCodeAt(i);\n    hash = (hash << 5) - hash + char;\n  }\n  return hash;\n}\n\nexport const getClientColor = (\n  socketId: SocketId,\n  collaborator: Collaborator | undefined,\n) => {\n  // to get more even distribution in case `id` is not uniformly distributed to\n  // begin with, we hash it\n  const hash = Math.abs(hashToInteger(collaborator?.id || socketId));\n  // we want to get a multiple of 10 number in the range of 0-360 (in other\n  // words a hue value of step size 10). There are 37 such values including 0.\n  const hue = (hash % 37) * 10;\n  const saturation = 100;\n  const lightness = 83;\n\n  return `hsl(${hue}, ${saturation}%, ${lightness}%)`;\n};\n\n/**\n * returns first char, capitalized\n */\nexport const getNameInitial = (name?: string | null) => {\n  // first char can be a surrogate pair, hence using codePointAt\n  const firstCodePoint = name?.trim()?.codePointAt(0);\n  return (\n    firstCodePoint ? String.fromCodePoint(firstCodePoint) : \"?\"\n  ).toUpperCase();\n};\n\nexport const renderRemoteCursors = ({\n  context,\n  renderConfig,\n  appState,\n  normalizedWidth,\n  normalizedHeight,\n}: {\n  context: CanvasRenderingContext2D;\n  renderConfig: InteractiveCanvasRenderConfig;\n  appState: InteractiveCanvasAppState;\n  normalizedWidth: number;\n  normalizedHeight: number;\n}) => {\n  // Paint remote pointers\n  for (const [socketId, pointer] of renderConfig.remotePointerViewportCoords) {\n    let { x, y } = pointer;\n\n    const collaborator = appState.collaborators.get(socketId);\n\n    x -= appState.offsetLeft;\n    y -= appState.offsetTop;\n\n    const width = 11;\n    const height = 14;\n\n    const isOutOfBounds =\n      x < 0 ||\n      x > normalizedWidth - width ||\n      y < 0 ||\n      y > normalizedHeight - height;\n\n    x = Math.max(x, 0);\n    x = Math.min(x, normalizedWidth - width);\n    y = Math.max(y, 0);\n    y = Math.min(y, normalizedHeight - height);\n\n    const background = getClientColor(socketId, collaborator);\n\n    context.save();\n    context.strokeStyle = background;\n    context.fillStyle = background;\n\n    const userState = renderConfig.remotePointerUserStates.get(socketId);\n    const isInactive =\n      isOutOfBounds ||\n      userState === UserIdleState.IDLE ||\n      userState === UserIdleState.AWAY;\n\n    if (isInactive) {\n      context.globalAlpha = 0.3;\n    }\n\n    if (renderConfig.remotePointerButton.get(socketId) === \"down\") {\n      context.beginPath();\n      context.arc(x, y, 15, 0, 2 * Math.PI, false);\n      context.lineWidth = 3;\n      context.strokeStyle = \"#ffffff88\";\n      context.stroke();\n      context.closePath();\n\n      context.beginPath();\n      context.arc(x, y, 15, 0, 2 * Math.PI, false);\n      context.lineWidth = 1;\n      context.strokeStyle = background;\n      context.stroke();\n      context.closePath();\n    }\n\n    // TODO remove the dark theme color after we stop inverting canvas colors\n    const IS_SPEAKING_COLOR =\n      appState.theme === THEME.DARK ? \"#2f6330\" : COLOR_VOICE_CALL;\n\n    const isSpeaking = collaborator?.isSpeaking;\n\n    if (isSpeaking) {\n      // cursor outline for currently speaking user\n      context.fillStyle = IS_SPEAKING_COLOR;\n      context.strokeStyle = IS_SPEAKING_COLOR;\n      context.lineWidth = 10;\n      context.lineJoin = \"round\";\n      context.beginPath();\n      context.moveTo(x, y);\n      context.lineTo(x + 0, y + 14);\n      context.lineTo(x + 4, y + 9);\n      context.lineTo(x + 11, y + 8);\n      context.closePath();\n      context.stroke();\n      context.fill();\n    }\n\n    // Background (white outline) for arrow\n    context.fillStyle = COLOR_WHITE;\n    context.strokeStyle = COLOR_WHITE;\n    context.lineWidth = 6;\n    context.lineJoin = \"round\";\n    context.beginPath();\n    context.moveTo(x, y);\n    context.lineTo(x + 0, y + 14);\n    context.lineTo(x + 4, y + 9);\n    context.lineTo(x + 11, y + 8);\n    context.closePath();\n    context.stroke();\n    context.fill();\n\n    // Arrow\n    context.fillStyle = background;\n    context.strokeStyle = background;\n    context.lineWidth = 2;\n    context.lineJoin = \"round\";\n    context.beginPath();\n    if (isInactive) {\n      context.moveTo(x - 1, y - 1);\n      context.lineTo(x - 1, y + 15);\n      context.lineTo(x + 5, y + 10);\n      context.lineTo(x + 12, y + 9);\n      context.closePath();\n      context.fill();\n    } else {\n      context.moveTo(x, y);\n      context.lineTo(x + 0, y + 14);\n      context.lineTo(x + 4, y + 9);\n      context.lineTo(x + 11, y + 8);\n      context.closePath();\n      context.fill();\n      context.stroke();\n    }\n\n    const username = renderConfig.remotePointerUsernames.get(socketId) || \"\";\n\n    if (!isOutOfBounds && username) {\n      context.font = \"600 12px sans-serif\"; // font has to be set before context.measureText()\n\n      const offsetX = (isSpeaking ? x + 0 : x) + width / 2;\n      const offsetY = (isSpeaking ? y + 0 : y) + height + 2;\n      const paddingHorizontal = 5;\n      const paddingVertical = 3;\n      const measure = context.measureText(username);\n      const measureHeight =\n        measure.actualBoundingBoxDescent + measure.actualBoundingBoxAscent;\n      const finalHeight = Math.max(measureHeight, 12);\n\n      const boxX = offsetX - 1;\n      const boxY = offsetY - 1;\n      const boxWidth = measure.width + 2 + paddingHorizontal * 2 + 2;\n      const boxHeight = finalHeight + 2 + paddingVertical * 2 + 2;\n      if (context.roundRect) {\n        context.beginPath();\n        context.roundRect(boxX, boxY, boxWidth, boxHeight, 8);\n        context.fillStyle = background;\n        context.fill();\n        context.strokeStyle = COLOR_WHITE;\n        context.stroke();\n\n        if (isSpeaking) {\n          context.beginPath();\n          context.roundRect(boxX - 2, boxY - 2, boxWidth + 4, boxHeight + 4, 8);\n          context.strokeStyle = IS_SPEAKING_COLOR;\n          context.stroke();\n        }\n      } else {\n        roundRect(context, boxX, boxY, boxWidth, boxHeight, 8, COLOR_WHITE);\n      }\n      context.fillStyle = COLOR_CHARCOAL_BLACK;\n\n      context.fillText(\n        username,\n        offsetX + paddingHorizontal + 1,\n        offsetY +\n          paddingVertical +\n          measure.actualBoundingBoxAscent +\n          Math.floor((finalHeight - measureHeight) / 2) +\n          2,\n      );\n\n      // draw three vertical bars signalling someone is speaking\n      if (isSpeaking) {\n        context.fillStyle = IS_SPEAKING_COLOR;\n        const barheight = 8;\n        const margin = 8;\n        const gap = 5;\n        context.fillRect(\n          boxX + boxWidth + margin,\n          boxY + (boxHeight / 2 - barheight / 2),\n          2,\n          barheight,\n        );\n        context.fillRect(\n          boxX + boxWidth + margin + gap,\n          boxY + (boxHeight / 2 - (barheight * 2) / 2),\n          2,\n          barheight * 2,\n        );\n        context.fillRect(\n          boxX + boxWidth + margin + gap * 2,\n          boxY + (boxHeight / 2 - barheight / 2),\n          2,\n          barheight,\n        );\n      }\n    }\n\n    context.restore();\n    context.closePath();\n  }\n};\n", "import \"./Avatar.scss\";\n\nimport React, { useState } from \"react\";\nimport { getNameInitial } from \"../clients\";\nimport clsx from \"clsx\";\n\ntype AvatarProps = {\n  onClick: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n  color: string;\n  name: string;\n  src?: string;\n  className?: string;\n};\n\nexport const Avatar = ({\n  color,\n  onClick,\n  name,\n  src,\n  className,\n}: AvatarProps) => {\n  const shortName = getNameInitial(name);\n  const [error, setError] = useState(false);\n  const loadImg = !error && src;\n  const style = loadImg ? undefined : { background: color };\n  return (\n    <div className={clsx(\"Avatar\", className)} style={style} onClick={onClick}>\n      {loadImg ? (\n        <img\n          className=\"Avatar-img\"\n          src={src}\n          alt={shortName}\n          referrerPolicy=\"no-referrer\"\n          onError={() => setError(true)}\n        />\n      ) : (\n        shortName\n      )}\n    </div>\n  );\n};\n", "import { getClientColor } from \"../clients\";\nimport { Avatar } from \"../components/Avatar\";\nimport type { GoToCollaboratorComponentProps } from \"../components/UserList\";\nimport {\n  eyeIcon,\n  microphoneIcon,\n  microphoneMutedIcon,\n} from \"../components/icons\";\nimport { t } from \"../i18n\";\nimport { CaptureUpdateAction } from \"../store\";\nimport type { Collaborator } from \"../types\";\nimport { register } from \"./register\";\nimport clsx from \"clsx\";\n\nexport const actionGoToCollaborator = register({\n  name: \"goToCollaborator\",\n  label: \"Go to a collaborator\",\n  viewMode: true,\n  trackEvent: { category: \"collab\" },\n  perform: (_elements, appState, collaborator: Collaborator) => {\n    if (\n      !collaborator.socketId ||\n      appState.userToFollow?.socketId === collaborator.socketId ||\n      collaborator.isCurrentUser\n    ) {\n      return {\n        appState: {\n          ...appState,\n          userToFollow: null,\n        },\n        captureUpdate: CaptureUpdateAction.EVENTUALLY,\n      };\n    }\n\n    return {\n      appState: {\n        ...appState,\n        userToFollow: {\n          socketId: collaborator.socketId,\n          username: collaborator.username || \"\",\n        },\n        // Close mobile menu\n        openMenu: appState.openMenu === \"canvas\" ? null : appState.openMenu,\n      },\n      captureUpdate: CaptureUpdateAction.EVENTUALLY,\n    };\n  },\n  PanelComponent: ({ updateData, data, appState }) => {\n    const { socketId, collaborator, withName, isBeingFollowed } =\n      data as GoToCollaboratorComponentProps;\n\n    const background = getClientColor(socketId, collaborator);\n\n    const statusClassNames = clsx({\n      \"is-followed\": isBeingFollowed,\n      \"is-current-user\": collaborator.isCurrentUser === true,\n      \"is-speaking\": collaborator.isSpeaking,\n      \"is-in-call\": collaborator.isInCall,\n      \"is-muted\": collaborator.isMuted,\n    });\n\n    const statusIconJSX = collaborator.isInCall ? (\n      collaborator.isSpeaking ? (\n        <div\n          className=\"UserList__collaborator-status-icon-speaking-indicator\"\n          title={t(\"userList.hint.isSpeaking\")}\n        >\n          <div />\n          <div />\n          <div />\n        </div>\n      ) : collaborator.isMuted ? (\n        <div\n          className=\"UserList__collaborator-status-icon-microphone-muted\"\n          title={t(\"userList.hint.micMuted\")}\n        >\n          {microphoneMutedIcon}\n        </div>\n      ) : (\n        <div title={t(\"userList.hint.inCall\")}>{microphoneIcon}</div>\n      )\n    ) : null;\n\n    return withName ? (\n      <div\n        className={`dropdown-menu-item dropdown-menu-item-base UserList__collaborator ${statusClassNames}`}\n        style={{ [`--avatar-size` as any]: \"1.5rem\" }}\n        onClick={() => updateData<Collaborator>(collaborator)}\n      >\n        <Avatar\n          color={background}\n          onClick={() => {}}\n          name={collaborator.username || \"\"}\n          src={collaborator.avatarUrl}\n          className={statusClassNames}\n        />\n        <div className=\"UserList__collaborator-name\">\n          {collaborator.username}\n        </div>\n        <div className=\"UserList__collaborator-status-icons\" aria-hidden>\n          {isBeingFollowed && (\n            <div\n              className=\"UserList__collaborator-status-icon-is-followed\"\n              title={t(\"userList.hint.followStatus\")}\n            >\n              {eyeIcon}\n            </div>\n          )}\n          {statusIconJSX}\n        </div>\n      </div>\n    ) : (\n      <div\n        className={`UserList__collaborator UserList__collaborator--avatar-only ${statusClassNames}`}\n      >\n        <Avatar\n          color={background}\n          onClick={() => {\n            updateData(collaborator);\n          }}\n          name={collaborator.username || \"\"}\n          src={collaborator.avatarUrl}\n          className={statusClassNames}\n        />\n        {statusIconJSX && (\n          <div className=\"UserList__collaborator-status-icon\">\n            {statusIconJSX}\n          </div>\n        )}\n      </div>\n    );\n  },\n});\n", "import { register } from \"./register\";\nimport { deepCopyElement } from \"../element/newElement\";\nimport { randomId } from \"../random\";\nimport { t } from \"../i18n\";\nimport { LIBRARY_DISABLED_TYPES } from \"../constants\";\nimport { CaptureUpdateAction } from \"../store\";\n\nexport const actionAddToLibrary = register({\n  name: \"addToLibrary\",\n  trackEvent: { category: \"element\" },\n  perform: (elements, appState, _, app) => {\n    const selectedElements = app.scene.getSelectedElements({\n      selectedElementIds: appState.selectedElementIds,\n      includeBoundTextElement: true,\n      includeElementsInFrames: true,\n    });\n\n    for (const type of LIBRARY_DISABLED_TYPES) {\n      if (selectedElements.some((element) => element.type === type)) {\n        return {\n          captureUpdate: CaptureUpdateAction.EVENTUALLY,\n          appState: {\n            ...appState,\n            errorMessage: t(`errors.libraryElementTypeError.${type}`),\n          },\n        };\n      }\n    }\n\n    return app.library\n      .getLatestLibrary()\n      .then((items) => {\n        return app.library.setLibrary([\n          {\n            id: randomId(),\n            status: \"unpublished\",\n            elements: selectedElements.map(deepCopyElement),\n            created: Date.now(),\n          },\n          ...items,\n        ]);\n      })\n      .then(() => {\n        return {\n          captureUpdate: CaptureUpdateAction.EVENTUALLY,\n          appState: {\n            ...appState,\n            toast: { message: t(\"toast.addedToLibrary\") },\n          },\n        };\n      })\n      .catch((error) => {\n        return {\n          captureUpdate: CaptureUpdateAction.EVENTUALLY,\n          appState: {\n            ...appState,\n            errorMessage: error.message,\n          },\n        };\n      });\n  },\n  label: \"labels.addToLibrary\",\n});\n", "import type { ElementsMap, ExcalidrawElement } from \"./element/types\";\nimport { mutateElement } from \"./element/mutateElement\";\nimport type { BoundingBox } from \"./element/bounds\";\nimport { getCommonBoundingBox } from \"./element/bounds\";\nimport { getMaximumGroups } from \"./groups\";\nimport { updateBoundElements } from \"./element/binding\";\nimport type Scene from \"./scene/Scene\";\n\nexport interface Alignment {\n  position: \"start\" | \"center\" | \"end\";\n  axis: \"x\" | \"y\";\n}\n\nexport const alignElements = (\n  selectedElements: ExcalidrawElement[],\n  elementsMap: ElementsMap,\n  alignment: Alignment,\n  scene: Scene,\n): ExcalidrawElement[] => {\n  const groups: ExcalidrawElement[][] = getMaximumGroups(\n    selectedElements,\n    elementsMap,\n  );\n  const selectionBoundingBox = getCommonBoundingBox(selectedElements);\n\n  return groups.flatMap((group) => {\n    const translation = calculateTranslation(\n      group,\n      selectionBoundingBox,\n      alignment,\n    );\n    return group.map((element) => {\n      // update element\n      const updatedEle = mutateElement(element, {\n        x: element.x + translation.x,\n        y: element.y + translation.y,\n      });\n      // update bound elements\n      updateBoundElements(element, scene.getNonDeletedElementsMap(), {\n        simultaneouslyUpdated: group,\n      });\n      return updatedEle;\n    });\n  });\n};\n\nconst calculateTranslation = (\n  group: ExcalidrawElement[],\n  selectionBoundingBox: BoundingBox,\n  { axis, position }: Alignment,\n): { x: number; y: number } => {\n  const groupBoundingBox = getCommonBoundingBox(group);\n\n  const [min, max]: [\"minX\" | \"minY\", \"maxX\" | \"maxY\"] =\n    axis === \"x\" ? [\"minX\", \"maxX\"] : [\"minY\", \"maxY\"];\n\n  const noTranslation = { x: 0, y: 0 };\n  if (position === \"start\") {\n    return {\n      ...noTranslation,\n      [axis]: selectionBoundingBox[min] - groupBoundingBox[min],\n    };\n  } else if (position === \"end\") {\n    return {\n      ...noTranslation,\n      [axis]: selectionBoundingBox[max] - groupBoundingBox[max],\n    };\n  } // else if (position === \"center\") {\n  return {\n    ...noTranslation,\n    [axis]:\n      (selectionBoundingBox[min] + selectionBoundingBox[max]) / 2 -\n      (groupBoundingBox[min] + groupBoundingBox[max]) / 2,\n  };\n};\n", "import type { Alignment } from \"../align\";\nimport { alignElements } from \"../align\";\nimport {\n  AlignBottomIcon,\n  AlignLeftIcon,\n  AlignRightIcon,\n  AlignTopIcon,\n  CenterHorizontallyIcon,\n  CenterVerticallyIcon,\n} from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { getNonDeletedElements } from \"../element\";\nimport { isFrameLikeElement } from \"../element/typeChecks\";\nimport type { ExcalidrawElement } from \"../element/types\";\nimport { updateFrameMembershipOfSelectedElements } from \"../frame\";\nimport { t } from \"../i18n\";\nimport { KEYS } from \"../keys\";\nimport { isSomeElementSelected } from \"../scene\";\nimport { CaptureUpdateAction } from \"../store\";\nimport type { AppClassProperties, AppState, UIAppState } from \"../types\";\nimport { arrayToMap, getShortcutKey } from \"../utils\";\nimport { register } from \"./register\";\n\nexport const alignActionsPredicate = (\n  appState: UIAppState,\n  app: AppClassProperties,\n) => {\n  const selectedElements = app.scene.getSelectedElements(appState);\n  return (\n    selectedElements.length > 1 &&\n    // TODO enable aligning frames when implemented properly\n    !selectedElements.some((el) => isFrameLikeElement(el))\n  );\n};\n\nconst alignSelectedElements = (\n  elements: readonly ExcalidrawElement[],\n  appState: Readonly<AppState>,\n  app: AppClassProperties,\n  alignment: Alignment,\n) => {\n  const selectedElements = app.scene.getSelectedElements(appState);\n  const elementsMap = arrayToMap(elements);\n\n  const updatedElements = alignElements(\n    selectedElements,\n    elementsMap,\n    alignment,\n    app.scene,\n  );\n\n  const updatedElementsMap = arrayToMap(updatedElements);\n\n  return updateFrameMembershipOfSelectedElements(\n    elements.map((element) => updatedElementsMap.get(element.id) || element),\n    appState,\n    app,\n  );\n};\n\nexport const actionAlignTop = register({\n  name: \"alignTop\",\n  label: \"labels.alignTop\",\n  icon: AlignTopIcon,\n  trackEvent: { category: \"element\" },\n  predicate: (elements, appState, appProps, app) =>\n    alignActionsPredicate(appState, app),\n  perform: (elements, appState, _, app) => {\n    return {\n      appState,\n      elements: alignSelectedElements(elements, appState, app, {\n        position: \"start\",\n        axis: \"y\",\n      }),\n      captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n    };\n  },\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] && event.shiftKey && event.key === KEYS.ARROW_UP,\n  PanelComponent: ({ elements, appState, updateData, app }) => (\n    <ToolButton\n      hidden={!alignActionsPredicate(appState, app)}\n      type=\"button\"\n      icon={AlignTopIcon}\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.alignTop\")} \u2014 ${getShortcutKey(\n        \"CtrlOrCmd+Shift+Up\",\n      )}`}\n      aria-label={t(\"labels.alignTop\")}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n\nexport const actionAlignBottom = register({\n  name: \"alignBottom\",\n  label: \"labels.alignBottom\",\n  icon: AlignBottomIcon,\n  trackEvent: { category: \"element\" },\n  predicate: (elements, appState, appProps, app) =>\n    alignActionsPredicate(appState, app),\n  perform: (elements, appState, _, app) => {\n    return {\n      appState,\n      elements: alignSelectedElements(elements, appState, app, {\n        position: \"end\",\n        axis: \"y\",\n      }),\n      captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n    };\n  },\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] && event.shiftKey && event.key === KEYS.ARROW_DOWN,\n  PanelComponent: ({ elements, appState, updateData, app }) => (\n    <ToolButton\n      hidden={!alignActionsPredicate(appState, app)}\n      type=\"button\"\n      icon={AlignBottomIcon}\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.alignBottom\")} \u2014 ${getShortcutKey(\n        \"CtrlOrCmd+Shift+Down\",\n      )}`}\n      aria-label={t(\"labels.alignBottom\")}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n\nexport const actionAlignLeft = register({\n  name: \"alignLeft\",\n  label: \"labels.alignLeft\",\n  icon: AlignLeftIcon,\n  trackEvent: { category: \"element\" },\n  predicate: (elements, appState, appProps, app) =>\n    alignActionsPredicate(appState, app),\n  perform: (elements, appState, _, app) => {\n    return {\n      appState,\n      elements: alignSelectedElements(elements, appState, app, {\n        position: \"start\",\n        axis: \"x\",\n      }),\n      captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n    };\n  },\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] && event.shiftKey && event.key === KEYS.ARROW_LEFT,\n  PanelComponent: ({ elements, appState, updateData, app }) => (\n    <ToolButton\n      hidden={!alignActionsPredicate(appState, app)}\n      type=\"button\"\n      icon={AlignLeftIcon}\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.alignLeft\")} \u2014 ${getShortcutKey(\n        \"CtrlOrCmd+Shift+Left\",\n      )}`}\n      aria-label={t(\"labels.alignLeft\")}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n\nexport const actionAlignRight = register({\n  name: \"alignRight\",\n  label: \"labels.alignRight\",\n  icon: AlignRightIcon,\n  trackEvent: { category: \"element\" },\n  predicate: (elements, appState, appProps, app) =>\n    alignActionsPredicate(appState, app),\n  perform: (elements, appState, _, app) => {\n    return {\n      appState,\n      elements: alignSelectedElements(elements, appState, app, {\n        position: \"end\",\n        axis: \"x\",\n      }),\n      captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n    };\n  },\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] && event.shiftKey && event.key === KEYS.ARROW_RIGHT,\n  PanelComponent: ({ elements, appState, updateData, app }) => (\n    <ToolButton\n      hidden={!alignActionsPredicate(appState, app)}\n      type=\"button\"\n      icon={AlignRightIcon}\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.alignRight\")} \u2014 ${getShortcutKey(\n        \"CtrlOrCmd+Shift+Right\",\n      )}`}\n      aria-label={t(\"labels.alignRight\")}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n\nexport const actionAlignVerticallyCentered = register({\n  name: \"alignVerticallyCentered\",\n  label: \"labels.centerVertically\",\n  icon: CenterVerticallyIcon,\n  trackEvent: { category: \"element\" },\n  predicate: (elements, appState, appProps, app) =>\n    alignActionsPredicate(appState, app),\n  perform: (elements, appState, _, app) => {\n    return {\n      appState,\n      elements: alignSelectedElements(elements, appState, app, {\n        position: \"center\",\n        axis: \"y\",\n      }),\n      captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData, app }) => (\n    <ToolButton\n      hidden={!alignActionsPredicate(appState, app)}\n      type=\"button\"\n      icon={CenterVerticallyIcon}\n      onClick={() => updateData(null)}\n      title={t(\"labels.centerVertically\")}\n      aria-label={t(\"labels.centerVertically\")}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n\nexport const actionAlignHorizontallyCentered = register({\n  name: \"alignHorizontallyCentered\",\n  label: \"labels.centerHorizontally\",\n  icon: CenterHorizontallyIcon,\n  trackEvent: { category: \"element\" },\n  predicate: (elements, appState, appProps, app) =>\n    alignActionsPredicate(appState, app),\n  perform: (elements, appState, _, app) => {\n    return {\n      appState,\n      elements: alignSelectedElements(elements, appState, app, {\n        position: \"center\",\n        axis: \"x\",\n      }),\n      captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData, app }) => (\n    <ToolButton\n      hidden={!alignActionsPredicate(appState, app)}\n      type=\"button\"\n      icon={CenterHorizontallyIcon}\n      onClick={() => updateData(null)}\n      title={t(\"labels.centerHorizontally\")}\n      aria-label={t(\"labels.centerHorizontally\")}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n", "import { newElementWith } from \"./element/mutateElement\";\nimport { getMaximumGroups } from \"./groups\";\nimport { getCommonBoundingBox } from \"./element/bounds\";\nimport type { ElementsMap, ExcalidrawElement } from \"./element/types\";\n\nexport interface Distribution {\n  space: \"between\";\n  axis: \"x\" | \"y\";\n}\n\nexport const distributeElements = (\n  selectedElements: ExcalidrawElement[],\n  elementsMap: ElementsMap,\n  distribution: Distribution,\n): ExcalidrawElement[] => {\n  const [start, mid, end, extent] =\n    distribution.axis === \"x\"\n      ? ([\"minX\", \"midX\", \"maxX\", \"width\"] as const)\n      : ([\"minY\", \"midY\", \"maxY\", \"height\"] as const);\n\n  const bounds = getCommonBoundingBox(selectedElements);\n  const groups = getMaximumGroups(selectedElements, elementsMap)\n    .map((group) => [group, getCommonBoundingBox(group)] as const)\n    .sort((a, b) => a[1][mid] - b[1][mid]);\n\n  let span = 0;\n  for (const group of groups) {\n    span += group[1][extent];\n  }\n\n  const step = (bounds[extent] - span) / (groups.length - 1);\n\n  if (step < 0) {\n    // If we have a negative step, we'll need to distribute from centers\n    // rather than from gaps. Buckle up, this is a weird one.\n\n    // Get indices of boxes that define start and end of our bounding box\n    const index0 = groups.findIndex((g) => g[1][start] === bounds[start]);\n    const index1 = groups.findIndex((g) => g[1][end] === bounds[end]);\n\n    // Get our step, based on the distance between the center points of our\n    // start and end boxes\n    const step =\n      (groups[index1][1][mid] - groups[index0][1][mid]) / (groups.length - 1);\n\n    let pos = groups[index0][1][mid];\n\n    return groups.flatMap(([group, box], index) => {\n      const translation = {\n        x: 0,\n        y: 0,\n      };\n\n      // Don't move our start and end boxes\n      if (index !== index0 && index !== index1) {\n        pos += step;\n        translation[distribution.axis] = pos - box[mid];\n      }\n\n      return group.map((element) =>\n        newElementWith(element, {\n          x: element.x + translation.x,\n          y: element.y + translation.y,\n        }),\n      );\n    });\n  }\n\n  // Distribute from gaps\n\n  let pos = bounds[start];\n\n  return groups.flatMap(([group, box]) => {\n    const translation = {\n      x: 0,\n      y: 0,\n    };\n\n    translation[distribution.axis] = pos - box[start];\n\n    pos += step;\n    pos += box[extent];\n\n    return group.map((element) =>\n      newElementWith(element, {\n        x: element.x + translation.x,\n        y: element.y + translation.y,\n      }),\n    );\n  });\n};\n", "import {\n  DistributeHorizontallyIcon,\n  DistributeVerticallyIcon,\n} from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport type { Distribution } from \"../distribute\";\nimport { distributeElements } from \"../distribute\";\nimport { getNonDeletedElements } from \"../element\";\nimport { isFrameLikeElement } from \"../element/typeChecks\";\nimport type { ExcalidrawElement } from \"../element/types\";\nimport { updateFrameMembershipOfSelectedElements } from \"../frame\";\nimport { t } from \"../i18n\";\nimport { CODES, KEYS } from \"../keys\";\nimport { isSomeElementSelected } from \"../scene\";\nimport { CaptureUpdateAction } from \"../store\";\nimport type { AppClassProperties, AppState } from \"../types\";\nimport { arrayToMap, getShortcutKey } from \"../utils\";\nimport { register } from \"./register\";\n\nconst enableActionGroup = (appState: AppState, app: AppClassProperties) => {\n  const selectedElements = app.scene.getSelectedElements(appState);\n  return (\n    selectedElements.length > 1 &&\n    // TODO enable distributing frames when implemented properly\n    !selectedElements.some((el) => isFrameLikeElement(el))\n  );\n};\n\nconst distributeSelectedElements = (\n  elements: readonly ExcalidrawElement[],\n  appState: Readonly<AppState>,\n  app: AppClassProperties,\n  distribution: Distribution,\n) => {\n  const selectedElements = app.scene.getSelectedElements(appState);\n\n  const updatedElements = distributeElements(\n    selectedElements,\n    app.scene.getNonDeletedElementsMap(),\n    distribution,\n  );\n\n  const updatedElementsMap = arrayToMap(updatedElements);\n\n  return updateFrameMembershipOfSelectedElements(\n    elements.map((element) => updatedElementsMap.get(element.id) || element),\n    appState,\n    app,\n  );\n};\n\nexport const distributeHorizontally = register({\n  name: \"distributeHorizontally\",\n  label: \"labels.distributeHorizontally\",\n  trackEvent: { category: \"element\" },\n  perform: (elements, appState, _, app) => {\n    return {\n      appState,\n      elements: distributeSelectedElements(elements, appState, app, {\n        space: \"between\",\n        axis: \"x\",\n      }),\n      captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n    };\n  },\n  keyTest: (event) =>\n    !event[KEYS.CTRL_OR_CMD] && event.altKey && event.code === CODES.H,\n  PanelComponent: ({ elements, appState, updateData, app }) => (\n    <ToolButton\n      hidden={!enableActionGroup(appState, app)}\n      type=\"button\"\n      icon={DistributeHorizontallyIcon}\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.distributeHorizontally\")} \u2014 ${getShortcutKey(\n        \"Alt+H\",\n      )}`}\n      aria-label={t(\"labels.distributeHorizontally\")}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n\nexport const distributeVertically = register({\n  name: \"distributeVertically\",\n  label: \"labels.distributeVertically\",\n  trackEvent: { category: \"element\" },\n  perform: (elements, appState, _, app) => {\n    return {\n      appState,\n      elements: distributeSelectedElements(elements, appState, app, {\n        space: \"between\",\n        axis: \"y\",\n      }),\n      captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n    };\n  },\n  keyTest: (event) =>\n    !event[KEYS.CTRL_OR_CMD] && event.altKey && event.code === CODES.V,\n  PanelComponent: ({ elements, appState, updateData, app }) => (\n    <ToolButton\n      hidden={!enableActionGroup(appState, app)}\n      type=\"button\"\n      icon={DistributeVerticallyIcon}\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.distributeVertically\")} \u2014 ${getShortcutKey(\"Alt+V\")}`}\n      aria-label={t(\"labels.distributeVertically\")}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n", "import { register } from \"./register\";\nimport { getSelectedElements } from \"../scene\";\nimport { getNonDeletedElements } from \"../element\";\nimport type {\n  ExcalidrawArrowElement,\n  ExcalidrawElbowArrowElement,\n  ExcalidrawElement,\n  NonDeleted,\n  NonDeletedSceneElementsMap,\n} from \"../element/types\";\nimport { resizeMultipleElements } from \"../element/resizeElements\";\nimport type { AppClassProperties, AppState } from \"../types\";\nimport { arrayToMap } from \"../utils\";\nimport { CODES, KEYS } from \"../keys\";\nimport {\n  bindOrUnbindLinearElements,\n  isBindingEnabled,\n} from \"../element/binding\";\nimport { updateFrameMembershipOfSelectedElements } from \"../frame\";\nimport { flipHorizontal, flipVertical } from \"../components/icons\";\nimport { CaptureUpdateAction } from \"../store\";\nimport {\n  isArrowElement,\n  isElbowArrow,\n  isLinearElement,\n} from \"../element/typeChecks\";\nimport { mutateElement, newElementWith } from \"../element/mutateElement\";\nimport { deepCopyElement } from \"../element/newElement\";\nimport { getCommonBoundingBox } from \"../element/bounds\";\n\nexport const actionFlipHorizontal = register({\n  name: \"flipHorizontal\",\n  label: \"labels.flipHorizontal\",\n  icon: flipHorizontal,\n  trackEvent: { category: \"element\" },\n  perform: (elements, appState, _, app) => {\n    return {\n      elements: updateFrameMembershipOfSelectedElements(\n        flipSelectedElements(\n          elements,\n          app.scene.getNonDeletedElementsMap(),\n          appState,\n          \"horizontal\",\n          app,\n        ),\n        appState,\n        app,\n      ),\n      appState,\n      captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n    };\n  },\n  keyTest: (event) => event.shiftKey && event.code === CODES.H,\n});\n\nexport const actionFlipVertical = register({\n  name: \"flipVertical\",\n  label: \"labels.flipVertical\",\n  icon: flipVertical,\n  trackEvent: { category: \"element\" },\n  perform: (elements, appState, _, app) => {\n    return {\n      elements: updateFrameMembershipOfSelectedElements(\n        flipSelectedElements(\n          elements,\n          app.scene.getNonDeletedElementsMap(),\n          appState,\n          \"vertical\",\n          app,\n        ),\n        appState,\n        app,\n      ),\n      appState,\n      captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n    };\n  },\n  keyTest: (event) =>\n    event.shiftKey && event.code === CODES.V && !event[KEYS.CTRL_OR_CMD],\n});\n\nconst flipSelectedElements = (\n  elements: readonly ExcalidrawElement[],\n  elementsMap: NonDeletedSceneElementsMap,\n  appState: Readonly<AppState>,\n  flipDirection: \"horizontal\" | \"vertical\",\n  app: AppClassProperties,\n) => {\n  const selectedElements = getSelectedElements(\n    getNonDeletedElements(elements),\n    appState,\n    {\n      includeBoundTextElement: true,\n      includeElementsInFrames: true,\n    },\n  );\n\n  const updatedElements = flipElements(\n    selectedElements,\n    elementsMap,\n    appState,\n    flipDirection,\n    app,\n  );\n\n  const updatedElementsMap = arrayToMap(updatedElements);\n\n  return elements.map(\n    (element) => updatedElementsMap.get(element.id) || element,\n  );\n};\n\nconst flipElements = (\n  selectedElements: NonDeleted<ExcalidrawElement>[],\n  elementsMap: NonDeletedSceneElementsMap,\n  appState: AppState,\n  flipDirection: \"horizontal\" | \"vertical\",\n  app: AppClassProperties,\n): ExcalidrawElement[] => {\n  if (\n    selectedElements.every(\n      (element) =>\n        isArrowElement(element) && (element.startBinding || element.endBinding),\n    )\n  ) {\n    return selectedElements.map((element) => {\n      const _element = element as ExcalidrawArrowElement;\n      return newElementWith(_element, {\n        startArrowhead: _element.endArrowhead,\n        endArrowhead: _element.startArrowhead,\n      });\n    });\n  }\n\n  const { midX, midY } = getCommonBoundingBox(selectedElements);\n\n  resizeMultipleElements(\n    selectedElements,\n    elementsMap,\n    \"nw\",\n    app.scene,\n    new Map(\n      Array.from(elementsMap.values()).map((element) => [\n        element.id,\n        deepCopyElement(element),\n      ]),\n    ),\n    {\n      flipByX: flipDirection === \"horizontal\",\n      flipByY: flipDirection === \"vertical\",\n      shouldResizeFromCenter: true,\n      shouldMaintainAspectRatio: true,\n    },\n  );\n\n  bindOrUnbindLinearElements(\n    selectedElements.filter(isLinearElement),\n    elementsMap,\n    app.scene.getNonDeletedElements(),\n    app.scene,\n    isBindingEnabled(appState),\n    [],\n    appState.zoom,\n  );\n\n  // ---------------------------------------------------------------------------\n  // flipping arrow elements (and potentially other) makes the selection group\n  // \"move\" across the canvas because of how arrows can bump against the \"wall\"\n  // of the selection, so we need to center the group back to the original\n  // position so that repeated flips don't accumulate the offset\n\n  const { elbowArrows, otherElements } = selectedElements.reduce(\n    (\n      acc: {\n        elbowArrows: ExcalidrawElbowArrowElement[];\n        otherElements: ExcalidrawElement[];\n      },\n      element,\n    ) =>\n      isElbowArrow(element)\n        ? { ...acc, elbowArrows: acc.elbowArrows.concat(element) }\n        : { ...acc, otherElements: acc.otherElements.concat(element) },\n    { elbowArrows: [], otherElements: [] },\n  );\n\n  const { midX: newMidX, midY: newMidY } =\n    getCommonBoundingBox(selectedElements);\n  const [diffX, diffY] = [midX - newMidX, midY - newMidY];\n  otherElements.forEach((element) =>\n    mutateElement(element, {\n      x: element.x + diffX,\n      y: element.y + diffY,\n    }),\n  );\n  elbowArrows.forEach((element) =>\n    mutateElement(element, {\n      x: element.x + diffX,\n      y: element.y + diffY,\n    }),\n  );\n  // ---------------------------------------------------------------------------\n\n  return selectedElements;\n};\n", "import { CODES, KEYS } from \"../keys\";\nimport { register } from \"./register\";\nimport {\n  copyTextToSystemClipboard,\n  copyToClipboard,\n  createPasteEvent,\n  probablySupportsClipboardBlob,\n  probablySupportsClipboardWriteText,\n  readSystemClipboard,\n} from \"../clipboard\";\nimport { actionDeleteSelected } from \"./actionDeleteSelected\";\nimport { exportCanvas, prepareElementsForExport } from \"../data/index\";\nimport { getTextFromElements, isTextElement } from \"../element\";\nimport { t } from \"../i18n\";\nimport { isFirefox } from \"../constants\";\nimport { DuplicateIcon, cutIcon, pngIcon, svgIcon } from \"../components/icons\";\nimport { CaptureUpdateAction } from \"../store\";\n\nexport const actionCopy = register({\n  name: \"copy\",\n  label: \"labels.copy\",\n  icon: DuplicateIcon,\n  trackEvent: { category: \"element\" },\n  perform: async (elements, appState, event: ClipboardEvent | null, app) => {\n    const elementsToCopy = app.scene.getSelectedElements({\n      selectedElementIds: appState.selectedElementIds,\n      includeBoundTextElement: true,\n      includeElementsInFrames: true,\n    });\n\n    try {\n      await copyToClipboard(elementsToCopy, app.files, event);\n    } catch (error: any) {\n      return {\n        captureUpdate: CaptureUpdateAction.EVENTUALLY,\n        appState: {\n          ...appState,\n          errorMessage: error.message,\n        },\n      };\n    }\n\n    return {\n      captureUpdate: CaptureUpdateAction.EVENTUALLY,\n    };\n  },\n  // don't supply a shortcut since we handle this conditionally via onCopy event\n  keyTest: undefined,\n});\n\nexport const actionPaste = register({\n  name: \"paste\",\n  label: \"labels.paste\",\n  trackEvent: { category: \"element\" },\n  perform: async (elements, appState, data, app) => {\n    let types;\n    try {\n      types = await readSystemClipboard();\n    } catch (error: any) {\n      if (error.name === \"AbortError\" || error.name === \"NotAllowedError\") {\n        // user probably aborted the action. Though not 100% sure, it's best\n        // to not annoy them with an error message.\n        return false;\n      }\n\n      console.error(`actionPaste ${error.name}: ${error.message}`);\n\n      if (isFirefox) {\n        return {\n          captureUpdate: CaptureUpdateAction.EVENTUALLY,\n          appState: {\n            ...appState,\n            errorMessage: t(\"hints.firefox_clipboard_write\"),\n          },\n        };\n      }\n\n      return {\n        captureUpdate: CaptureUpdateAction.EVENTUALLY,\n        appState: {\n          ...appState,\n          errorMessage: t(\"errors.asyncPasteFailedOnRead\"),\n        },\n      };\n    }\n\n    try {\n      app.pasteFromClipboard(createPasteEvent({ types }));\n    } catch (error: any) {\n      console.error(error);\n      return {\n        captureUpdate: CaptureUpdateAction.EVENTUALLY,\n        appState: {\n          ...appState,\n          errorMessage: t(\"errors.asyncPasteFailedOnParse\"),\n        },\n      };\n    }\n\n    return {\n      captureUpdate: CaptureUpdateAction.EVENTUALLY,\n    };\n  },\n  // don't supply a shortcut since we handle this conditionally via onCopy event\n  keyTest: undefined,\n});\n\nexport const actionCut = register({\n  name: \"cut\",\n  label: \"labels.cut\",\n  icon: cutIcon,\n  trackEvent: { category: \"element\" },\n  perform: (elements, appState, event: ClipboardEvent | null, app) => {\n    actionCopy.perform(elements, appState, event, app);\n    return actionDeleteSelected.perform(elements, appState, null, app);\n  },\n  keyTest: (event) => event[KEYS.CTRL_OR_CMD] && event.key === KEYS.X,\n});\n\nexport const actionCopyAsSvg = register({\n  name: \"copyAsSvg\",\n  label: \"labels.copyAsSvg\",\n  icon: svgIcon,\n  trackEvent: { category: \"element\" },\n  perform: async (elements, appState, _data, app) => {\n    if (!app.canvas) {\n      return {\n        captureUpdate: CaptureUpdateAction.EVENTUALLY,\n      };\n    }\n\n    const { exportedElements, exportingFrame } = prepareElementsForExport(\n      elements,\n      appState,\n      true,\n    );\n\n    try {\n      await exportCanvas(\n        \"clipboard-svg\",\n        exportedElements,\n        appState,\n        app.files,\n        {\n          ...appState,\n          exportingFrame,\n          name: app.getName(),\n        },\n      );\n\n      const selectedElements = app.scene.getSelectedElements({\n        selectedElementIds: appState.selectedElementIds,\n        includeBoundTextElement: true,\n        includeElementsInFrames: true,\n      });\n\n      return {\n        appState: {\n          toast: {\n            message: t(\"toast.copyToClipboardAsSvg\", {\n              exportSelection: selectedElements.length\n                ? t(\"toast.selection\")\n                : t(\"toast.canvas\"),\n              exportColorScheme: appState.exportWithDarkMode\n                ? t(\"buttons.darkMode\")\n                : t(\"buttons.lightMode\"),\n            }),\n          },\n        },\n        captureUpdate: CaptureUpdateAction.EVENTUALLY,\n      };\n    } catch (error: any) {\n      console.error(error);\n      return {\n        appState: {\n          errorMessage: error.message,\n        },\n        captureUpdate: CaptureUpdateAction.EVENTUALLY,\n      };\n    }\n  },\n  predicate: (elements) => {\n    return probablySupportsClipboardWriteText && elements.length > 0;\n  },\n  keywords: [\"svg\", \"clipboard\", \"copy\"],\n});\n\nexport const actionCopyAsPng = register({\n  name: \"copyAsPng\",\n  label: \"labels.copyAsPng\",\n  icon: pngIcon,\n  trackEvent: { category: \"element\" },\n  perform: async (elements, appState, _data, app) => {\n    if (!app.canvas) {\n      return {\n        captureUpdate: CaptureUpdateAction.EVENTUALLY,\n      };\n    }\n    const selectedElements = app.scene.getSelectedElements({\n      selectedElementIds: appState.selectedElementIds,\n      includeBoundTextElement: true,\n      includeElementsInFrames: true,\n    });\n\n    const { exportedElements, exportingFrame } = prepareElementsForExport(\n      elements,\n      appState,\n      true,\n    );\n    try {\n      await exportCanvas(\"clipboard\", exportedElements, appState, app.files, {\n        ...appState,\n        exportingFrame,\n        name: app.getName(),\n      });\n      return {\n        appState: {\n          ...appState,\n          toast: {\n            message: t(\"toast.copyToClipboardAsPng\", {\n              exportSelection: selectedElements.length\n                ? t(\"toast.selection\")\n                : t(\"toast.canvas\"),\n              exportColorScheme: appState.exportWithDarkMode\n                ? t(\"buttons.darkMode\")\n                : t(\"buttons.lightMode\"),\n            }),\n          },\n        },\n        captureUpdate: CaptureUpdateAction.EVENTUALLY,\n      };\n    } catch (error: any) {\n      console.error(error);\n      return {\n        appState: {\n          ...appState,\n          errorMessage: error.message,\n        },\n        captureUpdate: CaptureUpdateAction.EVENTUALLY,\n      };\n    }\n  },\n  predicate: (elements) => {\n    return probablySupportsClipboardBlob && elements.length > 0;\n  },\n  keyTest: (event) => event.code === CODES.C && event.altKey && event.shiftKey,\n  keywords: [\"png\", \"clipboard\", \"copy\"],\n});\n\nexport const copyText = register({\n  name: \"copyText\",\n  label: \"labels.copyText\",\n  trackEvent: { category: \"element\" },\n  perform: (elements, appState, _, app) => {\n    const selectedElements = app.scene.getSelectedElements({\n      selectedElementIds: appState.selectedElementIds,\n      includeBoundTextElement: true,\n    });\n\n    try {\n      copyTextToSystemClipboard(getTextFromElements(selectedElements));\n    } catch (e) {\n      throw new Error(t(\"errors.copyToSystemClipboardFailed\"));\n    }\n    return {\n      captureUpdate: CaptureUpdateAction.EVENTUALLY,\n    };\n  },\n  predicate: (elements, appState, _, app) => {\n    return (\n      probablySupportsClipboardWriteText &&\n      app.scene\n        .getSelectedElements({\n          selectedElementIds: appState.selectedElementIds,\n          includeBoundTextElement: true,\n        })\n        .some(isTextElement)\n    );\n  },\n  keywords: [\"text\", \"clipboard\", \"copy\"],\n});\n", "import { CODES, KEYS } from \"../keys\";\nimport { register } from \"./register\";\nimport type { AppState } from \"../types\";\nimport { gridIcon } from \"../components/icons\";\nimport { CaptureUpdateAction } from \"../store\";\n\nexport const actionToggleGridMode = register({\n  name: \"gridMode\",\n  icon: gridIcon,\n  keywords: [\"snap\"],\n  label: \"labels.toggleGrid\",\n  viewMode: true,\n  trackEvent: {\n    category: \"canvas\",\n    predicate: (appState) => appState.gridModeEnabled,\n  },\n  perform(elements, appState) {\n    return {\n      appState: {\n        ...appState,\n        gridModeEnabled: !this.checked!(appState),\n        objectsSnapModeEnabled: false,\n      },\n      captureUpdate: CaptureUpdateAction.EVENTUALLY,\n    };\n  },\n  checked: (appState: AppState) => appState.gridModeEnabled,\n  predicate: (element, appState, props) => {\n    return props.gridModeEnabled === undefined;\n  },\n  keyTest: (event) => event[KEYS.CTRL_OR_CMD] && event.code === CODES.QUOTE,\n});\n", "import { coffeeIcon } from \"../components/icons\";\nimport { CODES, KEYS } from \"../keys\";\nimport { CaptureUpdateAction } from \"../store\";\nimport { register } from \"./register\";\n\nexport const actionToggleZenMode = register({\n  name: \"zenMode\",\n  label: \"buttons.zenMode\",\n  icon: coffeeIcon,\n  paletteName: \"Toggle zen mode\",\n  viewMode: true,\n  trackEvent: {\n    category: \"canvas\",\n    predicate: (appState) => !appState.zenModeEnabled,\n  },\n  perform(elements, appState) {\n    return {\n      appState: {\n        ...appState,\n        zenModeEnabled: !this.checked!(appState),\n      },\n      captureUpdate: CaptureUpdateAction.EVENTUALLY,\n    };\n  },\n  checked: (appState) => appState.zenModeEnabled,\n  predicate: (elements, appState, appProps) => {\n    return typeof appProps.zenModeEnabled === \"undefined\";\n  },\n  keyTest: (event) =>\n    !event[KEYS.CTRL_OR_CMD] && event.altKey && event.code === CODES.Z,\n});\n", "import { magnetIcon } from \"../components/icons\";\nimport { CODES, KEYS } from \"../keys\";\nimport { CaptureUpdateAction } from \"../store\";\nimport { register } from \"./register\";\n\nexport const actionToggleObjectsSnapMode = register({\n  name: \"objectsSnapMode\",\n  label: \"buttons.objectsSnapMode\",\n  icon: magnetIcon,\n  viewMode: false,\n  trackEvent: {\n    category: \"canvas\",\n    predicate: (appState) => !appState.objectsSnapModeEnabled,\n  },\n  perform(elements, appState) {\n    return {\n      appState: {\n        ...appState,\n        objectsSnapModeEnabled: !this.checked!(appState),\n        gridModeEnabled: false,\n      },\n      captureUpdate: CaptureUpdateAction.EVENTUALLY,\n    };\n  },\n  checked: (appState) => appState.objectsSnapModeEnabled,\n  predicate: (elements, appState, appProps) => {\n    return typeof appProps.objectsSnapModeEnabled === \"undefined\";\n  },\n  keyTest: (event) =>\n    !event[KEYS.CTRL_OR_CMD] && event.altKey && event.code === CODES.S,\n});\n", "import { register } from \"./register\";\nimport { CODES, KEYS } from \"../keys\";\nimport { abacusIcon } from \"../components/icons\";\nimport { CaptureUpdateAction } from \"../store\";\n\nexport const actionToggleStats = register({\n  name: \"stats\",\n  label: \"stats.fullTitle\",\n  icon: abacusIcon,\n  paletteName: \"Toggle stats\",\n  viewMode: true,\n  trackEvent: { category: \"menu\" },\n  keywords: [\"edit\", \"attributes\", \"customize\"],\n  perform(elements, appState) {\n    return {\n      appState: {\n        ...appState,\n        stats: { ...appState.stats, open: !this.checked!(appState) },\n      },\n      captureUpdate: CaptureUpdateAction.EVENTUALLY,\n    };\n  },\n  checked: (appState) => appState.stats.open,\n  keyTest: (event) =>\n    !event[KEYS.CTRL_OR_CMD] && event.altKey && event.code === CODES.SLASH,\n});\n", "import {\n  BOUND_TEXT_PADDING,\n  ROUNDNESS,\n  TEXT_ALIGN,\n  VERTICAL_ALIGN,\n} from \"../constants\";\nimport { isTextElement, newElement } from \"../element\";\nimport { mutateElement } from \"../element/mutateElement\";\nimport {\n  computeBoundTextPosition,\n  computeContainerDimensionForBoundText,\n  getBoundTextElement,\n  redrawTextBoundingBox,\n} from \"../element/textElement\";\nimport {\n  getOriginalContainerHeightFromCache,\n  resetOriginalContainerCache,\n  updateOriginalContainerCache,\n} from \"../element/containerCache\";\nimport {\n  hasBoundTextElement,\n  isTextBindableContainer,\n  isUsingAdaptiveRadius,\n} from \"../element/typeChecks\";\nimport type {\n  ExcalidrawElement,\n  ExcalidrawLinearElement,\n  ExcalidrawTextContainer,\n  ExcalidrawTextElement,\n} from \"../element/types\";\nimport type { AppState } from \"../types\";\nimport type { Mutable } from \"../utility-types\";\nimport { arrayToMap, getFontString } from \"../utils\";\nimport { register } from \"./register\";\nimport { syncMovedIndices } from \"../fractionalIndex\";\nimport { CaptureUpdateAction } from \"../store\";\nimport { measureText } from \"../element/textMeasurements\";\n\nexport const actionUnbindText = register({\n  name: \"unbindText\",\n  label: \"labels.unbindText\",\n  trackEvent: { category: \"element\" },\n  predicate: (elements, appState, _, app) => {\n    const selectedElements = app.scene.getSelectedElements(appState);\n\n    return selectedElements.some((element) => hasBoundTextElement(element));\n  },\n  perform: (elements, appState, _, app) => {\n    const selectedElements = app.scene.getSelectedElements(appState);\n    const elementsMap = app.scene.getNonDeletedElementsMap();\n    selectedElements.forEach((element) => {\n      const boundTextElement = getBoundTextElement(element, elementsMap);\n      if (boundTextElement) {\n        const { width, height } = measureText(\n          boundTextElement.originalText,\n          getFontString(boundTextElement),\n          boundTextElement.lineHeight,\n        );\n        const originalContainerHeight = getOriginalContainerHeightFromCache(\n          element.id,\n        );\n        resetOriginalContainerCache(element.id);\n        const { x, y } = computeBoundTextPosition(\n          element,\n          boundTextElement,\n          elementsMap,\n        );\n        mutateElement(boundTextElement as ExcalidrawTextElement, {\n          containerId: null,\n          width,\n          height,\n          text: boundTextElement.originalText,\n          x,\n          y,\n        });\n        mutateElement(element, {\n          boundElements: element.boundElements?.filter(\n            (ele) => ele.id !== boundTextElement.id,\n          ),\n          height: originalContainerHeight\n            ? originalContainerHeight\n            : element.height,\n        });\n      }\n    });\n    return {\n      elements,\n      appState,\n      captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n    };\n  },\n});\n\nexport const actionBindText = register({\n  name: \"bindText\",\n  label: \"labels.bindText\",\n  trackEvent: { category: \"element\" },\n  predicate: (elements, appState, _, app) => {\n    const selectedElements = app.scene.getSelectedElements(appState);\n\n    if (selectedElements.length === 2) {\n      const textElement =\n        isTextElement(selectedElements[0]) ||\n        isTextElement(selectedElements[1]);\n\n      let bindingContainer;\n      if (isTextBindableContainer(selectedElements[0])) {\n        bindingContainer = selectedElements[0];\n      } else if (isTextBindableContainer(selectedElements[1])) {\n        bindingContainer = selectedElements[1];\n      }\n      if (\n        textElement &&\n        bindingContainer &&\n        getBoundTextElement(\n          bindingContainer,\n          app.scene.getNonDeletedElementsMap(),\n        ) === null\n      ) {\n        return true;\n      }\n    }\n    return false;\n  },\n  perform: (elements, appState, _, app) => {\n    const selectedElements = app.scene.getSelectedElements(appState);\n\n    let textElement: ExcalidrawTextElement;\n    let container: ExcalidrawTextContainer;\n\n    if (\n      isTextElement(selectedElements[0]) &&\n      isTextBindableContainer(selectedElements[1])\n    ) {\n      textElement = selectedElements[0];\n      container = selectedElements[1];\n    } else {\n      textElement = selectedElements[1] as ExcalidrawTextElement;\n      container = selectedElements[0] as ExcalidrawTextContainer;\n    }\n    mutateElement(textElement, {\n      containerId: container.id,\n      verticalAlign: VERTICAL_ALIGN.MIDDLE,\n      textAlign: TEXT_ALIGN.CENTER,\n      autoResize: true,\n    });\n    mutateElement(container, {\n      boundElements: (container.boundElements || []).concat({\n        type: \"text\",\n        id: textElement.id,\n      }),\n    });\n    const originalContainerHeight = container.height;\n    redrawTextBoundingBox(\n      textElement,\n      container,\n      app.scene.getNonDeletedElementsMap(),\n    );\n    // overwritting the cache with original container height so\n    // it can be restored when unbind\n    updateOriginalContainerCache(container.id, originalContainerHeight);\n\n    return {\n      elements: pushTextAboveContainer(elements, container, textElement),\n      appState: { ...appState, selectedElementIds: { [container.id]: true } },\n      captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n    };\n  },\n});\n\nconst pushTextAboveContainer = (\n  elements: readonly ExcalidrawElement[],\n  container: ExcalidrawElement,\n  textElement: ExcalidrawTextElement,\n) => {\n  const updatedElements = elements.slice();\n  const textElementIndex = updatedElements.findIndex(\n    (ele) => ele.id === textElement.id,\n  );\n  updatedElements.splice(textElementIndex, 1);\n\n  const containerIndex = updatedElements.findIndex(\n    (ele) => ele.id === container.id,\n  );\n  updatedElements.splice(containerIndex + 1, 0, textElement);\n  syncMovedIndices(updatedElements, arrayToMap([container, textElement]));\n\n  return updatedElements;\n};\n\nconst pushContainerBelowText = (\n  elements: readonly ExcalidrawElement[],\n  container: ExcalidrawElement,\n  textElement: ExcalidrawTextElement,\n) => {\n  const updatedElements = elements.slice();\n  const containerIndex = updatedElements.findIndex(\n    (ele) => ele.id === container.id,\n  );\n  updatedElements.splice(containerIndex, 1);\n\n  const textElementIndex = updatedElements.findIndex(\n    (ele) => ele.id === textElement.id,\n  );\n  updatedElements.splice(textElementIndex, 0, container);\n  syncMovedIndices(updatedElements, arrayToMap([container, textElement]));\n\n  return updatedElements;\n};\n\nexport const actionWrapTextInContainer = register({\n  name: \"wrapTextInContainer\",\n  label: \"labels.createContainerFromText\",\n  trackEvent: { category: \"element\" },\n  predicate: (elements, appState, _, app) => {\n    const selectedElements = app.scene.getSelectedElements(appState);\n    const areTextElements = selectedElements.every((el) => isTextElement(el));\n    return selectedElements.length > 0 && areTextElements;\n  },\n  perform: (elements, appState, _, app) => {\n    const selectedElements = app.scene.getSelectedElements(appState);\n    let updatedElements: readonly ExcalidrawElement[] = elements.slice();\n    const containerIds: Mutable<AppState[\"selectedElementIds\"]> = {};\n\n    for (const textElement of selectedElements) {\n      if (isTextElement(textElement)) {\n        const container = newElement({\n          type: \"rectangle\",\n          backgroundColor: appState.currentItemBackgroundColor,\n          boundElements: [\n            ...(textElement.boundElements || []),\n            { id: textElement.id, type: \"text\" },\n          ],\n          angle: textElement.angle,\n          fillStyle: appState.currentItemFillStyle,\n          strokeColor: appState.currentItemStrokeColor,\n          roughness: appState.currentItemRoughness,\n          strokeWidth: appState.currentItemStrokeWidth,\n          strokeStyle: appState.currentItemStrokeStyle,\n          roundness:\n            appState.currentItemRoundness === \"round\"\n              ? {\n                  type: isUsingAdaptiveRadius(\"rectangle\")\n                    ? ROUNDNESS.ADAPTIVE_RADIUS\n                    : ROUNDNESS.PROPORTIONAL_RADIUS,\n                }\n              : null,\n          opacity: 100,\n          locked: false,\n          x: textElement.x - BOUND_TEXT_PADDING,\n          y: textElement.y - BOUND_TEXT_PADDING,\n          width: computeContainerDimensionForBoundText(\n            textElement.width,\n            \"rectangle\",\n          ),\n          height: computeContainerDimensionForBoundText(\n            textElement.height,\n            \"rectangle\",\n          ),\n          groupIds: textElement.groupIds,\n          frameId: textElement.frameId,\n        });\n\n        // update bindings\n        if (textElement.boundElements?.length) {\n          const linearElementIds = textElement.boundElements\n            .filter((ele) => ele.type === \"arrow\")\n            .map((el) => el.id);\n          const linearElements = updatedElements.filter((ele) =>\n            linearElementIds.includes(ele.id),\n          ) as ExcalidrawLinearElement[];\n          linearElements.forEach((ele) => {\n            let startBinding = ele.startBinding;\n            let endBinding = ele.endBinding;\n\n            if (startBinding?.elementId === textElement.id) {\n              startBinding = {\n                ...startBinding,\n                elementId: container.id,\n              };\n            }\n\n            if (endBinding?.elementId === textElement.id) {\n              endBinding = { ...endBinding, elementId: container.id };\n            }\n\n            if (startBinding || endBinding) {\n              mutateElement(ele, { startBinding, endBinding }, false);\n            }\n          });\n        }\n\n        mutateElement(\n          textElement,\n          {\n            containerId: container.id,\n            verticalAlign: VERTICAL_ALIGN.MIDDLE,\n            boundElements: null,\n            textAlign: TEXT_ALIGN.CENTER,\n            autoResize: true,\n          },\n          false,\n        );\n        redrawTextBoundingBox(\n          textElement,\n          container,\n          app.scene.getNonDeletedElementsMap(),\n        );\n\n        updatedElements = pushContainerBelowText(\n          [...updatedElements, container],\n          container,\n          textElement,\n        );\n\n        containerIds[container.id] = true;\n      }\n    }\n\n    return {\n      elements: updatedElements,\n      appState: {\n        ...appState,\n        selectedElementIds: containerIds,\n      },\n      captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n    };\n  },\n});\n", "import type { AppState, ExcalidrawProps, UIAppState } from \"../../types\";\nimport {\n  sceneCoordsToViewportCoords,\n  viewportCoordsToSceneCoords,\n  wrapEvent,\n} from \"../../utils\";\nimport { getEmbedLink, embeddableURLValidator } from \"../../element/embeddable\";\nimport { mutateElement } from \"../../element/mutateElement\";\nimport type {\n  ElementsMap,\n  ExcalidrawEmbeddableElement,\n  NonDeletedExcalidrawElement,\n} from \"../../element/types\";\n\nimport { ToolButton } from \"../ToolButton\";\nimport { FreedrawIcon, TrashIcon, elementLinkIcon } from \"../icons\";\nimport { t } from \"../../i18n\";\nimport {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport clsx from \"clsx\";\nimport { KEYS } from \"../../keys\";\nimport { EVENT, HYPERLINK_TOOLTIP_DELAY } from \"../../constants\";\nimport { getElementAbsoluteCoords } from \"../../element/bounds\";\nimport { getTooltipDiv, updateTooltipPosition } from \"../../components/Tooltip\";\nimport { getSelectedElements } from \"../../scene\";\nimport { hitElementBoundingBox } from \"../../element/collision\";\nimport { isLocalLink, normalizeLink } from \"../../data/url\";\nimport { trackEvent } from \"../../analytics\";\nimport { useAppProps, useDevice, useExcalidrawAppState } from \"../App\";\nimport { isEmbeddableElement } from \"../../element/typeChecks\";\nimport { getLinkHandleFromCoords } from \"./helpers\";\nimport { pointFrom, type GlobalPoint } from \"@excalidraw/math\";\nimport { isElementLink } from \"../../element/elementLink\";\n\nimport \"./Hyperlink.scss\";\n\nconst POPUP_WIDTH = 380;\nconst POPUP_HEIGHT = 42;\nconst POPUP_PADDING = 5;\nconst SPACE_BOTTOM = 85;\nconst AUTO_HIDE_TIMEOUT = 500;\n\nlet IS_HYPERLINK_TOOLTIP_VISIBLE = false;\n\nconst embeddableLinkCache = new Map<\n  ExcalidrawEmbeddableElement[\"id\"],\n  string\n>();\n\nexport const Hyperlink = ({\n  element,\n  elementsMap,\n  setAppState,\n  onLinkOpen,\n  setToast,\n  updateEmbedValidationStatus,\n}: {\n  element: NonDeletedExcalidrawElement;\n  elementsMap: ElementsMap;\n  setAppState: React.Component<any, AppState>[\"setState\"];\n  onLinkOpen: ExcalidrawProps[\"onLinkOpen\"];\n  setToast: (\n    toast: { message: string; closable?: boolean; duration?: number } | null,\n  ) => void;\n  updateEmbedValidationStatus: (\n    element: ExcalidrawEmbeddableElement,\n    status: boolean,\n  ) => void;\n}) => {\n  const appState = useExcalidrawAppState();\n  const appProps = useAppProps();\n  const device = useDevice();\n\n  const linkVal = element.link || \"\";\n\n  const [inputVal, setInputVal] = useState(linkVal);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isEditing = appState.showHyperlinkPopup === \"editor\";\n\n  const handleSubmit = useCallback(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    const link = normalizeLink(inputRef.current.value) || null;\n\n    if (!element.link && link) {\n      trackEvent(\"hyperlink\", \"create\");\n    }\n\n    if (isEmbeddableElement(element)) {\n      if (appState.activeEmbeddable?.element === element) {\n        setAppState({ activeEmbeddable: null });\n      }\n      if (!link) {\n        mutateElement(element, {\n          link: null,\n        });\n        updateEmbedValidationStatus(element, false);\n        return;\n      }\n\n      if (!embeddableURLValidator(link, appProps.validateEmbeddable)) {\n        if (link) {\n          setToast({ message: t(\"toast.unableToEmbed\"), closable: true });\n        }\n        element.link && embeddableLinkCache.set(element.id, element.link);\n        mutateElement(element, {\n          link,\n        });\n        updateEmbedValidationStatus(element, false);\n      } else {\n        const { width, height } = element;\n        const embedLink = getEmbedLink(link);\n        if (embedLink?.error instanceof URIError) {\n          setToast({\n            message: t(\"toast.unrecognizedLinkFormat\"),\n            closable: true,\n          });\n        }\n        const ar = embedLink\n          ? embedLink.intrinsicSize.w / embedLink.intrinsicSize.h\n          : 1;\n        const hasLinkChanged =\n          embeddableLinkCache.get(element.id) !== element.link;\n        mutateElement(element, {\n          ...(hasLinkChanged\n            ? {\n                width:\n                  embedLink?.type === \"video\"\n                    ? width > height\n                      ? width\n                      : height * ar\n                    : width,\n                height:\n                  embedLink?.type === \"video\"\n                    ? width > height\n                      ? width / ar\n                      : height\n                    : height,\n              }\n            : {}),\n          link,\n        });\n        updateEmbedValidationStatus(element, true);\n        if (embeddableLinkCache.has(element.id)) {\n          embeddableLinkCache.delete(element.id);\n        }\n      }\n    } else {\n      mutateElement(element, { link });\n    }\n  }, [\n    element,\n    setToast,\n    appProps.validateEmbeddable,\n    appState.activeEmbeddable,\n    setAppState,\n    updateEmbedValidationStatus,\n  ]);\n\n  useLayoutEffect(() => {\n    return () => {\n      handleSubmit();\n    };\n  }, [handleSubmit]);\n\n  useEffect(() => {\n    if (\n      isEditing &&\n      inputRef?.current &&\n      !(device.viewport.isMobile || device.isTouchScreen)\n    ) {\n      inputRef.current.select();\n    }\n  }, [isEditing, device.viewport.isMobile, device.isTouchScreen]);\n\n  useEffect(() => {\n    let timeoutId: number | null = null;\n\n    const handlePointerMove = (event: PointerEvent) => {\n      if (isEditing) {\n        return;\n      }\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      const shouldHide = shouldHideLinkPopup(\n        element,\n        elementsMap,\n        appState,\n        pointFrom(event.clientX, event.clientY),\n      ) as boolean;\n      if (shouldHide) {\n        timeoutId = window.setTimeout(() => {\n          setAppState({ showHyperlinkPopup: false });\n        }, AUTO_HIDE_TIMEOUT);\n      }\n    };\n    window.addEventListener(EVENT.POINTER_MOVE, handlePointerMove, false);\n    return () => {\n      window.removeEventListener(EVENT.POINTER_MOVE, handlePointerMove, false);\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, [appState, element, isEditing, setAppState, elementsMap]);\n\n  const handleRemove = useCallback(() => {\n    trackEvent(\"hyperlink\", \"delete\");\n    mutateElement(element, { link: null });\n    setAppState({ showHyperlinkPopup: false });\n  }, [setAppState, element]);\n\n  const onEdit = () => {\n    trackEvent(\"hyperlink\", \"edit\", \"popup-ui\");\n    setAppState({ showHyperlinkPopup: \"editor\" });\n  };\n  const { x, y } = getCoordsForPopover(element, appState, elementsMap);\n  if (\n    appState.contextMenu ||\n    appState.selectedElementsAreBeingDragged ||\n    appState.resizingElement ||\n    appState.isRotating ||\n    appState.openMenu ||\n    appState.viewModeEnabled\n  ) {\n    return null;\n  }\n\n  return (\n    <div\n      className=\"excalidraw-hyperlinkContainer\"\n      style={{\n        top: `${y}px`,\n        left: `${x}px`,\n        width: POPUP_WIDTH,\n        padding: POPUP_PADDING,\n      }}\n    >\n      {isEditing ? (\n        <input\n          className={clsx(\"excalidraw-hyperlinkContainer-input\")}\n          placeholder={t(\"labels.link.hint\")}\n          ref={inputRef}\n          value={inputVal}\n          onChange={(event) => setInputVal(event.target.value)}\n          autoFocus\n          onKeyDown={(event) => {\n            event.stopPropagation();\n            // prevent cmd/ctrl+k shortcut when editing link\n            if (event[KEYS.CTRL_OR_CMD] && event.key === KEYS.K) {\n              event.preventDefault();\n            }\n            if (event.key === KEYS.ENTER || event.key === KEYS.ESCAPE) {\n              handleSubmit();\n              setAppState({ showHyperlinkPopup: \"info\" });\n            }\n          }}\n        />\n      ) : element.link ? (\n        <a\n          href={normalizeLink(element.link || \"\")}\n          className=\"excalidraw-hyperlinkContainer-link\"\n          target={isLocalLink(element.link) ? \"_self\" : \"_blank\"}\n          onClick={(event) => {\n            if (element.link && onLinkOpen) {\n              const customEvent = wrapEvent(\n                EVENT.EXCALIDRAW_LINK,\n                event.nativeEvent,\n              );\n              onLinkOpen(\n                {\n                  ...element,\n                  link: normalizeLink(element.link),\n                },\n                customEvent,\n              );\n              if (customEvent.defaultPrevented) {\n                event.preventDefault();\n              }\n            }\n          }}\n          rel=\"noopener noreferrer\"\n        >\n          {element.link}\n        </a>\n      ) : (\n        <div className=\"excalidraw-hyperlinkContainer-link\">\n          {t(\"labels.link.empty\")}\n        </div>\n      )}\n      <div className=\"excalidraw-hyperlinkContainer__buttons\">\n        {!isEditing && (\n          <ToolButton\n            type=\"button\"\n            title={t(\"buttons.edit\")}\n            aria-label={t(\"buttons.edit\")}\n            label={t(\"buttons.edit\")}\n            onClick={onEdit}\n            className=\"excalidraw-hyperlinkContainer--edit\"\n            icon={FreedrawIcon}\n          />\n        )}\n        <ToolButton\n          type=\"button\"\n          title={t(\"labels.linkToElement\")}\n          aria-label={t(\"labels.linkToElement\")}\n          label={t(\"labels.linkToElement\")}\n          onClick={() => {\n            setAppState({\n              openDialog: {\n                name: \"elementLinkSelector\",\n                sourceElementId: element.id,\n              },\n            });\n          }}\n          icon={elementLinkIcon}\n        />\n        {linkVal && !isEmbeddableElement(element) && (\n          <ToolButton\n            type=\"button\"\n            title={t(\"buttons.remove\")}\n            aria-label={t(\"buttons.remove\")}\n            label={t(\"buttons.remove\")}\n            onClick={handleRemove}\n            className=\"excalidraw-hyperlinkContainer--remove\"\n            icon={TrashIcon}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst getCoordsForPopover = (\n  element: NonDeletedExcalidrawElement,\n  appState: AppState,\n  elementsMap: ElementsMap,\n) => {\n  const [x1, y1] = getElementAbsoluteCoords(element, elementsMap);\n  const { x: viewportX, y: viewportY } = sceneCoordsToViewportCoords(\n    { sceneX: x1 + element.width / 2, sceneY: y1 },\n    appState,\n  );\n  const x = viewportX - appState.offsetLeft - POPUP_WIDTH / 2;\n  const y = viewportY - appState.offsetTop - SPACE_BOTTOM;\n  return { x, y };\n};\n\nexport const getContextMenuLabel = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: UIAppState,\n) => {\n  const selectedElements = getSelectedElements(elements, appState);\n  const label = isEmbeddableElement(selectedElements[0])\n    ? \"labels.link.editEmbed\"\n    : selectedElements[0]?.link\n    ? \"labels.link.edit\"\n    : \"labels.link.create\";\n  return label;\n};\n\nlet HYPERLINK_TOOLTIP_TIMEOUT_ID: number | null = null;\nexport const showHyperlinkTooltip = (\n  element: NonDeletedExcalidrawElement,\n  appState: AppState,\n  elementsMap: ElementsMap,\n) => {\n  if (HYPERLINK_TOOLTIP_TIMEOUT_ID) {\n    clearTimeout(HYPERLINK_TOOLTIP_TIMEOUT_ID);\n  }\n  HYPERLINK_TOOLTIP_TIMEOUT_ID = window.setTimeout(\n    () => renderTooltip(element, appState, elementsMap),\n    HYPERLINK_TOOLTIP_DELAY,\n  );\n};\n\nconst renderTooltip = (\n  element: NonDeletedExcalidrawElement,\n  appState: AppState,\n  elementsMap: ElementsMap,\n) => {\n  if (!element.link) {\n    return;\n  }\n\n  const tooltipDiv = getTooltipDiv();\n\n  tooltipDiv.classList.add(\"excalidraw-tooltip--visible\");\n  tooltipDiv.style.maxWidth = \"20rem\";\n  tooltipDiv.textContent = isElementLink(element.link)\n    ? t(\"labels.link.goToElement\")\n    : element.link;\n\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element, elementsMap);\n\n  const [linkX, linkY, linkWidth, linkHeight] = getLinkHandleFromCoords(\n    [x1, y1, x2, y2],\n    element.angle,\n    appState,\n  );\n\n  const linkViewportCoords = sceneCoordsToViewportCoords(\n    { sceneX: linkX, sceneY: linkY },\n    appState,\n  );\n\n  updateTooltipPosition(\n    tooltipDiv,\n    {\n      left: linkViewportCoords.x,\n      top: linkViewportCoords.y,\n      width: linkWidth,\n      height: linkHeight,\n    },\n    \"top\",\n  );\n  trackEvent(\"hyperlink\", \"tooltip\", \"link-icon\");\n\n  IS_HYPERLINK_TOOLTIP_VISIBLE = true;\n};\nexport const hideHyperlinkToolip = () => {\n  if (HYPERLINK_TOOLTIP_TIMEOUT_ID) {\n    clearTimeout(HYPERLINK_TOOLTIP_TIMEOUT_ID);\n  }\n  if (IS_HYPERLINK_TOOLTIP_VISIBLE) {\n    IS_HYPERLINK_TOOLTIP_VISIBLE = false;\n    getTooltipDiv().classList.remove(\"excalidraw-tooltip--visible\");\n  }\n};\n\nconst shouldHideLinkPopup = (\n  element: NonDeletedExcalidrawElement,\n  elementsMap: ElementsMap,\n  appState: AppState,\n  [clientX, clientY]: GlobalPoint,\n): Boolean => {\n  const { x: sceneX, y: sceneY } = viewportCoordsToSceneCoords(\n    { clientX, clientY },\n    appState,\n  );\n\n  const threshold = 15 / appState.zoom.value;\n  // hitbox to prevent hiding when hovered in element bounding box\n  if (hitElementBoundingBox(sceneX, sceneY, element, elementsMap)) {\n    return false;\n  }\n  const [x1, y1, x2] = getElementAbsoluteCoords(element, elementsMap);\n  // hit box to prevent hiding when hovered in the vertical area between element and popover\n  if (\n    sceneX >= x1 &&\n    sceneX <= x2 &&\n    sceneY >= y1 - SPACE_BOTTOM &&\n    sceneY <= y1\n  ) {\n    return false;\n  }\n  // hit box to prevent hiding when hovered around popover within threshold\n  const { x: popoverX, y: popoverY } = getCoordsForPopover(\n    element,\n    appState,\n    elementsMap,\n  );\n\n  if (\n    clientX >= popoverX - threshold &&\n    clientX <= popoverX + POPUP_WIDTH + POPUP_PADDING * 2 + threshold &&\n    clientY >= popoverY - threshold &&\n    clientY <= popoverY + threshold + POPUP_PADDING * 2 + POPUP_HEIGHT\n  ) {\n    return false;\n  }\n  return true;\n};\n", "import { getContextMenuLabel } from \"../components/hyperlink/Hyperlink\";\nimport { LinkIcon } from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { isEmbeddableElement } from \"../element/typeChecks\";\nimport { t } from \"../i18n\";\nimport { KEYS } from \"../keys\";\nimport { getSelectedElements } from \"../scene\";\nimport { CaptureUpdateAction } from \"../store\";\nimport { getShortcutKey } from \"../utils\";\nimport { register } from \"./register\";\n\nexport const actionLink = register({\n  name: \"hyperlink\",\n  label: (elements, appState) => getContextMenuLabel(elements, appState),\n  icon: LinkIcon,\n  perform: (elements, appState) => {\n    if (appState.showHyperlinkPopup === \"editor\") {\n      return false;\n    }\n\n    return {\n      elements,\n      appState: {\n        ...appState,\n        showHyperlinkPopup: \"editor\",\n        openMenu: null,\n      },\n      captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n    };\n  },\n  trackEvent: { category: \"hyperlink\", action: \"click\" },\n  keyTest: (event) => event[KEYS.CTRL_OR_CMD] && event.key === KEYS.K,\n  predicate: (elements, appState) => {\n    const selectedElements = getSelectedElements(elements, appState);\n    return selectedElements.length === 1;\n  },\n  PanelComponent: ({ elements, appState, updateData }) => {\n    const selectedElements = getSelectedElements(elements, appState);\n\n    return (\n      <ToolButton\n        type=\"button\"\n        icon={LinkIcon}\n        aria-label={t(getContextMenuLabel(elements, appState))}\n        title={`${\n          isEmbeddableElement(elements[0])\n            ? t(\"labels.link.labelEmbed\")\n            : t(\"labels.link.label\")\n        } - ${getShortcutKey(\"CtrlOrCmd+K\")}`}\n        onClick={() => updateData(null)}\n        selected={selectedElements.length === 1 && !!selectedElements[0].link}\n      />\n    );\n  },\n});\n", "import { LockedIcon, UnlockedIcon } from \"../components/icons\";\nimport { newElementWith } from \"../element/mutateElement\";\nimport { isFrameLikeElement } from \"../element/typeChecks\";\nimport type { ExcalidrawElement } from \"../element/types\";\nimport { KEYS } from \"../keys\";\nimport { getSelectedElements } from \"../scene\";\nimport { CaptureUpdateAction } from \"../store\";\nimport { arrayToMap } from \"../utils\";\nimport { register } from \"./register\";\n\nconst shouldLock = (elements: readonly ExcalidrawElement[]) =>\n  elements.every((el) => !el.locked);\n\nexport const actionToggleElementLock = register({\n  name: \"toggleElementLock\",\n  label: (elements, appState, app) => {\n    const selected = app.scene.getSelectedElements({\n      selectedElementIds: appState.selectedElementIds,\n      includeBoundTextElement: false,\n    });\n    if (selected.length === 1 && !isFrameLikeElement(selected[0])) {\n      return selected[0].locked\n        ? \"labels.elementLock.unlock\"\n        : \"labels.elementLock.lock\";\n    }\n\n    return shouldLock(selected)\n      ? \"labels.elementLock.lockAll\"\n      : \"labels.elementLock.unlockAll\";\n  },\n  icon: (appState, elements) => {\n    const selectedElements = getSelectedElements(elements, appState);\n    return shouldLock(selectedElements) ? LockedIcon : UnlockedIcon;\n  },\n  trackEvent: { category: \"element\" },\n  predicate: (elements, appState, _, app) => {\n    const selectedElements = app.scene.getSelectedElements(appState);\n    return (\n      selectedElements.length > 0 &&\n      !selectedElements.some((element) => element.locked && element.frameId)\n    );\n  },\n  perform: (elements, appState, _, app) => {\n    const selectedElements = app.scene.getSelectedElements({\n      selectedElementIds: appState.selectedElementIds,\n      includeBoundTextElement: true,\n      includeElementsInFrames: true,\n    });\n\n    if (!selectedElements.length) {\n      return false;\n    }\n\n    const nextLockState = shouldLock(selectedElements);\n    const selectedElementsMap = arrayToMap(selectedElements);\n    return {\n      elements: elements.map((element) => {\n        if (!selectedElementsMap.has(element.id)) {\n          return element;\n        }\n\n        return newElementWith(element, { locked: nextLockState });\n      }),\n      appState: {\n        ...appState,\n        selectedLinearElement: nextLockState\n          ? null\n          : appState.selectedLinearElement,\n      },\n      captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n    };\n  },\n  keyTest: (event, appState, elements, app) => {\n    return (\n      event.key.toLocaleLowerCase() === KEYS.L &&\n      event[KEYS.CTRL_OR_CMD] &&\n      event.shiftKey &&\n      app.scene.getSelectedElements({\n        selectedElementIds: appState.selectedElementIds,\n        includeBoundTextElement: false,\n      }).length > 0\n    );\n  },\n});\n\nexport const actionUnlockAllElements = register({\n  name: \"unlockAllElements\",\n  paletteName: \"Unlock all elements\",\n  trackEvent: { category: \"canvas\" },\n  viewMode: false,\n  icon: UnlockedIcon,\n  predicate: (elements, appState) => {\n    const selectedElements = getSelectedElements(elements, appState);\n    return (\n      selectedElements.length === 0 &&\n      elements.some((element) => element.locked)\n    );\n  },\n  perform: (elements, appState) => {\n    const lockedElements = elements.filter((el) => el.locked);\n\n    return {\n      elements: elements.map((element) => {\n        if (element.locked) {\n          return newElementWith(element, { locked: false });\n        }\n        return element;\n      }),\n      appState: {\n        ...appState,\n        selectedElementIds: Object.fromEntries(\n          lockedElements.map((el) => [el.id, true]),\n        ),\n      },\n      captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n    };\n  },\n  label: \"labels.elementLock.unlockAll\",\n});\n", "import { useEffect, useRef, useState } from \"react\";\nimport {\n  useApp,\n  useAppProps,\n  useExcalidrawActionManager,\n  useExcalidrawSetAppState,\n} from \"../App\";\nimport { KEYS } from \"../../keys\";\nimport { Dialog } from \"../Dialog\";\nimport { TextField } from \"../TextField\";\nimport clsx from \"clsx\";\nimport { getSelectedElements } from \"../../scene\";\nimport type { Action } from \"../../actions/types\";\nimport type { TranslationKeys } from \"../../i18n\";\nimport { t } from \"../../i18n\";\nimport type { ShortcutName } from \"../../actions/shortcuts\";\nimport { getShortcutFromShortcutName } from \"../../actions/shortcuts\";\nimport { DEFAULT_SIDEBAR, EVENT } from \"../../constants\";\nimport {\n  LockedIcon,\n  UnlockedIcon,\n  clockIcon,\n  searchIcon,\n  boltIcon,\n  bucketFillIcon,\n  ExportImageIcon,\n  mermaidLogoIcon,\n  brainIconThin,\n  LibraryIcon,\n} from \"../icons\";\nimport fuzzy from \"fuzzy\";\nimport { useUIAppState } from \"../../context/ui-appState\";\nimport type { AppProps, AppState, UIAppState } from \"../../types\";\nimport {\n  capitalizeString,\n  getShortcutKey,\n  isWritableElement,\n} from \"../../utils\";\nimport { atom, useAtom, editorJotaiStore } from \"../../editor-jotai\";\nimport { deburr } from \"../../deburr\";\nimport type { MarkRequired } from \"../../utility-types\";\nimport { InlineIcon } from \"../InlineIcon\";\nimport { SHAPES } from \"../../shapes\";\nimport { canChangeBackgroundColor, canChangeStrokeColor } from \"../Actions\";\nimport { useStableCallback } from \"../../hooks/useStableCallback\";\nimport {\n  actionClearCanvas,\n  actionLink,\n  actionToggleSearchMenu,\n} from \"../../actions\";\nimport { activeConfirmDialogAtom } from \"../ActiveConfirmDialog\";\nimport type { CommandPaletteItem } from \"./types\";\nimport * as defaultItems from \"./defaultCommandPaletteItems\";\nimport { trackEvent } from \"../../analytics\";\nimport { useStable } from \"../../hooks/useStable\";\n\nimport \"./CommandPalette.scss\";\nimport {\n  actionCopyElementLink,\n  actionLinkToElement,\n} from \"../../actions/actionElementLink\";\n\nconst lastUsedPaletteItem = atom<CommandPaletteItem | null>(null);\n\nexport const DEFAULT_CATEGORIES = {\n  app: \"App\",\n  export: \"Export\",\n  tools: \"Tools\",\n  editor: \"Editor\",\n  elements: \"Elements\",\n  links: \"Links\",\n};\n\nconst getCategoryOrder = (category: string) => {\n  switch (category) {\n    case DEFAULT_CATEGORIES.app:\n      return 1;\n    case DEFAULT_CATEGORIES.export:\n      return 2;\n    case DEFAULT_CATEGORIES.editor:\n      return 3;\n    case DEFAULT_CATEGORIES.tools:\n      return 4;\n    case DEFAULT_CATEGORIES.elements:\n      return 5;\n    case DEFAULT_CATEGORIES.links:\n      return 6;\n    default:\n      return 10;\n  }\n};\n\nconst CommandShortcutHint = ({\n  shortcut,\n  className,\n  children,\n}: {\n  shortcut: string;\n  className?: string;\n  children?: React.ReactNode;\n}) => {\n  const shortcuts = shortcut.replace(\"++\", \"+$\").split(\"+\");\n\n  return (\n    <div className={clsx(\"shortcut\", className)}>\n      {shortcuts.map((item, idx) => {\n        return (\n          <div className=\"shortcut-wrapper\" key={item}>\n            <div className=\"shortcut-key\">{item === \"$\" ? \"+\" : item}</div>\n          </div>\n        );\n      })}\n      <div className=\"shortcut-desc\">{children}</div>\n    </div>\n  );\n};\n\nconst isCommandPaletteToggleShortcut = (event: KeyboardEvent) => {\n  return (\n    !event.altKey &&\n    event[KEYS.CTRL_OR_CMD] &&\n    ((event.shiftKey && event.key.toLowerCase() === KEYS.P) ||\n      event.key === KEYS.SLASH)\n  );\n};\n\ntype CommandPaletteProps = {\n  customCommandPaletteItems?: CommandPaletteItem[];\n};\n\nexport const CommandPalette = Object.assign(\n  (props: CommandPaletteProps) => {\n    const uiAppState = useUIAppState();\n    const setAppState = useExcalidrawSetAppState();\n\n    useEffect(() => {\n      const commandPaletteShortcut = (event: KeyboardEvent) => {\n        if (isCommandPaletteToggleShortcut(event)) {\n          event.preventDefault();\n          event.stopPropagation();\n          setAppState((appState) => {\n            const nextState =\n              appState.openDialog?.name === \"commandPalette\"\n                ? null\n                : ({ name: \"commandPalette\" } as const);\n\n            if (nextState) {\n              trackEvent(\"command_palette\", \"open\", \"shortcut\");\n            }\n\n            return {\n              openDialog: nextState,\n            };\n          });\n        }\n      };\n      window.addEventListener(EVENT.KEYDOWN, commandPaletteShortcut, {\n        capture: true,\n      });\n      return () =>\n        window.removeEventListener(EVENT.KEYDOWN, commandPaletteShortcut, {\n          capture: true,\n        });\n    }, [setAppState]);\n\n    if (uiAppState.openDialog?.name !== \"commandPalette\") {\n      return null;\n    }\n\n    return <CommandPaletteInner {...props} />;\n  },\n  {\n    defaultItems,\n  },\n);\n\nfunction CommandPaletteInner({\n  customCommandPaletteItems,\n}: CommandPaletteProps) {\n  const app = useApp();\n  const uiAppState = useUIAppState();\n  const setAppState = useExcalidrawSetAppState();\n  const appProps = useAppProps();\n  const actionManager = useExcalidrawActionManager();\n\n  const [lastUsed, setLastUsed] = useAtom(lastUsedPaletteItem);\n  const [allCommands, setAllCommands] = useState<\n    MarkRequired<CommandPaletteItem, \"haystack\" | \"order\">[] | null\n  >(null);\n\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const stableDeps = useStable({\n    uiAppState,\n    customCommandPaletteItems,\n    appProps,\n  });\n\n  useEffect(() => {\n    // these props change often and we don't want them to re-run the effect\n    // which would renew `allCommands`, cascading down and resetting state.\n    //\n    // This means that the commands won't update on appState/appProps changes\n    // while the command palette is open\n    const { uiAppState, customCommandPaletteItems, appProps } = stableDeps;\n\n    const getActionLabel = (action: Action) => {\n      let label = \"\";\n      if (action.label) {\n        if (typeof action.label === \"function\") {\n          label = t(\n            action.label(\n              app.scene.getNonDeletedElements(),\n              uiAppState as AppState,\n              app,\n            ) as unknown as TranslationKeys,\n          );\n        } else {\n          label = t(action.label as unknown as TranslationKeys);\n        }\n      }\n      return label;\n    };\n\n    const getActionIcon = (action: Action) => {\n      if (typeof action.icon === \"function\") {\n        return action.icon(uiAppState, app.scene.getNonDeletedElements());\n      }\n      return action.icon;\n    };\n\n    let commandsFromActions: CommandPaletteItem[] = [];\n\n    const actionToCommand = (\n      action: Action,\n      category: string,\n      transformer?: (\n        command: CommandPaletteItem,\n        action: Action,\n      ) => CommandPaletteItem,\n    ): CommandPaletteItem => {\n      const command: CommandPaletteItem = {\n        label: getActionLabel(action),\n        icon: getActionIcon(action),\n        category,\n        shortcut: getShortcutFromShortcutName(action.name as ShortcutName),\n        keywords: action.keywords,\n        predicate: action.predicate,\n        viewMode: action.viewMode,\n        perform: () => {\n          actionManager.executeAction(action, \"commandPalette\");\n        },\n      };\n\n      return transformer ? transformer(command, action) : command;\n    };\n\n    if (uiAppState && app.scene && actionManager) {\n      const elementsCommands: CommandPaletteItem[] = [\n        actionManager.actions.group,\n        actionManager.actions.ungroup,\n        actionManager.actions.cut,\n        actionManager.actions.copy,\n        actionManager.actions.deleteSelectedElements,\n        actionManager.actions.wrapSelectionInFrame,\n        actionManager.actions.copyStyles,\n        actionManager.actions.pasteStyles,\n        actionManager.actions.bringToFront,\n        actionManager.actions.bringForward,\n        actionManager.actions.sendBackward,\n        actionManager.actions.sendToBack,\n        actionManager.actions.alignTop,\n        actionManager.actions.alignBottom,\n        actionManager.actions.alignLeft,\n        actionManager.actions.alignRight,\n        actionManager.actions.alignVerticallyCentered,\n        actionManager.actions.alignHorizontallyCentered,\n        actionManager.actions.duplicateSelection,\n        actionManager.actions.flipHorizontal,\n        actionManager.actions.flipVertical,\n        actionManager.actions.zoomToFitSelection,\n        actionManager.actions.zoomToFitSelectionInViewport,\n        actionManager.actions.increaseFontSize,\n        actionManager.actions.decreaseFontSize,\n        actionManager.actions.toggleLinearEditor,\n        actionManager.actions.cropEditor,\n        actionLink,\n        actionCopyElementLink,\n        actionLinkToElement,\n      ].map((action: Action) =>\n        actionToCommand(\n          action,\n          DEFAULT_CATEGORIES.elements,\n          (command, action) => ({\n            ...command,\n            predicate: action.predicate\n              ? action.predicate\n              : (elements, appState, appProps, app) => {\n                  const selectedElements = getSelectedElements(\n                    elements,\n                    appState,\n                  );\n                  return selectedElements.length > 0;\n                },\n          }),\n        ),\n      );\n      const toolCommands: CommandPaletteItem[] = [\n        actionManager.actions.toggleHandTool,\n        actionManager.actions.setFrameAsActiveTool,\n      ].map((action) => actionToCommand(action, DEFAULT_CATEGORIES.tools));\n\n      const editorCommands: CommandPaletteItem[] = [\n        actionManager.actions.undo,\n        actionManager.actions.redo,\n        actionManager.actions.zoomIn,\n        actionManager.actions.zoomOut,\n        actionManager.actions.resetZoom,\n        actionManager.actions.zoomToFit,\n        actionManager.actions.zenMode,\n        actionManager.actions.viewMode,\n        actionManager.actions.gridMode,\n        actionManager.actions.objectsSnapMode,\n        actionManager.actions.toggleShortcuts,\n        actionManager.actions.selectAll,\n        actionManager.actions.toggleElementLock,\n        actionManager.actions.unlockAllElements,\n        actionManager.actions.stats,\n      ].map((action) => actionToCommand(action, DEFAULT_CATEGORIES.editor));\n\n      const exportCommands: CommandPaletteItem[] = [\n        actionManager.actions.saveToActiveFile,\n        actionManager.actions.saveFileToDisk,\n        actionManager.actions.copyAsPng,\n        actionManager.actions.copyAsSvg,\n      ].map((action) => actionToCommand(action, DEFAULT_CATEGORIES.export));\n\n      commandsFromActions = [\n        ...elementsCommands,\n        ...editorCommands,\n        {\n          label: getActionLabel(actionClearCanvas),\n          icon: getActionIcon(actionClearCanvas),\n          shortcut: getShortcutFromShortcutName(\n            actionClearCanvas.name as ShortcutName,\n          ),\n          category: DEFAULT_CATEGORIES.editor,\n          keywords: [\"delete\", \"destroy\"],\n          viewMode: false,\n          perform: () => {\n            editorJotaiStore.set(activeConfirmDialogAtom, \"clearCanvas\");\n          },\n        },\n        {\n          label: t(\"buttons.exportImage\"),\n          category: DEFAULT_CATEGORIES.export,\n          icon: ExportImageIcon,\n          shortcut: getShortcutFromShortcutName(\"imageExport\"),\n          keywords: [\n            \"export\",\n            \"image\",\n            \"png\",\n            \"jpeg\",\n            \"svg\",\n            \"clipboard\",\n            \"picture\",\n          ],\n          perform: () => {\n            setAppState({ openDialog: { name: \"imageExport\" } });\n          },\n        },\n        ...exportCommands,\n      ];\n\n      const additionalCommands: CommandPaletteItem[] = [\n        {\n          label: t(\"toolBar.library\"),\n          category: DEFAULT_CATEGORIES.app,\n          icon: LibraryIcon,\n          viewMode: false,\n          perform: () => {\n            if (uiAppState.openSidebar) {\n              setAppState({\n                openSidebar: null,\n              });\n            } else {\n              setAppState({\n                openSidebar: {\n                  name: DEFAULT_SIDEBAR.name,\n                  tab: DEFAULT_SIDEBAR.defaultTab,\n                },\n              });\n            }\n          },\n        },\n        {\n          label: t(\"search.title\"),\n          category: DEFAULT_CATEGORIES.app,\n          icon: searchIcon,\n          viewMode: true,\n          perform: () => {\n            actionManager.executeAction(actionToggleSearchMenu);\n          },\n        },\n        {\n          label: t(\"labels.changeStroke\"),\n          keywords: [\"color\", \"outline\"],\n          category: DEFAULT_CATEGORIES.elements,\n          icon: bucketFillIcon,\n          viewMode: false,\n          predicate: (elements, appState) => {\n            const selectedElements = getSelectedElements(elements, appState);\n            return (\n              selectedElements.length > 0 &&\n              canChangeStrokeColor(appState, selectedElements)\n            );\n          },\n          perform: () => {\n            setAppState((prevState) => ({\n              openMenu: prevState.openMenu === \"shape\" ? null : \"shape\",\n              openPopup: \"elementStroke\",\n            }));\n          },\n        },\n        {\n          label: t(\"labels.changeBackground\"),\n          keywords: [\"color\", \"fill\"],\n          icon: bucketFillIcon,\n          category: DEFAULT_CATEGORIES.elements,\n          viewMode: false,\n          predicate: (elements, appState) => {\n            const selectedElements = getSelectedElements(elements, appState);\n            return (\n              selectedElements.length > 0 &&\n              canChangeBackgroundColor(appState, selectedElements)\n            );\n          },\n          perform: () => {\n            setAppState((prevState) => ({\n              openMenu: prevState.openMenu === \"shape\" ? null : \"shape\",\n              openPopup: \"elementBackground\",\n            }));\n          },\n        },\n        {\n          label: t(\"labels.canvasBackground\"),\n          keywords: [\"color\"],\n          icon: bucketFillIcon,\n          category: DEFAULT_CATEGORIES.editor,\n          viewMode: false,\n          perform: () => {\n            setAppState((prevState) => ({\n              openMenu: prevState.openMenu === \"canvas\" ? null : \"canvas\",\n              openPopup: \"canvasBackground\",\n            }));\n          },\n        },\n        ...SHAPES.reduce((acc: CommandPaletteItem[], shape) => {\n          const { value, icon, key, numericKey } = shape;\n\n          if (\n            appProps.UIOptions.tools?.[\n              value as Extract<\n                typeof value,\n                keyof AppProps[\"UIOptions\"][\"tools\"]\n              >\n            ] === false\n          ) {\n            return acc;\n          }\n\n          const letter =\n            key && capitalizeString(typeof key === \"string\" ? key : key[0]);\n          const shortcut = letter || numericKey;\n\n          const command: CommandPaletteItem = {\n            label: t(`toolBar.${value}`),\n            category: DEFAULT_CATEGORIES.tools,\n            shortcut,\n            icon,\n            keywords: [\"toolbar\"],\n            viewMode: false,\n            perform: ({ event }) => {\n              if (value === \"image\") {\n                app.setActiveTool({\n                  type: value,\n                  insertOnCanvasDirectly: event.type === EVENT.KEYDOWN,\n                });\n              } else {\n                app.setActiveTool({ type: value });\n              }\n            },\n          };\n\n          acc.push(command);\n\n          return acc;\n        }, []),\n        ...toolCommands,\n        {\n          label: t(\"toolBar.lock\"),\n          category: DEFAULT_CATEGORIES.tools,\n          icon: uiAppState.activeTool.locked ? LockedIcon : UnlockedIcon,\n          shortcut: KEYS.Q.toLocaleUpperCase(),\n          viewMode: false,\n          perform: () => {\n            app.toggleLock();\n          },\n        },\n        {\n          label: `${t(\"labels.textToDiagram\")}...`,\n          category: DEFAULT_CATEGORIES.tools,\n          icon: brainIconThin,\n          viewMode: false,\n          predicate: appProps.aiEnabled,\n          perform: () => {\n            setAppState((state) => ({\n              ...state,\n              openDialog: {\n                name: \"ttd\",\n                tab: \"text-to-diagram\",\n              },\n            }));\n          },\n        },\n        {\n          label: `${t(\"toolBar.mermaidToExcalidraw\")}...`,\n          category: DEFAULT_CATEGORIES.tools,\n          icon: mermaidLogoIcon,\n          viewMode: false,\n          predicate: appProps.aiEnabled,\n          perform: () => {\n            setAppState((state) => ({\n              ...state,\n              openDialog: {\n                name: \"ttd\",\n                tab: \"mermaid\",\n              },\n            }));\n          },\n        },\n        // {\n        //   label: `${t(\"toolBar.magicframe\")}...`,\n        //   category: DEFAULT_CATEGORIES.tools,\n        //   icon: MagicIconThin,\n        //   viewMode: false,\n        //   predicate: appProps.aiEnabled,\n        //   perform: () => {\n        //     app.onMagicframeToolSelect();\n        //   },\n        // },\n      ];\n\n      const allCommands = [\n        ...commandsFromActions,\n        ...additionalCommands,\n        ...(customCommandPaletteItems || []),\n      ].map((command) => {\n        return {\n          ...command,\n          icon: command.icon || boltIcon,\n          order: command.order ?? getCategoryOrder(command.category),\n          haystack: `${deburr(command.label.toLocaleLowerCase())} ${\n            command.keywords?.join(\" \") || \"\"\n          }`,\n        };\n      });\n\n      setAllCommands(allCommands);\n      setLastUsed(\n        allCommands.find((command) => command.label === lastUsed?.label) ??\n          null,\n      );\n    }\n  }, [\n    stableDeps,\n    app,\n    actionManager,\n    setAllCommands,\n    lastUsed?.label,\n    setLastUsed,\n    setAppState,\n  ]);\n\n  const [commandSearch, setCommandSearch] = useState(\"\");\n  const [currentCommand, setCurrentCommand] =\n    useState<CommandPaletteItem | null>(null);\n  const [commandsByCategory, setCommandsByCategory] = useState<\n    Record<string, CommandPaletteItem[]>\n  >({});\n\n  const closeCommandPalette = (cb?: () => void) => {\n    setAppState(\n      {\n        openDialog: null,\n      },\n      cb,\n    );\n    setCommandSearch(\"\");\n  };\n\n  const executeCommand = (\n    command: CommandPaletteItem,\n    event: React.MouseEvent | React.KeyboardEvent | KeyboardEvent,\n  ) => {\n    if (uiAppState.openDialog?.name === \"commandPalette\") {\n      event.stopPropagation();\n      event.preventDefault();\n      document.body.classList.add(\"excalidraw-animations-disabled\");\n      closeCommandPalette(() => {\n        command.perform({ actionManager, event });\n        setLastUsed(command);\n\n        requestAnimationFrame(() => {\n          document.body.classList.remove(\"excalidraw-animations-disabled\");\n        });\n      });\n    }\n  };\n\n  const isCommandAvailable = useStableCallback(\n    (command: CommandPaletteItem) => {\n      if (command.viewMode === false && uiAppState.viewModeEnabled) {\n        return false;\n      }\n\n      return typeof command.predicate === \"function\"\n        ? command.predicate(\n            app.scene.getNonDeletedElements(),\n            uiAppState as AppState,\n            appProps,\n            app,\n          )\n        : command.predicate === undefined || command.predicate;\n    },\n  );\n\n  const handleKeyDown = useStableCallback((event: KeyboardEvent) => {\n    const ignoreAlphanumerics =\n      isWritableElement(event.target) ||\n      isCommandPaletteToggleShortcut(event) ||\n      event.key === KEYS.ESCAPE;\n\n    if (\n      ignoreAlphanumerics &&\n      event.key !== KEYS.ARROW_UP &&\n      event.key !== KEYS.ARROW_DOWN &&\n      event.key !== KEYS.ENTER\n    ) {\n      return;\n    }\n\n    const matchingCommands = Object.values(commandsByCategory).flat();\n    const shouldConsiderLastUsed =\n      lastUsed && !commandSearch && isCommandAvailable(lastUsed);\n\n    if (event.key === KEYS.ARROW_UP) {\n      event.preventDefault();\n      const index = matchingCommands.findIndex(\n        (item) => item.label === currentCommand?.label,\n      );\n\n      if (shouldConsiderLastUsed) {\n        if (index === 0) {\n          setCurrentCommand(lastUsed);\n          return;\n        }\n\n        if (currentCommand === lastUsed) {\n          const nextItem = matchingCommands[matchingCommands.length - 1];\n          if (nextItem) {\n            setCurrentCommand(nextItem);\n          }\n          return;\n        }\n      }\n\n      let nextIndex;\n\n      if (index === -1) {\n        nextIndex = matchingCommands.length - 1;\n      } else {\n        nextIndex =\n          index === 0\n            ? matchingCommands.length - 1\n            : (index - 1) % matchingCommands.length;\n      }\n\n      const nextItem = matchingCommands[nextIndex];\n      if (nextItem) {\n        setCurrentCommand(nextItem);\n      }\n\n      return;\n    }\n\n    if (event.key === KEYS.ARROW_DOWN) {\n      event.preventDefault();\n      const index = matchingCommands.findIndex(\n        (item) => item.label === currentCommand?.label,\n      );\n\n      if (shouldConsiderLastUsed) {\n        if (!currentCommand || index === matchingCommands.length - 1) {\n          setCurrentCommand(lastUsed);\n          return;\n        }\n\n        if (currentCommand === lastUsed) {\n          const nextItem = matchingCommands[0];\n          if (nextItem) {\n            setCurrentCommand(nextItem);\n          }\n          return;\n        }\n      }\n\n      const nextIndex = (index + 1) % matchingCommands.length;\n      const nextItem = matchingCommands[nextIndex];\n      if (nextItem) {\n        setCurrentCommand(nextItem);\n      }\n\n      return;\n    }\n\n    if (event.key === KEYS.ENTER) {\n      if (currentCommand) {\n        setTimeout(() => {\n          executeCommand(currentCommand, event);\n        });\n      }\n    }\n\n    if (ignoreAlphanumerics) {\n      return;\n    }\n\n    // prevent regular editor shortcuts\n    event.stopPropagation();\n\n    // if alphanumeric keypress and we're not inside the input, focus it\n    if (/^[a-zA-Z0-9]$/.test(event.key)) {\n      inputRef?.current?.focus();\n      return;\n    }\n\n    event.preventDefault();\n  });\n\n  useEffect(() => {\n    window.addEventListener(EVENT.KEYDOWN, handleKeyDown, {\n      capture: true,\n    });\n    return () =>\n      window.removeEventListener(EVENT.KEYDOWN, handleKeyDown, {\n        capture: true,\n      });\n  }, [handleKeyDown]);\n\n  useEffect(() => {\n    if (!allCommands) {\n      return;\n    }\n\n    const getNextCommandsByCategory = (commands: CommandPaletteItem[]) => {\n      const nextCommandsByCategory: Record<string, CommandPaletteItem[]> = {};\n      for (const command of commands) {\n        if (nextCommandsByCategory[command.category]) {\n          nextCommandsByCategory[command.category].push(command);\n        } else {\n          nextCommandsByCategory[command.category] = [command];\n        }\n      }\n\n      return nextCommandsByCategory;\n    };\n\n    let matchingCommands = allCommands\n      .filter(isCommandAvailable)\n      .sort((a, b) => a.order - b.order);\n\n    const showLastUsed =\n      !commandSearch && lastUsed && isCommandAvailable(lastUsed);\n\n    if (!commandSearch) {\n      setCommandsByCategory(\n        getNextCommandsByCategory(\n          showLastUsed\n            ? matchingCommands.filter(\n                (command) => command.label !== lastUsed?.label,\n              )\n            : matchingCommands,\n        ),\n      );\n      setCurrentCommand(showLastUsed ? lastUsed : matchingCommands[0] || null);\n      return;\n    }\n\n    const _query = deburr(\n      commandSearch.toLocaleLowerCase().replace(/[<>_| -]/g, \"\"),\n    );\n    matchingCommands = fuzzy\n      .filter(_query, matchingCommands, {\n        extract: (command) => command.haystack,\n      })\n      .sort((a, b) => b.score - a.score)\n      .map((item) => item.original);\n\n    setCommandsByCategory(getNextCommandsByCategory(matchingCommands));\n    setCurrentCommand(matchingCommands[0] ?? null);\n  }, [commandSearch, allCommands, isCommandAvailable, lastUsed]);\n\n  return (\n    <Dialog\n      onCloseRequest={() => closeCommandPalette()}\n      closeOnClickOutside\n      title={false}\n      size={720}\n      autofocus\n      className=\"command-palette-dialog\"\n    >\n      <TextField\n        value={commandSearch}\n        placeholder={t(\"commandPalette.search.placeholder\")}\n        onChange={(value) => {\n          setCommandSearch(value);\n        }}\n        selectOnRender\n        ref={inputRef}\n      />\n\n      {!app.device.viewport.isMobile && (\n        <div className=\"shortcuts-wrapper\">\n          <CommandShortcutHint shortcut=\"\u2191\u2193\">\n            {t(\"commandPalette.shortcuts.select\")}\n          </CommandShortcutHint>\n          <CommandShortcutHint shortcut=\"\u21B5\">\n            {t(\"commandPalette.shortcuts.confirm\")}\n          </CommandShortcutHint>\n          <CommandShortcutHint shortcut={getShortcutKey(\"Esc\")}>\n            {t(\"commandPalette.shortcuts.close\")}\n          </CommandShortcutHint>\n        </div>\n      )}\n\n      <div className=\"commands\">\n        {lastUsed && !commandSearch && (\n          <div className=\"command-category\">\n            <div className=\"command-category-title\">\n              {t(\"commandPalette.recents\")}\n              <div\n                className=\"icon\"\n                style={{\n                  marginLeft: \"6px\",\n                }}\n              >\n                {clockIcon}\n              </div>\n            </div>\n            <CommandItem\n              command={lastUsed}\n              isSelected={lastUsed.label === currentCommand?.label}\n              onClick={(event) => executeCommand(lastUsed, event)}\n              disabled={!isCommandAvailable(lastUsed)}\n              onMouseMove={() => setCurrentCommand(lastUsed)}\n              showShortcut={!app.device.viewport.isMobile}\n              appState={uiAppState}\n            />\n          </div>\n        )}\n\n        {Object.keys(commandsByCategory).length > 0 ? (\n          Object.keys(commandsByCategory).map((category, idx) => {\n            return (\n              <div className=\"command-category\" key={category}>\n                <div className=\"command-category-title\">{category}</div>\n                {commandsByCategory[category].map((command) => (\n                  <CommandItem\n                    key={command.label}\n                    command={command}\n                    isSelected={command.label === currentCommand?.label}\n                    onClick={(event) => executeCommand(command, event)}\n                    onMouseMove={() => setCurrentCommand(command)}\n                    showShortcut={!app.device.viewport.isMobile}\n                    appState={uiAppState}\n                  />\n                ))}\n              </div>\n            );\n          })\n        ) : allCommands ? (\n          <div className=\"no-match\">\n            <div className=\"icon\">{searchIcon}</div>{\" \"}\n            {t(\"commandPalette.search.noMatch\")}\n          </div>\n        ) : null}\n      </div>\n    </Dialog>\n  );\n}\n\nconst CommandItem = ({\n  command,\n  isSelected,\n  disabled,\n  onMouseMove,\n  onClick,\n  showShortcut,\n  appState,\n}: {\n  command: CommandPaletteItem;\n  isSelected: boolean;\n  disabled?: boolean;\n  onMouseMove: () => void;\n  onClick: (event: React.MouseEvent) => void;\n  showShortcut: boolean;\n  appState: UIAppState;\n}) => {\n  const noop = () => {};\n\n  return (\n    <div\n      className={clsx(\"command-item\", {\n        \"item-selected\": isSelected,\n        \"item-disabled\": disabled,\n      })}\n      ref={(ref) => {\n        if (isSelected && !disabled) {\n          ref?.scrollIntoView?.({\n            block: \"nearest\",\n          });\n        }\n      }}\n      onClick={disabled ? noop : onClick}\n      onMouseMove={disabled ? noop : onMouseMove}\n      title={disabled ? t(\"commandPalette.itemNotAvailable\") : \"\"}\n    >\n      <div className=\"name\">\n        {command.icon && (\n          <InlineIcon\n            icon={\n              typeof command.icon === \"function\"\n                ? command.icon(appState)\n                : command.icon\n            }\n          />\n        )}\n        {command.label}\n      </div>\n      {showShortcut && command.shortcut && (\n        <CommandShortcutHint shortcut={command.shortcut} />\n      )}\n    </div>\n  );\n};\n", "import clsx from \"clsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { useCallbackRefState } from \"../hooks/useCallbackRefState\";\nimport {\n  useExcalidrawContainer,\n  useDevice,\n  useExcalidrawSetAppState,\n} from \"./App\";\nimport { KEYS } from \"../keys\";\nimport \"./Dialog.scss\";\nimport { Island } from \"./Island\";\nimport { Modal } from \"./Modal\";\nimport { queryFocusableElements } from \"../utils\";\nimport { isLibraryMenuOpenAtom } from \"./LibraryMenu\";\nimport { useSetAtom } from \"../editor-jotai\";\nimport { t } from \"../i18n\";\nimport { CloseIcon } from \"./icons\";\n\nexport type DialogSize = number | \"small\" | \"regular\" | \"wide\" | undefined;\n\nexport interface DialogProps {\n  children: React.ReactNode;\n  className?: string;\n  size?: DialogSize;\n  onCloseRequest(): void;\n  title: React.ReactNode | false;\n  autofocus?: boolean;\n  closeOnClickOutside?: boolean;\n}\n\nfunction getDialogSize(size: DialogSize): number {\n  if (size && typeof size === \"number\") {\n    return size;\n  }\n\n  switch (size) {\n    case \"small\":\n      return 550;\n    case \"wide\":\n      return 1024;\n    case \"regular\":\n    default:\n      return 800;\n  }\n}\n\nexport const Dialog = (props: DialogProps) => {\n  const [islandNode, setIslandNode] = useCallbackRefState<HTMLDivElement>();\n  const [lastActiveElement] = useState(document.activeElement);\n  const { id } = useExcalidrawContainer();\n  const isFullscreen = useDevice().viewport.isMobile;\n\n  useEffect(() => {\n    if (!islandNode) {\n      return;\n    }\n\n    const focusableElements = queryFocusableElements(islandNode);\n\n    setTimeout(() => {\n      if (focusableElements.length > 0 && props.autofocus !== false) {\n        // If there's an element other than close, focus it.\n        (focusableElements[1] || focusableElements[0]).focus();\n      }\n    });\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === KEYS.TAB) {\n        const focusableElements = queryFocusableElements(islandNode);\n        const { activeElement } = document;\n        const currentIndex = focusableElements.findIndex(\n          (element) => element === activeElement,\n        );\n\n        if (currentIndex === 0 && event.shiftKey) {\n          focusableElements[focusableElements.length - 1].focus();\n          event.preventDefault();\n        } else if (\n          currentIndex === focusableElements.length - 1 &&\n          !event.shiftKey\n        ) {\n          focusableElements[0].focus();\n          event.preventDefault();\n        }\n      }\n    };\n\n    islandNode.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => islandNode.removeEventListener(\"keydown\", handleKeyDown);\n  }, [islandNode, props.autofocus]);\n\n  const setAppState = useExcalidrawSetAppState();\n  const setIsLibraryMenuOpen = useSetAtom(isLibraryMenuOpenAtom);\n\n  const onClose = () => {\n    setAppState({ openMenu: null });\n    setIsLibraryMenuOpen(false);\n    (lastActiveElement as HTMLElement).focus();\n    props.onCloseRequest();\n  };\n\n  return (\n    <Modal\n      className={clsx(\"Dialog\", props.className, {\n        \"Dialog--fullscreen\": isFullscreen,\n      })}\n      labelledBy=\"dialog-title\"\n      maxWidth={getDialogSize(props.size)}\n      onCloseRequest={onClose}\n      closeOnClickOutside={props.closeOnClickOutside}\n    >\n      <Island ref={setIslandNode}>\n        {props.title && (\n          <h2 id={`${id}-dialog-title`} className=\"Dialog__title\">\n            <span className=\"Dialog__titleContent\">{props.title}</span>\n          </h2>\n        )}\n        {isFullscreen && (\n          <button\n            className=\"Dialog__close\"\n            onClick={onClose}\n            title={t(\"buttons.close\")}\n            aria-label={t(\"buttons.close\")}\n            type=\"button\"\n          >\n            {CloseIcon}\n          </button>\n        )}\n        <div className=\"Dialog__content\">{props.children}</div>\n      </Island>\n    </Modal>\n  );\n};\n", "import { useCallback, useState } from \"react\";\n\nexport const useCallbackRefState = <T>() => {\n  const [refValue, setRefValue] = useState<T | null>(null);\n  const refCallback = useCallback((value: T | null) => setRefValue(value), []);\n  return [refValue, refCallback] as const;\n};\n", "import \"./Modal.scss\";\n\nimport { createPortal } from \"react-dom\";\nimport clsx from \"clsx\";\nimport { KEYS } from \"../keys\";\nimport type { AppState } from \"../types\";\nimport { useCreatePortalContainer } from \"../hooks/useCreatePortalContainer\";\nimport { useRef } from \"react\";\n\nexport const Modal: React.FC<{\n  className?: string;\n  children: React.ReactNode;\n  maxWidth?: number;\n  onCloseRequest(): void;\n  labelledBy: string;\n  theme?: AppState[\"theme\"];\n  closeOnClickOutside?: boolean;\n}> = (props) => {\n  const { closeOnClickOutside = true } = props;\n  const modalRoot = useCreatePortalContainer({\n    className: \"excalidraw-modal-container\",\n  });\n\n  const animationsDisabledRef = useRef(\n    document.body.classList.contains(\"excalidraw-animations-disabled\"),\n  );\n\n  if (!modalRoot) {\n    return null;\n  }\n\n  const handleKeydown = (event: React.KeyboardEvent) => {\n    if (event.key === KEYS.ESCAPE) {\n      event.nativeEvent.stopImmediatePropagation();\n      event.stopPropagation();\n      props.onCloseRequest();\n    }\n  };\n\n  return createPortal(\n    <div\n      className={clsx(\"Modal\", props.className, {\n        \"animations-disabled\": animationsDisabledRef.current,\n      })}\n      role=\"dialog\"\n      aria-modal=\"true\"\n      onKeyDown={handleKeydown}\n      aria-labelledby={props.labelledBy}\n      data-prevent-outside-click\n    >\n      <div\n        className=\"Modal__background\"\n        onClick={closeOnClickOutside ? props.onCloseRequest : undefined}\n      />\n      <div\n        className=\"Modal__content\"\n        style={{ \"--max-width\": `${props.maxWidth}px` }}\n        tabIndex={0}\n      >\n        {props.children}\n      </div>\n    </div>,\n    modalRoot,\n  );\n};\n", "import React, {\n  useState,\n  useCallback,\n  useMemo,\n  useEffect,\n  memo,\n  useRef,\n} from \"react\";\nimport type Library from \"../data/library\";\nimport {\n  distributeLibraryItemsOnSquareGrid,\n  libraryItemsAtom,\n} from \"../data/library\";\nimport { t } from \"../i18n\";\nimport { randomId } from \"../random\";\nimport type {\n  LibraryItems,\n  LibraryItem,\n  ExcalidrawProps,\n  UIAppState,\n  AppClassProperties,\n} from \"../types\";\nimport LibraryMenuItems from \"./LibraryMenuItems\";\nimport { trackEvent } from \"../analytics\";\nimport { atom, useAtom } from \"../editor-jotai\";\nimport Spinner from \"./Spinner\";\nimport {\n  useApp,\n  useAppProps,\n  useExcalidrawElements,\n  useExcalidrawSetAppState,\n} from \"./App\";\nimport { getSelectedElements } from \"../scene\";\nimport { useUIAppState } from \"../context/ui-appState\";\n\nimport \"./LibraryMenu.scss\";\nimport { LibraryMenuControlButtons } from \"./LibraryMenuControlButtons\";\nimport type {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n} from \"../element/types\";\nimport { LIBRARY_DISABLED_TYPES } from \"../constants\";\nimport { isShallowEqual } from \"../utils\";\n\nexport const isLibraryMenuOpenAtom = atom(false);\n\nconst LibraryMenuWrapper = ({ children }: { children: React.ReactNode }) => {\n  return <div className=\"layer-ui__library\">{children}</div>;\n};\n\nconst LibraryMenuContent = memo(\n  ({\n    onInsertLibraryItems,\n    pendingElements,\n    onAddToLibrary,\n    setAppState,\n    libraryReturnUrl,\n    library,\n    id,\n    theme,\n    selectedItems,\n    onSelectItems,\n  }: {\n    pendingElements: LibraryItem[\"elements\"];\n    onInsertLibraryItems: (libraryItems: LibraryItems) => void;\n    onAddToLibrary: () => void;\n    setAppState: React.Component<any, UIAppState>[\"setState\"];\n    libraryReturnUrl: ExcalidrawProps[\"libraryReturnUrl\"];\n    library: Library;\n    id: string;\n    theme: UIAppState[\"theme\"];\n    selectedItems: LibraryItem[\"id\"][];\n    onSelectItems: (id: LibraryItem[\"id\"][]) => void;\n  }) => {\n    const [libraryItemsData] = useAtom(libraryItemsAtom);\n\n    const _onAddToLibrary = useCallback(\n      (elements: LibraryItem[\"elements\"]) => {\n        const addToLibrary = async (\n          processedElements: LibraryItem[\"elements\"],\n          libraryItems: LibraryItems,\n        ) => {\n          trackEvent(\"element\", \"addToLibrary\", \"ui\");\n          for (const type of LIBRARY_DISABLED_TYPES) {\n            if (processedElements.some((element) => element.type === type)) {\n              return setAppState({\n                errorMessage: t(`errors.libraryElementTypeError.${type}`),\n              });\n            }\n          }\n          const nextItems: LibraryItems = [\n            {\n              status: \"unpublished\",\n              elements: processedElements,\n              id: randomId(),\n              created: Date.now(),\n            },\n            ...libraryItems,\n          ];\n          onAddToLibrary();\n          library.setLibrary(nextItems).catch(() => {\n            setAppState({ errorMessage: t(\"alerts.errorAddingToLibrary\") });\n          });\n        };\n        addToLibrary(elements, libraryItemsData.libraryItems);\n      },\n      [onAddToLibrary, library, setAppState, libraryItemsData.libraryItems],\n    );\n\n    const libraryItems = useMemo(\n      () => libraryItemsData.libraryItems,\n      [libraryItemsData],\n    );\n\n    if (\n      libraryItemsData.status === \"loading\" &&\n      !libraryItemsData.isInitialized\n    ) {\n      return (\n        <LibraryMenuWrapper>\n          <div className=\"layer-ui__library-message\">\n            <div>\n              <Spinner size=\"2em\" />\n              <span>{t(\"labels.libraryLoadingMessage\")}</span>\n            </div>\n          </div>\n        </LibraryMenuWrapper>\n      );\n    }\n\n    const showBtn =\n      libraryItemsData.libraryItems.length > 0 || pendingElements.length > 0;\n\n    return (\n      <LibraryMenuWrapper>\n        <LibraryMenuItems\n          isLoading={libraryItemsData.status === \"loading\"}\n          libraryItems={libraryItems}\n          onAddToLibrary={_onAddToLibrary}\n          onInsertLibraryItems={onInsertLibraryItems}\n          pendingElements={pendingElements}\n          id={id}\n          libraryReturnUrl={libraryReturnUrl}\n          theme={theme}\n          onSelectItems={onSelectItems}\n          selectedItems={selectedItems}\n        />\n        {showBtn && (\n          <LibraryMenuControlButtons\n            className=\"library-menu-control-buttons--at-bottom\"\n            style={{ padding: \"16px 12px 0 12px\" }}\n            id={id}\n            libraryReturnUrl={libraryReturnUrl}\n            theme={theme}\n          />\n        )}\n      </LibraryMenuWrapper>\n    );\n  },\n);\n\nconst getPendingElements = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  selectedElementIds: UIAppState[\"selectedElementIds\"],\n) => ({\n  elements,\n  pending: getSelectedElements(\n    elements,\n    { selectedElementIds },\n    {\n      includeBoundTextElement: true,\n      includeElementsInFrames: true,\n    },\n  ),\n  selectedElementIds,\n});\n\nconst usePendingElementsMemo = (\n  appState: UIAppState,\n  app: AppClassProperties,\n) => {\n  const elements = useExcalidrawElements();\n  const [state, setState] = useState(() =>\n    getPendingElements(elements, appState.selectedElementIds),\n  );\n\n  const selectedElementVersions = useRef(\n    new Map<ExcalidrawElement[\"id\"], ExcalidrawElement[\"version\"]>(),\n  );\n\n  useEffect(() => {\n    for (const element of state.pending) {\n      selectedElementVersions.current.set(element.id, element.version);\n    }\n  }, [state.pending]);\n\n  useEffect(() => {\n    if (\n      // Only update once pointer is released.\n      // Reading directly from app.state to make it clear it's not reactive\n      // (hence, there's potential for stale state)\n      app.state.cursorButton === \"up\" &&\n      app.state.activeTool.type === \"selection\"\n    ) {\n      setState((prev) => {\n        // if selectedElementIds changed, we don't have to compare versions\n        // ---------------------------------------------------------------------\n        if (\n          !isShallowEqual(prev.selectedElementIds, appState.selectedElementIds)\n        ) {\n          selectedElementVersions.current.clear();\n          return getPendingElements(elements, appState.selectedElementIds);\n        }\n        // otherwise we need to check whether selected elements changed\n        // ---------------------------------------------------------------------\n        const elementsMap = app.scene.getNonDeletedElementsMap();\n        for (const id of Object.keys(appState.selectedElementIds)) {\n          const currVersion = elementsMap.get(id)?.version;\n          if (\n            currVersion &&\n            currVersion !== selectedElementVersions.current.get(id)\n          ) {\n            // we can't update the selectedElementVersions in here\n            // because of double render in StrictMode which would overwrite\n            // the state in the second pass with the old `prev` state.\n            // Thus, we update versions in a separate effect. May create\n            // a race condition since current effect is not fully reactive.\n            return getPendingElements(elements, appState.selectedElementIds);\n          }\n        }\n        // nothing changed\n        // ---------------------------------------------------------------------\n        return prev;\n      });\n    }\n  }, [\n    app,\n    app.state.cursorButton,\n    app.state.activeTool.type,\n    appState.selectedElementIds,\n    elements,\n  ]);\n\n  return state.pending;\n};\n\n/**\n * This component is meant to be rendered inside <Sidebar.Tab/> inside our\n * <DefaultSidebar/> or host apps Sidebar components.\n */\nexport const LibraryMenu = memo(() => {\n  const app = useApp();\n  const { onInsertElements } = app;\n  const appProps = useAppProps();\n  const appState = useUIAppState();\n  const setAppState = useExcalidrawSetAppState();\n  const [selectedItems, setSelectedItems] = useState<LibraryItem[\"id\"][]>([]);\n  const memoizedLibrary = useMemo(() => app.library, [app.library]);\n  const pendingElements = usePendingElementsMemo(appState, app);\n\n  const onInsertLibraryItems = useCallback(\n    (libraryItems: LibraryItems) => {\n      onInsertElements(distributeLibraryItemsOnSquareGrid(libraryItems));\n    },\n    [onInsertElements],\n  );\n\n  const deselectItems = useCallback(() => {\n    setAppState({\n      selectedElementIds: {},\n      selectedGroupIds: {},\n      activeEmbeddable: null,\n    });\n  }, [setAppState]);\n\n  return (\n    <LibraryMenuContent\n      pendingElements={pendingElements}\n      onInsertLibraryItems={onInsertLibraryItems}\n      onAddToLibrary={deselectItems}\n      setAppState={setAppState}\n      libraryReturnUrl={appProps.libraryReturnUrl}\n      library={memoizedLibrary}\n      id={app.id}\n      theme={appState.theme}\n      selectedItems={selectedItems}\n      onSelectItems={setSelectedItems}\n    />\n  );\n});\n", "import { loadLibraryFromBlob } from \"./blob\";\nimport type {\n  LibraryItems,\n  LibraryItem,\n  ExcalidrawImperativeAPI,\n  LibraryItemsSource,\n  LibraryItems_anyVersion,\n} from \"../types\";\nimport { restoreLibraryItems } from \"./restore\";\nimport type App from \"../components/App\";\nimport { atom, editorJotaiStore } from \"../editor-jotai\";\nimport type { ExcalidrawElement } from \"../element/types\";\nimport { getCommonBoundingBox } from \"../element/bounds\";\nimport { AbortError } from \"../errors\";\nimport { t } from \"../i18n\";\nimport { useEffect, useRef } from \"react\";\nimport {\n  URL_HASH_KEYS,\n  URL_QUERY_KEYS,\n  APP_NAME,\n  EVENT,\n  DEFAULT_SIDEBAR,\n  LIBRARY_SIDEBAR_TAB,\n} from \"../constants\";\nimport { libraryItemSvgsCache } from \"../hooks/useLibraryItemSvg\";\nimport {\n  arrayToMap,\n  cloneJSON,\n  preventUnload,\n  promiseTry,\n  resolvablePromise,\n} from \"../utils\";\nimport type { MaybePromise } from \"../utility-types\";\nimport { Emitter } from \"../emitter\";\nimport { Queue } from \"../queue\";\nimport { hashElementsVersion, hashString } from \"../element\";\nimport { toValidURL } from \"./url\";\n\n/**\n * format: hostname or hostname/pathname\n *\n * Both hostname and pathname are matched partially,\n * hostname from the end, pathname from the start, with subdomain/path\n * boundaries\n **/\nconst ALLOWED_LIBRARY_URLS = [\n  \"excalidraw.com\",\n  // when installing from github PRs\n  \"raw.githubusercontent.com/excalidraw/excalidraw-libraries\",\n];\n\ntype LibraryUpdate = {\n  /** deleted library items since last onLibraryChange event */\n  deletedItems: Map<LibraryItem[\"id\"], LibraryItem>;\n  /** newly added items in the library */\n  addedItems: Map<LibraryItem[\"id\"], LibraryItem>;\n};\n\n// an object so that we can later add more properties to it without breaking,\n// such as schema version\nexport type LibraryPersistedData = { libraryItems: LibraryItems };\n\nconst onLibraryUpdateEmitter = new Emitter<\n  [update: LibraryUpdate, libraryItems: LibraryItems]\n>();\n\nexport type LibraryAdatapterSource = \"load\" | \"save\";\n\nexport interface LibraryPersistenceAdapter {\n  /**\n   * Should load data that were previously saved into the database using the\n   * `save` method. Should throw if saving fails.\n   *\n   * Will be used internally in multiple places, such as during save to\n   * in order to reconcile changes with latest store data.\n   */\n  load(metadata: {\n    /**\n     * Indicates whether we're loading data for save purposes, or reading\n     * purposes, in which case host app can implement more aggressive caching.\n     */\n    source: LibraryAdatapterSource;\n  }): MaybePromise<{ libraryItems: LibraryItems_anyVersion } | null>;\n  /** Should persist to the database as is (do no change the data structure). */\n  save(libraryData: LibraryPersistedData): MaybePromise<void>;\n}\n\nexport interface LibraryMigrationAdapter {\n  /**\n   * loads data from legacy data source. Returns `null` if no data is\n   * to be migrated.\n   */\n  load(): MaybePromise<{ libraryItems: LibraryItems_anyVersion } | null>;\n\n  /** clears entire storage afterwards */\n  clear(): MaybePromise<void>;\n}\n\nexport const libraryItemsAtom = atom<{\n  status: \"loading\" | \"loaded\";\n  /** indicates whether library is initialized with library items (has gone\n   * through at least one update). Used in UI. Specific to this atom only. */\n  isInitialized: boolean;\n  libraryItems: LibraryItems;\n}>({ status: \"loaded\", isInitialized: false, libraryItems: [] });\n\nconst cloneLibraryItems = (libraryItems: LibraryItems): LibraryItems =>\n  cloneJSON(libraryItems);\n\n/**\n * checks if library item does not exist already in current library\n */\nconst isUniqueItem = (\n  existingLibraryItems: LibraryItems,\n  targetLibraryItem: LibraryItem,\n) => {\n  return !existingLibraryItems.find((libraryItem) => {\n    if (libraryItem.elements.length !== targetLibraryItem.elements.length) {\n      return false;\n    }\n\n    // detect z-index difference by checking the excalidraw elements\n    // are in order\n    return libraryItem.elements.every((libItemExcalidrawItem, idx) => {\n      return (\n        libItemExcalidrawItem.id === targetLibraryItem.elements[idx].id &&\n        libItemExcalidrawItem.versionNonce ===\n          targetLibraryItem.elements[idx].versionNonce\n      );\n    });\n  });\n};\n\n/** Merges otherItems into localItems. Unique items in otherItems array are\n    sorted first. */\nexport const mergeLibraryItems = (\n  localItems: LibraryItems,\n  otherItems: LibraryItems,\n): LibraryItems => {\n  const newItems = [];\n  for (const item of otherItems) {\n    if (isUniqueItem(localItems, item)) {\n      newItems.push(item);\n    }\n  }\n\n  return [...newItems, ...localItems];\n};\n\n/**\n * Returns { deletedItems, addedItems } maps of all added and deleted items\n * since last onLibraryChange event.\n *\n * Host apps are recommended to diff with the latest state they have.\n */\nconst createLibraryUpdate = (\n  prevLibraryItems: LibraryItems,\n  nextLibraryItems: LibraryItems,\n): LibraryUpdate => {\n  const nextItemsMap = arrayToMap(nextLibraryItems);\n\n  const update: LibraryUpdate = {\n    deletedItems: new Map<LibraryItem[\"id\"], LibraryItem>(),\n    addedItems: new Map<LibraryItem[\"id\"], LibraryItem>(),\n  };\n\n  for (const item of prevLibraryItems) {\n    if (!nextItemsMap.has(item.id)) {\n      update.deletedItems.set(item.id, item);\n    }\n  }\n\n  const prevItemsMap = arrayToMap(prevLibraryItems);\n\n  for (const item of nextLibraryItems) {\n    if (!prevItemsMap.has(item.id)) {\n      update.addedItems.set(item.id, item);\n    }\n  }\n\n  return update;\n};\n\nclass Library {\n  /** latest libraryItems */\n  private currLibraryItems: LibraryItems = [];\n  /** snapshot of library items since last onLibraryChange call */\n  private prevLibraryItems = cloneLibraryItems(this.currLibraryItems);\n\n  private app: App;\n\n  constructor(app: App) {\n    this.app = app;\n  }\n\n  private updateQueue: Promise<LibraryItems>[] = [];\n\n  private getLastUpdateTask = (): Promise<LibraryItems> | undefined => {\n    return this.updateQueue[this.updateQueue.length - 1];\n  };\n\n  private notifyListeners = () => {\n    if (this.updateQueue.length > 0) {\n      editorJotaiStore.set(libraryItemsAtom, (s) => ({\n        status: \"loading\",\n        libraryItems: this.currLibraryItems,\n        isInitialized: s.isInitialized,\n      }));\n    } else {\n      editorJotaiStore.set(libraryItemsAtom, {\n        status: \"loaded\",\n        libraryItems: this.currLibraryItems,\n        isInitialized: true,\n      });\n      try {\n        const prevLibraryItems = this.prevLibraryItems;\n        this.prevLibraryItems = cloneLibraryItems(this.currLibraryItems);\n\n        const nextLibraryItems = cloneLibraryItems(this.currLibraryItems);\n\n        this.app.props.onLibraryChange?.(nextLibraryItems);\n\n        // for internal use in `useHandleLibrary` hook\n        onLibraryUpdateEmitter.trigger(\n          createLibraryUpdate(prevLibraryItems, nextLibraryItems),\n          nextLibraryItems,\n        );\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n\n  /** call on excalidraw instance unmount */\n  destroy = () => {\n    this.updateQueue = [];\n    this.currLibraryItems = [];\n    editorJotaiStore.set(libraryItemSvgsCache, new Map());\n    // TODO uncomment after/if we make jotai store scoped to each excal instance\n    // jotaiStore.set(libraryItemsAtom, {\n    //   status: \"loading\",\n    //   isInitialized: false,\n    //   libraryItems: [],\n    // });\n  };\n\n  resetLibrary = () => {\n    return this.setLibrary([]);\n  };\n\n  /**\n   * @returns latest cloned libraryItems. Awaits all in-progress updates first.\n   */\n  getLatestLibrary = (): Promise<LibraryItems> => {\n    return new Promise(async (resolve) => {\n      try {\n        const libraryItems = await (this.getLastUpdateTask() ||\n          this.currLibraryItems);\n        if (this.updateQueue.length > 0) {\n          resolve(this.getLatestLibrary());\n        } else {\n          resolve(cloneLibraryItems(libraryItems));\n        }\n      } catch (error) {\n        return resolve(this.currLibraryItems);\n      }\n    });\n  };\n\n  // NOTE this is a high-level public API (exposed on ExcalidrawAPI) with\n  // a slight overhead (always restoring library items). For internal use\n  // where merging isn't needed, use `library.setLibrary()` directly.\n  updateLibrary = async ({\n    libraryItems,\n    prompt = false,\n    merge = false,\n    openLibraryMenu = false,\n    defaultStatus = \"unpublished\",\n  }: {\n    libraryItems: LibraryItemsSource;\n    merge?: boolean;\n    prompt?: boolean;\n    openLibraryMenu?: boolean;\n    defaultStatus?: \"unpublished\" | \"published\";\n  }): Promise<LibraryItems> => {\n    if (openLibraryMenu) {\n      this.app.setState({\n        openSidebar: { name: DEFAULT_SIDEBAR.name, tab: LIBRARY_SIDEBAR_TAB },\n      });\n    }\n\n    return this.setLibrary(() => {\n      return new Promise<LibraryItems>(async (resolve, reject) => {\n        try {\n          const source = await (typeof libraryItems === \"function\" &&\n          !(libraryItems instanceof Blob)\n            ? libraryItems(this.currLibraryItems)\n            : libraryItems);\n\n          let nextItems;\n\n          if (source instanceof Blob) {\n            nextItems = await loadLibraryFromBlob(source, defaultStatus);\n          } else {\n            nextItems = restoreLibraryItems(source, defaultStatus);\n          }\n          if (\n            !prompt ||\n            window.confirm(\n              t(\"alerts.confirmAddLibrary\", {\n                numShapes: nextItems.length,\n              }),\n            )\n          ) {\n            if (prompt) {\n              // focus container if we've prompted. We focus conditionally\n              // lest `props.autoFocus` is disabled (in which case we should\n              // focus only on user action such as prompt confirm)\n              this.app.focusContainer();\n            }\n\n            if (merge) {\n              resolve(mergeLibraryItems(this.currLibraryItems, nextItems));\n            } else {\n              resolve(nextItems);\n            }\n          } else {\n            reject(new AbortError());\n          }\n        } catch (error: any) {\n          reject(error);\n        }\n      });\n    });\n  };\n\n  setLibrary = (\n    /**\n     * LibraryItems that will replace current items. Can be a function which\n     * will be invoked after all previous tasks are resolved\n     * (this is the prefered way to update the library to avoid race conditions,\n     * but you'll want to manually merge the library items in the callback\n     *  - which is what we're doing in Library.importLibrary()).\n     *\n     * If supplied promise is rejected with AbortError, we swallow it and\n     * do not update the library.\n     */\n    libraryItems:\n      | LibraryItems\n      | Promise<LibraryItems>\n      | ((\n          latestLibraryItems: LibraryItems,\n        ) => LibraryItems | Promise<LibraryItems>),\n  ): Promise<LibraryItems> => {\n    const task = new Promise<LibraryItems>(async (resolve, reject) => {\n      try {\n        await this.getLastUpdateTask();\n\n        if (typeof libraryItems === \"function\") {\n          libraryItems = libraryItems(this.currLibraryItems);\n        }\n\n        this.currLibraryItems = cloneLibraryItems(await libraryItems);\n\n        resolve(this.currLibraryItems);\n      } catch (error: any) {\n        reject(error);\n      }\n    })\n      .catch((error) => {\n        if (error.name === \"AbortError\") {\n          console.warn(\"Library update aborted by user\");\n          return this.currLibraryItems;\n        }\n        throw error;\n      })\n      .finally(() => {\n        this.updateQueue = this.updateQueue.filter((_task) => _task !== task);\n        this.notifyListeners();\n      });\n\n    this.updateQueue.push(task);\n    this.notifyListeners();\n\n    return task;\n  };\n}\n\nexport default Library;\n\nexport const distributeLibraryItemsOnSquareGrid = (\n  libraryItems: LibraryItems,\n) => {\n  const PADDING = 50;\n  const ITEMS_PER_ROW = Math.ceil(Math.sqrt(libraryItems.length));\n\n  const resElements: ExcalidrawElement[] = [];\n\n  const getMaxHeightPerRow = (row: number) => {\n    const maxHeight = libraryItems\n      .slice(row * ITEMS_PER_ROW, row * ITEMS_PER_ROW + ITEMS_PER_ROW)\n      .reduce((acc, item) => {\n        const { height } = getCommonBoundingBox(item.elements);\n        return Math.max(acc, height);\n      }, 0);\n    return maxHeight;\n  };\n\n  const getMaxWidthPerCol = (targetCol: number) => {\n    let index = 0;\n    let currCol = 0;\n    let maxWidth = 0;\n    for (const item of libraryItems) {\n      if (index % ITEMS_PER_ROW === 0) {\n        currCol = 0;\n      }\n      if (currCol === targetCol) {\n        const { width } = getCommonBoundingBox(item.elements);\n        maxWidth = Math.max(maxWidth, width);\n      }\n      index++;\n      currCol++;\n    }\n    return maxWidth;\n  };\n\n  let colOffsetX = 0;\n  let rowOffsetY = 0;\n\n  let maxHeightCurrRow = 0;\n  let maxWidthCurrCol = 0;\n\n  let index = 0;\n  let col = 0;\n  let row = 0;\n\n  for (const item of libraryItems) {\n    if (index && index % ITEMS_PER_ROW === 0) {\n      rowOffsetY += maxHeightCurrRow + PADDING;\n      colOffsetX = 0;\n      col = 0;\n      row++;\n    }\n\n    if (col === 0) {\n      maxHeightCurrRow = getMaxHeightPerRow(row);\n    }\n    maxWidthCurrCol = getMaxWidthPerCol(col);\n\n    const { minX, minY, width, height } = getCommonBoundingBox(item.elements);\n    const offsetCenterX = (maxWidthCurrCol - width) / 2;\n    const offsetCenterY = (maxHeightCurrRow - height) / 2;\n    resElements.push(\n      // eslint-disable-next-line no-loop-func\n      ...item.elements.map((element) => ({\n        ...element,\n        x:\n          element.x +\n          // offset for column\n          colOffsetX +\n          // offset to center in given square grid\n          offsetCenterX -\n          // subtract minX so that given item starts at 0 coord\n          minX,\n        y:\n          element.y +\n          // offset for row\n          rowOffsetY +\n          // offset to center in given square grid\n          offsetCenterY -\n          // subtract minY so that given item starts at 0 coord\n          minY,\n      })),\n    );\n    colOffsetX += maxWidthCurrCol + PADDING;\n    index++;\n    col++;\n  }\n\n  return resElements;\n};\n\nexport const validateLibraryUrl = (\n  libraryUrl: string,\n  /**\n   * @returns `true` if the URL is valid, throws otherwise.\n   */\n  validator:\n    | ((libraryUrl: string) => boolean)\n    | string[] = ALLOWED_LIBRARY_URLS,\n): true => {\n  if (\n    typeof validator === \"function\"\n      ? validator(libraryUrl)\n      : validator.some((allowedUrlDef) => {\n          const allowedUrl = new URL(\n            `https://${allowedUrlDef.replace(/^https?:\\/\\//, \"\")}`,\n          );\n\n          const { hostname, pathname } = new URL(libraryUrl);\n\n          return (\n            new RegExp(`(^|\\\\.)${allowedUrl.hostname}$`).test(hostname) &&\n            new RegExp(\n              `^${allowedUrl.pathname.replace(/\\/+$/, \"\")}(/+|$)`,\n            ).test(pathname)\n          );\n        })\n  ) {\n    return true;\n  }\n\n  throw new Error(`Invalid or disallowed library URL: \"${libraryUrl}\"`);\n};\n\nexport const parseLibraryTokensFromUrl = () => {\n  const libraryUrl =\n    // current\n    new URLSearchParams(window.location.hash.slice(1)).get(\n      URL_HASH_KEYS.addLibrary,\n    ) ||\n    // legacy, kept for compat reasons\n    new URLSearchParams(window.location.search).get(URL_QUERY_KEYS.addLibrary);\n  const idToken = libraryUrl\n    ? new URLSearchParams(window.location.hash.slice(1)).get(\"token\")\n    : null;\n\n  return libraryUrl ? { libraryUrl, idToken } : null;\n};\n\nclass AdapterTransaction {\n  static queue = new Queue();\n\n  static async getLibraryItems(\n    adapter: LibraryPersistenceAdapter,\n    source: LibraryAdatapterSource,\n    _queue = true,\n  ): Promise<LibraryItems> {\n    const task = () =>\n      new Promise<LibraryItems>(async (resolve, reject) => {\n        try {\n          const data = await adapter.load({ source });\n          resolve(restoreLibraryItems(data?.libraryItems || [], \"published\"));\n        } catch (error: any) {\n          reject(error);\n        }\n      });\n\n    if (_queue) {\n      return AdapterTransaction.queue.push(task);\n    }\n\n    return task();\n  }\n\n  static run = async <T>(\n    adapter: LibraryPersistenceAdapter,\n    fn: (transaction: AdapterTransaction) => Promise<T>,\n  ) => {\n    const transaction = new AdapterTransaction(adapter);\n    return AdapterTransaction.queue.push(() => fn(transaction));\n  };\n\n  // ------------------\n\n  private adapter: LibraryPersistenceAdapter;\n\n  constructor(adapter: LibraryPersistenceAdapter) {\n    this.adapter = adapter;\n  }\n\n  getLibraryItems(source: LibraryAdatapterSource) {\n    return AdapterTransaction.getLibraryItems(this.adapter, source, false);\n  }\n}\n\nlet lastSavedLibraryItemsHash = 0;\nlet librarySaveCounter = 0;\n\nexport const getLibraryItemsHash = (items: LibraryItems) => {\n  return hashString(\n    items\n      .map((item) => {\n        return `${item.id}:${hashElementsVersion(item.elements)}`;\n      })\n      .sort()\n      .join(),\n  );\n};\n\nconst persistLibraryUpdate = async (\n  adapter: LibraryPersistenceAdapter,\n  update: LibraryUpdate,\n): Promise<LibraryItems> => {\n  try {\n    librarySaveCounter++;\n\n    return await AdapterTransaction.run(adapter, async (transaction) => {\n      const nextLibraryItemsMap = arrayToMap(\n        await transaction.getLibraryItems(\"save\"),\n      );\n\n      for (const [id] of update.deletedItems) {\n        nextLibraryItemsMap.delete(id);\n      }\n\n      const addedItems: LibraryItem[] = [];\n\n      // we want to merge current library items with the ones stored in the\n      // DB so that we don't lose any elements that for some reason aren't\n      // in the current editor library, which could happen when:\n      //\n      // 1. we haven't received an update deleting some elements\n      //    (in which case it's still better to keep them in the DB lest\n      //     it was due to a different reason)\n      // 2. we keep a single DB for all active editors, but the editors'\n      //    libraries aren't synced or there's a race conditions during\n      //    syncing\n      // 3. some other race condition, e.g. during init where emit updates\n      //    for partial updates (e.g. you install a 3rd party library and\n      //    init from DB only after \u2014 we emit events for both updates)\n      for (const [id, item] of update.addedItems) {\n        if (nextLibraryItemsMap.has(id)) {\n          // replace item with latest version\n          // TODO we could prefer the newer item instead\n          nextLibraryItemsMap.set(id, item);\n        } else {\n          // we want to prepend the new items with the ones that are already\n          // in DB to preserve the ordering we do in editor (newly added\n          // items are added to the beginning)\n          addedItems.push(item);\n        }\n      }\n\n      const nextLibraryItems = addedItems.concat(\n        Array.from(nextLibraryItemsMap.values()),\n      );\n\n      const version = getLibraryItemsHash(nextLibraryItems);\n\n      if (version !== lastSavedLibraryItemsHash) {\n        await adapter.save({ libraryItems: nextLibraryItems });\n      }\n\n      lastSavedLibraryItemsHash = version;\n\n      return nextLibraryItems;\n    });\n  } finally {\n    librarySaveCounter--;\n  }\n};\n\nexport const useHandleLibrary = (\n  opts: {\n    excalidrawAPI: ExcalidrawImperativeAPI | null;\n    /**\n     * Return `true` if the library install url should be allowed.\n     * If not supplied, only the excalidraw.com base domain is allowed.\n     */\n    validateLibraryUrl?: (libraryUrl: string) => boolean;\n  } & (\n    | {\n        /** @deprecated we recommend using `opts.adapter` instead */\n        getInitialLibraryItems?: () => MaybePromise<LibraryItemsSource>;\n      }\n    | {\n        adapter: LibraryPersistenceAdapter;\n        /**\n         * Adapter that takes care of loading data from legacy data store.\n         * Supply this if you want to migrate data on initial load from legacy\n         * data store.\n         *\n         * Can be a different LibraryPersistenceAdapter.\n         */\n        migrationAdapter?: LibraryMigrationAdapter;\n      }\n  ),\n) => {\n  const { excalidrawAPI } = opts;\n\n  const optsRef = useRef(opts);\n  optsRef.current = opts;\n\n  const isLibraryLoadedRef = useRef(false);\n\n  useEffect(() => {\n    if (!excalidrawAPI) {\n      return;\n    }\n\n    // reset on editor remount (excalidrawAPI changed)\n    isLibraryLoadedRef.current = false;\n\n    const importLibraryFromURL = async ({\n      libraryUrl,\n      idToken,\n    }: {\n      libraryUrl: string;\n      idToken: string | null;\n    }) => {\n      const libraryPromise = new Promise<Blob>(async (resolve, reject) => {\n        try {\n          libraryUrl = decodeURIComponent(libraryUrl);\n\n          libraryUrl = toValidURL(libraryUrl);\n\n          validateLibraryUrl(libraryUrl, optsRef.current.validateLibraryUrl);\n\n          const request = await fetch(libraryUrl);\n          const blob = await request.blob();\n          resolve(blob);\n        } catch (error: any) {\n          reject(error);\n        }\n      });\n\n      const shouldPrompt = idToken !== excalidrawAPI.id;\n\n      // wait for the tab to be focused before continuing in case we'll prompt\n      // for confirmation\n      await (shouldPrompt && document.hidden\n        ? new Promise<void>((resolve) => {\n            window.addEventListener(\"focus\", () => resolve(), {\n              once: true,\n            });\n          })\n        : null);\n\n      try {\n        await excalidrawAPI.updateLibrary({\n          libraryItems: libraryPromise,\n          prompt: shouldPrompt,\n          merge: true,\n          defaultStatus: \"published\",\n          openLibraryMenu: true,\n        });\n      } catch (error: any) {\n        excalidrawAPI.updateScene({\n          appState: {\n            errorMessage: error.message,\n          },\n        });\n        throw error;\n      } finally {\n        if (window.location.hash.includes(URL_HASH_KEYS.addLibrary)) {\n          const hash = new URLSearchParams(window.location.hash.slice(1));\n          hash.delete(URL_HASH_KEYS.addLibrary);\n          window.history.replaceState({}, APP_NAME, `#${hash.toString()}`);\n        } else if (window.location.search.includes(URL_QUERY_KEYS.addLibrary)) {\n          const query = new URLSearchParams(window.location.search);\n          query.delete(URL_QUERY_KEYS.addLibrary);\n          window.history.replaceState({}, APP_NAME, `?${query.toString()}`);\n        }\n      }\n    };\n    const onHashChange = (event: HashChangeEvent) => {\n      event.preventDefault();\n      const libraryUrlTokens = parseLibraryTokensFromUrl();\n      if (libraryUrlTokens) {\n        event.stopImmediatePropagation();\n        // If hash changed and it contains library url, import it and replace\n        // the url to its previous state (important in case of collaboration\n        // and similar).\n        // Using history API won't trigger another hashchange.\n        window.history.replaceState({}, \"\", event.oldURL);\n\n        importLibraryFromURL(libraryUrlTokens);\n      }\n    };\n\n    // -------------------------------------------------------------------------\n    // ---------------------------------- init ---------------------------------\n    // -------------------------------------------------------------------------\n\n    const libraryUrlTokens = parseLibraryTokensFromUrl();\n\n    if (libraryUrlTokens) {\n      importLibraryFromURL(libraryUrlTokens);\n    }\n\n    // ------ (A) init load (legacy) -------------------------------------------\n    if (\n      \"getInitialLibraryItems\" in optsRef.current &&\n      optsRef.current.getInitialLibraryItems\n    ) {\n      console.warn(\n        \"useHandleLibrar `opts.getInitialLibraryItems` is deprecated. Use `opts.adapter` instead.\",\n      );\n\n      Promise.resolve(optsRef.current.getInitialLibraryItems())\n        .then((libraryItems) => {\n          excalidrawAPI.updateLibrary({\n            libraryItems,\n            // merge with current library items because we may have already\n            // populated it (e.g. by installing 3rd party library which can\n            // happen before the DB data is loaded)\n            merge: true,\n          });\n        })\n        .catch((error: any) => {\n          console.error(\n            `UseHandeLibrary getInitialLibraryItems failed: ${error?.message}`,\n          );\n        });\n    }\n\n    // -------------------------------------------------------------------------\n    // --------------------------------------------------------- init load -----\n    // -------------------------------------------------------------------------\n\n    // ------ (B) data source adapter ------------------------------------------\n\n    if (\"adapter\" in optsRef.current && optsRef.current.adapter) {\n      const adapter = optsRef.current.adapter;\n      const migrationAdapter = optsRef.current.migrationAdapter;\n\n      const initDataPromise = resolvablePromise<LibraryItems | null>();\n\n      // migrate from old data source if needed\n      // (note, if `migrate` function is defined, we always migrate even\n      //  if the data has already been migrated. In that case it'll be a no-op,\n      //  though with several unnecessary steps \u2014 we will still load latest\n      //  DB data during the `persistLibraryChange()` step)\n      // -----------------------------------------------------------------------\n      if (migrationAdapter) {\n        initDataPromise.resolve(\n          promiseTry(migrationAdapter.load)\n            .then(async (libraryData) => {\n              let restoredData: LibraryItems | null = null;\n              try {\n                // if no library data to migrate, assume no migration needed\n                // and skip persisting to new data store, as well as well\n                // clearing the old store via `migrationAdapter.clear()`\n                if (!libraryData) {\n                  return AdapterTransaction.getLibraryItems(adapter, \"load\");\n                }\n\n                restoredData = restoreLibraryItems(\n                  libraryData.libraryItems || [],\n                  \"published\",\n                );\n\n                // we don't queue this operation because it's running inside\n                // a promise that's running inside Library update queue itself\n                const nextItems = await persistLibraryUpdate(\n                  adapter,\n                  createLibraryUpdate([], restoredData),\n                );\n                try {\n                  await migrationAdapter.clear();\n                } catch (error: any) {\n                  console.error(\n                    `couldn't delete legacy library data: ${error.message}`,\n                  );\n                }\n                // migration suceeded, load migrated data\n                return nextItems;\n              } catch (error: any) {\n                console.error(\n                  `couldn't migrate legacy library data: ${error.message}`,\n                );\n                // migration failed, load data from previous store, if any\n                return restoredData;\n              }\n            })\n            // errors caught during `migrationAdapter.load()`\n            .catch((error: any) => {\n              console.error(`error during library migration: ${error.message}`);\n              // as a default, load latest library from current data source\n              return AdapterTransaction.getLibraryItems(adapter, \"load\");\n            }),\n        );\n      } else {\n        initDataPromise.resolve(\n          promiseTry(AdapterTransaction.getLibraryItems, adapter, \"load\"),\n        );\n      }\n\n      // load initial (or migrated) library\n      excalidrawAPI\n        .updateLibrary({\n          libraryItems: initDataPromise.then((libraryItems) => {\n            const _libraryItems = libraryItems || [];\n            lastSavedLibraryItemsHash = getLibraryItemsHash(_libraryItems);\n            return _libraryItems;\n          }),\n          // merge with current library items because we may have already\n          // populated it (e.g. by installing 3rd party library which can\n          // happen before the DB data is loaded)\n          merge: true,\n        })\n        .finally(() => {\n          isLibraryLoadedRef.current = true;\n        });\n    }\n    // ---------------------------------------------- data source datapter -----\n\n    window.addEventListener(EVENT.HASHCHANGE, onHashChange);\n    return () => {\n      window.removeEventListener(EVENT.HASHCHANGE, onHashChange);\n    };\n  }, [\n    // important this useEffect only depends on excalidrawAPI so it only reruns\n    // on editor remounts (the excalidrawAPI changes)\n    excalidrawAPI,\n  ]);\n\n  // This effect is run without excalidrawAPI dependency so that host apps\n  // can run this hook outside of an active editor instance and the library\n  // update queue/loop survives editor remounts\n  //\n  // This effect is still only meant to be run if host apps supply an persitence\n  // adapter. If we don't have access to it, it the update listener doesn't\n  // do anything.\n  useEffect(\n    () => {\n      // on update, merge with current library items and persist\n      // -----------------------------------------------------------------------\n      const unsubOnLibraryUpdate = onLibraryUpdateEmitter.on(\n        async (update, nextLibraryItems) => {\n          const isLoaded = isLibraryLoadedRef.current;\n          // we want to operate with the latest adapter, but we don't want this\n          // effect to rerun on every adapter change in case host apps' adapter\n          // isn't stable\n          const adapter =\n            (\"adapter\" in optsRef.current && optsRef.current.adapter) || null;\n          try {\n            if (adapter) {\n              if (\n                // if nextLibraryItems hash identical to previously saved hash,\n                // exit early, even if actual upstream state ends up being\n                // different (e.g. has more data than we have locally), as it'd\n                // be low-impact scenario.\n                lastSavedLibraryItemsHash !==\n                getLibraryItemsHash(nextLibraryItems)\n              ) {\n                await persistLibraryUpdate(adapter, update);\n              }\n            }\n          } catch (error: any) {\n            console.error(\n              `couldn't persist library update: ${error.message}`,\n              update,\n            );\n\n            // currently we only show error if an editor is loaded\n            if (isLoaded && optsRef.current.excalidrawAPI) {\n              optsRef.current.excalidrawAPI.updateScene({\n                appState: {\n                  errorMessage: t(\"errors.saveLibraryError\"),\n                },\n              });\n            }\n          }\n        },\n      );\n\n      const onUnload = (event: Event) => {\n        if (librarySaveCounter) {\n          preventUnload(event);\n        }\n      };\n\n      window.addEventListener(EVENT.BEFORE_UNLOAD, onUnload);\n\n      return () => {\n        window.removeEventListener(EVENT.BEFORE_UNLOAD, onUnload);\n        unsubOnLibraryUpdate();\n        lastSavedLibraryItemsHash = 0;\n        librarySaveCounter = 0;\n      };\n    },\n    [\n      // this effect must not have any deps so it doesn't rerun\n    ],\n  );\n};\n", "import { useEffect, useState } from \"react\";\nimport { COLOR_PALETTE } from \"../colors\";\nimport { atom, useAtom } from \"../editor-jotai\";\nimport { exportToSvg } from \"@excalidraw/utils/export\";\nimport type { LibraryItem } from \"../types\";\n\nexport type SvgCache = Map<LibraryItem[\"id\"], SVGSVGElement>;\n\nexport const libraryItemSvgsCache = atom<SvgCache>(new Map());\n\nconst exportLibraryItemToSvg = async (elements: LibraryItem[\"elements\"]) => {\n  return await exportToSvg({\n    elements,\n    appState: {\n      exportBackground: false,\n      viewBackgroundColor: COLOR_PALETTE.white,\n    },\n    files: null,\n    renderEmbeddables: false,\n    skipInliningFonts: true,\n  });\n};\n\nexport const useLibraryItemSvg = (\n  id: LibraryItem[\"id\"] | null,\n  elements: LibraryItem[\"elements\"] | undefined,\n  svgCache: SvgCache,\n): SVGSVGElement | undefined => {\n  const [svg, setSvg] = useState<SVGSVGElement>();\n\n  useEffect(() => {\n    if (elements) {\n      if (id) {\n        // Try to load cached svg\n        const cachedSvg = svgCache.get(id);\n\n        if (cachedSvg) {\n          setSvg(cachedSvg);\n        } else {\n          // When there is no svg in cache export it and save to cache\n          (async () => {\n            const exportedSvg = await exportLibraryItemToSvg(elements);\n            // TODO: should likely be removed for custom fonts\n            exportedSvg.querySelector(\".style-fonts\")?.remove();\n\n            if (exportedSvg) {\n              svgCache.set(id, exportedSvg);\n              setSvg(exportedSvg);\n            }\n          })();\n        }\n      } else {\n        // When we have no id (usualy selected items from canvas) just export the svg\n        (async () => {\n          const exportedSvg = await exportLibraryItemToSvg(elements);\n          setSvg(exportedSvg);\n        })();\n      }\n    }\n  }, [id, elements, svgCache, setSvg]);\n\n  return svg;\n};\n\nexport const useLibraryCache = () => {\n  const [svgCache] = useAtom(libraryItemSvgsCache);\n\n  const clearLibraryCache = () => svgCache.clear();\n\n  const deleteItemsFromLibraryCache = (items: LibraryItem[\"id\"][]) => {\n    items.forEach((item) => svgCache.delete(item));\n  };\n\n  return {\n    clearLibraryCache,\n    deleteItemsFromLibraryCache,\n    svgCache,\n  };\n};\n", "import type { MaybePromise } from \"./utility-types\";\nimport type { ResolvablePromise } from \"./utils\";\nimport { promiseTry, resolvablePromise } from \"./utils\";\n\ntype Job<T, TArgs extends unknown[]> = (...args: TArgs) => MaybePromise<T>;\n\ntype QueueJob<T, TArgs extends unknown[]> = {\n  jobFactory: Job<T, TArgs>;\n  promise: ResolvablePromise<T>;\n  args: TArgs;\n};\n\nexport class Queue {\n  private jobs: QueueJob<any, any[]>[] = [];\n  private running = false;\n\n  private tick() {\n    if (this.running) {\n      return;\n    }\n    const job = this.jobs.shift();\n    if (job) {\n      this.running = true;\n      job.promise.resolve(\n        promiseTry(job.jobFactory, ...job.args).finally(() => {\n          this.running = false;\n          this.tick();\n        }),\n      );\n    } else {\n      this.running = false;\n    }\n  }\n\n  push<TValue, TArgs extends unknown[]>(\n    jobFactory: Job<TValue, TArgs>,\n    ...args: TArgs\n  ): Promise<TValue> {\n    const promise = resolvablePromise<TValue>();\n    this.jobs.push({ jobFactory, promise, args });\n\n    this.tick();\n\n    return promise;\n  }\n}\n", "import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { serializeLibraryAsJSON } from \"../data/json\";\nimport { t } from \"../i18n\";\nimport type {\n  ExcalidrawProps,\n  LibraryItem,\n  LibraryItems,\n  UIAppState,\n} from \"../types\";\nimport { arrayToMap } from \"../utils\";\nimport Stack from \"./Stack\";\nimport { MIME_TYPES } from \"../constants\";\nimport Spinner from \"./Spinner\";\nimport { duplicateElements } from \"../element/newElement\";\nimport { LibraryMenuControlButtons } from \"./LibraryMenuControlButtons\";\nimport { LibraryDropdownMenu } from \"./LibraryMenuHeaderContent\";\nimport {\n  LibraryMenuSection,\n  LibraryMenuSectionGrid,\n} from \"./LibraryMenuSection\";\nimport { useScrollPosition } from \"../hooks/useScrollPosition\";\nimport { useLibraryCache } from \"../hooks/useLibraryItemSvg\";\n\nimport \"./LibraryMenuItems.scss\";\n\n// using an odd number of items per batch so the rendering creates an irregular\n// pattern which looks more organic\nconst ITEMS_RENDERED_PER_BATCH = 17;\n// when render outputs cached we can render many more items per batch to\n// speed it up\nconst CACHED_ITEMS_RENDERED_PER_BATCH = 64;\n\nexport default function LibraryMenuItems({\n  isLoading,\n  libraryItems,\n  onAddToLibrary,\n  onInsertLibraryItems,\n  pendingElements,\n  theme,\n  id,\n  libraryReturnUrl,\n  onSelectItems,\n  selectedItems,\n}: {\n  isLoading: boolean;\n  libraryItems: LibraryItems;\n  pendingElements: LibraryItem[\"elements\"];\n  onInsertLibraryItems: (libraryItems: LibraryItems) => void;\n  onAddToLibrary: (elements: LibraryItem[\"elements\"]) => void;\n  libraryReturnUrl: ExcalidrawProps[\"libraryReturnUrl\"];\n  theme: UIAppState[\"theme\"];\n  id: string;\n  selectedItems: LibraryItem[\"id\"][];\n  onSelectItems: (id: LibraryItem[\"id\"][]) => void;\n}) {\n  const libraryContainerRef = useRef<HTMLDivElement>(null);\n  const scrollPosition = useScrollPosition<HTMLDivElement>(libraryContainerRef);\n\n  // This effect has to be called only on first render, therefore  `scrollPosition` isn't in the dependency array\n  useEffect(() => {\n    if (scrollPosition > 0) {\n      libraryContainerRef.current?.scrollTo(0, scrollPosition);\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const { svgCache } = useLibraryCache();\n  const unpublishedItems = useMemo(\n    () => libraryItems.filter((item) => item.status !== \"published\"),\n    [libraryItems],\n  );\n\n  const publishedItems = useMemo(\n    () => libraryItems.filter((item) => item.status === \"published\"),\n    [libraryItems],\n  );\n\n  const showBtn = !libraryItems.length && !pendingElements.length;\n\n  const isLibraryEmpty =\n    !pendingElements.length &&\n    !unpublishedItems.length &&\n    !publishedItems.length;\n\n  const [lastSelectedItem, setLastSelectedItem] = useState<\n    LibraryItem[\"id\"] | null\n  >(null);\n\n  const onItemSelectToggle = useCallback(\n    (id: LibraryItem[\"id\"], event: React.MouseEvent) => {\n      const shouldSelect = !selectedItems.includes(id);\n\n      const orderedItems = [...unpublishedItems, ...publishedItems];\n\n      if (shouldSelect) {\n        if (event.shiftKey && lastSelectedItem) {\n          const rangeStart = orderedItems.findIndex(\n            (item) => item.id === lastSelectedItem,\n          );\n          const rangeEnd = orderedItems.findIndex((item) => item.id === id);\n\n          if (rangeStart === -1 || rangeEnd === -1) {\n            onSelectItems([...selectedItems, id]);\n            return;\n          }\n\n          const selectedItemsMap = arrayToMap(selectedItems);\n          const nextSelectedIds = orderedItems.reduce(\n            (acc: LibraryItem[\"id\"][], item, idx) => {\n              if (\n                (idx >= rangeStart && idx <= rangeEnd) ||\n                selectedItemsMap.has(item.id)\n              ) {\n                acc.push(item.id);\n              }\n              return acc;\n            },\n            [],\n          );\n\n          onSelectItems(nextSelectedIds);\n        } else {\n          onSelectItems([...selectedItems, id]);\n        }\n        setLastSelectedItem(id);\n      } else {\n        setLastSelectedItem(null);\n        onSelectItems(selectedItems.filter((_id) => _id !== id));\n      }\n    },\n    [\n      lastSelectedItem,\n      onSelectItems,\n      publishedItems,\n      selectedItems,\n      unpublishedItems,\n    ],\n  );\n\n  const getInsertedElements = useCallback(\n    (id: string) => {\n      let targetElements;\n      if (selectedItems.includes(id)) {\n        targetElements = libraryItems.filter((item) =>\n          selectedItems.includes(item.id),\n        );\n      } else {\n        targetElements = libraryItems.filter((item) => item.id === id);\n      }\n      return targetElements.map((item) => {\n        return {\n          ...item,\n          // duplicate each library item before inserting on canvas to confine\n          // ids and bindings to each library item. See #6465\n          elements: duplicateElements(item.elements, { randomizeSeed: true }),\n        };\n      });\n    },\n    [libraryItems, selectedItems],\n  );\n\n  const onItemDrag = useCallback(\n    (id: LibraryItem[\"id\"], event: React.DragEvent) => {\n      event.dataTransfer.setData(\n        MIME_TYPES.excalidrawlib,\n        serializeLibraryAsJSON(getInsertedElements(id)),\n      );\n    },\n    [getInsertedElements],\n  );\n\n  const isItemSelected = useCallback(\n    (id: LibraryItem[\"id\"] | null) => {\n      if (!id) {\n        return false;\n      }\n\n      return selectedItems.includes(id);\n    },\n    [selectedItems],\n  );\n\n  const onAddToLibraryClick = useCallback(() => {\n    onAddToLibrary(pendingElements);\n  }, [pendingElements, onAddToLibrary]);\n\n  const onItemClick = useCallback(\n    (id: LibraryItem[\"id\"] | null) => {\n      if (id) {\n        onInsertLibraryItems(getInsertedElements(id));\n      }\n    },\n    [getInsertedElements, onInsertLibraryItems],\n  );\n\n  const itemsRenderedPerBatch =\n    svgCache.size >= libraryItems.length\n      ? CACHED_ITEMS_RENDERED_PER_BATCH\n      : ITEMS_RENDERED_PER_BATCH;\n\n  return (\n    <div\n      className=\"library-menu-items-container\"\n      style={\n        pendingElements.length ||\n        unpublishedItems.length ||\n        publishedItems.length\n          ? { justifyContent: \"flex-start\" }\n          : { borderBottom: 0 }\n      }\n    >\n      {!isLibraryEmpty && (\n        <LibraryDropdownMenu\n          selectedItems={selectedItems}\n          onSelectItems={onSelectItems}\n          className=\"library-menu-dropdown-container--in-heading\"\n        />\n      )}\n      <Stack.Col\n        className=\"library-menu-items-container__items\"\n        align=\"start\"\n        gap={1}\n        style={{\n          flex: publishedItems.length > 0 ? 1 : \"0 1 auto\",\n          marginBottom: 0,\n        }}\n        ref={libraryContainerRef}\n      >\n        <>\n          {!isLibraryEmpty && (\n            <div className=\"library-menu-items-container__header\">\n              {t(\"labels.personalLib\")}\n            </div>\n          )}\n          {isLoading && (\n            <div\n              style={{\n                position: \"absolute\",\n                top: \"var(--container-padding-y)\",\n                right: \"var(--container-padding-x)\",\n                transform: \"translateY(50%)\",\n              }}\n            >\n              <Spinner />\n            </div>\n          )}\n          {!pendingElements.length && !unpublishedItems.length ? (\n            <div className=\"library-menu-items__no-items\">\n              <div className=\"library-menu-items__no-items__label\">\n                {t(\"library.noItems\")}\n              </div>\n              <div className=\"library-menu-items__no-items__hint\">\n                {publishedItems.length > 0\n                  ? t(\"library.hint_emptyPrivateLibrary\")\n                  : t(\"library.hint_emptyLibrary\")}\n              </div>\n            </div>\n          ) : (\n            <LibraryMenuSectionGrid>\n              {pendingElements.length > 0 && (\n                <LibraryMenuSection\n                  itemsRenderedPerBatch={itemsRenderedPerBatch}\n                  items={[{ id: null, elements: pendingElements }]}\n                  onItemSelectToggle={onItemSelectToggle}\n                  onItemDrag={onItemDrag}\n                  onClick={onAddToLibraryClick}\n                  isItemSelected={isItemSelected}\n                  svgCache={svgCache}\n                />\n              )}\n              <LibraryMenuSection\n                itemsRenderedPerBatch={itemsRenderedPerBatch}\n                items={unpublishedItems}\n                onItemSelectToggle={onItemSelectToggle}\n                onItemDrag={onItemDrag}\n                onClick={onItemClick}\n                isItemSelected={isItemSelected}\n                svgCache={svgCache}\n              />\n            </LibraryMenuSectionGrid>\n          )}\n        </>\n\n        <>\n          {(publishedItems.length > 0 ||\n            pendingElements.length > 0 ||\n            unpublishedItems.length > 0) && (\n            <div className=\"library-menu-items-container__header library-menu-items-container__header--excal\">\n              {t(\"labels.excalidrawLib\")}\n            </div>\n          )}\n          {publishedItems.length > 0 ? (\n            <LibraryMenuSectionGrid>\n              <LibraryMenuSection\n                itemsRenderedPerBatch={itemsRenderedPerBatch}\n                items={publishedItems}\n                onItemSelectToggle={onItemSelectToggle}\n                onItemDrag={onItemDrag}\n                onClick={onItemClick}\n                isItemSelected={isItemSelected}\n                svgCache={svgCache}\n              />\n            </LibraryMenuSectionGrid>\n          ) : unpublishedItems.length > 0 ? (\n            <div\n              style={{\n                margin: \"1rem 0\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                width: \"100%\",\n                fontSize: \".9rem\",\n              }}\n            >\n              {t(\"library.noItems\")}\n            </div>\n          ) : null}\n        </>\n\n        {showBtn && (\n          <LibraryMenuControlButtons\n            style={{ padding: \"16px 0\", width: \"100%\" }}\n            id={id}\n            libraryReturnUrl={libraryReturnUrl}\n            theme={theme}\n          >\n            <LibraryDropdownMenu\n              selectedItems={selectedItems}\n              onSelectItems={onSelectItems}\n            />\n          </LibraryMenuControlButtons>\n        )}\n      </Stack.Col>\n    </div>\n  );\n}\n", "import \"./Stack.scss\";\n\nimport React, { forwardRef } from \"react\";\nimport clsx from \"clsx\";\n\ntype StackProps = {\n  children: React.ReactNode;\n  gap?: number;\n  align?: \"start\" | \"center\" | \"end\" | \"baseline\";\n  justifyContent?: \"center\" | \"space-around\" | \"space-between\";\n  className?: string | boolean;\n  style?: React.CSSProperties;\n};\n\nconst RowStack = forwardRef(\n  (\n    { children, gap, align, justifyContent, className, style }: StackProps,\n    ref: React.ForwardedRef<HTMLDivElement>,\n  ) => {\n    return (\n      <div\n        className={clsx(\"Stack Stack_horizontal\", className)}\n        style={{\n          \"--gap\": gap,\n          alignItems: align,\n          justifyContent,\n          ...style,\n        }}\n        ref={ref}\n      >\n        {children}\n      </div>\n    );\n  },\n);\n\nconst ColStack = forwardRef(\n  (\n    { children, gap, align, justifyContent, className, style }: StackProps,\n    ref: React.ForwardedRef<HTMLDivElement>,\n  ) => {\n    return (\n      <div\n        className={clsx(\"Stack Stack_vertical\", className)}\n        style={{\n          \"--gap\": gap,\n          justifyItems: align,\n          justifyContent,\n          ...style,\n        }}\n        ref={ref}\n      >\n        {children}\n      </div>\n    );\n  },\n);\n\nexport default {\n  Row: RowStack,\n  Col: ColStack,\n};\n", "import { VERSIONS } from \"../constants\";\nimport { t } from \"../i18n\";\nimport type { ExcalidrawProps, UIAppState } from \"../types\";\n\nconst LibraryMenuBrowseButton = ({\n  theme,\n  id,\n  libraryReturnUrl,\n}: {\n  libraryReturnUrl: ExcalidrawProps[\"libraryReturnUrl\"];\n  theme: UIAppState[\"theme\"];\n  id: string;\n}) => {\n  const referrer =\n    libraryReturnUrl || window.location.origin + window.location.pathname;\n  return (\n    <a\n      className=\"library-menu-browse-button\"\n      href={`${import.meta.env.VITE_APP_LIBRARY_URL}?target=${\n        window.name || \"_blank\"\n      }&referrer=${referrer}&useHash=true&token=${id}&theme=${theme}&version=${\n        VERSIONS.excalidrawLibrary\n      }`}\n      target=\"_excalidraw_libraries\"\n    >\n      {t(\"labels.libraries\")}\n    </a>\n  );\n};\n\nexport default LibraryMenuBrowseButton;\n", "import type { ExcalidrawProps, UIAppState } from \"../types\";\nimport LibraryMenuBrowseButton from \"./LibraryMenuBrowseButton\";\nimport clsx from \"clsx\";\n\nexport const LibraryMenuControlButtons = ({\n  libraryReturnUrl,\n  theme,\n  id,\n  style,\n  children,\n  className,\n}: {\n  libraryReturnUrl: ExcalidrawProps[\"libraryReturnUrl\"];\n  theme: UIAppState[\"theme\"];\n  id: string;\n  style: React.CSSProperties;\n  children?: React.ReactNode;\n  className?: string;\n}) => {\n  return (\n    <div\n      className={clsx(\"library-menu-control-buttons\", className)}\n      style={style}\n    >\n      <LibraryMenuBrowseButton\n        id={id}\n        libraryReturnUrl={libraryReturnUrl}\n        theme={theme}\n      />\n      {children}\n    </div>\n  );\n};\n", "import { useCallback, useState } from \"react\";\nimport { t } from \"../i18n\";\nimport Trans from \"./Trans\";\nimport { useAtom } from \"../editor-jotai\";\nimport type { LibraryItem, LibraryItems, UIAppState } from \"../types\";\nimport { useApp, useExcalidrawSetAppState } from \"./App\";\nimport { saveLibraryAsJSON } from \"../data/json\";\nimport type Library from \"../data/library\";\nimport { libraryItemsAtom } from \"../data/library\";\nimport {\n  DotsIcon,\n  ExportIcon,\n  LoadIcon,\n  publishIcon,\n  TrashIcon,\n} from \"./icons\";\nimport { ToolButton } from \"./ToolButton\";\nimport { fileOpen } from \"../data/filesystem\";\nimport { muteFSAbortError } from \"../utils\";\nimport ConfirmDialog from \"./ConfirmDialog\";\nimport PublishLibrary from \"./PublishLibrary\";\nimport { Dialog } from \"./Dialog\";\nimport DropdownMenu from \"./dropdownMenu/DropdownMenu\";\nimport { isLibraryMenuOpenAtom } from \"./LibraryMenu\";\nimport { useUIAppState } from \"../context/ui-appState\";\nimport clsx from \"clsx\";\nimport { useLibraryCache } from \"../hooks/useLibraryItemSvg\";\n\nconst getSelectedItems = (\n  libraryItems: LibraryItems,\n  selectedItems: LibraryItem[\"id\"][],\n) => libraryItems.filter((item) => selectedItems.includes(item.id));\n\nexport const LibraryDropdownMenuButton: React.FC<{\n  setAppState: React.Component<any, UIAppState>[\"setState\"];\n  selectedItems: LibraryItem[\"id\"][];\n  library: Library;\n  onRemoveFromLibrary: () => void;\n  resetLibrary: () => void;\n  onSelectItems: (items: LibraryItem[\"id\"][]) => void;\n  appState: UIAppState;\n  className?: string;\n}> = ({\n  setAppState,\n  selectedItems,\n  library,\n  onRemoveFromLibrary,\n  resetLibrary,\n  onSelectItems,\n  appState,\n  className,\n}) => {\n  const [libraryItemsData] = useAtom(libraryItemsAtom);\n  const [isLibraryMenuOpen, setIsLibraryMenuOpen] = useAtom(\n    isLibraryMenuOpenAtom,\n  );\n\n  const renderRemoveLibAlert = () => {\n    const content = selectedItems.length\n      ? t(\"alerts.removeItemsFromsLibrary\", { count: selectedItems.length })\n      : t(\"alerts.resetLibrary\");\n    const title = selectedItems.length\n      ? t(\"confirmDialog.removeItemsFromLib\")\n      : t(\"confirmDialog.resetLibrary\");\n    return (\n      <ConfirmDialog\n        onConfirm={() => {\n          if (selectedItems.length) {\n            onRemoveFromLibrary();\n          } else {\n            resetLibrary();\n          }\n          setShowRemoveLibAlert(false);\n        }}\n        onCancel={() => {\n          setShowRemoveLibAlert(false);\n        }}\n        title={title}\n      >\n        <p>{content}</p>\n      </ConfirmDialog>\n    );\n  };\n\n  const [showRemoveLibAlert, setShowRemoveLibAlert] = useState(false);\n\n  const itemsSelected = !!selectedItems.length;\n  const items = itemsSelected\n    ? libraryItemsData.libraryItems.filter((item) =>\n        selectedItems.includes(item.id),\n      )\n    : libraryItemsData.libraryItems;\n  const resetLabel = itemsSelected\n    ? t(\"buttons.remove\")\n    : t(\"buttons.resetLibrary\");\n\n  const [showPublishLibraryDialog, setShowPublishLibraryDialog] =\n    useState(false);\n  const [publishLibSuccess, setPublishLibSuccess] = useState<null | {\n    url: string;\n    authorName: string;\n  }>(null);\n  const renderPublishSuccess = useCallback(() => {\n    return (\n      <Dialog\n        onCloseRequest={() => setPublishLibSuccess(null)}\n        title={t(\"publishSuccessDialog.title\")}\n        className=\"publish-library-success\"\n        size=\"small\"\n      >\n        <p>\n          <Trans\n            i18nKey=\"publishSuccessDialog.content\"\n            authorName={publishLibSuccess!.authorName}\n            link={(el) => (\n              <a\n                href={publishLibSuccess?.url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {el}\n              </a>\n            )}\n          />\n        </p>\n        <ToolButton\n          type=\"button\"\n          title={t(\"buttons.close\")}\n          aria-label={t(\"buttons.close\")}\n          label={t(\"buttons.close\")}\n          onClick={() => setPublishLibSuccess(null)}\n          data-testid=\"publish-library-success-close\"\n          className=\"publish-library-success-close\"\n        />\n      </Dialog>\n    );\n  }, [setPublishLibSuccess, publishLibSuccess]);\n\n  const onPublishLibSuccess = (\n    data: { url: string; authorName: string },\n    libraryItems: LibraryItems,\n  ) => {\n    setShowPublishLibraryDialog(false);\n    setPublishLibSuccess({ url: data.url, authorName: data.authorName });\n    const nextLibItems = libraryItems.slice();\n    nextLibItems.forEach((libItem) => {\n      if (selectedItems.includes(libItem.id)) {\n        libItem.status = \"published\";\n      }\n    });\n    library.setLibrary(nextLibItems);\n  };\n\n  const onLibraryImport = async () => {\n    try {\n      await library.updateLibrary({\n        libraryItems: fileOpen({\n          description: \"Excalidraw library files\",\n          // ToDo: Be over-permissive until https://bugs.webkit.org/show_bug.cgi?id=34442\n          // gets resolved. Else, iOS users cannot open `.excalidraw` files.\n          /*\n            extensions: [\".json\", \".excalidrawlib\"],\n            */\n        }),\n        merge: true,\n        openLibraryMenu: true,\n      });\n    } catch (error: any) {\n      if (error?.name === \"AbortError\") {\n        console.warn(error);\n        return;\n      }\n      setAppState({ errorMessage: t(\"errors.importLibraryError\") });\n    }\n  };\n\n  const onLibraryExport = async () => {\n    const libraryItems = itemsSelected\n      ? items\n      : await library.getLatestLibrary();\n    saveLibraryAsJSON(libraryItems)\n      .catch(muteFSAbortError)\n      .catch((error) => {\n        setAppState({ errorMessage: error.message });\n      });\n  };\n\n  const renderLibraryMenu = () => {\n    return (\n      <DropdownMenu open={isLibraryMenuOpen}>\n        <DropdownMenu.Trigger\n          onToggle={() => setIsLibraryMenuOpen(!isLibraryMenuOpen)}\n        >\n          {DotsIcon}\n        </DropdownMenu.Trigger>\n        <DropdownMenu.Content\n          onClickOutside={() => setIsLibraryMenuOpen(false)}\n          onSelect={() => setIsLibraryMenuOpen(false)}\n          className=\"library-menu\"\n        >\n          {!itemsSelected && (\n            <DropdownMenu.Item\n              onSelect={onLibraryImport}\n              icon={LoadIcon}\n              data-testid=\"lib-dropdown--load\"\n            >\n              {t(\"buttons.load\")}\n            </DropdownMenu.Item>\n          )}\n          {!!items.length && (\n            <DropdownMenu.Item\n              onSelect={onLibraryExport}\n              icon={ExportIcon}\n              data-testid=\"lib-dropdown--export\"\n            >\n              {t(\"buttons.export\")}\n            </DropdownMenu.Item>\n          )}\n          {!!items.length && (\n            <DropdownMenu.Item\n              onSelect={() => setShowRemoveLibAlert(true)}\n              icon={TrashIcon}\n            >\n              {resetLabel}\n            </DropdownMenu.Item>\n          )}\n          {itemsSelected && (\n            <DropdownMenu.Item\n              icon={publishIcon}\n              onSelect={() => setShowPublishLibraryDialog(true)}\n              data-testid=\"lib-dropdown--remove\"\n            >\n              {t(\"buttons.publishLibrary\")}\n            </DropdownMenu.Item>\n          )}\n        </DropdownMenu.Content>\n      </DropdownMenu>\n    );\n  };\n\n  return (\n    <div className={clsx(\"library-menu-dropdown-container\", className)}>\n      {renderLibraryMenu()}\n      {selectedItems.length > 0 && (\n        <div className=\"library-actions-counter\">{selectedItems.length}</div>\n      )}\n      {showRemoveLibAlert && renderRemoveLibAlert()}\n      {showPublishLibraryDialog && (\n        <PublishLibrary\n          onClose={() => setShowPublishLibraryDialog(false)}\n          libraryItems={getSelectedItems(\n            libraryItemsData.libraryItems,\n            selectedItems,\n          )}\n          appState={appState}\n          onSuccess={(data) =>\n            onPublishLibSuccess(data, libraryItemsData.libraryItems)\n          }\n          onError={(error) => window.alert(error)}\n          updateItemsInStorage={() =>\n            library.setLibrary(libraryItemsData.libraryItems)\n          }\n          onRemove={(id: string) =>\n            onSelectItems(selectedItems.filter((_id) => _id !== id))\n          }\n        />\n      )}\n      {publishLibSuccess && renderPublishSuccess()}\n    </div>\n  );\n};\n\nexport const LibraryDropdownMenu = ({\n  selectedItems,\n  onSelectItems,\n  className,\n}: {\n  selectedItems: LibraryItem[\"id\"][];\n  onSelectItems: (id: LibraryItem[\"id\"][]) => void;\n  className?: string;\n}) => {\n  const { library } = useApp();\n  const { clearLibraryCache, deleteItemsFromLibraryCache } = useLibraryCache();\n  const appState = useUIAppState();\n  const setAppState = useExcalidrawSetAppState();\n\n  const [libraryItemsData] = useAtom(libraryItemsAtom);\n\n  const removeFromLibrary = async (libraryItems: LibraryItems) => {\n    const nextItems = libraryItems.filter(\n      (item) => !selectedItems.includes(item.id),\n    );\n    library.setLibrary(nextItems).catch(() => {\n      setAppState({ errorMessage: t(\"alerts.errorRemovingFromLibrary\") });\n    });\n\n    deleteItemsFromLibraryCache(selectedItems);\n\n    onSelectItems([]);\n  };\n\n  const resetLibrary = () => {\n    library.resetLibrary();\n    clearLibraryCache();\n  };\n\n  return (\n    <LibraryDropdownMenuButton\n      appState={appState}\n      setAppState={setAppState}\n      selectedItems={selectedItems}\n      onSelectItems={onSelectItems}\n      library={library}\n      onRemoveFromLibrary={() =>\n        removeFromLibrary(libraryItemsData.libraryItems)\n      }\n      resetLibrary={resetLibrary}\n      className={className}\n    />\n  );\n};\n", "import React from \"react\";\n\nimport type { TranslationKeys } from \"../i18n\";\nimport { useI18n } from \"../i18n\";\n\n// Used for splitting i18nKey into tokens in Trans component\n// Example:\n// \"Please <link>click {{location}}</link> to continue.\".split(SPLIT_REGEX).filter(Boolean)\n// produces\n// [\"Please \", \"<link>\", \"click \", \"{{location}}\", \"</link>\", \" to continue.\"]\nconst SPLIT_REGEX = /({{[\\w-]+}})|(<[\\w-]+>)|(<\\/[\\w-]+>)/g;\n// Used for extracting \"location\" from \"{{location}}\"\nconst KEY_REGEXP = /{{([\\w-]+)}}/;\n// Used for extracting \"link\" from \"<link>\"\nconst TAG_START_REGEXP = /<([\\w-]+)>/;\n// Used for extracting \"link\" from \"</link>\"\nconst TAG_END_REGEXP = /<\\/([\\w-]+)>/;\n\nconst getTransChildren = (\n  format: string,\n  props: {\n    [key: string]: React.ReactNode | ((el: React.ReactNode) => React.ReactNode);\n  },\n): React.ReactNode[] => {\n  const stack: { name: string; children: React.ReactNode[] }[] = [\n    {\n      name: \"\",\n      children: [],\n    },\n  ];\n\n  format\n    .split(SPLIT_REGEX)\n    .filter(Boolean)\n    .forEach((match) => {\n      const tagStartMatch = match.match(TAG_START_REGEXP);\n      const tagEndMatch = match.match(TAG_END_REGEXP);\n      const keyMatch = match.match(KEY_REGEXP);\n\n      if (tagStartMatch !== null) {\n        // The match is <tag>. Set the tag name as the name if it's one of the\n        // props, e.g. for \"Please <link>click the button</link> to continue\"\n        // tagStartMatch[1] = \"link\" and props contain \"link\" then it will be\n        // pushed to stack.\n        const name = tagStartMatch[1];\n        if (props.hasOwnProperty(name)) {\n          stack.push({\n            name,\n            children: [],\n          });\n        } else {\n          console.warn(\n            `Trans: missed to pass in prop ${name} for interpolating ${format}`,\n          );\n        }\n      } else if (tagEndMatch !== null) {\n        // If tag end match is found, this means we need to replace the content with\n        // its actual value in prop e.g. format = \"Please <link>click the\n        // button</link> to continue\", tagEndMatch is for \"</link>\", stack last item name =\n        // \"link\" and props.link = (el) => <a\n        // href=\"https://example.com\">{el}</a> then its prop value will be\n        // pushed to \"link\"'s children so on DOM when rendering it's rendered as\n        // <a href=\"https://example.com\">click the button</a>\n        const name = tagEndMatch[1];\n        if (name === stack[stack.length - 1].name) {\n          const item = stack.pop()!;\n          const itemChildren = React.createElement(\n            React.Fragment,\n            {},\n            ...item.children,\n          );\n          const fn = props[item.name];\n          if (typeof fn === \"function\") {\n            stack[stack.length - 1].children.push(fn(itemChildren));\n          }\n        } else {\n          console.warn(\n            `Trans: unexpected end tag ${match} for interpolating ${format}`,\n          );\n        }\n      } else if (keyMatch !== null) {\n        // The match is for {{key}}. Check if the key is present in props and set\n        // the prop value as children of last stack item e.g. format = \"Hello\n        // {{name}}\", key = \"name\" and props.name = \"Excalidraw\" then its prop\n        // value will be pushed to \"name\"'s children so it's rendered on DOM as\n        // \"Hello Excalidraw\"\n        const name = keyMatch[1];\n        if (props.hasOwnProperty(name)) {\n          stack[stack.length - 1].children.push(props[name] as React.ReactNode);\n        } else {\n          console.warn(\n            `Trans: key ${name} not in props for interpolating ${format}`,\n          );\n        }\n      } else {\n        // If none of cases match means we just need to push the string\n        // to stack eg - \"Hello {{name}} Whats up?\" \"Hello\", \"Whats up\" will be pushed\n        stack[stack.length - 1].children.push(match);\n      }\n    });\n\n  if (stack.length !== 1) {\n    console.warn(`Trans: stack not empty for interpolating ${format}`);\n  }\n\n  return stack[0].children;\n};\n\n/*\nTrans component is used for translating JSX.\n\n```json\n{\n  \"example1\": \"Hello {{audience}}\",\n  \"example2\": \"Please <link>click the button</link> to continue.\",\n  \"example3\": \"Please <link>click {{location}}</link> to continue.\",\n  \"example4\": \"Please <link>click <bold>{{location}}</bold></link> to continue.\",\n}\n```\n\n```jsx\n<Trans i18nKey=\"example1\" audience=\"world\" />\n\n<Trans\n  i18nKey=\"example2\"\n  connectLink={(el) => <a href=\"https://example.com\">{el}</a>}\n/>\n\n<Trans\n  i18nKey=\"example3\"\n  connectLink={(el) => <a href=\"https://example.com\">{el}</a>}\n  location=\"the button\"\n/>\n\n<Trans\n  i18nKey=\"example4\"\n  connectLink={(el) => <a href=\"https://example.com\">{el}</a>}\n  location=\"the button\"\n  bold={(el) => <strong>{el}</strong>}\n/>\n```\n\nOutput:\n\n```html\nHello world\nPlease <a href=\"https://example.com\">click the button</a> to continue.\nPlease <a href=\"https://example.com\">click the button</a> to continue.\nPlease <a href=\"https://example.com\">click <strong>the button</strong></a> to continue.\n```\n*/\nconst Trans = ({\n  i18nKey,\n  children,\n  ...props\n}: {\n  i18nKey: TranslationKeys;\n  [key: string]: React.ReactNode | ((el: React.ReactNode) => React.ReactNode);\n}) => {\n  const { t } = useI18n();\n\n  // This is needed to avoid unique key error in list which gets rendered from getTransChildren\n  return React.createElement(\n    React.Fragment,\n    {},\n    ...getTransChildren(t(i18nKey), props),\n  );\n};\n\nexport default Trans;\n", "import { flushSync } from \"react-dom\";\nimport { t } from \"../i18n\";\nimport type { DialogProps } from \"./Dialog\";\nimport { Dialog } from \"./Dialog\";\n\nimport \"./ConfirmDialog.scss\";\nimport DialogActionButton from \"./DialogActionButton\";\nimport { isLibraryMenuOpenAtom } from \"./LibraryMenu\";\nimport { useExcalidrawContainer, useExcalidrawSetAppState } from \"./App\";\nimport { useSetAtom } from \"../editor-jotai\";\n\ninterface Props extends Omit<DialogProps, \"onCloseRequest\"> {\n  onConfirm: () => void;\n  onCancel: () => void;\n  confirmText?: string;\n  cancelText?: string;\n}\nconst ConfirmDialog = (props: Props) => {\n  const {\n    onConfirm,\n    onCancel,\n    children,\n    confirmText = t(\"buttons.confirm\"),\n    cancelText = t(\"buttons.cancel\"),\n    className = \"\",\n    ...rest\n  } = props;\n  const setAppState = useExcalidrawSetAppState();\n  const setIsLibraryMenuOpen = useSetAtom(isLibraryMenuOpenAtom);\n  const { container } = useExcalidrawContainer();\n\n  return (\n    <Dialog\n      onCloseRequest={onCancel}\n      size=\"small\"\n      {...rest}\n      className={`confirm-dialog ${className}`}\n    >\n      {children}\n      <div className=\"confirm-dialog-buttons\">\n        <DialogActionButton\n          label={cancelText}\n          onClick={() => {\n            setAppState({ openMenu: null });\n            setIsLibraryMenuOpen(false);\n            // flush any pending updates synchronously,\n            // otherwise it could lead to crash in some chromium versions (131.0.6778.86),\n            // when `.focus` is invoked with container in some intermediate state\n            // (container seems mounted in DOM, but focus still causes a crash)\n            flushSync(() => {\n              onCancel();\n            });\n\n            container?.focus();\n          }}\n        />\n        <DialogActionButton\n          label={confirmText}\n          onClick={() => {\n            setAppState({ openMenu: null });\n            setIsLibraryMenuOpen(false);\n            // flush any pending updates synchronously,\n            // otherwise it leads to crash in some chromium versions (131.0.6778.86),\n            // when `.focus` is invoked with container in some intermediate state\n            // (container seems mounted in DOM, but focus still causes a crash)\n            flushSync(() => {\n              onConfirm();\n            });\n\n            container?.focus();\n          }}\n          actionType=\"danger\"\n        />\n      </div>\n    </Dialog>\n  );\n};\nexport default ConfirmDialog;\n", "import clsx from \"clsx\";\nimport type { ReactNode } from \"react\";\nimport \"./DialogActionButton.scss\";\nimport Spinner from \"./Spinner\";\n\ninterface DialogActionButtonProps {\n  label: string;\n  children?: ReactNode;\n  actionType?: \"primary\" | \"danger\";\n  isLoading?: boolean;\n}\n\nconst DialogActionButton = ({\n  label,\n  onClick,\n  className,\n  children,\n  actionType,\n  type = \"button\",\n  isLoading,\n  ...rest\n}: DialogActionButtonProps & React.ButtonHTMLAttributes<HTMLButtonElement>) => {\n  const cs = actionType ? `Dialog__action-button--${actionType}` : \"\";\n\n  return (\n    <button\n      className={clsx(\"Dialog__action-button\", cs, className)}\n      type={type}\n      aria-label={label}\n      onClick={onClick}\n      {...rest}\n    >\n      {children && (\n        <div style={isLoading ? { visibility: \"hidden\" } : {}}>{children}</div>\n      )}\n      <div style={isLoading ? { visibility: \"hidden\" } : {}}>{label}</div>\n      {isLoading && (\n        <div style={{ position: \"absolute\", inset: 0 }}>\n          <Spinner />\n        </div>\n      )}\n    </button>\n  );\n};\n\nexport default DialogActionButton;\n", "import type { ReactNode } from \"react\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport OpenColor from \"open-color\";\n\nimport { Dialog } from \"./Dialog\";\nimport { t } from \"../i18n\";\nimport Trans from \"./Trans\";\n\nimport type { LibraryItems, LibraryItem, UIAppState } from \"../types\";\nimport { exportToCanvas, exportToSvg } from \"@excalidraw/utils/export\";\nimport {\n  EDITOR_LS_KEYS,\n  EXPORT_DATA_TYPES,\n  EXPORT_SOURCE,\n  MIME_TYPES,\n  VERSIONS,\n} from \"../constants\";\nimport type { ExportedLibraryData } from \"../data/types\";\nimport { canvasToBlob, resizeImageFile } from \"../data/blob\";\nimport { chunk } from \"../utils\";\nimport DialogActionButton from \"./DialogActionButton\";\nimport { CloseIcon } from \"./icons\";\nimport { ToolButton } from \"./ToolButton\";\nimport { EditorLocalStorage } from \"../data/EditorLocalStorage\";\n\nimport \"./PublishLibrary.scss\";\n\ninterface PublishLibraryDataParams {\n  authorName: string;\n  githubHandle: string;\n  name: string;\n  description: string;\n  twitterHandle: string;\n  website: string;\n}\n\nconst generatePreviewImage = async (libraryItems: LibraryItems) => {\n  const MAX_ITEMS_PER_ROW = 6;\n  const BOX_SIZE = 128;\n  const BOX_PADDING = Math.round(BOX_SIZE / 16);\n  const BORDER_WIDTH = Math.max(Math.round(BOX_SIZE / 64), 2);\n\n  const rows = chunk(libraryItems, MAX_ITEMS_PER_ROW);\n\n  const canvas = document.createElement(\"canvas\");\n\n  canvas.width =\n    rows[0].length * BOX_SIZE +\n    (rows[0].length + 1) * (BOX_PADDING * 2) -\n    BOX_PADDING * 2;\n  canvas.height =\n    rows.length * BOX_SIZE +\n    (rows.length + 1) * (BOX_PADDING * 2) -\n    BOX_PADDING * 2;\n\n  const ctx = canvas.getContext(\"2d\")!;\n\n  ctx.fillStyle = OpenColor.white;\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n  // draw items\n  // ---------------------------------------------------------------------------\n  for (const [index, item] of libraryItems.entries()) {\n    const itemCanvas = await exportToCanvas({\n      elements: item.elements,\n      files: null,\n      maxWidthOrHeight: BOX_SIZE,\n    });\n\n    const { width, height } = itemCanvas;\n\n    // draw item\n    // -------------------------------------------------------------------------\n    const rowOffset =\n      Math.floor(index / MAX_ITEMS_PER_ROW) * (BOX_SIZE + BOX_PADDING * 2);\n    const colOffset =\n      (index % MAX_ITEMS_PER_ROW) * (BOX_SIZE + BOX_PADDING * 2);\n\n    ctx.drawImage(\n      itemCanvas,\n      colOffset + (BOX_SIZE - width) / 2 + BOX_PADDING,\n      rowOffset + (BOX_SIZE - height) / 2 + BOX_PADDING,\n    );\n\n    // draw item border\n    // -------------------------------------------------------------------------\n    ctx.lineWidth = BORDER_WIDTH;\n    ctx.strokeStyle = OpenColor.gray[4];\n    ctx.strokeRect(\n      colOffset + BOX_PADDING / 2,\n      rowOffset + BOX_PADDING / 2,\n      BOX_SIZE + BOX_PADDING,\n      BOX_SIZE + BOX_PADDING,\n    );\n  }\n\n  return await resizeImageFile(\n    new File([await canvasToBlob(canvas)], \"preview\", { type: MIME_TYPES.png }),\n    {\n      outputType: MIME_TYPES.jpg,\n      maxWidthOrHeight: 5000,\n    },\n  );\n};\n\nconst SingleLibraryItem = ({\n  libItem,\n  appState,\n  index,\n  onChange,\n  onRemove,\n}: {\n  libItem: LibraryItem;\n  appState: UIAppState;\n  index: number;\n  onChange: (val: string, index: number) => void;\n  onRemove: (id: string) => void;\n}) => {\n  const svgRef = useRef<HTMLDivElement | null>(null);\n  const inputRef = useRef<HTMLInputElement | null>(null);\n\n  useEffect(() => {\n    const node = svgRef.current;\n    if (!node) {\n      return;\n    }\n    (async () => {\n      const svg = await exportToSvg({\n        elements: libItem.elements,\n        appState: {\n          ...appState,\n          viewBackgroundColor: OpenColor.white,\n          exportBackground: true,\n        },\n        files: null,\n        skipInliningFonts: true,\n      });\n      node.innerHTML = svg.outerHTML;\n    })();\n  }, [libItem.elements, appState]);\n\n  return (\n    <div className=\"single-library-item\">\n      {libItem.status === \"published\" && (\n        <span className=\"single-library-item-status\">\n          {t(\"labels.statusPublished\")}\n        </span>\n      )}\n      <div ref={svgRef} className=\"single-library-item__svg\" />\n      <ToolButton\n        aria-label={t(\"buttons.remove\")}\n        type=\"button\"\n        icon={CloseIcon}\n        className=\"single-library-item--remove\"\n        onClick={onRemove.bind(null, libItem.id)}\n        title={t(\"buttons.remove\")}\n      />\n      <div\n        style={{\n          display: \"flex\",\n          margin: \"0.8rem 0\",\n          width: \"100%\",\n          fontSize: \"14px\",\n          fontWeight: 500,\n          flexDirection: \"column\",\n        }}\n      >\n        <label\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            flexDirection: \"column\",\n          }}\n        >\n          <div style={{ padding: \"0.5em 0\" }}>\n            <span style={{ fontWeight: 500, color: OpenColor.gray[6] }}>\n              {t(\"publishDialog.itemName\")}\n            </span>\n            <span aria-hidden=\"true\" className=\"required\">\n              *\n            </span>\n          </div>\n          <input\n            type=\"text\"\n            ref={inputRef}\n            style={{ width: \"80%\", padding: \"0.2rem\" }}\n            defaultValue={libItem.name}\n            placeholder=\"Item name\"\n            onChange={(event) => {\n              onChange(event.target.value, index);\n            }}\n          />\n        </label>\n        <span className=\"error\">{libItem.error}</span>\n      </div>\n    </div>\n  );\n};\n\nconst PublishLibrary = ({\n  onClose,\n  libraryItems,\n  appState,\n  onSuccess,\n  onError,\n  updateItemsInStorage,\n  onRemove,\n}: {\n  onClose: () => void;\n  libraryItems: LibraryItems;\n  appState: UIAppState;\n  onSuccess: (data: {\n    url: string;\n    authorName: string;\n    items: LibraryItems;\n  }) => void;\n\n  onError: (error: Error) => void;\n  updateItemsInStorage: (items: LibraryItems) => void;\n  onRemove: (id: string) => void;\n}) => {\n  const [libraryData, setLibraryData] = useState<PublishLibraryDataParams>({\n    authorName: \"\",\n    githubHandle: \"\",\n    name: \"\",\n    description: \"\",\n    twitterHandle: \"\",\n    website: \"\",\n  });\n\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  useEffect(() => {\n    const data = EditorLocalStorage.get<PublishLibraryDataParams>(\n      EDITOR_LS_KEYS.PUBLISH_LIBRARY,\n    );\n    if (data) {\n      setLibraryData(data);\n    }\n  }, []);\n\n  const [clonedLibItems, setClonedLibItems] = useState<LibraryItems>(\n    libraryItems.slice(),\n  );\n\n  useEffect(() => {\n    setClonedLibItems(libraryItems.slice());\n  }, [libraryItems]);\n\n  const onInputChange = (event: any) => {\n    setLibraryData({\n      ...libraryData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const onSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setIsSubmitting(true);\n    const erroredLibItems: LibraryItem[] = [];\n    let isError = false;\n    clonedLibItems.forEach((libItem) => {\n      let error = \"\";\n      if (!libItem.name) {\n        error = t(\"publishDialog.errors.required\");\n        isError = true;\n      }\n      erroredLibItems.push({ ...libItem, error });\n    });\n\n    if (isError) {\n      setClonedLibItems(erroredLibItems);\n      setIsSubmitting(false);\n      return;\n    }\n\n    const previewImage = await generatePreviewImage(clonedLibItems);\n\n    const libContent: ExportedLibraryData = {\n      type: EXPORT_DATA_TYPES.excalidrawLibrary,\n      version: VERSIONS.excalidrawLibrary,\n      source: EXPORT_SOURCE,\n      libraryItems: clonedLibItems,\n    };\n    const content = JSON.stringify(libContent, null, 2);\n    const lib = new Blob([content], { type: \"application/json\" });\n\n    const formData = new FormData();\n    formData.append(\"excalidrawLib\", lib);\n    formData.append(\"previewImage\", previewImage);\n    formData.append(\"previewImageType\", previewImage.type);\n    formData.append(\"title\", libraryData.name);\n    formData.append(\"authorName\", libraryData.authorName);\n    formData.append(\"githubHandle\", libraryData.githubHandle);\n    formData.append(\"name\", libraryData.name);\n    formData.append(\"description\", libraryData.description);\n    formData.append(\"twitterHandle\", libraryData.twitterHandle);\n    formData.append(\"website\", libraryData.website);\n\n    fetch(`${import.meta.env.VITE_APP_LIBRARY_BACKEND}/submit`, {\n      method: \"post\",\n      body: formData,\n    })\n      .then(\n        (response) => {\n          if (response.ok) {\n            return response.json().then(({ url }) => {\n              // flush data from local storage\n              EditorLocalStorage.delete(EDITOR_LS_KEYS.PUBLISH_LIBRARY);\n              onSuccess({\n                url,\n                authorName: libraryData.authorName,\n                items: clonedLibItems,\n              });\n            });\n          }\n          return response\n            .json()\n            .catch(() => {\n              throw new Error(response.statusText || \"something went wrong\");\n            })\n            .then((error) => {\n              throw new Error(\n                error.message || response.statusText || \"something went wrong\",\n              );\n            });\n        },\n        (err) => {\n          console.error(err);\n          onError(err);\n          setIsSubmitting(false);\n        },\n      )\n      .catch((err) => {\n        console.error(err);\n        onError(err);\n        setIsSubmitting(false);\n      });\n  };\n\n  const renderLibraryItems = () => {\n    const items: ReactNode[] = [];\n    clonedLibItems.forEach((libItem, index) => {\n      items.push(\n        <div className=\"single-library-item-wrapper\" key={index}>\n          <SingleLibraryItem\n            libItem={libItem}\n            appState={appState}\n            index={index}\n            onChange={(val, index) => {\n              const items = clonedLibItems.slice();\n              items[index].name = val;\n              setClonedLibItems(items);\n            }}\n            onRemove={onRemove}\n          />\n        </div>,\n      );\n    });\n    return <div className=\"selected-library-items\">{items}</div>;\n  };\n\n  const onDialogClose = useCallback(() => {\n    updateItemsInStorage(clonedLibItems);\n    EditorLocalStorage.set(EDITOR_LS_KEYS.PUBLISH_LIBRARY, libraryData);\n    onClose();\n  }, [clonedLibItems, onClose, updateItemsInStorage, libraryData]);\n\n  const shouldRenderForm = !!libraryItems.length;\n\n  const containsPublishedItems = libraryItems.some(\n    (item) => item.status === \"published\",\n  );\n\n  return (\n    <Dialog\n      onCloseRequest={onDialogClose}\n      title={t(\"publishDialog.title\")}\n      className=\"publish-library\"\n    >\n      {shouldRenderForm ? (\n        <form onSubmit={onSubmit}>\n          <div className=\"publish-library-note\">\n            <Trans\n              i18nKey=\"publishDialog.noteDescription\"\n              link={(el) => (\n                <a\n                  href=\"https://libraries.excalidraw.com\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  {el}\n                </a>\n              )}\n            />\n          </div>\n          <span className=\"publish-library-note\">\n            <Trans\n              i18nKey=\"publishDialog.noteGuidelines\"\n              link={(el) => (\n                <a\n                  href=\"https://github.com/excalidraw/excalidraw-libraries#guidelines\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  {el}\n                </a>\n              )}\n            />\n          </span>\n\n          <div className=\"publish-library-note\">\n            {t(\"publishDialog.noteItems\")}\n          </div>\n          {containsPublishedItems && (\n            <span className=\"publish-library-note publish-library-warning\">\n              {t(\"publishDialog.republishWarning\")}\n            </span>\n          )}\n          {renderLibraryItems()}\n          <div className=\"publish-library__fields\">\n            <label>\n              <div>\n                <span>{t(\"publishDialog.libraryName\")}</span>\n                <span aria-hidden=\"true\" className=\"required\">\n                  *\n                </span>\n              </div>\n              <input\n                type=\"text\"\n                name=\"name\"\n                required\n                value={libraryData.name}\n                onChange={onInputChange}\n                placeholder={t(\"publishDialog.placeholder.libraryName\")}\n              />\n            </label>\n            <label style={{ alignItems: \"flex-start\" }}>\n              <div>\n                <span>{t(\"publishDialog.libraryDesc\")}</span>\n                <span aria-hidden=\"true\" className=\"required\">\n                  *\n                </span>\n              </div>\n              <textarea\n                name=\"description\"\n                rows={4}\n                required\n                value={libraryData.description}\n                onChange={onInputChange}\n                placeholder={t(\"publishDialog.placeholder.libraryDesc\")}\n              />\n            </label>\n            <label>\n              <div>\n                <span>{t(\"publishDialog.authorName\")}</span>\n                <span aria-hidden=\"true\" className=\"required\">\n                  *\n                </span>\n              </div>\n              <input\n                type=\"text\"\n                name=\"authorName\"\n                required\n                value={libraryData.authorName}\n                onChange={onInputChange}\n                placeholder={t(\"publishDialog.placeholder.authorName\")}\n              />\n            </label>\n            <label>\n              <span>{t(\"publishDialog.githubUsername\")}</span>\n              <input\n                type=\"text\"\n                name=\"githubHandle\"\n                value={libraryData.githubHandle}\n                onChange={onInputChange}\n                placeholder={t(\"publishDialog.placeholder.githubHandle\")}\n              />\n            </label>\n            <label>\n              <span>{t(\"publishDialog.twitterUsername\")}</span>\n              <input\n                type=\"text\"\n                name=\"twitterHandle\"\n                value={libraryData.twitterHandle}\n                onChange={onInputChange}\n                placeholder={t(\"publishDialog.placeholder.twitterHandle\")}\n              />\n            </label>\n            <label>\n              <span>{t(\"publishDialog.website\")}</span>\n              <input\n                type=\"text\"\n                name=\"website\"\n                pattern=\"https?://.+\"\n                title={t(\"publishDialog.errors.website\")}\n                value={libraryData.website}\n                onChange={onInputChange}\n                placeholder={t(\"publishDialog.placeholder.website\")}\n              />\n            </label>\n            <span className=\"publish-library-note\">\n              <Trans\n                i18nKey=\"publishDialog.noteLicense\"\n                link={(el) => (\n                  <a\n                    href=\"https://github.com/excalidraw/excalidraw-libraries/blob/main/LICENSE\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {el}\n                  </a>\n                )}\n              />\n            </span>\n          </div>\n          <div className=\"publish-library__buttons\">\n            <DialogActionButton\n              label={t(\"buttons.cancel\")}\n              onClick={onDialogClose}\n              data-testid=\"cancel-clear-canvas-button\"\n            />\n            <DialogActionButton\n              type=\"submit\"\n              label={t(\"buttons.submit\")}\n              actionType=\"primary\"\n              isLoading={isSubmitting}\n            />\n          </div>\n        </form>\n      ) : (\n        <p style={{ padding: \"1em\", textAlign: \"center\", fontWeight: 500 }}>\n          {t(\"publishDialog.atleastOneLibItem\")}\n        </p>\n      )}\n    </Dialog>\n  );\n};\n\nexport default PublishLibrary;\n", "import type { EDITOR_LS_KEYS } from \"../constants\";\nimport type { JSONValue } from \"../types\";\n\nexport class EditorLocalStorage {\n  static has(key: typeof EDITOR_LS_KEYS[keyof typeof EDITOR_LS_KEYS]) {\n    try {\n      return !!window.localStorage.getItem(key);\n    } catch (error: any) {\n      console.warn(`localStorage.getItem error: ${error.message}`);\n      return false;\n    }\n  }\n\n  static get<T extends JSONValue>(\n    key: typeof EDITOR_LS_KEYS[keyof typeof EDITOR_LS_KEYS],\n  ) {\n    try {\n      const value = window.localStorage.getItem(key);\n      if (value) {\n        return JSON.parse(value) as T;\n      }\n      return null;\n    } catch (error: any) {\n      console.warn(`localStorage.getItem error: ${error.message}`);\n      return null;\n    }\n  }\n\n  static set = (\n    key: typeof EDITOR_LS_KEYS[keyof typeof EDITOR_LS_KEYS],\n    value: JSONValue,\n  ) => {\n    try {\n      window.localStorage.setItem(key, JSON.stringify(value));\n      return true;\n    } catch (error: any) {\n      console.warn(`localStorage.setItem error: ${error.message}`);\n      return false;\n    }\n  };\n\n  static delete = (\n    name: typeof EDITOR_LS_KEYS[keyof typeof EDITOR_LS_KEYS],\n  ) => {\n    try {\n      window.localStorage.removeItem(name);\n    } catch (error: any) {\n      console.warn(`localStorage.removeItem error: ${error.message}`);\n    }\n  };\n}\n", "import clsx from \"clsx\";\nimport { useDevice } from \"../App\";\n\nconst MenuTrigger = ({\n  className = \"\",\n  children,\n  onToggle,\n  title,\n  ...rest\n}: {\n  className?: string;\n  children: React.ReactNode;\n  onToggle: () => void;\n  title?: string;\n} & Omit<React.ButtonHTMLAttributes<HTMLButtonElement>, \"onSelect\">) => {\n  const device = useDevice();\n  const classNames = clsx(\n    `dropdown-menu-button ${className}`,\n    \"zen-mode-transition\",\n    {\n      \"dropdown-menu-button--mobile\": device.editor.isMobile,\n    },\n  ).trim();\n  return (\n    <button\n      data-prevent-outside-click\n      className={classNames}\n      onClick={onToggle}\n      type=\"button\"\n      data-testid=\"dropdown-menu-button\"\n      title={title}\n      {...rest}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default MenuTrigger;\nMenuTrigger.displayName = \"DropdownMenuTrigger\";\n", "import React from \"react\";\n\nconst MenuSeparator = () => (\n  <div\n    style={{\n      height: \"1px\",\n      backgroundColor: \"var(--default-border-color)\",\n      margin: \".5rem 0\",\n    }}\n  />\n);\n\nexport default MenuSeparator;\nMenuSeparator.displayName = \"DropdownMenuSeparator\";\n", "import { Island } from \"../Island\";\nimport { useDevice } from \"../App\";\nimport clsx from \"clsx\";\nimport Stack from \"../Stack\";\nimport React, { useEffect, useRef } from \"react\";\nimport { DropdownMenuContentPropsContext } from \"./common\";\nimport { useOutsideClick } from \"../../hooks/useOutsideClick\";\nimport { KEYS } from \"../../keys\";\nimport { EVENT } from \"../../constants\";\nimport { useStable } from \"../../hooks/useStable\";\n\nconst MenuContent = ({\n  children,\n  onClickOutside,\n  className = \"\",\n  onSelect,\n  style,\n}: {\n  children?: React.ReactNode;\n  onClickOutside?: () => void;\n  className?: string;\n  /**\n   * Called when any menu item is selected (clicked on).\n   */\n  onSelect?: (event: Event) => void;\n  style?: React.CSSProperties;\n}) => {\n  const device = useDevice();\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const callbacksRef = useStable({ onClickOutside });\n\n  useOutsideClick(menuRef, () => {\n    callbacksRef.onClickOutside?.();\n  });\n\n  useEffect(() => {\n    const onKeyDown = (event: KeyboardEvent) => {\n      if (event.key === KEYS.ESCAPE) {\n        event.stopImmediatePropagation();\n        callbacksRef.onClickOutside?.();\n      }\n    };\n\n    const option = {\n      // so that we can stop propagation of the event before it reaches\n      // event handlers that were bound before this one\n      capture: true,\n    };\n\n    document.addEventListener(EVENT.KEYDOWN, onKeyDown, option);\n    return () => {\n      document.removeEventListener(EVENT.KEYDOWN, onKeyDown, option);\n    };\n  }, [callbacksRef]);\n\n  const classNames = clsx(`dropdown-menu ${className}`, {\n    \"dropdown-menu--mobile\": device.editor.isMobile,\n  }).trim();\n\n  return (\n    <DropdownMenuContentPropsContext.Provider value={{ onSelect }}>\n      <div\n        ref={menuRef}\n        className={classNames}\n        style={style}\n        data-testid=\"dropdown-menu\"\n      >\n        {/* the zIndex ensures this menu has higher stacking order,\n    see https://github.com/excalidraw/excalidraw/pull/1445 */}\n        {device.editor.isMobile ? (\n          <Stack.Col className=\"dropdown-menu-container\">{children}</Stack.Col>\n        ) : (\n          <Island\n            className=\"dropdown-menu-container\"\n            padding={2}\n            style={{ zIndex: 2 }}\n          >\n            {children}\n          </Island>\n        )}\n      </div>\n    </DropdownMenuContentPropsContext.Provider>\n  );\n};\nMenuContent.displayName = \"DropdownMenuContent\";\n\nexport default MenuContent;\n", "import MenuItemContent from \"./DropdownMenuItemContent\";\nimport type { JSX } from \"react\";\nimport React from \"react\";\nimport {\n  getDropdownMenuItemClassName,\n  useHandleDropdownMenuItemClick,\n} from \"./common\";\n\nconst DropdownMenuItemLink = ({\n  icon,\n  shortcut,\n  href,\n  children,\n  onSelect,\n  className = \"\",\n  selected,\n  rel = \"noreferrer\",\n  ...rest\n}: {\n  href: string;\n  icon?: JSX.Element;\n  children: React.ReactNode;\n  shortcut?: string;\n  className?: string;\n  selected?: boolean;\n  onSelect?: (event: Event) => void;\n  rel?: string;\n} & React.AnchorHTMLAttributes<HTMLAnchorElement>) => {\n  const handleClick = useHandleDropdownMenuItemClick(rest.onClick, onSelect);\n\n  return (\n    <a\n      {...rest}\n      href={href}\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      className={getDropdownMenuItemClassName(className, selected)}\n      title={rest.title ?? rest[\"aria-label\"]}\n      onClick={handleClick}\n    >\n      <MenuItemContent icon={icon} shortcut={shortcut}>\n        {children}\n      </MenuItemContent>\n    </a>\n  );\n};\n\nexport default DropdownMenuItemLink;\nDropdownMenuItemLink.displayName = \"DropdownMenuItemLink\";\n", "import React from \"react\";\n\nconst DropdownMenuItemCustom = ({\n  children,\n  className = \"\",\n  selected,\n  ...rest\n}: {\n  children: React.ReactNode;\n  className?: string;\n  selected?: boolean;\n} & React.HTMLAttributes<HTMLDivElement>) => {\n  return (\n    <div\n      {...rest}\n      className={`dropdown-menu-item-base dropdown-menu-item-custom ${className} ${\n        selected ? `dropdown-menu-item--selected` : ``\n      }`.trim()}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default DropdownMenuItemCustom;\n", "import React from \"react\";\n\nexport const getMenuTriggerComponent = (children: React.ReactNode) => {\n  const comp = React.Children.toArray(children).find(\n    (child) =>\n      React.isValidElement(child) &&\n      typeof child.type !== \"string\" &&\n      //@ts-ignore\n      child?.type.displayName &&\n      //@ts-ignore\n      child.type.displayName === \"DropdownMenuTrigger\",\n  );\n  if (!comp) {\n    return null;\n  }\n  //@ts-ignore\n  return comp;\n};\n\nexport const getMenuContentComponent = (children: React.ReactNode) => {\n  const comp = React.Children.toArray(children).find(\n    (child) =>\n      React.isValidElement(child) &&\n      typeof child.type !== \"string\" &&\n      //@ts-ignore\n      child?.type.displayName &&\n      //@ts-ignore\n      child.type.displayName === \"DropdownMenuContent\",\n  );\n  if (!comp) {\n    return null;\n  }\n  //@ts-ignore\n  return comp;\n};\n", "import React from \"react\";\nimport DropdownMenuTrigger from \"./DropdownMenuTrigger\";\nimport DropdownMenuItem from \"./DropdownMenuItem\";\nimport MenuSeparator from \"./DropdownMenuSeparator\";\nimport DropdownMenuGroup from \"./DropdownMenuGroup\";\nimport DropdownMenuContent from \"./DropdownMenuContent\";\nimport DropdownMenuItemLink from \"./DropdownMenuItemLink\";\nimport DropdownMenuItemCustom from \"./DropdownMenuItemCustom\";\nimport {\n  getMenuContentComponent,\n  getMenuTriggerComponent,\n} from \"./dropdownMenuUtils\";\n\nimport \"./DropdownMenu.scss\";\n\nconst DropdownMenu = ({\n  children,\n  open,\n}: {\n  children?: React.ReactNode;\n  open: boolean;\n}) => {\n  const MenuTriggerComp = getMenuTriggerComponent(children);\n  const MenuContentComp = getMenuContentComponent(children);\n  return (\n    <>\n      {MenuTriggerComp}\n      {open && MenuContentComp}\n    </>\n  );\n};\n\nDropdownMenu.Trigger = DropdownMenuTrigger;\nDropdownMenu.Content = DropdownMenuContent;\nDropdownMenu.Item = DropdownMenuItem;\nDropdownMenu.ItemLink = DropdownMenuItemLink;\nDropdownMenu.ItemCustom = DropdownMenuItemCustom;\nDropdownMenu.Group = DropdownMenuGroup;\nDropdownMenu.Separator = MenuSeparator;\n\nexport default DropdownMenu;\n\nDropdownMenu.displayName = \"DropdownMenu\";\n", "import type { ReactNode } from \"react\";\nimport React, { memo, useEffect, useState } from \"react\";\nimport { EmptyLibraryUnit, LibraryUnit } from \"./LibraryUnit\";\nimport type { LibraryItem } from \"../types\";\nimport type { ExcalidrawElement, NonDeleted } from \"../element/types\";\nimport type { SvgCache } from \"../hooks/useLibraryItemSvg\";\nimport { useTransition } from \"../hooks/useTransition\";\n\ntype LibraryOrPendingItem = (\n  | LibraryItem\n  | /* pending library item */ {\n      id: null;\n      elements: readonly NonDeleted<ExcalidrawElement>[];\n    }\n)[];\n\ninterface Props {\n  items: LibraryOrPendingItem;\n  onClick: (id: LibraryItem[\"id\"] | null) => void;\n  onItemSelectToggle: (id: LibraryItem[\"id\"], event: React.MouseEvent) => void;\n  onItemDrag: (id: LibraryItem[\"id\"], event: React.DragEvent) => void;\n  isItemSelected: (id: LibraryItem[\"id\"] | null) => boolean;\n  svgCache: SvgCache;\n  itemsRenderedPerBatch: number;\n}\n\nexport const LibraryMenuSectionGrid = ({\n  children,\n}: {\n  children: ReactNode;\n}) => {\n  return <div className=\"library-menu-items-container__grid\">{children}</div>;\n};\n\nexport const LibraryMenuSection = memo(\n  ({\n    items,\n    onItemSelectToggle,\n    onItemDrag,\n    isItemSelected,\n    onClick,\n    svgCache,\n    itemsRenderedPerBatch,\n  }: Props) => {\n    const [, startTransition] = useTransition();\n    const [index, setIndex] = useState(0);\n\n    useEffect(() => {\n      if (index < items.length) {\n        startTransition(() => {\n          setIndex(index + itemsRenderedPerBatch);\n        });\n      }\n    }, [index, items.length, startTransition, itemsRenderedPerBatch]);\n\n    return (\n      <>\n        {items.map((item, i) => {\n          return i < index ? (\n            <LibraryUnit\n              elements={item?.elements}\n              isPending={!item?.id && !!item?.elements}\n              onClick={onClick}\n              svgCache={svgCache}\n              id={item?.id}\n              selected={isItemSelected(item.id)}\n              onToggle={onItemSelectToggle}\n              onDrag={onItemDrag}\n              key={item?.id ?? i}\n            />\n          ) : (\n            <EmptyLibraryUnit key={i} />\n          );\n        })}\n      </>\n    );\n  },\n);\n", "import clsx from \"clsx\";\nimport { memo, useEffect, useRef, useState } from \"react\";\nimport { useDevice } from \"./App\";\nimport type { LibraryItem } from \"../types\";\nimport \"./LibraryUnit.scss\";\nimport { CheckboxItem } from \"./CheckboxItem\";\nimport { PlusIcon } from \"./icons\";\nimport type { SvgCache } from \"../hooks/useLibraryItemSvg\";\nimport { useLibraryItemSvg } from \"../hooks/useLibraryItemSvg\";\n\nexport const LibraryUnit = memo(\n  ({\n    id,\n    elements,\n    isPending,\n    onClick,\n    selected,\n    onToggle,\n    onDrag,\n    svgCache,\n  }: {\n    id: LibraryItem[\"id\"] | /** for pending item */ null;\n    elements?: LibraryItem[\"elements\"];\n    isPending?: boolean;\n    onClick: (id: LibraryItem[\"id\"] | null) => void;\n    selected: boolean;\n    onToggle: (id: string, event: React.MouseEvent) => void;\n    onDrag: (id: string, event: React.DragEvent) => void;\n    svgCache: SvgCache;\n  }) => {\n    const ref = useRef<HTMLDivElement | null>(null);\n    const svg = useLibraryItemSvg(id, elements, svgCache);\n\n    useEffect(() => {\n      const node = ref.current;\n\n      if (!node) {\n        return;\n      }\n\n      if (svg) {\n        node.innerHTML = svg.outerHTML;\n      }\n\n      return () => {\n        node.innerHTML = \"\";\n      };\n    }, [svg]);\n\n    const [isHovered, setIsHovered] = useState(false);\n    const isMobile = useDevice().editor.isMobile;\n    const adder = isPending && (\n      <div className=\"library-unit__adder\">{PlusIcon}</div>\n    );\n\n    return (\n      <div\n        className={clsx(\"library-unit\", {\n          \"library-unit__active\": elements,\n          \"library-unit--hover\": elements && isHovered,\n          \"library-unit--selected\": selected,\n          \"library-unit--skeleton\": !svg,\n        })}\n        onMouseEnter={() => setIsHovered(true)}\n        onMouseLeave={() => setIsHovered(false)}\n      >\n        <div\n          className={clsx(\"library-unit__dragger\", {\n            \"library-unit__pulse\": !!isPending,\n          })}\n          ref={ref}\n          draggable={!!elements}\n          onClick={\n            !!elements || !!isPending\n              ? (event) => {\n                  if (id && event.shiftKey) {\n                    onToggle(id, event);\n                  } else {\n                    onClick(id);\n                  }\n                }\n              : undefined\n          }\n          onDragStart={(event) => {\n            if (!id) {\n              event.preventDefault();\n              return;\n            }\n            setIsHovered(false);\n            onDrag(id, event);\n          }}\n        />\n        {adder}\n        {id && elements && (isHovered || isMobile || selected) && (\n          <CheckboxItem\n            checked={selected}\n            onChange={(checked, event) => onToggle(id, event)}\n            className=\"library-unit__checkbox\"\n          />\n        )}\n      </div>\n    );\n  },\n);\n\nexport const EmptyLibraryUnit = () => (\n  <div className=\"library-unit library-unit--skeleton\" />\n);\n", "import React, { useCallback } from \"react\";\n\n/** noop polyfill for v17. Subset of API available */\nfunction useTransitionPolyfill() {\n  const startTransition = useCallback((callback: () => void) => callback(), []);\n  return [false, startTransition] as const;\n}\n\nexport const useTransition = React.useTransition || useTransitionPolyfill;\n", "import { useEffect } from \"react\";\nimport { atom, useAtom } from \"../editor-jotai\";\nimport throttle from \"lodash.throttle\";\n\nconst scrollPositionAtom = atom<number>(0);\n\nexport const useScrollPosition = <T extends HTMLElement>(\n  elementRef: React.RefObject<T | null>,\n) => {\n  const [scrollPosition, setScrollPosition] = useAtom(scrollPositionAtom);\n\n  useEffect(() => {\n    const { current: element } = elementRef;\n    if (!element) {\n      return;\n    }\n\n    const handleScroll = throttle(() => {\n      const { scrollTop } = element;\n      setScrollPosition(scrollTop);\n    }, 200);\n\n    element.addEventListener(\"scroll\", handleScroll);\n\n    return () => {\n      handleScroll.cancel();\n      element.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [elementRef, setScrollPosition]);\n\n  return scrollPosition;\n};\n", "import type { KeyboardEvent } from \"react\";\nimport {\n  forwardRef,\n  useRef,\n  useImperativeHandle,\n  useLayoutEffect,\n  useState,\n} from \"react\";\nimport clsx from \"clsx\";\n\nimport \"./TextField.scss\";\nimport { Button } from \"./Button\";\nimport { eyeIcon, eyeClosedIcon } from \"./icons\";\n\ntype TextFieldProps = {\n  onChange?: (value: string) => void;\n  onClick?: () => void;\n  onKeyDown?: (event: KeyboardEvent<HTMLInputElement>) => void;\n\n  readonly?: boolean;\n  fullWidth?: boolean;\n  selectOnRender?: boolean;\n\n  icon?: React.ReactNode;\n  label?: string;\n  className?: string;\n  placeholder?: string;\n  isRedacted?: boolean;\n} & ({ value: string } | { defaultValue: string });\n\nexport const TextField = forwardRef<HTMLInputElement, TextFieldProps>(\n  (\n    {\n      onChange,\n      label,\n      fullWidth,\n      placeholder,\n      readonly,\n      selectOnRender,\n      onKeyDown,\n      isRedacted = false,\n      icon,\n      className,\n      ...rest\n    },\n    ref,\n  ) => {\n    const innerRef = useRef<HTMLInputElement | null>(null);\n\n    useImperativeHandle(ref, () => innerRef.current!);\n\n    useLayoutEffect(() => {\n      if (selectOnRender) {\n        // focusing first is needed because vitest/jsdom\n        innerRef.current?.focus();\n        innerRef.current?.select();\n      }\n    }, [selectOnRender]);\n\n    const [isTemporarilyUnredacted, setIsTemporarilyUnredacted] =\n      useState<boolean>(false);\n\n    return (\n      <div\n        className={clsx(\"ExcTextField\", className, {\n          \"ExcTextField--fullWidth\": fullWidth,\n          \"ExcTextField--hasIcon\": !!icon,\n        })}\n        onClick={() => {\n          innerRef.current?.focus();\n        }}\n      >\n        {icon}\n        {label && <div className=\"ExcTextField__label\">{label}</div>}\n        <div\n          className={clsx(\"ExcTextField__input\", {\n            \"ExcTextField__input--readonly\": readonly,\n          })}\n        >\n          <input\n            className={clsx({\n              \"is-redacted\":\n                \"value\" in rest &&\n                rest.value &&\n                isRedacted &&\n                !isTemporarilyUnredacted,\n            })}\n            readOnly={readonly}\n            value={\"value\" in rest ? rest.value : undefined}\n            defaultValue={\n              \"defaultValue\" in rest ? rest.defaultValue : undefined\n            }\n            placeholder={placeholder}\n            ref={innerRef}\n            onChange={(event) => onChange?.(event.target.value)}\n            onKeyDown={onKeyDown}\n          />\n          {isRedacted && (\n            <Button\n              onSelect={() =>\n                setIsTemporarilyUnredacted(!isTemporarilyUnredacted)\n              }\n              style={{ border: 0, userSelect: \"none\" }}\n            >\n              {isTemporarilyUnredacted ? eyeClosedIcon : eyeIcon}\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  },\n);\n", "import clsx from \"clsx\";\nimport React from \"react\";\nimport { composeEventHandlers } from \"../utils\";\nimport \"./Button.scss\";\n\ninterface ButtonProps\n  extends React.DetailedHTMLProps<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  > {\n  type?: \"button\" | \"submit\" | \"reset\";\n  onSelect: () => any;\n  /** whether button is in active state */\n  selected?: boolean;\n  children: React.ReactNode;\n  className?: string;\n}\n\n/**\n * A generic button component that follows Excalidraw's design system.\n * Style can be customised using `className` or `style` prop.\n * Accepts all props that a regular `button` element accepts.\n */\nexport const Button = ({\n  type = \"button\",\n  onSelect,\n  selected,\n  children,\n  className = \"\",\n  ...rest\n}: ButtonProps) => {\n  return (\n    <button\n      onClick={composeEventHandlers(rest.onClick, (event) => {\n        onSelect();\n      })}\n      type={type}\n      className={clsx(\"excalidraw-button\", className, { selected })}\n      {...rest}\n    >\n      {children}\n    </button>\n  );\n};\n", "import { isDarwin } from \"../constants\";\nimport { t } from \"../i18n\";\nimport type { SubtypeOf } from \"../utility-types\";\nimport { getShortcutKey } from \"../utils\";\nimport type { ActionName } from \"./types\";\n\nexport type ShortcutName =\n  | SubtypeOf<\n      ActionName,\n      | \"toggleTheme\"\n      | \"loadScene\"\n      | \"clearCanvas\"\n      | \"cut\"\n      | \"copy\"\n      | \"paste\"\n      | \"copyStyles\"\n      | \"pasteStyles\"\n      | \"selectAll\"\n      | \"deleteSelectedElements\"\n      | \"duplicateSelection\"\n      | \"sendBackward\"\n      | \"bringForward\"\n      | \"sendToBack\"\n      | \"bringToFront\"\n      | \"copyAsPng\"\n      | \"group\"\n      | \"ungroup\"\n      | \"gridMode\"\n      | \"zenMode\"\n      | \"objectsSnapMode\"\n      | \"stats\"\n      | \"addToLibrary\"\n      | \"viewMode\"\n      | \"flipHorizontal\"\n      | \"flipVertical\"\n      | \"hyperlink\"\n      | \"toggleElementLock\"\n      | \"resetZoom\"\n      | \"zoomOut\"\n      | \"zoomIn\"\n      | \"zoomToFit\"\n      | \"zoomToFitSelectionInViewport\"\n      | \"zoomToFitSelection\"\n      | \"toggleEraserTool\"\n      | \"toggleHandTool\"\n      | \"setFrameAsActiveTool\"\n      | \"saveFileToDisk\"\n      | \"saveToActiveFile\"\n      | \"toggleShortcuts\"\n      | \"wrapSelectionInFrame\"\n    >\n  | \"saveScene\"\n  | \"imageExport\"\n  | \"commandPalette\"\n  | \"searchMenu\";\n\nconst shortcutMap: Record<ShortcutName, string[]> = {\n  toggleTheme: [getShortcutKey(\"Shift+Alt+D\")],\n  saveScene: [getShortcutKey(\"CtrlOrCmd+S\")],\n  loadScene: [getShortcutKey(\"CtrlOrCmd+O\")],\n  clearCanvas: [getShortcutKey(\"CtrlOrCmd+Delete\")],\n  imageExport: [getShortcutKey(\"CtrlOrCmd+Shift+E\")],\n  commandPalette: [\n    getShortcutKey(\"CtrlOrCmd+/\"),\n    getShortcutKey(\"CtrlOrCmd+Shift+P\"),\n  ],\n  cut: [getShortcutKey(\"CtrlOrCmd+X\")],\n  copy: [getShortcutKey(\"CtrlOrCmd+C\")],\n  paste: [getShortcutKey(\"CtrlOrCmd+V\")],\n  copyStyles: [getShortcutKey(\"CtrlOrCmd+Alt+C\")],\n  pasteStyles: [getShortcutKey(\"CtrlOrCmd+Alt+V\")],\n  selectAll: [getShortcutKey(\"CtrlOrCmd+A\")],\n  deleteSelectedElements: [getShortcutKey(\"Delete\")],\n  duplicateSelection: [\n    getShortcutKey(\"CtrlOrCmd+D\"),\n    getShortcutKey(`Alt+${t(\"helpDialog.drag\")}`),\n  ],\n  sendBackward: [getShortcutKey(\"CtrlOrCmd+[\")],\n  bringForward: [getShortcutKey(\"CtrlOrCmd+]\")],\n  sendToBack: [\n    isDarwin\n      ? getShortcutKey(\"CtrlOrCmd+Alt+[\")\n      : getShortcutKey(\"CtrlOrCmd+Shift+[\"),\n  ],\n  bringToFront: [\n    isDarwin\n      ? getShortcutKey(\"CtrlOrCmd+Alt+]\")\n      : getShortcutKey(\"CtrlOrCmd+Shift+]\"),\n  ],\n  copyAsPng: [getShortcutKey(\"Shift+Alt+C\")],\n  group: [getShortcutKey(\"CtrlOrCmd+G\")],\n  ungroup: [getShortcutKey(\"CtrlOrCmd+Shift+G\")],\n  gridMode: [getShortcutKey(\"CtrlOrCmd+'\")],\n  zenMode: [getShortcutKey(\"Alt+Z\")],\n  objectsSnapMode: [getShortcutKey(\"Alt+S\")],\n  stats: [getShortcutKey(\"Alt+/\")],\n  addToLibrary: [],\n  flipHorizontal: [getShortcutKey(\"Shift+H\")],\n  flipVertical: [getShortcutKey(\"Shift+V\")],\n  viewMode: [getShortcutKey(\"Alt+R\")],\n  hyperlink: [getShortcutKey(\"CtrlOrCmd+K\")],\n  toggleElementLock: [getShortcutKey(\"CtrlOrCmd+Shift+L\")],\n  resetZoom: [getShortcutKey(\"CtrlOrCmd+0\")],\n  zoomOut: [getShortcutKey(\"CtrlOrCmd+-\")],\n  zoomIn: [getShortcutKey(\"CtrlOrCmd++\")],\n  zoomToFitSelection: [getShortcutKey(\"Shift+3\")],\n  zoomToFit: [getShortcutKey(\"Shift+1\")],\n  zoomToFitSelectionInViewport: [getShortcutKey(\"Shift+2\")],\n  toggleEraserTool: [getShortcutKey(\"E\")],\n  toggleHandTool: [getShortcutKey(\"H\")],\n  setFrameAsActiveTool: [getShortcutKey(\"F\")],\n  saveFileToDisk: [getShortcutKey(\"CtrlOrCmd+S\")],\n  saveToActiveFile: [getShortcutKey(\"CtrlOrCmd+S\")],\n  toggleShortcuts: [getShortcutKey(\"?\")],\n  searchMenu: [getShortcutKey(\"CtrlOrCmd+F\")],\n  wrapSelectionInFrame: [],\n};\n\nexport const getShortcutFromShortcutName = (name: ShortcutName, idx = 0) => {\n  const shortcuts = shortcutMap[name];\n  // if multiple shortcuts available, take the first one\n  return shortcuts && shortcuts.length > 0\n    ? shortcuts[idx] || shortcuts[0]\n    : \"\";\n};\n", "// taken from lodash (MIT)\n// https://github.com/lodash/lodash/blob/67389a8c78975d97505fa15aa79bec6397749807/lodash.js#L14180\n\nconst rsComboMarksRange = \"\\\\u0300-\\\\u036f\";\nconst reComboHalfMarksRange = \"\\\\ufe20-\\\\ufe2f\";\nconst rsComboSymbolsRange = \"\\\\u20d0-\\\\u20ff\";\nconst rsComboRange =\n  rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;\nconst rsCombo = `[${rsComboRange}]`;\n\nconst reComboMark = RegExp(rsCombo, \"g\");\n\nconst reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n// NOTE below letter replacements are modified from lodash to always convert\n// to single-letter form by phonetic similarity to keep indexing identical.\n// Doing this is only useful for search highlighting, and only insofar\n// we use a library that can highlight the original source string using\n// the matching indices. As such, we'll likely need to write our own highlighter\n// anyway. Ultimately, we'll want to write our own matcher altogether\n// so we don't have to do any deburring, which will be the most correct\n// solution.\n//\n// prettier-ignore\nconst deburredLetters = {\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    // normaly Ae/ae\n    '\\xc6': 'E', '\\xe6': 'e',\n    // normally Th/th\n    '\\xde': 'T', '\\xfe': 't',\n    // normally ss\n    '\\xdf': 's',\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    // normally IJ/ij\n    '\\u0132': 'I', '\\u0133': 'i',\n    // normally OE/oe\n    '\\u0152': 'E', '\\u0153': 'e',\n    // normally \"'n\"\n    '\\u0149': \"n\",\n    '\\u017f': 's'\n  };\n\nexport const deburr = (str: string) => {\n  return str\n    .replace(reLatin, (key: string) => {\n      return deburredLetters[key as keyof typeof deburredLetters] || key;\n    })\n    .replace(reComboMark, \"\");\n};\n", "import { useState } from \"react\";\nimport type { ActionManager } from \"../actions/manager\";\nimport type {\n  ExcalidrawElement,\n  ExcalidrawElementType,\n  NonDeletedElementsMap,\n  NonDeletedSceneElementsMap,\n} from \"../element/types\";\nimport { t } from \"../i18n\";\nimport { useDevice } from \"./App\";\nimport {\n  canChangeRoundness,\n  canHaveArrowheads,\n  getTargetElements,\n  hasBackground,\n  hasStrokeStyle,\n  hasStrokeWidth,\n} from \"../scene\";\nimport { SHAPES } from \"../shapes\";\nimport type { AppClassProperties, AppProps, UIAppState, Zoom } from \"../types\";\nimport { capitalizeString, isTransparent } from \"../utils\";\nimport Stack from \"./Stack\";\nimport { ToolButton } from \"./ToolButton\";\nimport { hasStrokeColor, toolIsArrow } from \"../scene/comparisons\";\nimport { trackEvent } from \"../analytics\";\nimport {\n  hasBoundTextElement,\n  isElbowArrow,\n  isImageElement,\n  isLinearElement,\n  isTextElement,\n} from \"../element/typeChecks\";\nimport clsx from \"clsx\";\nimport { actionToggleZenMode } from \"../actions\";\nimport { Tooltip } from \"./Tooltip\";\nimport {\n  shouldAllowVerticalAlign,\n  suppportsHorizontalAlign,\n} from \"../element/textElement\";\n\nimport \"./Actions.scss\";\nimport DropdownMenu from \"./dropdownMenu/DropdownMenu\";\nimport {\n  EmbedIcon,\n  extraToolsIcon,\n  frameToolIcon,\n  mermaidLogoIcon,\n  laserPointerToolIcon,\n  MagicIcon,\n} from \"./icons\";\nimport { KEYS } from \"../keys\";\nimport { useTunnels } from \"../context/tunnels\";\nimport { CLASSES } from \"../constants\";\nimport { alignActionsPredicate } from \"../actions/actionAlign\";\n\nexport const canChangeStrokeColor = (\n  appState: UIAppState,\n  targetElements: ExcalidrawElement[],\n) => {\n  let commonSelectedType: ExcalidrawElementType | null =\n    targetElements[0]?.type || null;\n\n  for (const element of targetElements) {\n    if (element.type !== commonSelectedType) {\n      commonSelectedType = null;\n      break;\n    }\n  }\n\n  return (\n    (hasStrokeColor(appState.activeTool.type) &&\n      appState.activeTool.type !== \"image\" &&\n      commonSelectedType !== \"image\" &&\n      commonSelectedType !== \"frame\" &&\n      commonSelectedType !== \"magicframe\") ||\n    targetElements.some((element) => hasStrokeColor(element.type))\n  );\n};\n\nexport const canChangeBackgroundColor = (\n  appState: UIAppState,\n  targetElements: ExcalidrawElement[],\n) => {\n  return (\n    hasBackground(appState.activeTool.type) ||\n    targetElements.some((element) => hasBackground(element.type))\n  );\n};\n\nexport const SelectedShapeActions = ({\n  appState,\n  elementsMap,\n  renderAction,\n  app,\n}: {\n  appState: UIAppState;\n  elementsMap: NonDeletedElementsMap | NonDeletedSceneElementsMap;\n  renderAction: ActionManager[\"renderAction\"];\n  app: AppClassProperties;\n}) => {\n  const targetElements = getTargetElements(elementsMap, appState);\n\n  let isSingleElementBoundContainer = false;\n  if (\n    targetElements.length === 2 &&\n    (hasBoundTextElement(targetElements[0]) ||\n      hasBoundTextElement(targetElements[1]))\n  ) {\n    isSingleElementBoundContainer = true;\n  }\n  const isEditingTextOrNewElement = Boolean(\n    appState.editingTextElement || appState.newElement,\n  );\n  const device = useDevice();\n  const isRTL = document.documentElement.getAttribute(\"dir\") === \"rtl\";\n\n  const showFillIcons =\n    (hasBackground(appState.activeTool.type) &&\n      !isTransparent(appState.currentItemBackgroundColor)) ||\n    targetElements.some(\n      (element) =>\n        hasBackground(element.type) && !isTransparent(element.backgroundColor),\n    );\n\n  const showLinkIcon =\n    targetElements.length === 1 || isSingleElementBoundContainer;\n\n  const showLineEditorAction =\n    !appState.editingLinearElement &&\n    targetElements.length === 1 &&\n    isLinearElement(targetElements[0]) &&\n    !isElbowArrow(targetElements[0]);\n\n  const showCropEditorAction =\n    !appState.croppingElementId &&\n    targetElements.length === 1 &&\n    isImageElement(targetElements[0]);\n\n  const showAlignActions =\n    !isSingleElementBoundContainer && alignActionsPredicate(appState, app);\n\n  return (\n    <div className=\"panelColumn\">\n      <div>\n        {canChangeStrokeColor(appState, targetElements) &&\n          renderAction(\"changeStrokeColor\")}\n      </div>\n      {canChangeBackgroundColor(appState, targetElements) && (\n        <div>{renderAction(\"changeBackgroundColor\")}</div>\n      )}\n      {showFillIcons && renderAction(\"changeFillStyle\")}\n\n      {(hasStrokeWidth(appState.activeTool.type) ||\n        targetElements.some((element) => hasStrokeWidth(element.type))) &&\n        renderAction(\"changeStrokeWidth\")}\n\n      {(appState.activeTool.type === \"freedraw\" ||\n        targetElements.some((element) => element.type === \"freedraw\")) &&\n        renderAction(\"changeStrokeShape\")}\n\n      {(hasStrokeStyle(appState.activeTool.type) ||\n        targetElements.some((element) => hasStrokeStyle(element.type))) && (\n        <>\n          {renderAction(\"changeStrokeStyle\")}\n          {renderAction(\"changeSloppiness\")}\n        </>\n      )}\n\n      {(canChangeRoundness(appState.activeTool.type) ||\n        targetElements.some((element) => canChangeRoundness(element.type))) && (\n        <>{renderAction(\"changeRoundness\")}</>\n      )}\n\n      {(toolIsArrow(appState.activeTool.type) ||\n        targetElements.some((element) => toolIsArrow(element.type))) && (\n        <>{renderAction(\"changeArrowType\")}</>\n      )}\n\n      {(appState.activeTool.type === \"text\" ||\n        targetElements.some(isTextElement)) && (\n        <>\n          {renderAction(\"changeFontFamily\")}\n          {renderAction(\"changeFontSize\")}\n          {(appState.activeTool.type === \"text\" ||\n            suppportsHorizontalAlign(targetElements, elementsMap)) &&\n            renderAction(\"changeTextAlign\")}\n        </>\n      )}\n\n      {shouldAllowVerticalAlign(targetElements, elementsMap) &&\n        renderAction(\"changeVerticalAlign\")}\n      {(canHaveArrowheads(appState.activeTool.type) ||\n        targetElements.some((element) => canHaveArrowheads(element.type))) && (\n        <>{renderAction(\"changeArrowhead\")}</>\n      )}\n\n      {renderAction(\"changeOpacity\")}\n\n      <fieldset>\n        <legend>{t(\"labels.layers\")}</legend>\n        <div className=\"buttonList\">\n          {renderAction(\"sendToBack\")}\n          {renderAction(\"sendBackward\")}\n          {renderAction(\"bringForward\")}\n          {renderAction(\"bringToFront\")}\n        </div>\n      </fieldset>\n\n      {showAlignActions && !isSingleElementBoundContainer && (\n        <fieldset>\n          <legend>{t(\"labels.align\")}</legend>\n          <div className=\"buttonList\">\n            {\n              // swap this order for RTL so the button positions always match their action\n              // (i.e. the leftmost button aligns left)\n            }\n            {isRTL ? (\n              <>\n                {renderAction(\"alignRight\")}\n                {renderAction(\"alignHorizontallyCentered\")}\n                {renderAction(\"alignLeft\")}\n              </>\n            ) : (\n              <>\n                {renderAction(\"alignLeft\")}\n                {renderAction(\"alignHorizontallyCentered\")}\n                {renderAction(\"alignRight\")}\n              </>\n            )}\n            {targetElements.length > 2 &&\n              renderAction(\"distributeHorizontally\")}\n            {/* breaks the row \u02C7\u02C7 */}\n            <div style={{ flexBasis: \"100%\", height: 0 }} />\n            <div\n              style={{\n                display: \"flex\",\n                flexWrap: \"wrap\",\n                gap: \".5rem\",\n                marginTop: \"-0.5rem\",\n              }}\n            >\n              {renderAction(\"alignTop\")}\n              {renderAction(\"alignVerticallyCentered\")}\n              {renderAction(\"alignBottom\")}\n              {targetElements.length > 2 &&\n                renderAction(\"distributeVertically\")}\n            </div>\n          </div>\n        </fieldset>\n      )}\n      {!isEditingTextOrNewElement && targetElements.length > 0 && (\n        <fieldset>\n          <legend>{t(\"labels.actions\")}</legend>\n          <div className=\"buttonList\">\n            {!device.editor.isMobile && renderAction(\"duplicateSelection\")}\n            {!device.editor.isMobile && renderAction(\"deleteSelectedElements\")}\n            {renderAction(\"group\")}\n            {renderAction(\"ungroup\")}\n            {showLinkIcon && renderAction(\"hyperlink\")}\n            {showCropEditorAction && renderAction(\"cropEditor\")}\n            {showLineEditorAction && renderAction(\"toggleLinearEditor\")}\n          </div>\n        </fieldset>\n      )}\n    </div>\n  );\n};\n\nexport const ShapesSwitcher = ({\n  activeTool,\n  appState,\n  app,\n  UIOptions,\n}: {\n  activeTool: UIAppState[\"activeTool\"];\n  appState: UIAppState;\n  app: AppClassProperties;\n  UIOptions: AppProps[\"UIOptions\"];\n}) => {\n  const [isExtraToolsMenuOpen, setIsExtraToolsMenuOpen] = useState(false);\n\n  const frameToolSelected = activeTool.type === \"frame\";\n  const laserToolSelected = activeTool.type === \"laser\";\n  const embeddableToolSelected = activeTool.type === \"embeddable\";\n\n  const { TTDDialogTriggerTunnel } = useTunnels();\n\n  return (\n    <>\n      {SHAPES.map(({ value, icon, key, numericKey, fillable }, index) => {\n        if (\n          UIOptions.tools?.[\n            value as Extract<typeof value, keyof AppProps[\"UIOptions\"][\"tools\"]>\n          ] === false\n        ) {\n          return null;\n        }\n\n        const label = t(`toolBar.${value}`);\n        const letter =\n          key && capitalizeString(typeof key === \"string\" ? key : key[0]);\n        const shortcut = letter\n          ? `${letter} ${t(\"helpDialog.or\")} ${numericKey}`\n          : `${numericKey}`;\n        return (\n          <ToolButton\n            className={clsx(\"Shape\", { fillable })}\n            key={value}\n            type=\"radio\"\n            icon={icon}\n            checked={activeTool.type === value}\n            name=\"editor-current-shape\"\n            title={`${capitalizeString(label)} \u2014 ${shortcut}`}\n            keyBindingLabel={numericKey || letter}\n            aria-label={capitalizeString(label)}\n            aria-keyshortcuts={shortcut}\n            data-testid={`toolbar-${value}`}\n            onPointerDown={({ pointerType }) => {\n              if (!appState.penDetected && pointerType === \"pen\") {\n                app.togglePenMode(true);\n              }\n            }}\n            onChange={({ pointerType }) => {\n              if (appState.activeTool.type !== value) {\n                trackEvent(\"toolbar\", value, \"ui\");\n              }\n              if (value === \"image\") {\n                app.setActiveTool({\n                  type: value,\n                  insertOnCanvasDirectly: pointerType !== \"mouse\",\n                });\n              } else {\n                app.setActiveTool({ type: value });\n              }\n            }}\n          />\n        );\n      })}\n      <div className=\"App-toolbar__divider\" />\n\n      <DropdownMenu open={isExtraToolsMenuOpen}>\n        <DropdownMenu.Trigger\n          className={clsx(\"App-toolbar__extra-tools-trigger\", {\n            \"App-toolbar__extra-tools-trigger--selected\":\n              frameToolSelected ||\n              embeddableToolSelected ||\n              // in collab we're already highlighting the laser button\n              // outside toolbar, so let's not highlight extra-tools button\n              // on top of it\n              (laserToolSelected && !app.props.isCollaborating),\n          })}\n          onToggle={() => setIsExtraToolsMenuOpen(!isExtraToolsMenuOpen)}\n          title={t(\"toolBar.extraTools\")}\n        >\n          {extraToolsIcon}\n        </DropdownMenu.Trigger>\n        <DropdownMenu.Content\n          onClickOutside={() => setIsExtraToolsMenuOpen(false)}\n          onSelect={() => setIsExtraToolsMenuOpen(false)}\n          className=\"App-toolbar__extra-tools-dropdown\"\n        >\n          <DropdownMenu.Item\n            onSelect={() => app.setActiveTool({ type: \"frame\" })}\n            icon={frameToolIcon}\n            shortcut={KEYS.F.toLocaleUpperCase()}\n            data-testid=\"toolbar-frame\"\n            selected={frameToolSelected}\n          >\n            {t(\"toolBar.frame\")}\n          </DropdownMenu.Item>\n          <DropdownMenu.Item\n            onSelect={() => app.setActiveTool({ type: \"embeddable\" })}\n            icon={EmbedIcon}\n            data-testid=\"toolbar-embeddable\"\n            selected={embeddableToolSelected}\n          >\n            {t(\"toolBar.embeddable\")}\n          </DropdownMenu.Item>\n          <DropdownMenu.Item\n            onSelect={() => app.setActiveTool({ type: \"laser\" })}\n            icon={laserPointerToolIcon}\n            data-testid=\"toolbar-laser\"\n            selected={laserToolSelected}\n            shortcut={KEYS.K.toLocaleUpperCase()}\n          >\n            {t(\"toolBar.laser\")}\n          </DropdownMenu.Item>\n          <div style={{ margin: \"6px 0\", fontSize: 14, fontWeight: 600 }}>\n            Generate\n          </div>\n          {app.props.aiEnabled !== false && <TTDDialogTriggerTunnel.Out />}\n          <DropdownMenu.Item\n            onSelect={() => app.setOpenDialog({ name: \"ttd\", tab: \"mermaid\" })}\n            icon={mermaidLogoIcon}\n            data-testid=\"toolbar-embeddable\"\n          >\n            {t(\"toolBar.mermaidToExcalidraw\")}\n          </DropdownMenu.Item>\n          {app.props.aiEnabled !== false && app.plugins.diagramToCode && (\n            <>\n              <DropdownMenu.Item\n                onSelect={() => app.onMagicframeToolSelect()}\n                icon={MagicIcon}\n                data-testid=\"toolbar-magicframe\"\n              >\n                {t(\"toolBar.magicframe\")}\n                <DropdownMenu.Item.Badge>AI</DropdownMenu.Item.Badge>\n              </DropdownMenu.Item>\n            </>\n          )}\n        </DropdownMenu.Content>\n      </DropdownMenu>\n    </>\n  );\n};\n\nexport const ZoomActions = ({\n  renderAction,\n  zoom,\n}: {\n  renderAction: ActionManager[\"renderAction\"];\n  zoom: Zoom;\n}) => (\n  <Stack.Col gap={1} className={CLASSES.ZOOM_ACTIONS}>\n    <Stack.Row align=\"center\">\n      {renderAction(\"zoomOut\")}\n      {renderAction(\"resetZoom\")}\n      {renderAction(\"zoomIn\")}\n    </Stack.Row>\n  </Stack.Col>\n);\n\nexport const UndoRedoActions = ({\n  renderAction,\n  className,\n}: {\n  renderAction: ActionManager[\"renderAction\"];\n  className?: string;\n}) => (\n  <div className={`undo-redo-buttons ${className}`}>\n    <div className=\"undo-button-container\">\n      <Tooltip label={t(\"buttons.undo\")}>{renderAction(\"undo\")}</Tooltip>\n    </div>\n    <div className=\"redo-button-container\">\n      <Tooltip label={t(\"buttons.redo\")}> {renderAction(\"redo\")}</Tooltip>\n    </div>\n  </div>\n);\n\nexport const ExitZenModeAction = ({\n  actionManager,\n  showExitZenModeBtn,\n}: {\n  actionManager: ActionManager;\n  showExitZenModeBtn: boolean;\n}) => (\n  <button\n    type=\"button\"\n    className={clsx(\"disable-zen-mode\", {\n      \"disable-zen-mode--visible\": showExitZenModeBtn,\n    })}\n    onClick={() => actionManager.executeAction(actionToggleZenMode)}\n  >\n    {t(\"buttons.exitZenMode\")}\n  </button>\n);\n\nexport const FinalizeAction = ({\n  renderAction,\n  className,\n}: {\n  renderAction: ActionManager[\"renderAction\"];\n  className?: string;\n}) => (\n  <div className={`finalize-button ${className}`}>\n    {renderAction(\"finalize\", { size: \"small\" })}\n  </div>\n);\n", "import React from \"react\";\nimport tunnel from \"tunnel-rat\";\nimport { createIsolation } from \"jotai-scope\";\n\nexport type Tunnel = ReturnType<typeof tunnel>;\n\ntype TunnelsContextValue = {\n  MainMenuTunnel: Tunnel;\n  WelcomeScreenMenuHintTunnel: Tunnel;\n  WelcomeScreenToolbarHintTunnel: Tunnel;\n  WelcomeScreenHelpHintTunnel: Tunnel;\n  WelcomeScreenCenterTunnel: Tunnel;\n  FooterCenterTunnel: Tunnel;\n  DefaultSidebarTriggerTunnel: Tunnel;\n  DefaultSidebarTabTriggersTunnel: Tunnel;\n  OverwriteConfirmDialogTunnel: Tunnel;\n  TTDDialogTriggerTunnel: Tunnel;\n  // this can be removed once we create jotai stores per each editor\n  // instance\n  tunnelsJotai: ReturnType<typeof createIsolation>;\n};\n\nexport const TunnelsContext = React.createContext<TunnelsContextValue>(null!);\n\nexport const useTunnels = () => React.useContext(TunnelsContext);\n\nconst tunnelsJotai = createIsolation();\n\nexport const useInitializeTunnels = () => {\n  return React.useMemo((): TunnelsContextValue => {\n    return {\n      MainMenuTunnel: tunnel(),\n      WelcomeScreenMenuHintTunnel: tunnel(),\n      WelcomeScreenToolbarHintTunnel: tunnel(),\n      WelcomeScreenHelpHintTunnel: tunnel(),\n      WelcomeScreenCenterTunnel: tunnel(),\n      FooterCenterTunnel: tunnel(),\n      DefaultSidebarTriggerTunnel: tunnel(),\n      DefaultSidebarTabTriggersTunnel: tunnel(),\n      OverwriteConfirmDialogTunnel: tunnel(),\n      TTDDialogTriggerTunnel: tunnel(),\n      tunnelsJotai,\n    };\n  }, []);\n};\n", "import { useRef } from \"react\";\n\n/**\n * Returns a stable function of the same type.\n */\nexport const useStableCallback = <T extends (...args: any[]) => any>(\n  userFn: T,\n) => {\n  const stableRef = useRef<{ userFn: T; stableFn?: T }>({ userFn });\n  stableRef.current.userFn = userFn;\n\n  if (!stableRef.current.stableFn) {\n    stableRef.current.stableFn = ((...args: any[]) =>\n      stableRef.current.userFn(...args)) as T;\n  }\n\n  return stableRef.current.stableFn as T;\n};\n", "import { actionClearCanvas } from \"../actions\";\nimport { t } from \"../i18n\";\nimport { atom, useAtom } from \"../editor-jotai\";\nimport { useExcalidrawActionManager } from \"./App\";\nimport ConfirmDialog from \"./ConfirmDialog\";\n\nexport const activeConfirmDialogAtom = atom<\"clearCanvas\" | null>(null);\n\nexport const ActiveConfirmDialog = () => {\n  const [activeConfirmDialog, setActiveConfirmDialog] = useAtom(\n    activeConfirmDialogAtom,\n  );\n  const actionManager = useExcalidrawActionManager();\n\n  if (!activeConfirmDialog) {\n    return null;\n  }\n\n  if (activeConfirmDialog === \"clearCanvas\") {\n    return (\n      <ConfirmDialog\n        onConfirm={() => {\n          actionManager.executeAction(actionClearCanvas);\n          setActiveConfirmDialog(null);\n        }}\n        onCancel={() => setActiveConfirmDialog(null)}\n        title={t(\"clearCanvasDialog.title\")}\n      >\n        <p className=\"clear-canvas__content\"> {t(\"alerts.clearReset\")}</p>\n      </ConfirmDialog>\n    );\n  }\n\n  return null;\n};\n", "import { actionToggleTheme } from \"../../actions\";\nimport type { CommandPaletteItem } from \"./types\";\n\nexport const toggleTheme: CommandPaletteItem = {\n  ...actionToggleTheme,\n  category: \"App\",\n  label: \"Toggle theme\",\n  perform: ({ actionManager }) => {\n    actionManager.executeAction(actionToggleTheme, \"commandPalette\");\n  },\n};\n", "import { copyTextToSystemClipboard } from \"../clipboard\";\nimport { copyIcon, elementLinkIcon } from \"../components/icons\";\nimport {\n  canCreateLinkFromElements,\n  defaultGetElementLinkFromSelection,\n  getLinkIdAndTypeFromSelection,\n} from \"../element/elementLink\";\nimport { t } from \"../i18n\";\nimport { getSelectedElements } from \"../scene\";\nimport { CaptureUpdateAction } from \"../store\";\nimport { register } from \"./register\";\n\nexport const actionCopyElementLink = register({\n  name: \"copyElementLink\",\n  label: \"labels.copyElementLink\",\n  icon: copyIcon,\n  trackEvent: { category: \"element\" },\n  perform: async (elements, appState, _, app) => {\n    const selectedElements = getSelectedElements(elements, appState);\n\n    try {\n      if (window.location) {\n        const idAndType = getLinkIdAndTypeFromSelection(\n          selectedElements,\n          appState,\n        );\n\n        if (idAndType) {\n          await copyTextToSystemClipboard(\n            app.props.generateLinkForSelection\n              ? app.props.generateLinkForSelection(idAndType.id, idAndType.type)\n              : defaultGetElementLinkFromSelection(\n                  idAndType.id,\n                  idAndType.type,\n                ),\n          );\n\n          return {\n            appState: {\n              toast: {\n                message: t(\"toast.elementLinkCopied\"),\n                closable: true,\n              },\n            },\n            captureUpdate: CaptureUpdateAction.EVENTUALLY,\n          };\n        }\n        return {\n          appState,\n          elements,\n          app,\n          captureUpdate: CaptureUpdateAction.EVENTUALLY,\n        };\n      }\n    } catch (error: any) {\n      console.error(error);\n    }\n\n    return {\n      appState,\n      elements,\n      app,\n      captureUpdate: CaptureUpdateAction.EVENTUALLY,\n    };\n  },\n  predicate: (elements, appState) =>\n    canCreateLinkFromElements(getSelectedElements(elements, appState)),\n});\n\nexport const actionLinkToElement = register({\n  name: \"linkToElement\",\n  label: \"labels.linkToElement\",\n  icon: elementLinkIcon,\n  perform: (elements, appState, _, app) => {\n    const selectedElements = getSelectedElements(elements, appState);\n\n    if (\n      selectedElements.length !== 1 ||\n      !canCreateLinkFromElements(selectedElements)\n    ) {\n      return {\n        elements,\n        appState,\n        app,\n        captureUpdate: CaptureUpdateAction.EVENTUALLY,\n      };\n    }\n\n    return {\n      appState: {\n        ...appState,\n        openDialog: {\n          name: \"elementLinkSelector\",\n          sourceElementId: getSelectedElements(elements, appState)[0].id,\n        },\n      },\n      captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n    };\n  },\n  predicate: (elements, appState, appProps, app) => {\n    const selectedElements = getSelectedElements(elements, appState);\n\n    return (\n      appState.openDialog?.name !== \"elementLinkSelector\" &&\n      selectedElements.length === 1 &&\n      canCreateLinkFromElements(selectedElements)\n    );\n  },\n  trackEvent: false,\n});\n", "import { DEFAULT_CATEGORIES } from \"../components/CommandPalette/CommandPalette\";\nimport { LinearElementEditor } from \"../element/linearElementEditor\";\nimport { isElbowArrow, isLinearElement } from \"../element/typeChecks\";\nimport type { ExcalidrawLinearElement } from \"../element/types\";\nimport { CaptureUpdateAction } from \"../store\";\nimport { register } from \"./register\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { t } from \"../i18n\";\nimport { lineEditorIcon } from \"../components/icons\";\n\nexport const actionToggleLinearEditor = register({\n  name: \"toggleLinearEditor\",\n  category: DEFAULT_CATEGORIES.elements,\n  label: (elements, appState, app) => {\n    const selectedElement = app.scene.getSelectedElements({\n      selectedElementIds: appState.selectedElementIds,\n    })[0] as ExcalidrawLinearElement | undefined;\n\n    return selectedElement?.type === \"arrow\"\n      ? \"labels.lineEditor.editArrow\"\n      : \"labels.lineEditor.edit\";\n  },\n  keywords: [\"line\"],\n  trackEvent: {\n    category: \"element\",\n  },\n  predicate: (elements, appState, _, app) => {\n    const selectedElements = app.scene.getSelectedElements(appState);\n    if (\n      !appState.editingLinearElement &&\n      selectedElements.length === 1 &&\n      isLinearElement(selectedElements[0]) &&\n      !isElbowArrow(selectedElements[0])\n    ) {\n      return true;\n    }\n    return false;\n  },\n  perform(elements, appState, _, app) {\n    const selectedElement = app.scene.getSelectedElements({\n      selectedElementIds: appState.selectedElementIds,\n      includeBoundTextElement: true,\n    })[0] as ExcalidrawLinearElement;\n\n    const editingLinearElement =\n      appState.editingLinearElement?.elementId === selectedElement.id\n        ? null\n        : new LinearElementEditor(selectedElement);\n    return {\n      appState: {\n        ...appState,\n        editingLinearElement,\n      },\n      captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n    };\n  },\n  PanelComponent: ({ appState, updateData, app }) => {\n    const selectedElement = app.scene.getSelectedElements({\n      selectedElementIds: appState.selectedElementIds,\n    })[0] as ExcalidrawLinearElement;\n\n    const label = t(\n      selectedElement.type === \"arrow\"\n        ? \"labels.lineEditor.editArrow\"\n        : \"labels.lineEditor.edit\",\n    );\n    return (\n      <ToolButton\n        type=\"button\"\n        icon={lineEditorIcon}\n        title={label}\n        aria-label={label}\n        onClick={() => updateData(null)}\n      />\n    );\n  },\n});\n", "import { KEYS } from \"../keys\";\nimport { register } from \"./register\";\nimport type { AppState } from \"../types\";\nimport { searchIcon } from \"../components/icons\";\nimport { CaptureUpdateAction } from \"../store\";\nimport { CANVAS_SEARCH_TAB, CLASSES, DEFAULT_SIDEBAR } from \"../constants\";\n\nexport const actionToggleSearchMenu = register({\n  name: \"searchMenu\",\n  icon: searchIcon,\n  keywords: [\"search\", \"find\"],\n  label: \"search.title\",\n  viewMode: true,\n  trackEvent: {\n    category: \"search_menu\",\n    action: \"toggle\",\n    predicate: (appState) => appState.gridModeEnabled,\n  },\n  perform(elements, appState, _, app) {\n    if (\n      appState.openSidebar?.name === DEFAULT_SIDEBAR.name &&\n      appState.openSidebar.tab === CANVAS_SEARCH_TAB\n    ) {\n      const searchInput =\n        app.excalidrawContainerValue.container?.querySelector<HTMLInputElement>(\n          `.${CLASSES.SEARCH_MENU_INPUT_WRAPPER} input`,\n        );\n\n      if (searchInput?.matches(\":focus\")) {\n        return {\n          appState: { ...appState, openSidebar: null },\n          captureUpdate: CaptureUpdateAction.EVENTUALLY,\n        };\n      }\n\n      searchInput?.focus();\n      searchInput?.select();\n      return false;\n    }\n\n    return {\n      appState: {\n        ...appState,\n        openSidebar: { name: DEFAULT_SIDEBAR.name, tab: CANVAS_SEARCH_TAB },\n        openDialog: null,\n      },\n      captureUpdate: CaptureUpdateAction.EVENTUALLY,\n    };\n  },\n  checked: (appState: AppState) => appState.gridModeEnabled,\n  predicate: (element, appState, props) => {\n    return props.gridModeEnabled === undefined;\n  },\n  keyTest: (event) => event[KEYS.CTRL_OR_CMD] && event.key === KEYS.F,\n});\n", "import { register } from \"./register\";\nimport { cropIcon } from \"../components/icons\";\nimport { CaptureUpdateAction } from \"../store\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { t } from \"../i18n\";\nimport { isImageElement } from \"../element/typeChecks\";\nimport type { ExcalidrawImageElement } from \"../element/types\";\n\nexport const actionToggleCropEditor = register({\n  name: \"cropEditor\",\n  label: \"helpDialog.cropStart\",\n  icon: cropIcon,\n  viewMode: true,\n  trackEvent: { category: \"menu\" },\n  keywords: [\"image\", \"crop\"],\n  perform(elements, appState, _, app) {\n    const selectedElement = app.scene.getSelectedElements({\n      selectedElementIds: appState.selectedElementIds,\n      includeBoundTextElement: true,\n    })[0] as ExcalidrawImageElement;\n\n    return {\n      appState: {\n        ...appState,\n        isCropping: false,\n        croppingElementId: selectedElement.id,\n      },\n      captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n    };\n  },\n  predicate: (elements, appState, _, app) => {\n    const selectedElements = app.scene.getSelectedElements(appState);\n    if (\n      !appState.croppingElementId &&\n      selectedElements.length === 1 &&\n      isImageElement(selectedElements[0])\n    ) {\n      return true;\n    }\n    return false;\n  },\n  PanelComponent: ({ appState, updateData, app }) => {\n    const label = t(\"helpDialog.cropStart\");\n\n    return (\n      <ToolButton\n        type=\"button\"\n        icon={cropIcon}\n        title={label}\n        aria-label={label}\n        onClick={() => updateData(null)}\n      />\n    );\n  },\n});\n", "import type { AppStateChange, ElementsChange } from \"./change\";\nimport type { SceneElementsMap } from \"./element/types\";\nimport { Emitter } from \"./emitter\";\nimport type { Snapshot } from \"./store\";\nimport type { AppState } from \"./types\";\n\ntype HistoryStack = HistoryEntry[];\n\nexport class HistoryChangedEvent {\n  constructor(\n    public readonly isUndoStackEmpty: boolean = true,\n    public readonly isRedoStackEmpty: boolean = true,\n  ) {}\n}\n\nexport class History {\n  public readonly onHistoryChangedEmitter = new Emitter<\n    [HistoryChangedEvent]\n  >();\n\n  private readonly undoStack: HistoryStack = [];\n  private readonly redoStack: HistoryStack = [];\n\n  public get isUndoStackEmpty() {\n    return this.undoStack.length === 0;\n  }\n\n  public get isRedoStackEmpty() {\n    return this.redoStack.length === 0;\n  }\n\n  public clear() {\n    this.undoStack.length = 0;\n    this.redoStack.length = 0;\n  }\n\n  /**\n   * Record a local change which will go into the history\n   */\n  public record(\n    elementsChange: ElementsChange,\n    appStateChange: AppStateChange,\n  ) {\n    const entry = HistoryEntry.create(appStateChange, elementsChange);\n\n    if (!entry.isEmpty()) {\n      // we have the latest changes, no need to `applyLatest`, which is done within `History.push`\n      this.undoStack.push(entry.inverse());\n\n      if (!entry.elementsChange.isEmpty()) {\n        // don't reset redo stack on local appState changes,\n        // as a simple click (unselect) could lead to losing all the redo entries\n        // only reset on non empty elements changes!\n        this.redoStack.length = 0;\n      }\n\n      this.onHistoryChangedEmitter.trigger(\n        new HistoryChangedEvent(this.isUndoStackEmpty, this.isRedoStackEmpty),\n      );\n    }\n  }\n\n  public undo(\n    elements: SceneElementsMap,\n    appState: AppState,\n    snapshot: Readonly<Snapshot>,\n  ) {\n    return this.perform(\n      elements,\n      appState,\n      snapshot,\n      () => History.pop(this.undoStack),\n      (entry: HistoryEntry) => History.push(this.redoStack, entry, elements),\n    );\n  }\n\n  public redo(\n    elements: SceneElementsMap,\n    appState: AppState,\n    snapshot: Readonly<Snapshot>,\n  ) {\n    return this.perform(\n      elements,\n      appState,\n      snapshot,\n      () => History.pop(this.redoStack),\n      (entry: HistoryEntry) => History.push(this.undoStack, entry, elements),\n    );\n  }\n\n  private perform(\n    elements: SceneElementsMap,\n    appState: AppState,\n    snapshot: Readonly<Snapshot>,\n    pop: () => HistoryEntry | null,\n    push: (entry: HistoryEntry) => void,\n  ): [SceneElementsMap, AppState] | void {\n    try {\n      let historyEntry = pop();\n\n      if (historyEntry === null) {\n        return;\n      }\n\n      let nextElements = elements;\n      let nextAppState = appState;\n      let containsVisibleChange = false;\n\n      // iterate through the history entries in case they result in no visible changes\n      while (historyEntry) {\n        try {\n          [nextElements, nextAppState, containsVisibleChange] =\n            historyEntry.applyTo(nextElements, nextAppState, snapshot);\n        } finally {\n          // make sure to always push / pop, even if the increment is corrupted\n          push(historyEntry);\n        }\n\n        if (containsVisibleChange) {\n          break;\n        }\n\n        historyEntry = pop();\n      }\n\n      return [nextElements, nextAppState];\n    } finally {\n      // trigger the history change event before returning completely\n      // also trigger it just once, no need doing so on each entry\n      this.onHistoryChangedEmitter.trigger(\n        new HistoryChangedEvent(this.isUndoStackEmpty, this.isRedoStackEmpty),\n      );\n    }\n  }\n\n  private static pop(stack: HistoryStack): HistoryEntry | null {\n    if (!stack.length) {\n      return null;\n    }\n\n    const entry = stack.pop();\n\n    if (entry !== undefined) {\n      return entry;\n    }\n\n    return null;\n  }\n\n  private static push(\n    stack: HistoryStack,\n    entry: HistoryEntry,\n    prevElements: SceneElementsMap,\n  ) {\n    const updatedEntry = entry.inverse().applyLatestChanges(prevElements);\n    return stack.push(updatedEntry);\n  }\n}\n\nexport class HistoryEntry {\n  private constructor(\n    public readonly appStateChange: AppStateChange,\n    public readonly elementsChange: ElementsChange,\n  ) {}\n\n  public static create(\n    appStateChange: AppStateChange,\n    elementsChange: ElementsChange,\n  ) {\n    return new HistoryEntry(appStateChange, elementsChange);\n  }\n\n  public inverse(): HistoryEntry {\n    return new HistoryEntry(\n      this.appStateChange.inverse(),\n      this.elementsChange.inverse(),\n    );\n  }\n\n  public applyTo(\n    elements: SceneElementsMap,\n    appState: AppState,\n    snapshot: Readonly<Snapshot>,\n  ): [SceneElementsMap, AppState, boolean] {\n    const [nextElements, elementsContainVisibleChange] =\n      this.elementsChange.applyTo(elements, snapshot.elements);\n\n    const [nextAppState, appStateContainsVisibleChange] =\n      this.appStateChange.applyTo(appState, nextElements);\n\n    const appliedVisibleChanges =\n      elementsContainVisibleChange || appStateContainsVisibleChange;\n\n    return [nextElements, nextAppState, appliedVisibleChanges];\n  }\n\n  /**\n   * Apply latest (remote) changes to the history entry, creates new instance of `HistoryEntry`.\n   */\n  public applyLatestChanges(elements: SceneElementsMap): HistoryEntry {\n    const updatedElementsChange =\n      this.elementsChange.applyLatestChanges(elements);\n\n    return HistoryEntry.create(this.appStateChange, updatedElementsChange);\n  }\n\n  public isEmpty(): boolean {\n    return this.appStateChange.isEmpty() && this.elementsChange.isEmpty();\n  }\n}\n", "import { useEffect, useState } from \"react\";\nimport type { Emitter } from \"../emitter\";\n\nexport const useEmitter = <TEvent extends unknown>(\n  emitter: Emitter<[TEvent]>,\n  initialState: TEvent,\n) => {\n  const [event, setEvent] = useState<TEvent>(initialState);\n\n  useEffect(() => {\n    const unsubscribe = emitter.on((event) => {\n      setEvent(event);\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, [emitter]);\n\n  return event;\n};\n", "import type { Action, ActionResult } from \"./types\";\nimport { UndoIcon, RedoIcon } from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { t } from \"../i18n\";\nimport type { History } from \"../history\";\nimport { HistoryChangedEvent } from \"../history\";\nimport type { AppClassProperties, AppState } from \"../types\";\nimport { KEYS, matchKey } from \"../keys\";\nimport { arrayToMap } from \"../utils\";\nimport { isWindows } from \"../constants\";\nimport type { SceneElementsMap } from \"../element/types\";\nimport type { Store } from \"../store\";\nimport { CaptureUpdateAction } from \"../store\";\nimport { useEmitter } from \"../hooks/useEmitter\";\n\nconst executeHistoryAction = (\n  app: AppClassProperties,\n  appState: Readonly<AppState>,\n  updater: () => [SceneElementsMap, AppState] | void,\n): ActionResult => {\n  if (\n    !appState.multiElement &&\n    !appState.resizingElement &&\n    !appState.editingTextElement &&\n    !appState.newElement &&\n    !appState.selectedElementsAreBeingDragged &&\n    !appState.selectionElement &&\n    !app.flowChartCreator.isCreatingChart\n  ) {\n    const result = updater();\n\n    if (!result) {\n      return { captureUpdate: CaptureUpdateAction.EVENTUALLY };\n    }\n\n    const [nextElementsMap, nextAppState] = result;\n    const nextElements = Array.from(nextElementsMap.values());\n\n    return {\n      appState: nextAppState,\n      elements: nextElements,\n      captureUpdate: CaptureUpdateAction.NEVER,\n    };\n  }\n\n  return { captureUpdate: CaptureUpdateAction.EVENTUALLY };\n};\n\ntype ActionCreator = (history: History, store: Store) => Action;\n\nexport const createUndoAction: ActionCreator = (history, store) => ({\n  name: \"undo\",\n  label: \"buttons.undo\",\n  icon: UndoIcon,\n  trackEvent: { category: \"history\" },\n  viewMode: false,\n  perform: (elements, appState, value, app) =>\n    executeHistoryAction(app, appState, () =>\n      history.undo(\n        arrayToMap(elements) as SceneElementsMap, // TODO: #7348 refactor action manager to already include `SceneElementsMap`\n        appState,\n        store.snapshot,\n      ),\n    ),\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] && matchKey(event, KEYS.Z) && !event.shiftKey,\n  PanelComponent: ({ updateData, data }) => {\n    const { isUndoStackEmpty } = useEmitter<HistoryChangedEvent>(\n      history.onHistoryChangedEmitter,\n      new HistoryChangedEvent(\n        history.isUndoStackEmpty,\n        history.isRedoStackEmpty,\n      ),\n    );\n\n    return (\n      <ToolButton\n        type=\"button\"\n        icon={UndoIcon}\n        aria-label={t(\"buttons.undo\")}\n        onClick={updateData}\n        size={data?.size || \"medium\"}\n        disabled={isUndoStackEmpty}\n        data-testid=\"button-undo\"\n      />\n    );\n  },\n});\n\nexport const createRedoAction: ActionCreator = (history, store) => ({\n  name: \"redo\",\n  label: \"buttons.redo\",\n  icon: RedoIcon,\n  trackEvent: { category: \"history\" },\n  viewMode: false,\n  perform: (elements, appState, _, app) =>\n    executeHistoryAction(app, appState, () =>\n      history.redo(\n        arrayToMap(elements) as SceneElementsMap, // TODO: #7348 refactor action manager to already include `SceneElementsMap`\n        appState,\n        store.snapshot,\n      ),\n    ),\n  keyTest: (event) =>\n    (event[KEYS.CTRL_OR_CMD] && event.shiftKey && matchKey(event, KEYS.Z)) ||\n    (isWindows && event.ctrlKey && !event.shiftKey && matchKey(event, KEYS.Y)),\n  PanelComponent: ({ updateData, data }) => {\n    const { isRedoStackEmpty } = useEmitter(\n      history.onHistoryChangedEmitter,\n      new HistoryChangedEvent(\n        history.isUndoStackEmpty,\n        history.isRedoStackEmpty,\n      ),\n    );\n\n    return (\n      <ToolButton\n        type=\"button\"\n        icon={RedoIcon}\n        aria-label={t(\"buttons.redo\")}\n        onClick={updateData}\n        size={data?.size || \"medium\"}\n        disabled={isRedoStackEmpty}\n        data-testid=\"button-redo\"\n      />\n    );\n  },\n});\n", "import React from \"react\";\nimport type {\n  Action,\n  UpdaterFn,\n  ActionName,\n  ActionResult,\n  PanelComponentProps,\n  ActionSource,\n} from \"./types\";\nimport type {\n  ExcalidrawElement,\n  OrderedExcalidrawElement,\n} from \"../element/types\";\nimport type { AppClassProperties, AppState } from \"../types\";\nimport { trackEvent } from \"../analytics\";\nimport { isPromiseLike } from \"../utils\";\n\nconst trackAction = (\n  action: Action,\n  source: ActionSource,\n  appState: Readonly<AppState>,\n  elements: readonly ExcalidrawElement[],\n  app: AppClassProperties,\n  value: any,\n) => {\n  if (action.trackEvent) {\n    try {\n      if (typeof action.trackEvent === \"object\") {\n        const shouldTrack = action.trackEvent.predicate\n          ? action.trackEvent.predicate(appState, elements, value)\n          : true;\n        if (shouldTrack) {\n          trackEvent(\n            action.trackEvent.category,\n            action.trackEvent.action || action.name,\n            `${source} (${app.device.editor.isMobile ? \"mobile\" : \"desktop\"})`,\n          );\n        }\n      }\n    } catch (error) {\n      console.error(\"error while logging action:\", error);\n    }\n  }\n};\n\nexport class ActionManager {\n  actions = {} as Record<ActionName, Action>;\n\n  updater: (actionResult: ActionResult | Promise<ActionResult>) => void;\n\n  getAppState: () => Readonly<AppState>;\n  getElementsIncludingDeleted: () => readonly OrderedExcalidrawElement[];\n  app: AppClassProperties;\n\n  constructor(\n    updater: UpdaterFn,\n    getAppState: () => AppState,\n    getElementsIncludingDeleted: () => readonly OrderedExcalidrawElement[],\n    app: AppClassProperties,\n  ) {\n    this.updater = (actionResult) => {\n      if (isPromiseLike(actionResult)) {\n        actionResult.then((actionResult) => {\n          return updater(actionResult);\n        });\n      } else {\n        return updater(actionResult);\n      }\n    };\n    this.getAppState = getAppState;\n    this.getElementsIncludingDeleted = getElementsIncludingDeleted;\n    this.app = app;\n  }\n\n  registerAction(action: Action) {\n    this.actions[action.name] = action;\n  }\n\n  registerAll(actions: readonly Action[]) {\n    actions.forEach((action) => this.registerAction(action));\n  }\n\n  handleKeyDown(event: React.KeyboardEvent | KeyboardEvent) {\n    const canvasActions = this.app.props.UIOptions.canvasActions;\n    const data = Object.values(this.actions)\n      .sort((a, b) => (b.keyPriority || 0) - (a.keyPriority || 0))\n      .filter(\n        (action) =>\n          (action.name in canvasActions\n            ? canvasActions[action.name as keyof typeof canvasActions]\n            : true) &&\n          action.keyTest &&\n          action.keyTest(\n            event,\n            this.getAppState(),\n            this.getElementsIncludingDeleted(),\n            this.app,\n          ),\n      );\n\n    if (data.length !== 1) {\n      if (data.length > 1) {\n        console.warn(\"Canceling as multiple actions match this shortcut\", data);\n      }\n      return false;\n    }\n\n    const action = data[0];\n\n    if (this.getAppState().viewModeEnabled && action.viewMode !== true) {\n      return false;\n    }\n\n    const elements = this.getElementsIncludingDeleted();\n    const appState = this.getAppState();\n    const value = null;\n\n    trackAction(action, \"keyboard\", appState, elements, this.app, null);\n\n    event.preventDefault();\n    event.stopPropagation();\n    this.updater(data[0].perform(elements, appState, value, this.app));\n    return true;\n  }\n\n  executeAction<T extends Action>(\n    action: T,\n    source: ActionSource = \"api\",\n    value: Parameters<T[\"perform\"]>[2] = null,\n  ) {\n    const elements = this.getElementsIncludingDeleted();\n    const appState = this.getAppState();\n\n    trackAction(action, source, appState, elements, this.app, value);\n\n    this.updater(action.perform(elements, appState, value, this.app));\n  }\n\n  /**\n   * @param data additional data sent to the PanelComponent\n   */\n  renderAction = (name: ActionName, data?: PanelComponentProps[\"data\"]) => {\n    const canvasActions = this.app.props.UIOptions.canvasActions;\n\n    if (\n      this.actions[name] &&\n      \"PanelComponent\" in this.actions[name] &&\n      (name in canvasActions\n        ? canvasActions[name as keyof typeof canvasActions]\n        : true)\n    ) {\n      const action = this.actions[name];\n      const PanelComponent = action.PanelComponent!;\n      PanelComponent.displayName = \"PanelComponent\";\n      const elements = this.getElementsIncludingDeleted();\n      const appState = this.getAppState();\n      const updateData = (formState?: any) => {\n        trackAction(action, \"ui\", appState, elements, this.app, formState);\n\n        this.updater(\n          action.perform(\n            this.getElementsIncludingDeleted(),\n            this.getAppState(),\n            formState,\n            this.app,\n          ),\n        );\n      };\n\n      return (\n        <PanelComponent\n          elements={this.getElementsIncludingDeleted()}\n          appState={this.getAppState()}\n          updateData={updateData}\n          appProps={this.app.props}\n          app={this.app}\n          data={data}\n        />\n      );\n    }\n\n    return null;\n  };\n\n  isActionEnabled = (action: Action) => {\n    const elements = this.getElementsIncludingDeleted();\n    const appState = this.getAppState();\n\n    return (\n      !action.predicate ||\n      action.predicate(elements, appState, this.app.props, this.app)\n    );\n  };\n}\n", "import type { PointerCoords } from \"./types\";\n\nexport const getCenter = (pointers: Map<number, PointerCoords>) => {\n  const allCoords = Array.from(pointers.values());\n  return {\n    x: sum(allCoords, (coords) => coords.x) / allCoords.length,\n    y: sum(allCoords, (coords) => coords.y) / allCoords.length,\n  };\n};\n\nexport const getDistance = ([a, b]: readonly PointerCoords[]) =>\n  Math.hypot(a.x - b.x, a.y - b.y);\n\nconst sum = <T>(array: readonly T[], mapper: (item: T) => number): number =>\n  array.reduce((acc, item) => acc + mapper(item), 0);\n", "import clsx from \"clsx\";\nimport { Popover } from \"./Popover\";\nimport type { TranslationKeys } from \"../i18n\";\nimport { t } from \"../i18n\";\n\nimport \"./ContextMenu.scss\";\nimport type { ShortcutName } from \"../actions/shortcuts\";\nimport { getShortcutFromShortcutName } from \"../actions/shortcuts\";\nimport type { Action } from \"../actions/types\";\nimport type { ActionManager } from \"../actions/manager\";\nimport { useExcalidrawAppState, useExcalidrawElements } from \"./App\";\nimport React from \"react\";\n\nexport type ContextMenuItem = typeof CONTEXT_MENU_SEPARATOR | Action;\n\nexport type ContextMenuItems = (ContextMenuItem | false | null | undefined)[];\n\ntype ContextMenuProps = {\n  actionManager: ActionManager;\n  items: ContextMenuItems;\n  top: number;\n  left: number;\n  onClose: (callback?: () => void) => void;\n};\n\nexport const CONTEXT_MENU_SEPARATOR = \"separator\";\n\nexport const ContextMenu = React.memo(\n  ({ actionManager, items, top, left, onClose }: ContextMenuProps) => {\n    const appState = useExcalidrawAppState();\n    const elements = useExcalidrawElements();\n\n    const filteredItems = items.reduce((acc: ContextMenuItem[], item) => {\n      if (\n        item &&\n        (item === CONTEXT_MENU_SEPARATOR ||\n          !item.predicate ||\n          item.predicate(\n            elements,\n            appState,\n            actionManager.app.props,\n            actionManager.app,\n          ))\n      ) {\n        acc.push(item);\n      }\n      return acc;\n    }, []);\n\n    return (\n      <Popover\n        onCloseRequest={() => {\n          onClose();\n        }}\n        top={top}\n        left={left}\n        fitInViewport={true}\n        offsetLeft={appState.offsetLeft}\n        offsetTop={appState.offsetTop}\n        viewportWidth={appState.width}\n        viewportHeight={appState.height}\n      >\n        <ul\n          className=\"context-menu\"\n          onContextMenu={(event) => event.preventDefault()}\n        >\n          {filteredItems.map((item, idx) => {\n            if (item === CONTEXT_MENU_SEPARATOR) {\n              if (\n                !filteredItems[idx - 1] ||\n                filteredItems[idx - 1] === CONTEXT_MENU_SEPARATOR\n              ) {\n                return null;\n              }\n              return <hr key={idx} className=\"context-menu-item-separator\" />;\n            }\n\n            const actionName = item.name;\n            let label = \"\";\n            if (item.label) {\n              if (typeof item.label === \"function\") {\n                label = t(\n                  item.label(\n                    elements,\n                    appState,\n                    actionManager.app,\n                  ) as unknown as TranslationKeys,\n                );\n              } else {\n                label = t(item.label as unknown as TranslationKeys);\n              }\n            }\n\n            return (\n              <li\n                key={idx}\n                data-testid={actionName}\n                onClick={() => {\n                  // we need update state before executing the action in case\n                  // the action uses the appState it's being passed (that still\n                  // contains a defined contextMenu) to return the next state.\n                  onClose(() => {\n                    actionManager.executeAction(item, \"contextMenu\");\n                  });\n                }}\n              >\n                <button\n                  type=\"button\"\n                  className={clsx(\"context-menu-item\", {\n                    dangerous: actionName === \"deleteSelectedElements\",\n                    checkmark: item.checked?.(appState),\n                  })}\n                >\n                  <div className=\"context-menu-item__label\">{label}</div>\n                  <kbd className=\"context-menu-item__shortcut\">\n                    {actionName\n                      ? getShortcutFromShortcutName(actionName as ShortcutName)\n                      : \"\"}\n                  </kbd>\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      </Popover>\n    );\n  },\n);\n", "import React, { useLayoutEffect, useRef, useEffect } from \"react\";\nimport \"./Popover.scss\";\nimport { unstable_batchedUpdates } from \"react-dom\";\nimport { queryFocusableElements } from \"../utils\";\nimport { KEYS } from \"../keys\";\n\ntype Props = {\n  top?: number;\n  left?: number;\n  children?: React.ReactNode;\n  onCloseRequest?(event: PointerEvent): void;\n  fitInViewport?: boolean;\n  offsetLeft?: number;\n  offsetTop?: number;\n  viewportWidth?: number;\n  viewportHeight?: number;\n};\n\nexport const Popover = ({\n  children,\n  left,\n  top,\n  onCloseRequest,\n  fitInViewport = false,\n  offsetLeft = 0,\n  offsetTop = 0,\n  viewportWidth = window.innerWidth,\n  viewportHeight = window.innerHeight,\n}: Props) => {\n  const popoverRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const container = popoverRef.current;\n\n    if (!container) {\n      return;\n    }\n\n    // focus popover only if the caller didn't focus on something else nested\n    // within the popover, which should take precedence. Fixes cases\n    // like color picker listening to keydown events on containers nested\n    // in the popover.\n    if (!container.contains(document.activeElement)) {\n      container.focus();\n    }\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === KEYS.TAB) {\n        const focusableElements = queryFocusableElements(container);\n        const { activeElement } = document;\n        const currentIndex = focusableElements.findIndex(\n          (element) => element === activeElement,\n        );\n\n        if (activeElement === container) {\n          if (event.shiftKey) {\n            focusableElements[focusableElements.length - 1]?.focus();\n          } else {\n            focusableElements[0].focus();\n          }\n          event.preventDefault();\n          event.stopImmediatePropagation();\n        } else if (currentIndex === 0 && event.shiftKey) {\n          focusableElements[focusableElements.length - 1]?.focus();\n          event.preventDefault();\n          event.stopImmediatePropagation();\n        } else if (\n          currentIndex === focusableElements.length - 1 &&\n          !event.shiftKey\n        ) {\n          focusableElements[0]?.focus();\n          event.preventDefault();\n          event.stopImmediatePropagation();\n        }\n      }\n    };\n\n    container.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => container.removeEventListener(\"keydown\", handleKeyDown);\n  }, []);\n\n  const lastInitializedPosRef = useRef<{ top: number; left: number } | null>(\n    null,\n  );\n\n  // ensure the popover doesn't overflow the viewport\n  useLayoutEffect(() => {\n    if (fitInViewport && popoverRef.current && top != null && left != null) {\n      const container = popoverRef.current;\n      const { width, height } = container.getBoundingClientRect();\n\n      // hack for StrictMode so this effect only runs once for\n      // the same top/left position, otherwise\n      // we'd potentically reposition twice (once for viewport overflow)\n      // and once for top/left position afterwards\n      if (\n        lastInitializedPosRef.current?.top === top &&\n        lastInitializedPosRef.current?.left === left\n      ) {\n        return;\n      }\n      lastInitializedPosRef.current = { top, left };\n\n      if (width >= viewportWidth) {\n        container.style.width = `${viewportWidth}px`;\n        container.style.left = \"0px\";\n        container.style.overflowX = \"scroll\";\n      } else if (left + width - offsetLeft > viewportWidth) {\n        container.style.left = `${viewportWidth - width - 10}px`;\n      } else {\n        container.style.left = `${left}px`;\n      }\n\n      if (height >= viewportHeight) {\n        container.style.height = `${viewportHeight - 20}px`;\n        container.style.top = \"10px\";\n        container.style.overflowY = \"scroll\";\n      } else if (top + height - offsetTop > viewportHeight) {\n        container.style.top = `${viewportHeight - height}px`;\n      } else {\n        container.style.top = `${top}px`;\n      }\n    }\n  }, [\n    top,\n    left,\n    fitInViewport,\n    viewportWidth,\n    viewportHeight,\n    offsetLeft,\n    offsetTop,\n  ]);\n\n  useEffect(() => {\n    if (onCloseRequest) {\n      const handler = (event: PointerEvent) => {\n        if (!popoverRef.current?.contains(event.target as Node)) {\n          unstable_batchedUpdates(() => onCloseRequest(event));\n        }\n      };\n      document.addEventListener(\"pointerdown\", handler, false);\n      return () => document.removeEventListener(\"pointerdown\", handler, false);\n    }\n  }, [onCloseRequest]);\n\n  return (\n    <div className=\"popover\" ref={popoverRef} tabIndex={-1}>\n      {children}\n    </div>\n  );\n};\n", "import clsx from \"clsx\";\nimport React from \"react\";\nimport type { ActionManager } from \"../actions/manager\";\nimport { CLASSES, DEFAULT_SIDEBAR, TOOL_TYPE } from \"../constants\";\nimport { showSelectedShapeActions } from \"../element\";\nimport type { NonDeletedExcalidrawElement } from \"../element/types\";\nimport type { Language } from \"../i18n\";\nimport { t } from \"../i18n\";\nimport { calculateScrollCenter } from \"../scene\";\nimport type {\n  AppProps,\n  AppState,\n  ExcalidrawProps,\n  BinaryFiles,\n  UIAppState,\n  AppClassProperties,\n} from \"../types\";\nimport { capitalizeString, isShallowEqual } from \"../utils\";\nimport { SelectedShapeActions, ShapesSwitcher } from \"./Actions\";\nimport { ErrorDialog } from \"./ErrorDialog\";\nimport { ImageExportDialog } from \"./ImageExportDialog\";\nimport { FixedSideContainer } from \"./FixedSideContainer\";\nimport { HintViewer } from \"./HintViewer\";\nimport { Island } from \"./Island\";\nimport { LoadingMessage } from \"./LoadingMessage\";\nimport { LockButton } from \"./LockButton\";\nimport { MobileMenu } from \"./MobileMenu\";\nimport { PasteChartDialog } from \"./PasteChartDialog\";\nimport { Section } from \"./Section\";\nimport { HelpDialog } from \"./HelpDialog\";\nimport Stack from \"./Stack\";\nimport { UserList } from \"./UserList\";\nimport { JSONExportDialog } from \"./JSONExportDialog\";\nimport { PenModeButton } from \"./PenModeButton\";\nimport { trackEvent } from \"../analytics\";\nimport { useDevice } from \"./App\";\nimport Footer from \"./footer/Footer\";\nimport { isSidebarDockedAtom } from \"./Sidebar/Sidebar\";\nimport { useAtom, useAtomValue } from \"../editor-jotai\";\nimport MainMenu from \"./main-menu/MainMenu\";\nimport { ActiveConfirmDialog } from \"./ActiveConfirmDialog\";\nimport { OverwriteConfirmDialog } from \"./OverwriteConfirm/OverwriteConfirm\";\nimport { HandButton } from \"./HandButton\";\nimport { isHandToolActive } from \"../appState\";\nimport { TunnelsContext, useInitializeTunnels } from \"../context/tunnels\";\nimport { LibraryIcon } from \"./icons\";\nimport { UIAppStateContext } from \"../context/ui-appState\";\nimport { DefaultSidebar } from \"./DefaultSidebar\";\nimport { EyeDropper, activeEyeDropperAtom } from \"./EyeDropper\";\nimport { mutateElement } from \"../element/mutateElement\";\nimport { ShapeCache } from \"../scene/ShapeCache\";\nimport Scene from \"../scene/Scene\";\nimport { LaserPointerButton } from \"./LaserPointerButton\";\nimport { TTDDialog } from \"./TTDDialog/TTDDialog\";\nimport { Stats } from \"./Stats\";\nimport { actionToggleStats } from \"../actions\";\nimport ElementLinkDialog from \"./ElementLinkDialog\";\n\nimport \"./LayerUI.scss\";\nimport \"./Toolbar.scss\";\n\ninterface LayerUIProps {\n  actionManager: ActionManager;\n  appState: UIAppState;\n  files: BinaryFiles;\n  canvas: HTMLCanvasElement;\n  setAppState: React.Component<any, AppState>[\"setState\"];\n  elements: readonly NonDeletedExcalidrawElement[];\n  onLockToggle: () => void;\n  onHandToolToggle: () => void;\n  onPenModeToggle: AppClassProperties[\"togglePenMode\"];\n  showExitZenModeBtn: boolean;\n  langCode: Language[\"code\"];\n  renderTopRightUI?: ExcalidrawProps[\"renderTopRightUI\"];\n  renderCustomStats?: ExcalidrawProps[\"renderCustomStats\"];\n  UIOptions: AppProps[\"UIOptions\"];\n  onExportImage: AppClassProperties[\"onExportImage\"];\n  renderWelcomeScreen: boolean;\n  children?: React.ReactNode;\n  app: AppClassProperties;\n  isCollaborating: boolean;\n  generateLinkForSelection?: AppProps[\"generateLinkForSelection\"];\n}\n\nconst DefaultMainMenu: React.FC<{\n  UIOptions: AppProps[\"UIOptions\"];\n}> = ({ UIOptions }) => {\n  return (\n    <MainMenu __fallback>\n      <MainMenu.DefaultItems.LoadScene />\n      <MainMenu.DefaultItems.SaveToActiveFile />\n      {/* FIXME we should to test for this inside the item itself */}\n      {UIOptions.canvasActions.export && <MainMenu.DefaultItems.Export />}\n      {/* FIXME we should to test for this inside the item itself */}\n      {UIOptions.canvasActions.saveAsImage && (\n        <MainMenu.DefaultItems.SaveAsImage />\n      )}\n      <MainMenu.DefaultItems.SearchMenu />\n      <MainMenu.DefaultItems.Help />\n      <MainMenu.DefaultItems.ClearCanvas />\n      <MainMenu.Separator />\n      <MainMenu.Group title=\"Excalidraw links\">\n        <MainMenu.DefaultItems.Socials />\n      </MainMenu.Group>\n      <MainMenu.Separator />\n      <MainMenu.DefaultItems.ToggleTheme />\n      <MainMenu.DefaultItems.ChangeCanvasBackground />\n    </MainMenu>\n  );\n};\n\nconst DefaultOverwriteConfirmDialog = () => {\n  return (\n    <OverwriteConfirmDialog __fallback>\n      <OverwriteConfirmDialog.Actions.SaveToDisk />\n      <OverwriteConfirmDialog.Actions.ExportToImage />\n    </OverwriteConfirmDialog>\n  );\n};\n\nconst LayerUI = ({\n  actionManager,\n  appState,\n  files,\n  setAppState,\n  elements,\n  canvas,\n  onLockToggle,\n  onHandToolToggle,\n  onPenModeToggle,\n  showExitZenModeBtn,\n  renderTopRightUI,\n  renderCustomStats,\n  UIOptions,\n  onExportImage,\n  renderWelcomeScreen,\n  children,\n  app,\n  isCollaborating,\n  generateLinkForSelection,\n}: LayerUIProps) => {\n  const device = useDevice();\n  const tunnels = useInitializeTunnels();\n\n  const TunnelsJotaiProvider = tunnels.tunnelsJotai.Provider;\n\n  const [eyeDropperState, setEyeDropperState] = useAtom(activeEyeDropperAtom);\n\n  const renderJSONExportDialog = () => {\n    if (!UIOptions.canvasActions.export) {\n      return null;\n    }\n\n    return (\n      <JSONExportDialog\n        elements={elements}\n        appState={appState}\n        files={files}\n        actionManager={actionManager}\n        exportOpts={UIOptions.canvasActions.export}\n        canvas={canvas}\n        setAppState={setAppState}\n      />\n    );\n  };\n\n  const renderImageExportDialog = () => {\n    if (\n      !UIOptions.canvasActions.saveAsImage ||\n      appState.openDialog?.name !== \"imageExport\"\n    ) {\n      return null;\n    }\n\n    return (\n      <ImageExportDialog\n        elements={elements}\n        appState={appState}\n        files={files}\n        actionManager={actionManager}\n        onExportImage={onExportImage}\n        onCloseRequest={() => setAppState({ openDialog: null })}\n        name={app.getName()}\n      />\n    );\n  };\n\n  const renderCanvasActions = () => (\n    <div style={{ position: \"relative\" }}>\n      {/* wrapping to Fragment stops React from occasionally complaining\n                about identical Keys */}\n      <tunnels.MainMenuTunnel.Out />\n      {renderWelcomeScreen && <tunnels.WelcomeScreenMenuHintTunnel.Out />}\n    </div>\n  );\n\n  const renderSelectedShapeActions = () => (\n    <Section\n      heading=\"selectedShapeActions\"\n      className={clsx(\"selected-shape-actions zen-mode-transition\", {\n        \"transition-left\": appState.zenModeEnabled,\n      })}\n    >\n      <Island\n        className={CLASSES.SHAPE_ACTIONS_MENU}\n        padding={2}\n        style={{\n          // we want to make sure this doesn't overflow so subtracting the\n          // approximate height of hamburgerMenu + footer\n          maxHeight: `${appState.height - 166}px`,\n        }}\n      >\n        <SelectedShapeActions\n          appState={appState}\n          elementsMap={app.scene.getNonDeletedElementsMap()}\n          renderAction={actionManager.renderAction}\n          app={app}\n        />\n      </Island>\n    </Section>\n  );\n\n  const renderFixedSideContainer = () => {\n    const shouldRenderSelectedShapeActions = showSelectedShapeActions(\n      appState,\n      elements,\n    );\n\n    const shouldShowStats =\n      appState.stats.open &&\n      !appState.zenModeEnabled &&\n      !appState.viewModeEnabled &&\n      appState.openDialog?.name !== \"elementLinkSelector\";\n\n    return (\n      <FixedSideContainer side=\"top\">\n        <div className=\"App-menu App-menu_top\">\n          <Stack.Col gap={6} className={clsx(\"App-menu_top__left\")}>\n            {renderCanvasActions()}\n            {shouldRenderSelectedShapeActions && renderSelectedShapeActions()}\n          </Stack.Col>\n          {!appState.viewModeEnabled &&\n            appState.openDialog?.name !== \"elementLinkSelector\" && (\n              <Section heading=\"shapes\" className=\"shapes-section\">\n                {(heading: React.ReactNode) => (\n                  <div style={{ position: \"relative\" }}>\n                    {renderWelcomeScreen && (\n                      <tunnels.WelcomeScreenToolbarHintTunnel.Out />\n                    )}\n                    <Stack.Col gap={4} align=\"start\">\n                      <Stack.Row\n                        gap={1}\n                        className={clsx(\"App-toolbar-container\", {\n                          \"zen-mode\": appState.zenModeEnabled,\n                        })}\n                      >\n                        <Island\n                          padding={1}\n                          className={clsx(\"App-toolbar\", {\n                            \"zen-mode\": appState.zenModeEnabled,\n                          })}\n                        >\n                          <HintViewer\n                            appState={appState}\n                            isMobile={device.editor.isMobile}\n                            device={device}\n                            app={app}\n                          />\n                          {heading}\n                          <Stack.Row gap={1}>\n                            <PenModeButton\n                              zenModeEnabled={appState.zenModeEnabled}\n                              checked={appState.penMode}\n                              onChange={() => onPenModeToggle(null)}\n                              title={t(\"toolBar.penMode\")}\n                              penDetected={appState.penDetected}\n                            />\n                            <LockButton\n                              checked={appState.activeTool.locked}\n                              onChange={onLockToggle}\n                              title={t(\"toolBar.lock\")}\n                            />\n\n                            <div className=\"App-toolbar__divider\" />\n\n                            <HandButton\n                              checked={isHandToolActive(appState)}\n                              onChange={() => onHandToolToggle()}\n                              title={t(\"toolBar.hand\")}\n                              isMobile\n                            />\n\n                            <ShapesSwitcher\n                              appState={appState}\n                              activeTool={appState.activeTool}\n                              UIOptions={UIOptions}\n                              app={app}\n                            />\n                          </Stack.Row>\n                        </Island>\n                        {isCollaborating && (\n                          <Island\n                            style={{\n                              marginLeft: 8,\n                              alignSelf: \"center\",\n                              height: \"fit-content\",\n                            }}\n                          >\n                            <LaserPointerButton\n                              title={t(\"toolBar.laser\")}\n                              checked={\n                                appState.activeTool.type === TOOL_TYPE.laser\n                              }\n                              onChange={() =>\n                                app.setActiveTool({ type: TOOL_TYPE.laser })\n                              }\n                              isMobile\n                            />\n                          </Island>\n                        )}\n                      </Stack.Row>\n                    </Stack.Col>\n                  </div>\n                )}\n              </Section>\n            )}\n          <div\n            className={clsx(\n              \"layer-ui__wrapper__top-right zen-mode-transition\",\n              {\n                \"transition-right\": appState.zenModeEnabled,\n              },\n            )}\n          >\n            {appState.collaborators.size > 0 && (\n              <UserList\n                collaborators={appState.collaborators}\n                userToFollow={appState.userToFollow?.socketId || null}\n              />\n            )}\n            {renderTopRightUI?.(device.editor.isMobile, appState)}\n            {!appState.viewModeEnabled &&\n              appState.openDialog?.name !== \"elementLinkSelector\" &&\n              // hide button when sidebar docked\n              (!isSidebarDocked ||\n                appState.openSidebar?.name !== DEFAULT_SIDEBAR.name) && (\n                <tunnels.DefaultSidebarTriggerTunnel.Out />\n              )}\n            {shouldShowStats && (\n              <Stats\n                app={app}\n                onClose={() => {\n                  actionManager.executeAction(actionToggleStats);\n                }}\n                renderCustomStats={renderCustomStats}\n              />\n            )}\n          </div>\n        </div>\n      </FixedSideContainer>\n    );\n  };\n\n  const renderSidebars = () => {\n    return (\n      <DefaultSidebar\n        __fallback\n        onDock={(docked) => {\n          trackEvent(\n            \"sidebar\",\n            `toggleDock (${docked ? \"dock\" : \"undock\"})`,\n            `(${device.editor.isMobile ? \"mobile\" : \"desktop\"})`,\n          );\n        }}\n      />\n    );\n  };\n\n  const isSidebarDocked = useAtomValue(isSidebarDockedAtom);\n\n  const layerUIJSX = (\n    <>\n      {/* ------------------------- tunneled UI ---------------------------- */}\n      {/* make sure we render host app components first so that we can detect\n          them first on initial render to optimize layout shift */}\n      {children}\n      {/* render component fallbacks. Can be rendered anywhere as they'll be\n          tunneled away. We only render tunneled components that actually\n        have defaults when host do not render anything. */}\n      <DefaultMainMenu UIOptions={UIOptions} />\n      <DefaultSidebar.Trigger\n        __fallback\n        icon={LibraryIcon}\n        title={capitalizeString(t(\"toolBar.library\"))}\n        onToggle={(open) => {\n          if (open) {\n            trackEvent(\n              \"sidebar\",\n              `${DEFAULT_SIDEBAR.name} (open)`,\n              `button (${device.editor.isMobile ? \"mobile\" : \"desktop\"})`,\n            );\n          }\n        }}\n        tab={DEFAULT_SIDEBAR.defaultTab}\n      >\n        {t(\"toolBar.library\")}\n      </DefaultSidebar.Trigger>\n      <DefaultOverwriteConfirmDialog />\n      {appState.openDialog?.name === \"ttd\" && <TTDDialog __fallback />}\n      {/* ------------------------------------------------------------------ */}\n\n      {appState.isLoading && <LoadingMessage delay={250} />}\n      {appState.errorMessage && (\n        <ErrorDialog onClose={() => setAppState({ errorMessage: null })}>\n          {appState.errorMessage}\n        </ErrorDialog>\n      )}\n      {eyeDropperState && !device.editor.isMobile && (\n        <EyeDropper\n          colorPickerType={eyeDropperState.colorPickerType}\n          onCancel={() => {\n            setEyeDropperState(null);\n          }}\n          onChange={(colorPickerType, color, selectedElements, { altKey }) => {\n            if (\n              colorPickerType !== \"elementBackground\" &&\n              colorPickerType !== \"elementStroke\"\n            ) {\n              return;\n            }\n\n            if (selectedElements.length) {\n              for (const element of selectedElements) {\n                mutateElement(\n                  element,\n                  {\n                    [altKey && eyeDropperState.swapPreviewOnAlt\n                      ? colorPickerType === \"elementBackground\"\n                        ? \"strokeColor\"\n                        : \"backgroundColor\"\n                      : colorPickerType === \"elementBackground\"\n                      ? \"backgroundColor\"\n                      : \"strokeColor\"]: color,\n                  },\n                  false,\n                );\n                ShapeCache.delete(element);\n              }\n              Scene.getScene(selectedElements[0])?.triggerUpdate();\n            } else if (colorPickerType === \"elementBackground\") {\n              setAppState({\n                currentItemBackgroundColor: color,\n              });\n            } else {\n              setAppState({ currentItemStrokeColor: color });\n            }\n          }}\n          onSelect={(color, event) => {\n            setEyeDropperState((state) => {\n              return state?.keepOpenOnAlt && event.altKey ? state : null;\n            });\n            eyeDropperState?.onSelect?.(color, event);\n          }}\n        />\n      )}\n      {appState.openDialog?.name === \"help\" && (\n        <HelpDialog\n          onClose={() => {\n            setAppState({ openDialog: null });\n          }}\n        />\n      )}\n      <ActiveConfirmDialog />\n      {appState.openDialog?.name === \"elementLinkSelector\" && (\n        <ElementLinkDialog\n          sourceElementId={appState.openDialog.sourceElementId}\n          onClose={() => {\n            setAppState({\n              openDialog: null,\n            });\n          }}\n          elementsMap={app.scene.getNonDeletedElementsMap()}\n          appState={appState}\n          generateLinkForSelection={generateLinkForSelection}\n        />\n      )}\n      <tunnels.OverwriteConfirmDialogTunnel.Out />\n      {renderImageExportDialog()}\n      {renderJSONExportDialog()}\n      {appState.pasteDialog.shown && (\n        <PasteChartDialog\n          setAppState={setAppState}\n          appState={appState}\n          onClose={() =>\n            setAppState({\n              pasteDialog: { shown: false, data: null },\n            })\n          }\n        />\n      )}\n      {device.editor.isMobile && (\n        <MobileMenu\n          app={app}\n          appState={appState}\n          elements={elements}\n          actionManager={actionManager}\n          renderJSONExportDialog={renderJSONExportDialog}\n          renderImageExportDialog={renderImageExportDialog}\n          setAppState={setAppState}\n          onLockToggle={onLockToggle}\n          onHandToolToggle={onHandToolToggle}\n          onPenModeToggle={onPenModeToggle}\n          renderTopRightUI={renderTopRightUI}\n          renderCustomStats={renderCustomStats}\n          renderSidebars={renderSidebars}\n          device={device}\n          renderWelcomeScreen={renderWelcomeScreen}\n          UIOptions={UIOptions}\n        />\n      )}\n      {!device.editor.isMobile && (\n        <>\n          <div\n            className=\"layer-ui__wrapper\"\n            style={\n              appState.openSidebar &&\n              isSidebarDocked &&\n              device.editor.canFitSidebar\n                ? { width: `calc(100% - var(--right-sidebar-width))` }\n                : {}\n            }\n          >\n            {renderWelcomeScreen && <tunnels.WelcomeScreenCenterTunnel.Out />}\n            {renderFixedSideContainer()}\n            <Footer\n              appState={appState}\n              actionManager={actionManager}\n              showExitZenModeBtn={showExitZenModeBtn}\n              renderWelcomeScreen={renderWelcomeScreen}\n            />\n            {appState.scrolledOutside && (\n              <button\n                type=\"button\"\n                className=\"scroll-back-to-content\"\n                onClick={() => {\n                  setAppState((appState) => ({\n                    ...calculateScrollCenter(elements, appState),\n                  }));\n                }}\n              >\n                {t(\"buttons.scrollBackToContent\")}\n              </button>\n            )}\n          </div>\n          {renderSidebars()}\n        </>\n      )}\n    </>\n  );\n\n  return (\n    <UIAppStateContext.Provider value={appState}>\n      <TunnelsJotaiProvider>\n        <TunnelsContext.Provider value={tunnels}>\n          {layerUIJSX}\n        </TunnelsContext.Provider>\n      </TunnelsJotaiProvider>\n    </UIAppStateContext.Provider>\n  );\n};\n\nconst stripIrrelevantAppStateProps = (appState: AppState): UIAppState => {\n  const {\n    suggestedBindings,\n    startBoundElement,\n    cursorButton,\n    scrollX,\n    scrollY,\n    ...ret\n  } = appState;\n  return ret;\n};\n\nconst areEqual = (prevProps: LayerUIProps, nextProps: LayerUIProps) => {\n  // short-circuit early\n  if (prevProps.children !== nextProps.children) {\n    return false;\n  }\n\n  const { canvas: _pC, appState: prevAppState, ...prev } = prevProps;\n  const { canvas: _nC, appState: nextAppState, ...next } = nextProps;\n\n  return (\n    isShallowEqual(\n      // asserting AppState because we're being passed the whole AppState\n      // but resolve to only the UI-relevant props\n      stripIrrelevantAppStateProps(prevAppState as AppState),\n      stripIrrelevantAppStateProps(nextAppState as AppState),\n      {\n        selectedElementIds: isShallowEqual,\n        selectedGroupIds: isShallowEqual,\n      },\n    ) && isShallowEqual(prev, next)\n  );\n};\n\nexport default React.memo(LayerUI, areEqual);\n", "import React, { useState } from \"react\";\nimport { t } from \"../i18n\";\n\nimport { Dialog } from \"./Dialog\";\nimport { useExcalidrawContainer } from \"./App\";\n\nexport const ErrorDialog = ({\n  children,\n  onClose,\n}: {\n  children?: React.ReactNode;\n  onClose?: () => void;\n}) => {\n  const [modalIsShown, setModalIsShown] = useState(!!children);\n  const { container: excalidrawContainer } = useExcalidrawContainer();\n\n  const handleClose = React.useCallback(() => {\n    setModalIsShown(false);\n\n    if (onClose) {\n      onClose();\n    }\n    // TODO: Fix the A11y issues so this is never needed since we should always focus on last active element\n    excalidrawContainer?.focus();\n  }, [onClose, excalidrawContainer]);\n\n  return (\n    <>\n      {modalIsShown && (\n        <Dialog\n          size=\"small\"\n          onCloseRequest={handleClose}\n          title={t(\"errorDialog.title\")}\n        >\n          <div style={{ whiteSpace: \"pre-wrap\" }}>{children}</div>\n        </Dialog>\n      )}\n    </>\n  );\n};\n", "import React, { useEffect, useRef, useState } from \"react\";\n\nimport type { ActionManager } from \"../actions/manager\";\nimport type { AppClassProperties, BinaryFiles, UIAppState } from \"../types\";\n\nimport {\n  actionExportWithDarkMode,\n  actionChangeExportBackground,\n  actionChangeExportEmbedScene,\n  actionChangeExportScale,\n  actionChangeProjectName,\n} from \"../actions/actionExport\";\nimport { probablySupportsClipboardBlob } from \"../clipboard\";\nimport {\n  DEFAULT_EXPORT_PADDING,\n  EXPORT_IMAGE_TYPES,\n  isFirefox,\n  EXPORT_SCALES,\n} from \"../constants\";\n\nimport { canvasToBlob } from \"../data/blob\";\nimport { nativeFileSystemSupported } from \"../data/filesystem\";\nimport type { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { t } from \"../i18n\";\nimport { isSomeElementSelected } from \"../scene\";\nimport { exportToCanvas } from \"@excalidraw/utils/export\";\n\nimport { copyIcon, downloadIcon, helpIcon } from \"./icons\";\nimport { Dialog } from \"./Dialog\";\nimport { RadioGroup } from \"./RadioGroup\";\nimport { Switch } from \"./Switch\";\nimport { Tooltip } from \"./Tooltip\";\n\nimport \"./ImageExportDialog.scss\";\nimport { FilledButton } from \"./FilledButton\";\nimport { cloneJSON } from \"../utils\";\nimport { prepareElementsForExport } from \"../data\";\nimport { useCopyStatus } from \"../hooks/useCopiedIndicator\";\n\nconst supportsContextFilters =\n  \"filter\" in document.createElement(\"canvas\").getContext(\"2d\")!;\n\nexport const ErrorCanvasPreview = () => {\n  return (\n    <div>\n      <h3>{t(\"canvasError.cannotShowPreview\")}</h3>\n      <p>\n        <span>{t(\"canvasError.canvasTooBig\")}</span>\n      </p>\n      <em>({t(\"canvasError.canvasTooBigTip\")})</em>\n    </div>\n  );\n};\n\ntype ImageExportModalProps = {\n  appStateSnapshot: Readonly<UIAppState>;\n  elementsSnapshot: readonly NonDeletedExcalidrawElement[];\n  files: BinaryFiles;\n  actionManager: ActionManager;\n  onExportImage: AppClassProperties[\"onExportImage\"];\n  name: string;\n};\n\nconst ImageExportModal = ({\n  appStateSnapshot,\n  elementsSnapshot,\n  files,\n  actionManager,\n  onExportImage,\n  name,\n}: ImageExportModalProps) => {\n  const hasSelection = isSomeElementSelected(\n    elementsSnapshot,\n    appStateSnapshot,\n  );\n\n  const [projectName, setProjectName] = useState(name);\n  const [exportSelectionOnly, setExportSelectionOnly] = useState(hasSelection);\n  const [exportWithBackground, setExportWithBackground] = useState(\n    appStateSnapshot.exportBackground,\n  );\n  const [exportDarkMode, setExportDarkMode] = useState(\n    appStateSnapshot.exportWithDarkMode,\n  );\n  const [embedScene, setEmbedScene] = useState(\n    appStateSnapshot.exportEmbedScene,\n  );\n  const [exportScale, setExportScale] = useState(appStateSnapshot.exportScale);\n\n  const previewRef = useRef<HTMLDivElement>(null);\n  const [renderError, setRenderError] = useState<Error | null>(null);\n\n  const { onCopy, copyStatus, resetCopyStatus } = useCopyStatus();\n\n  useEffect(() => {\n    // if user changes setting right after export to clipboard, reset the status\n    // so they don't have to wait for the timeout to click the button again\n    resetCopyStatus();\n  }, [\n    projectName,\n    exportWithBackground,\n    exportDarkMode,\n    exportScale,\n    embedScene,\n    resetCopyStatus,\n  ]);\n\n  const { exportedElements, exportingFrame } = prepareElementsForExport(\n    elementsSnapshot,\n    appStateSnapshot,\n    exportSelectionOnly,\n  );\n\n  useEffect(() => {\n    const previewNode = previewRef.current;\n    if (!previewNode) {\n      return;\n    }\n    const maxWidth = previewNode.offsetWidth;\n    const maxHeight = previewNode.offsetHeight;\n    if (!maxWidth) {\n      return;\n    }\n\n    exportToCanvas({\n      elements: exportedElements,\n      appState: {\n        ...appStateSnapshot,\n        name: projectName,\n        exportBackground: exportWithBackground,\n        exportWithDarkMode: exportDarkMode,\n        exportScale,\n        exportEmbedScene: embedScene,\n      },\n      files,\n      exportPadding: DEFAULT_EXPORT_PADDING,\n      maxWidthOrHeight: Math.max(maxWidth, maxHeight),\n      exportingFrame,\n    })\n      .then((canvas) => {\n        setRenderError(null);\n        // if converting to blob fails, there's some problem that will\n        // likely prevent preview and export (e.g. canvas too big)\n        return canvasToBlob(canvas)\n          .then(() => {\n            previewNode.replaceChildren(canvas);\n          })\n          .catch((e) => {\n            if (e.name === \"CANVAS_POSSIBLY_TOO_BIG\") {\n              throw new Error(t(\"canvasError.canvasTooBig\"));\n            }\n            throw e;\n          });\n      })\n      .catch((error) => {\n        console.error(error);\n        setRenderError(error);\n      });\n  }, [\n    appStateSnapshot,\n    files,\n    exportedElements,\n    exportingFrame,\n    projectName,\n    exportWithBackground,\n    exportDarkMode,\n    exportScale,\n    embedScene,\n  ]);\n\n  return (\n    <div className=\"ImageExportModal\">\n      <h3>{t(\"imageExportDialog.header\")}</h3>\n      <div className=\"ImageExportModal__preview\">\n        <div className=\"ImageExportModal__preview__canvas\" ref={previewRef}>\n          {renderError && <ErrorCanvasPreview />}\n        </div>\n        <div className=\"ImageExportModal__preview__filename\">\n          {!nativeFileSystemSupported && (\n            <input\n              type=\"text\"\n              className=\"TextInput\"\n              value={projectName}\n              style={{ width: \"30ch\" }}\n              onChange={(event) => {\n                setProjectName(event.target.value);\n                actionManager.executeAction(\n                  actionChangeProjectName,\n                  \"ui\",\n                  event.target.value,\n                );\n              }}\n            />\n          )}\n        </div>\n      </div>\n      <div className=\"ImageExportModal__settings\">\n        <h3>{t(\"imageExportDialog.header\")}</h3>\n        {hasSelection && (\n          <ExportSetting\n            label={t(\"imageExportDialog.label.onlySelected\")}\n            name=\"exportOnlySelected\"\n          >\n            <Switch\n              name=\"exportOnlySelected\"\n              checked={exportSelectionOnly}\n              onChange={(checked) => {\n                setExportSelectionOnly(checked);\n              }}\n            />\n          </ExportSetting>\n        )}\n        <ExportSetting\n          label={t(\"imageExportDialog.label.withBackground\")}\n          name=\"exportBackgroundSwitch\"\n        >\n          <Switch\n            name=\"exportBackgroundSwitch\"\n            checked={exportWithBackground}\n            onChange={(checked) => {\n              setExportWithBackground(checked);\n              actionManager.executeAction(\n                actionChangeExportBackground,\n                \"ui\",\n                checked,\n              );\n            }}\n          />\n        </ExportSetting>\n        {supportsContextFilters && (\n          <ExportSetting\n            label={t(\"imageExportDialog.label.darkMode\")}\n            name=\"exportDarkModeSwitch\"\n          >\n            <Switch\n              name=\"exportDarkModeSwitch\"\n              checked={exportDarkMode}\n              onChange={(checked) => {\n                setExportDarkMode(checked);\n                actionManager.executeAction(\n                  actionExportWithDarkMode,\n                  \"ui\",\n                  checked,\n                );\n              }}\n            />\n          </ExportSetting>\n        )}\n        <ExportSetting\n          label={t(\"imageExportDialog.label.embedScene\")}\n          tooltip={t(\"imageExportDialog.tooltip.embedScene\")}\n          name=\"exportEmbedSwitch\"\n        >\n          <Switch\n            name=\"exportEmbedSwitch\"\n            checked={embedScene}\n            onChange={(checked) => {\n              setEmbedScene(checked);\n              actionManager.executeAction(\n                actionChangeExportEmbedScene,\n                \"ui\",\n                checked,\n              );\n            }}\n          />\n        </ExportSetting>\n        <ExportSetting\n          label={t(\"imageExportDialog.label.scale\")}\n          name=\"exportScale\"\n        >\n          <RadioGroup\n            name=\"exportScale\"\n            value={exportScale}\n            onChange={(scale) => {\n              setExportScale(scale);\n              actionManager.executeAction(actionChangeExportScale, \"ui\", scale);\n            }}\n            choices={EXPORT_SCALES.map((scale) => ({\n              value: scale,\n              label: `${scale}\\u00d7`,\n            }))}\n          />\n        </ExportSetting>\n\n        <div className=\"ImageExportModal__settings__buttons\">\n          <FilledButton\n            className=\"ImageExportModal__settings__buttons__button\"\n            label={t(\"imageExportDialog.title.exportToPng\")}\n            onClick={() =>\n              onExportImage(EXPORT_IMAGE_TYPES.png, exportedElements, {\n                exportingFrame,\n              })\n            }\n            icon={downloadIcon}\n          >\n            {t(\"imageExportDialog.button.exportToPng\")}\n          </FilledButton>\n          <FilledButton\n            className=\"ImageExportModal__settings__buttons__button\"\n            label={t(\"imageExportDialog.title.exportToSvg\")}\n            onClick={() =>\n              onExportImage(EXPORT_IMAGE_TYPES.svg, exportedElements, {\n                exportingFrame,\n              })\n            }\n            icon={downloadIcon}\n          >\n            {t(\"imageExportDialog.button.exportToSvg\")}\n          </FilledButton>\n          {(probablySupportsClipboardBlob || isFirefox) && (\n            <FilledButton\n              className=\"ImageExportModal__settings__buttons__button\"\n              label={t(\"imageExportDialog.title.copyPngToClipboard\")}\n              status={copyStatus}\n              onClick={async () => {\n                await onExportImage(\n                  EXPORT_IMAGE_TYPES.clipboard,\n                  exportedElements,\n                  {\n                    exportingFrame,\n                  },\n                );\n                onCopy();\n              }}\n              icon={copyIcon}\n            >\n              {t(\"imageExportDialog.button.copyPngToClipboard\")}\n            </FilledButton>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\ntype ExportSettingProps = {\n  label: string;\n  children: React.ReactNode;\n  tooltip?: string;\n  name?: string;\n};\n\nconst ExportSetting = ({\n  label,\n  children,\n  tooltip,\n  name,\n}: ExportSettingProps) => {\n  return (\n    <div className=\"ImageExportModal__settings__setting\" title={label}>\n      <label\n        htmlFor={name}\n        className=\"ImageExportModal__settings__setting__label\"\n      >\n        {label}\n        {tooltip && (\n          <Tooltip label={tooltip} long={true}>\n            {helpIcon}\n          </Tooltip>\n        )}\n      </label>\n      <div className=\"ImageExportModal__settings__setting__content\">\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport const ImageExportDialog = ({\n  elements,\n  appState,\n  files,\n  actionManager,\n  onExportImage,\n  onCloseRequest,\n  name,\n}: {\n  appState: UIAppState;\n  elements: readonly NonDeletedExcalidrawElement[];\n  files: BinaryFiles;\n  actionManager: ActionManager;\n  onExportImage: AppClassProperties[\"onExportImage\"];\n  onCloseRequest: () => void;\n  name: string;\n}) => {\n  // we need to take a snapshot so that the exported state can't be modified\n  // while the dialog is open\n  const [{ appStateSnapshot, elementsSnapshot }] = useState(() => {\n    return {\n      appStateSnapshot: cloneJSON(appState),\n      elementsSnapshot: cloneJSON(elements),\n    };\n  });\n\n  return (\n    <Dialog onCloseRequest={onCloseRequest} size=\"wide\" title={false}>\n      <ImageExportModal\n        elementsSnapshot={elementsSnapshot}\n        appStateSnapshot={appStateSnapshot}\n        files={files}\n        actionManager={actionManager}\n        onExportImage={onExportImage}\n        name={name}\n      />\n    </Dialog>\n  );\n};\n", "import clsx from \"clsx\";\nimport \"./RadioGroup.scss\";\n\nexport type RadioGroupChoice<T> = {\n  value: T;\n  label: React.ReactNode;\n  ariaLabel?: string;\n};\n\nexport type RadioGroupProps<T> = {\n  choices: RadioGroupChoice<T>[];\n  value: T;\n  onChange: (value: T) => void;\n  name: string;\n};\n\nexport const RadioGroup = function <T>({\n  onChange,\n  value,\n  choices,\n  name,\n}: RadioGroupProps<T>) {\n  return (\n    <div className=\"RadioGroup\">\n      {choices.map((choice) => (\n        <div\n          className={clsx(\"RadioGroup__choice\", {\n            active: choice.value === value,\n          })}\n          key={String(choice.value)}\n          title={choice.ariaLabel}\n        >\n          <input\n            name={name}\n            type=\"radio\"\n            checked={choice.value === value}\n            onChange={() => onChange(choice.value)}\n            aria-label={choice.ariaLabel}\n          />\n          {choice.label}\n        </div>\n      ))}\n    </div>\n  );\n};\n", "import clsx from \"clsx\";\n\nimport \"./Switch.scss\";\n\nexport type SwitchProps = {\n  name: string;\n  checked: boolean;\n  title?: string;\n  onChange: (value: boolean) => void;\n  disabled?: boolean;\n};\n\nexport const Switch = ({\n  title,\n  name,\n  checked,\n  onChange,\n  disabled = false,\n}: SwitchProps) => {\n  return (\n    <div className={clsx(\"Switch\", { toggled: checked, disabled })}>\n      <input\n        name={name}\n        id={name}\n        title={title}\n        type=\"checkbox\"\n        checked={checked}\n        disabled={disabled}\n        onChange={() => onChange(!checked)}\n        onKeyDown={(event) => {\n          if (event.key === \" \") {\n            onChange(!checked);\n          }\n        }}\n      />\n    </div>\n  );\n};\n", "import React, { forwardRef, useState } from \"react\";\nimport clsx from \"clsx\";\n\nimport \"./FilledButton.scss\";\nimport { AbortError } from \"../errors\";\nimport Spinner from \"./Spinner\";\nimport { isPromiseLike } from \"../utils\";\nimport { tablerCheckIcon } from \"./icons\";\n\nexport type ButtonVariant = \"filled\" | \"outlined\" | \"icon\";\nexport type ButtonColor =\n  | \"primary\"\n  | \"danger\"\n  | \"warning\"\n  | \"muted\"\n  | \"success\";\nexport type ButtonSize = \"medium\" | \"large\";\n\nexport type FilledButtonProps = {\n  label: string;\n\n  children?: React.ReactNode;\n  onClick?: (event: React.MouseEvent) => void;\n  status?: null | \"loading\" | \"success\";\n\n  variant?: ButtonVariant;\n  color?: ButtonColor;\n  size?: ButtonSize;\n  className?: string;\n  fullWidth?: boolean;\n\n  icon?: React.ReactNode;\n};\n\nexport const FilledButton = forwardRef<HTMLButtonElement, FilledButtonProps>(\n  (\n    {\n      children,\n      icon,\n      onClick,\n      label,\n      variant = \"filled\",\n      color = \"primary\",\n      size = \"medium\",\n      fullWidth,\n      className,\n      status,\n    },\n    ref,\n  ) => {\n    const [isLoading, setIsLoading] = useState(false);\n\n    const _onClick = async (event: React.MouseEvent) => {\n      const ret = onClick?.(event);\n\n      if (isPromiseLike(ret)) {\n        // delay loading state to prevent flicker in case of quick response\n        const timer = window.setTimeout(() => {\n          setIsLoading(true);\n        }, 50);\n        try {\n          await ret;\n        } catch (error: any) {\n          if (!(error instanceof AbortError)) {\n            throw error;\n          } else {\n            console.warn(error);\n          }\n        } finally {\n          clearTimeout(timer);\n          setIsLoading(false);\n        }\n      }\n    };\n\n    const _status = isLoading ? \"loading\" : status;\n    color = _status === \"success\" ? \"success\" : color;\n\n    return (\n      <button\n        className={clsx(\n          \"ExcButton\",\n          `ExcButton--color-${color}`,\n          `ExcButton--variant-${variant}`,\n          `ExcButton--size-${size}`,\n          `ExcButton--status-${_status}`,\n          { \"ExcButton--fullWidth\": fullWidth },\n          className,\n        )}\n        onClick={_onClick}\n        type=\"button\"\n        aria-label={label}\n        ref={ref}\n        disabled={_status === \"loading\" || _status === \"success\"}\n      >\n        <div className=\"ExcButton__contents\">\n          {_status === \"loading\" ? (\n            <Spinner className=\"ExcButton__statusIcon\" />\n          ) : (\n            _status === \"success\" && (\n              <div className=\"ExcButton__statusIcon\">{tablerCheckIcon}</div>\n            )\n          )}\n          {icon && (\n            <div className=\"ExcButton__icon\" aria-hidden>\n              {icon}\n            </div>\n          )}\n          {variant !== \"icon\" && (children ?? label)}\n        </div>\n      </button>\n    );\n  },\n);\n", "import { useCallback, useRef, useState } from \"react\";\n\nconst TIMEOUT = 2000;\n\nexport const useCopyStatus = () => {\n  const [copyStatus, setCopyStatus] = useState<\"success\" | null>(null);\n  const timeoutRef = useRef<number>(0);\n\n  const onCopy = () => {\n    clearTimeout(timeoutRef.current);\n    setCopyStatus(\"success\");\n\n    timeoutRef.current = window.setTimeout(() => {\n      setCopyStatus(null);\n    }, TIMEOUT);\n  };\n\n  const resetCopyStatus = useCallback(() => {\n    setCopyStatus(null);\n  }, []);\n\n  return {\n    copyStatus,\n    resetCopyStatus,\n    onCopy,\n  };\n};\n", "import \"./FixedSideContainer.scss\";\n\nimport React from \"react\";\nimport clsx from \"clsx\";\n\ntype FixedSideContainerProps = {\n  children: React.ReactNode;\n  side: \"top\" | \"left\" | \"right\";\n  className?: string;\n};\n\nexport const FixedSideContainer = ({\n  children,\n  side,\n  className,\n}: FixedSideContainerProps) => (\n  <div\n    className={clsx(\n      \"FixedSideContainer\",\n      `FixedSideContainer_side_${side}`,\n      className,\n    )}\n  >\n    {children}\n  </div>\n);\n", "import {\n  HEADING_DOWN,\n  HEADING_LEFT,\n  HEADING_RIGHT,\n  HEADING_UP,\n  compareHeading,\n  headingForPointFromElement,\n  type Heading,\n} from \"./heading\";\nimport { bindLinearElement } from \"./binding\";\nimport { LinearElementEditor } from \"./linearElementEditor\";\nimport { newArrowElement, newElement } from \"./newElement\";\nimport {\n  type ElementsMap,\n  type ExcalidrawBindableElement,\n  type ExcalidrawElement,\n  type ExcalidrawFlowchartNodeElement,\n  type NonDeletedSceneElementsMap,\n  type Ordered,\n  type OrderedExcalidrawElement,\n} from \"./types\";\nimport { KEYS } from \"../keys\";\nimport type { AppState, PendingExcalidrawElements } from \"../types\";\nimport { mutateElement } from \"./mutateElement\";\nimport { elementOverlapsWithFrame, elementsAreInFrameBounds } from \"../frame\";\nimport {\n  isBindableElement,\n  isElbowArrow,\n  isFrameElement,\n  isFlowchartNodeElement,\n} from \"./typeChecks\";\nimport { invariant, toBrandedType } from \"../utils\";\nimport { pointFrom, type LocalPoint } from \"@excalidraw/math\";\nimport { aabbForElement } from \"../shapes\";\nimport { updateElbowArrowPoints } from \"./elbowArrow\";\n\ntype LinkDirection = \"up\" | \"right\" | \"down\" | \"left\";\n\nconst VERTICAL_OFFSET = 100;\nconst HORIZONTAL_OFFSET = 100;\n\nexport const getLinkDirectionFromKey = (key: string): LinkDirection => {\n  switch (key) {\n    case KEYS.ARROW_UP:\n      return \"up\";\n    case KEYS.ARROW_DOWN:\n      return \"down\";\n    case KEYS.ARROW_RIGHT:\n      return \"right\";\n    case KEYS.ARROW_LEFT:\n      return \"left\";\n    default:\n      return \"right\";\n  }\n};\n\nconst getNodeRelatives = (\n  type: \"predecessors\" | \"successors\",\n  node: ExcalidrawBindableElement,\n  elementsMap: ElementsMap,\n  direction: LinkDirection,\n) => {\n  const items = [...elementsMap.values()].reduce(\n    (acc: { relative: ExcalidrawBindableElement; heading: Heading }[], el) => {\n      let oppositeBinding;\n      if (\n        isElbowArrow(el) &&\n        // we want check existence of the opposite binding, in the direction\n        // we're interested in\n        (oppositeBinding =\n          el[type === \"predecessors\" ? \"startBinding\" : \"endBinding\"]) &&\n        // similarly, we need to filter only arrows bound to target node\n        el[type === \"predecessors\" ? \"endBinding\" : \"startBinding\"]\n          ?.elementId === node.id\n      ) {\n        const relative = elementsMap.get(oppositeBinding.elementId);\n\n        if (!relative) {\n          return acc;\n        }\n\n        invariant(\n          isBindableElement(relative),\n          \"not an ExcalidrawBindableElement\",\n        );\n\n        const edgePoint = (\n          type === \"predecessors\" ? el.points[el.points.length - 1] : [0, 0]\n        ) as Readonly<LocalPoint>;\n\n        const heading = headingForPointFromElement(node, aabbForElement(node), [\n          edgePoint[0] + el.x,\n          edgePoint[1] + el.y,\n        ] as Readonly<LocalPoint>);\n\n        acc.push({\n          relative,\n          heading,\n        });\n      }\n      return acc;\n    },\n    [],\n  );\n\n  switch (direction) {\n    case \"up\":\n      return items\n        .filter((item) => compareHeading(item.heading, HEADING_UP))\n        .map((item) => item.relative);\n    case \"down\":\n      return items\n        .filter((item) => compareHeading(item.heading, HEADING_DOWN))\n        .map((item) => item.relative);\n    case \"right\":\n      return items\n        .filter((item) => compareHeading(item.heading, HEADING_RIGHT))\n        .map((item) => item.relative);\n    case \"left\":\n      return items\n        .filter((item) => compareHeading(item.heading, HEADING_LEFT))\n        .map((item) => item.relative);\n  }\n};\n\nconst getSuccessors = (\n  node: ExcalidrawBindableElement,\n  elementsMap: ElementsMap,\n  direction: LinkDirection,\n) => {\n  return getNodeRelatives(\"successors\", node, elementsMap, direction);\n};\n\nexport const getPredecessors = (\n  node: ExcalidrawBindableElement,\n  elementsMap: ElementsMap,\n  direction: LinkDirection,\n) => {\n  return getNodeRelatives(\"predecessors\", node, elementsMap, direction);\n};\n\nconst getOffsets = (\n  element: ExcalidrawFlowchartNodeElement,\n  linkedNodes: ExcalidrawElement[],\n  direction: LinkDirection,\n) => {\n  const _HORIZONTAL_OFFSET = HORIZONTAL_OFFSET + element.width;\n\n  // check if vertical space or horizontal space is available first\n  if (direction === \"up\" || direction === \"down\") {\n    const _VERTICAL_OFFSET = VERTICAL_OFFSET + element.height;\n    // check vertical space\n    const minX = element.x;\n    const maxX = element.x + element.width;\n\n    // vertical space is available\n    if (\n      linkedNodes.every(\n        (linkedNode) =>\n          linkedNode.x + linkedNode.width < minX || linkedNode.x > maxX,\n      )\n    ) {\n      return {\n        x: 0,\n        y: _VERTICAL_OFFSET * (direction === \"up\" ? -1 : 1),\n      };\n    }\n  } else if (direction === \"right\" || direction === \"left\") {\n    const minY = element.y;\n    const maxY = element.y + element.height;\n\n    if (\n      linkedNodes.every(\n        (linkedNode) =>\n          linkedNode.y + linkedNode.height < minY || linkedNode.y > maxY,\n      )\n    ) {\n      return {\n        x:\n          (HORIZONTAL_OFFSET + element.width) * (direction === \"left\" ? -1 : 1),\n        y: 0,\n      };\n    }\n  }\n\n  if (direction === \"up\" || direction === \"down\") {\n    const _VERTICAL_OFFSET = VERTICAL_OFFSET + element.height;\n    const y = linkedNodes.length === 0 ? _VERTICAL_OFFSET : _VERTICAL_OFFSET;\n    const x =\n      linkedNodes.length === 0\n        ? 0\n        : (linkedNodes.length + 1) % 2 === 0\n        ? ((linkedNodes.length + 1) / 2) * _HORIZONTAL_OFFSET\n        : (linkedNodes.length / 2) * _HORIZONTAL_OFFSET * -1;\n\n    if (direction === \"up\") {\n      return {\n        x,\n        y: y * -1,\n      };\n    }\n\n    return {\n      x,\n      y,\n    };\n  }\n\n  const _VERTICAL_OFFSET = VERTICAL_OFFSET + element.height;\n  const x =\n    (linkedNodes.length === 0 ? HORIZONTAL_OFFSET : HORIZONTAL_OFFSET) +\n    element.width;\n  const y =\n    linkedNodes.length === 0\n      ? 0\n      : (linkedNodes.length + 1) % 2 === 0\n      ? ((linkedNodes.length + 1) / 2) * _VERTICAL_OFFSET\n      : (linkedNodes.length / 2) * _VERTICAL_OFFSET * -1;\n\n  if (direction === \"left\") {\n    return {\n      x: x * -1,\n      y,\n    };\n  }\n  return {\n    x,\n    y,\n  };\n};\n\nconst addNewNode = (\n  element: ExcalidrawFlowchartNodeElement,\n  elementsMap: ElementsMap,\n  appState: AppState,\n  direction: LinkDirection,\n) => {\n  const successors = getSuccessors(element, elementsMap, direction);\n  const predeccessors = getPredecessors(element, elementsMap, direction);\n\n  const offsets = getOffsets(\n    element,\n    [...successors, ...predeccessors],\n    direction,\n  );\n\n  const nextNode = newElement({\n    type: element.type,\n    x: element.x + offsets.x,\n    y: element.y + offsets.y,\n    // TODO: extract this to a util\n    width: element.width,\n    height: element.height,\n    roundness: element.roundness,\n    roughness: element.roughness,\n    backgroundColor: element.backgroundColor,\n    strokeColor: element.strokeColor,\n    strokeWidth: element.strokeWidth,\n    opacity: element.opacity,\n    fillStyle: element.fillStyle,\n    strokeStyle: element.strokeStyle,\n  });\n\n  invariant(\n    isFlowchartNodeElement(nextNode),\n    \"not an ExcalidrawFlowchartNodeElement\",\n  );\n\n  const bindingArrow = createBindingArrow(\n    element,\n    nextNode,\n    elementsMap,\n    direction,\n    appState,\n  );\n\n  return {\n    nextNode,\n    bindingArrow,\n  };\n};\n\nexport const addNewNodes = (\n  startNode: ExcalidrawFlowchartNodeElement,\n  elementsMap: ElementsMap,\n  appState: AppState,\n  direction: LinkDirection,\n  numberOfNodes: number,\n) => {\n  // always start from 0 and distribute evenly\n  const newNodes: ExcalidrawElement[] = [];\n\n  for (let i = 0; i < numberOfNodes; i++) {\n    let nextX: number;\n    let nextY: number;\n    if (direction === \"left\" || direction === \"right\") {\n      const totalHeight =\n        VERTICAL_OFFSET * (numberOfNodes - 1) +\n        numberOfNodes * startNode.height;\n\n      const startY = startNode.y + startNode.height / 2 - totalHeight / 2;\n\n      let offsetX = HORIZONTAL_OFFSET + startNode.width;\n      if (direction === \"left\") {\n        offsetX *= -1;\n      }\n      nextX = startNode.x + offsetX;\n      const offsetY = (VERTICAL_OFFSET + startNode.height) * i;\n      nextY = startY + offsetY;\n    } else {\n      const totalWidth =\n        HORIZONTAL_OFFSET * (numberOfNodes - 1) +\n        numberOfNodes * startNode.width;\n      const startX = startNode.x + startNode.width / 2 - totalWidth / 2;\n      let offsetY = VERTICAL_OFFSET + startNode.height;\n\n      if (direction === \"up\") {\n        offsetY *= -1;\n      }\n      nextY = startNode.y + offsetY;\n      const offsetX = (HORIZONTAL_OFFSET + startNode.width) * i;\n      nextX = startX + offsetX;\n    }\n\n    const nextNode = newElement({\n      type: startNode.type,\n      x: nextX,\n      y: nextY,\n      // TODO: extract this to a util\n      width: startNode.width,\n      height: startNode.height,\n      roundness: startNode.roundness,\n      roughness: startNode.roughness,\n      backgroundColor: startNode.backgroundColor,\n      strokeColor: startNode.strokeColor,\n      strokeWidth: startNode.strokeWidth,\n      opacity: startNode.opacity,\n      fillStyle: startNode.fillStyle,\n      strokeStyle: startNode.strokeStyle,\n    });\n\n    invariant(\n      isFlowchartNodeElement(nextNode),\n      \"not an ExcalidrawFlowchartNodeElement\",\n    );\n\n    const bindingArrow = createBindingArrow(\n      startNode,\n      nextNode,\n      elementsMap,\n      direction,\n      appState,\n    );\n\n    newNodes.push(nextNode);\n    newNodes.push(bindingArrow);\n  }\n\n  return newNodes;\n};\n\nconst createBindingArrow = (\n  startBindingElement: ExcalidrawFlowchartNodeElement,\n  endBindingElement: ExcalidrawFlowchartNodeElement,\n  elementsMap: ElementsMap,\n  direction: LinkDirection,\n  appState: AppState,\n) => {\n  let startX: number;\n  let startY: number;\n\n  const PADDING = 6;\n\n  switch (direction) {\n    case \"up\": {\n      startX = startBindingElement.x + startBindingElement.width / 2;\n      startY = startBindingElement.y - PADDING;\n      break;\n    }\n    case \"down\": {\n      startX = startBindingElement.x + startBindingElement.width / 2;\n      startY = startBindingElement.y + startBindingElement.height + PADDING;\n      break;\n    }\n    case \"right\": {\n      startX = startBindingElement.x + startBindingElement.width + PADDING;\n      startY = startBindingElement.y + startBindingElement.height / 2;\n      break;\n    }\n    case \"left\": {\n      startX = startBindingElement.x - PADDING;\n      startY = startBindingElement.y + startBindingElement.height / 2;\n      break;\n    }\n  }\n\n  let endX: number;\n  let endY: number;\n\n  switch (direction) {\n    case \"up\": {\n      endX = endBindingElement.x + endBindingElement.width / 2 - startX;\n      endY = endBindingElement.y + endBindingElement.height - startY + PADDING;\n      break;\n    }\n    case \"down\": {\n      endX = endBindingElement.x + endBindingElement.width / 2 - startX;\n      endY = endBindingElement.y - startY - PADDING;\n      break;\n    }\n    case \"right\": {\n      endX = endBindingElement.x - startX - PADDING;\n      endY = endBindingElement.y - startY + endBindingElement.height / 2;\n      break;\n    }\n    case \"left\": {\n      endX = endBindingElement.x + endBindingElement.width - startX + PADDING;\n      endY = endBindingElement.y - startY + endBindingElement.height / 2;\n      break;\n    }\n  }\n\n  const bindingArrow = newArrowElement({\n    type: \"arrow\",\n    x: startX,\n    y: startY,\n    startArrowhead: null,\n    endArrowhead: appState.currentItemEndArrowhead,\n    strokeColor: startBindingElement.strokeColor,\n    strokeStyle: startBindingElement.strokeStyle,\n    strokeWidth: startBindingElement.strokeWidth,\n    opacity: startBindingElement.opacity,\n    roughness: startBindingElement.roughness,\n    points: [pointFrom(0, 0), pointFrom(endX, endY)],\n    elbowed: true,\n  });\n\n  bindLinearElement(\n    bindingArrow,\n    startBindingElement,\n    \"start\",\n    elementsMap as NonDeletedSceneElementsMap,\n  );\n  bindLinearElement(\n    bindingArrow,\n    endBindingElement,\n    \"end\",\n    elementsMap as NonDeletedSceneElementsMap,\n  );\n\n  const changedElements = new Map<string, OrderedExcalidrawElement>();\n  changedElements.set(\n    startBindingElement.id,\n    startBindingElement as OrderedExcalidrawElement,\n  );\n  changedElements.set(\n    endBindingElement.id,\n    endBindingElement as OrderedExcalidrawElement,\n  );\n  changedElements.set(\n    bindingArrow.id,\n    bindingArrow as OrderedExcalidrawElement,\n  );\n\n  LinearElementEditor.movePoints(bindingArrow, [\n    {\n      index: 1,\n      point: bindingArrow.points[1],\n    },\n  ]);\n\n  const update = updateElbowArrowPoints(\n    bindingArrow,\n    toBrandedType<NonDeletedSceneElementsMap>(\n      new Map([\n        ...elementsMap.entries(),\n        [startBindingElement.id, startBindingElement],\n        [endBindingElement.id, endBindingElement],\n        [bindingArrow.id, bindingArrow],\n      ] as [string, Ordered<ExcalidrawElement>][]),\n    ),\n    { points: bindingArrow.points },\n  );\n\n  return {\n    ...bindingArrow,\n    ...update,\n  };\n};\n\nexport class FlowChartNavigator {\n  isExploring: boolean = false;\n  // nodes that are ONE link away (successor and predecessor both included)\n  private sameLevelNodes: ExcalidrawElement[] = [];\n  private sameLevelIndex: number = 0;\n  // set it to the opposite of the defalut creation direction\n  private direction: LinkDirection | null = null;\n  // for speedier navigation\n  private visitedNodes: Set<ExcalidrawElement[\"id\"]> = new Set();\n\n  clear() {\n    this.isExploring = false;\n    this.sameLevelNodes = [];\n    this.sameLevelIndex = 0;\n    this.direction = null;\n    this.visitedNodes.clear();\n  }\n\n  exploreByDirection(\n    element: ExcalidrawElement,\n    elementsMap: ElementsMap,\n    direction: LinkDirection,\n  ): ExcalidrawElement[\"id\"] | null {\n    if (!isBindableElement(element)) {\n      return null;\n    }\n\n    // clear if going at a different direction\n    if (direction !== this.direction) {\n      this.clear();\n    }\n\n    // add the current node to the visited\n    if (!this.visitedNodes.has(element.id)) {\n      this.visitedNodes.add(element.id);\n    }\n\n    /**\n     * CASE:\n     * - already started exploring, AND\n     * - there are multiple nodes at the same level, AND\n     * - still going at the same direction, AND\n     *\n     * RESULT:\n     * - loop through nodes at the same level\n     *\n     * WHY:\n     * - provides user the capability to loop through nodes at the same level\n     */\n    if (\n      this.isExploring &&\n      direction === this.direction &&\n      this.sameLevelNodes.length > 1\n    ) {\n      this.sameLevelIndex =\n        (this.sameLevelIndex + 1) % this.sameLevelNodes.length;\n\n      return this.sameLevelNodes[this.sameLevelIndex].id;\n    }\n\n    const nodes = [\n      ...getSuccessors(element, elementsMap, direction),\n      ...getPredecessors(element, elementsMap, direction),\n    ];\n\n    /**\n     * CASE:\n     * - just started exploring at the given direction\n     *\n     * RESULT:\n     * - go to the first node in the given direction\n     */\n    if (nodes.length > 0) {\n      this.sameLevelIndex = 0;\n      this.isExploring = true;\n      this.sameLevelNodes = nodes;\n      this.direction = direction;\n      this.visitedNodes.add(nodes[0].id);\n\n      return nodes[0].id;\n    }\n\n    /**\n     * CASE:\n     * - (just started exploring or still going at the same direction) OR\n     * - there're no nodes at the given direction\n     *\n     * RESULT:\n     * - go to some other unvisited linked node\n     *\n     * WHY:\n     * - provide a speedier navigation from a given node to some predecessor\n     *   without the user having to change arrow key\n     */\n    if (direction === this.direction || !this.isExploring) {\n      if (!this.isExploring) {\n        // just started and no other nodes at the given direction\n        // so the current node is technically the first visited node\n        // (this is needed so that we don't get stuck between looping through )\n        this.visitedNodes.add(element.id);\n      }\n\n      const otherDirections: LinkDirection[] = [\n        \"up\",\n        \"right\",\n        \"down\",\n        \"left\",\n      ].filter((dir): dir is LinkDirection => dir !== direction);\n\n      const otherLinkedNodes = otherDirections\n        .map((dir) => [\n          ...getSuccessors(element, elementsMap, dir),\n          ...getPredecessors(element, elementsMap, dir),\n        ])\n        .flat()\n        .filter((linkedNode) => !this.visitedNodes.has(linkedNode.id));\n\n      for (const linkedNode of otherLinkedNodes) {\n        if (!this.visitedNodes.has(linkedNode.id)) {\n          this.visitedNodes.add(linkedNode.id);\n          this.isExploring = true;\n          this.direction = direction;\n          return linkedNode.id;\n        }\n      }\n    }\n\n    return null;\n  }\n}\n\nexport class FlowChartCreator {\n  isCreatingChart: boolean = false;\n  private numberOfNodes: number = 0;\n  private direction: LinkDirection | null = \"right\";\n  pendingNodes: PendingExcalidrawElements | null = null;\n\n  createNodes(\n    startNode: ExcalidrawFlowchartNodeElement,\n    elementsMap: ElementsMap,\n    appState: AppState,\n    direction: LinkDirection,\n  ) {\n    if (direction !== this.direction) {\n      const { nextNode, bindingArrow } = addNewNode(\n        startNode,\n        elementsMap,\n        appState,\n        direction,\n      );\n\n      this.numberOfNodes = 1;\n      this.isCreatingChart = true;\n      this.direction = direction;\n      this.pendingNodes = [nextNode, bindingArrow];\n    } else {\n      this.numberOfNodes += 1;\n      const newNodes = addNewNodes(\n        startNode,\n        elementsMap,\n        appState,\n        direction,\n        this.numberOfNodes,\n      );\n\n      this.isCreatingChart = true;\n      this.direction = direction;\n      this.pendingNodes = newNodes;\n    }\n\n    // add pending nodes to the same frame as the start node\n    // if every pending node is at least intersecting with the frame\n    if (startNode.frameId) {\n      const frame = elementsMap.get(startNode.frameId);\n\n      invariant(\n        frame && isFrameElement(frame),\n        \"not an ExcalidrawFrameElement\",\n      );\n\n      if (\n        frame &&\n        this.pendingNodes.every(\n          (node) =>\n            elementsAreInFrameBounds([node], frame, elementsMap) ||\n            elementOverlapsWithFrame(node, frame, elementsMap),\n        )\n      ) {\n        this.pendingNodes = this.pendingNodes.map((node) =>\n          mutateElement(\n            node,\n            {\n              frameId: startNode.frameId,\n            },\n            false,\n          ),\n        );\n      }\n    }\n  }\n\n  clear() {\n    this.isCreatingChart = false;\n    this.pendingNodes = null;\n    this.direction = null;\n    this.numberOfNodes = 0;\n  }\n}\n\nexport const isNodeInFlowchart = (\n  element: ExcalidrawFlowchartNodeElement,\n  elementsMap: ElementsMap,\n) => {\n  for (const [, el] of elementsMap) {\n    if (\n      el.type === \"arrow\" &&\n      (el.startBinding?.elementId === element.id ||\n        el.endBinding?.elementId === element.id)\n    ) {\n      return true;\n    }\n  }\n\n  return false;\n};\n", "import { t } from \"../i18n\";\nimport type { AppClassProperties, Device, UIAppState } from \"../types\";\nimport {\n  isFlowchartNodeElement,\n  isImageElement,\n  isLinearElement,\n  isTextBindableContainer,\n  isTextElement,\n} from \"../element/typeChecks\";\nimport { getShortcutKey } from \"../utils\";\nimport { isEraserActive } from \"../appState\";\n\nimport \"./HintViewer.scss\";\nimport { isNodeInFlowchart } from \"../element/flowchart\";\nimport { isGridModeEnabled } from \"../snapping\";\nimport { CANVAS_SEARCH_TAB, DEFAULT_SIDEBAR } from \"../constants\";\n\ninterface HintViewerProps {\n  appState: UIAppState;\n  isMobile: boolean;\n  device: Device;\n  app: AppClassProperties;\n}\n\nconst getHints = ({\n  appState,\n  isMobile,\n  device,\n  app,\n}: HintViewerProps): null | string | string[] => {\n  const { activeTool, isResizing, isRotating, lastPointerDownWith } = appState;\n  const multiMode = appState.multiElement !== null;\n\n  if (\n    appState.openSidebar?.name === DEFAULT_SIDEBAR.name &&\n    appState.openSidebar.tab === CANVAS_SEARCH_TAB &&\n    appState.searchMatches?.length\n  ) {\n    return t(\"hints.dismissSearch\");\n  }\n\n  if (appState.openSidebar && !device.editor.canFitSidebar) {\n    return null;\n  }\n\n  if (isEraserActive(appState)) {\n    return t(\"hints.eraserRevert\");\n  }\n  if (activeTool.type === \"arrow\" || activeTool.type === \"line\") {\n    if (multiMode) {\n      return t(\"hints.linearElementMulti\");\n    }\n    if (activeTool.type === \"arrow\") {\n      return t(\"hints.arrowTool\", { arrowShortcut: getShortcutKey(\"A\") });\n    }\n    return t(\"hints.linearElement\");\n  }\n\n  if (activeTool.type === \"freedraw\") {\n    return t(\"hints.freeDraw\");\n  }\n\n  if (activeTool.type === \"text\") {\n    return t(\"hints.text\");\n  }\n\n  if (activeTool.type === \"embeddable\") {\n    return t(\"hints.embeddable\");\n  }\n\n  if (appState.activeTool.type === \"image\" && appState.pendingImageElementId) {\n    return t(\"hints.placeImage\");\n  }\n\n  const selectedElements = app.scene.getSelectedElements(appState);\n\n  if (\n    isResizing &&\n    lastPointerDownWith === \"mouse\" &&\n    selectedElements.length === 1\n  ) {\n    const targetElement = selectedElements[0];\n    if (isLinearElement(targetElement) && targetElement.points.length === 2) {\n      return t(\"hints.lockAngle\");\n    }\n    return isImageElement(targetElement)\n      ? t(\"hints.resizeImage\")\n      : t(\"hints.resize\");\n  }\n\n  if (isRotating && lastPointerDownWith === \"mouse\") {\n    return t(\"hints.rotate\");\n  }\n\n  if (selectedElements.length === 1 && isTextElement(selectedElements[0])) {\n    return t(\"hints.text_selected\");\n  }\n\n  if (appState.editingTextElement) {\n    return t(\"hints.text_editing\");\n  }\n\n  if (appState.croppingElementId) {\n    return t(\"hints.leaveCropEditor\");\n  }\n\n  if (selectedElements.length === 1 && isImageElement(selectedElements[0])) {\n    return t(\"hints.enterCropEditor\");\n  }\n\n  if (activeTool.type === \"selection\") {\n    if (\n      appState.selectionElement &&\n      !selectedElements.length &&\n      !appState.editingTextElement &&\n      !appState.editingLinearElement\n    ) {\n      return t(\"hints.deepBoxSelect\");\n    }\n\n    if (isGridModeEnabled(app) && appState.selectedElementsAreBeingDragged) {\n      return t(\"hints.disableSnapping\");\n    }\n\n    if (!selectedElements.length && !isMobile) {\n      return t(\"hints.canvasPanning\");\n    }\n\n    if (selectedElements.length === 1) {\n      if (isLinearElement(selectedElements[0])) {\n        if (appState.editingLinearElement) {\n          return appState.editingLinearElement.selectedPointsIndices\n            ? t(\"hints.lineEditor_pointSelected\")\n            : t(\"hints.lineEditor_nothingSelected\");\n        }\n        return t(\"hints.lineEditor_info\");\n      }\n      if (\n        !appState.newElement &&\n        !appState.selectedElementsAreBeingDragged &&\n        isTextBindableContainer(selectedElements[0])\n      ) {\n        if (isFlowchartNodeElement(selectedElements[0])) {\n          if (\n            isNodeInFlowchart(\n              selectedElements[0],\n              app.scene.getNonDeletedElementsMap(),\n            )\n          ) {\n            return [t(\"hints.bindTextToElement\"), t(\"hints.createFlowchart\")];\n          }\n\n          return [t(\"hints.bindTextToElement\"), t(\"hints.createFlowchart\")];\n        }\n\n        return t(\"hints.bindTextToElement\");\n      }\n    }\n  }\n\n  return null;\n};\n\nexport const HintViewer = ({\n  appState,\n  isMobile,\n  device,\n  app,\n}: HintViewerProps) => {\n  const hints = getHints({\n    appState,\n    isMobile,\n    device,\n    app,\n  });\n\n  if (!hints) {\n    return null;\n  }\n\n  const hint = Array.isArray(hints)\n    ? hints\n        .map((hint) => {\n          return getShortcutKey(hint).replace(/\\. ?$/, \"\");\n        })\n        .join(\". \")\n    : getShortcutKey(hints);\n\n  return (\n    <div className=\"HintViewer\">\n      <span>{hint}</span>\n    </div>\n  );\n};\n", "import \"./ToolIcon.scss\";\n\nimport clsx from \"clsx\";\nimport type { ToolButtonSize } from \"./ToolButton\";\nimport { LockedIcon, UnlockedIcon } from \"./icons\";\n\ntype LockIconProps = {\n  title?: string;\n  name?: string;\n  checked: boolean;\n  onChange?(): void;\n  isMobile?: boolean;\n};\n\nconst DEFAULT_SIZE: ToolButtonSize = \"medium\";\n\nconst ICONS = {\n  CHECKED: LockedIcon,\n  UNCHECKED: UnlockedIcon,\n};\n\nexport const LockButton = (props: LockIconProps) => {\n  return (\n    <label\n      className={clsx(\n        \"ToolIcon ToolIcon__lock\",\n        `ToolIcon_size_${DEFAULT_SIZE}`,\n        {\n          \"is-mobile\": props.isMobile,\n        },\n      )}\n      title={`${props.title} \u2014 Q`}\n    >\n      <input\n        className=\"ToolIcon_type_checkbox\"\n        type=\"checkbox\"\n        name={props.name}\n        onChange={props.onChange}\n        checked={props.checked}\n        aria-label={props.title}\n        data-testid=\"toolbar-lock\"\n      />\n      <div className=\"ToolIcon__icon\">\n        {props.checked ? ICONS.CHECKED : ICONS.UNCHECKED}\n      </div>\n    </label>\n  );\n};\n", "import React from \"react\";\nimport { t } from \"../i18n\";\nimport { useExcalidrawContainer } from \"./App\";\n\nexport const Section: React.FC<{\n  heading: \"canvasActions\" | \"selectedShapeActions\" | \"shapes\";\n  children?: React.ReactNode | ((heading: React.ReactNode) => React.ReactNode);\n  className?: string;\n}> = ({ heading, children, ...props }) => {\n  const { id } = useExcalidrawContainer();\n  const header = (\n    <h2 className=\"visually-hidden\" id={`${id}-${heading}-title`}>\n      {t(`headings.${heading}`)}\n    </h2>\n  );\n  return (\n    <section {...props} aria-labelledby={`${id}-${heading}-title`}>\n      {typeof children === \"function\" ? (\n        children(header)\n      ) : (\n        <>\n          {header}\n          {children}\n        </>\n      )}\n    </section>\n  );\n};\n", "import { getCommonBounds } from \"../element\";\nimport type { InteractiveCanvasAppState } from \"../types\";\nimport type { ScrollBars } from \"./types\";\nimport { getGlobalCSSVariable } from \"../utils\";\nimport { getLanguage } from \"../i18n\";\nimport type { ExcalidrawElement } from \"../element/types\";\n\nexport const SCROLLBAR_MARGIN = 4;\nexport const SCROLLBAR_WIDTH = 6;\nexport const SCROLLBAR_COLOR = \"rgba(0,0,0,0.3)\";\n\nexport const getScrollBars = (\n  elements: readonly ExcalidrawElement[],\n  viewportWidth: number,\n  viewportHeight: number,\n  appState: InteractiveCanvasAppState,\n): ScrollBars => {\n  if (!elements.length) {\n    return {\n      horizontal: null,\n      vertical: null,\n    };\n  }\n  // This is the bounding box of all the elements\n  const [elementsMinX, elementsMinY, elementsMaxX, elementsMaxY] =\n    getCommonBounds(elements);\n\n  // Apply zoom\n  const viewportWidthWithZoom = viewportWidth / appState.zoom.value;\n  const viewportHeightWithZoom = viewportHeight / appState.zoom.value;\n\n  const viewportWidthDiff = viewportWidth - viewportWidthWithZoom;\n  const viewportHeightDiff = viewportHeight - viewportHeightWithZoom;\n\n  const safeArea = {\n    top: parseInt(getGlobalCSSVariable(\"sat\")) || 0,\n    bottom: parseInt(getGlobalCSSVariable(\"sab\")) || 0,\n    left: parseInt(getGlobalCSSVariable(\"sal\")) || 0,\n    right: parseInt(getGlobalCSSVariable(\"sar\")) || 0,\n  };\n\n  const isRTL = getLanguage().rtl;\n\n  // The viewport is the rectangle currently visible for the user\n  const viewportMinX =\n    -appState.scrollX + viewportWidthDiff / 2 + safeArea.left;\n  const viewportMinY =\n    -appState.scrollY + viewportHeightDiff / 2 + safeArea.top;\n  const viewportMaxX = viewportMinX + viewportWidthWithZoom - safeArea.right;\n  const viewportMaxY = viewportMinY + viewportHeightWithZoom - safeArea.bottom;\n\n  // The scene is the bounding box of both the elements and viewport\n  const sceneMinX = Math.min(elementsMinX, viewportMinX);\n  const sceneMinY = Math.min(elementsMinY, viewportMinY);\n  const sceneMaxX = Math.max(elementsMaxX, viewportMaxX);\n  const sceneMaxY = Math.max(elementsMaxY, viewportMaxY);\n\n  // The scrollbar represents where the viewport is in relationship to the scene\n\n  return {\n    horizontal:\n      viewportMinX === sceneMinX && viewportMaxX === sceneMaxX\n        ? null\n        : {\n            x:\n              Math.max(safeArea.left, SCROLLBAR_MARGIN) +\n              ((viewportMinX - sceneMinX) / (sceneMaxX - sceneMinX)) *\n                viewportWidth,\n            y:\n              viewportHeight -\n              SCROLLBAR_WIDTH -\n              Math.max(SCROLLBAR_MARGIN, safeArea.bottom),\n            width:\n              ((viewportMaxX - viewportMinX) / (sceneMaxX - sceneMinX)) *\n                viewportWidth -\n              Math.max(SCROLLBAR_MARGIN * 2, safeArea.left + safeArea.right),\n            height: SCROLLBAR_WIDTH,\n          },\n    vertical:\n      viewportMinY === sceneMinY && viewportMaxY === sceneMaxY\n        ? null\n        : {\n            x: isRTL\n              ? Math.max(safeArea.left, SCROLLBAR_MARGIN)\n              : viewportWidth -\n                SCROLLBAR_WIDTH -\n                Math.max(safeArea.right, SCROLLBAR_MARGIN),\n            y:\n              ((viewportMinY - sceneMinY) / (sceneMaxY - sceneMinY)) *\n                viewportHeight +\n              Math.max(safeArea.top, SCROLLBAR_MARGIN),\n            width: SCROLLBAR_WIDTH,\n            height:\n              ((viewportMaxY - viewportMinY) / (sceneMaxY - sceneMinY)) *\n                viewportHeight -\n              Math.max(SCROLLBAR_MARGIN * 2, safeArea.top + safeArea.bottom),\n          },\n  };\n};\n\nexport const isOverScrollBars = (\n  scrollBars: ScrollBars,\n  x: number,\n  y: number,\n): {\n  isOverEither: boolean;\n  isOverHorizontal: boolean;\n  isOverVertical: boolean;\n} => {\n  const [isOverHorizontal, isOverVertical] = [\n    scrollBars.horizontal,\n    scrollBars.vertical,\n  ].map((scrollBar) => {\n    return (\n      scrollBar != null &&\n      scrollBar.x <= x &&\n      x <= scrollBar.x + scrollBar.width &&\n      scrollBar.y <= y &&\n      y <= scrollBar.y + scrollBar.height\n    );\n  });\n  const isOverEither = isOverHorizontal || isOverVertical;\n  return { isOverEither, isOverHorizontal, isOverVertical };\n};\n", "import \"./ToolIcon.scss\";\n\nimport clsx from \"clsx\";\nimport type { ToolButtonSize } from \"./ToolButton\";\nimport { PenModeIcon } from \"./icons\";\n\ntype PenModeIconProps = {\n  title?: string;\n  name?: string;\n  checked: boolean;\n  onChange?(): void;\n  zenModeEnabled?: boolean;\n  isMobile?: boolean;\n  penDetected: boolean;\n};\n\nconst DEFAULT_SIZE: ToolButtonSize = \"medium\";\n\nexport const PenModeButton = (props: PenModeIconProps) => {\n  if (!props.penDetected) {\n    return null;\n  }\n\n  return (\n    <label\n      className={clsx(\n        \"ToolIcon ToolIcon__penMode\",\n        `ToolIcon_size_${DEFAULT_SIZE}`,\n        {\n          \"is-mobile\": props.isMobile,\n        },\n      )}\n      title={`${props.title}`}\n    >\n      <input\n        className=\"ToolIcon_type_checkbox\"\n        type=\"checkbox\"\n        name={props.name}\n        onChange={props.onChange}\n        checked={props.checked}\n        aria-label={props.title}\n      />\n      <div className=\"ToolIcon__icon\">{PenModeIcon}</div>\n    </label>\n  );\n};\n", "import \"./ToolIcon.scss\";\n\nimport clsx from \"clsx\";\nimport { ToolButton } from \"./ToolButton\";\nimport { handIcon } from \"./icons\";\nimport { KEYS } from \"../keys\";\n\ntype LockIconProps = {\n  title?: string;\n  name?: string;\n  checked: boolean;\n  onChange?(): void;\n  isMobile?: boolean;\n};\n\nexport const HandButton = (props: LockIconProps) => {\n  return (\n    <ToolButton\n      className={clsx(\"Shape\", { fillable: false })}\n      type=\"radio\"\n      icon={handIcon}\n      name=\"editor-current-shape\"\n      checked={props.checked}\n      title={`${props.title} \u2014 H`}\n      keyBindingLabel={!props.isMobile ? KEYS.H.toLocaleUpperCase() : undefined}\n      aria-label={`${props.title} \u2014 H`}\n      aria-keyshortcuts={KEYS.H}\n      data-testid={`toolbar-hand`}\n      onChange={() => props.onChange?.()}\n    />\n  );\n};\n", "import type { JSX } from \"react\";\nimport React from \"react\";\nimport type {\n  AppClassProperties,\n  AppProps,\n  AppState,\n  Device,\n  ExcalidrawProps,\n  UIAppState,\n} from \"../types\";\nimport type { ActionManager } from \"../actions/manager\";\nimport { t } from \"../i18n\";\nimport Stack from \"./Stack\";\nimport { showSelectedShapeActions } from \"../element\";\nimport type { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { FixedSideContainer } from \"./FixedSideContainer\";\nimport { Island } from \"./Island\";\nimport { HintViewer } from \"./HintViewer\";\nimport { calculateScrollCenter } from \"../scene\";\nimport { SelectedShapeActions, ShapesSwitcher } from \"./Actions\";\nimport { Section } from \"./Section\";\nimport { SCROLLBAR_WIDTH, SCROLLBAR_MARGIN } from \"../scene/scrollbars\";\nimport { LockButton } from \"./LockButton\";\nimport { PenModeButton } from \"./PenModeButton\";\nimport { HandButton } from \"./HandButton\";\nimport { isHandToolActive } from \"../appState\";\nimport { useTunnels } from \"../context/tunnels\";\n\ntype MobileMenuProps = {\n  appState: UIAppState;\n  actionManager: ActionManager;\n  renderJSONExportDialog: () => React.ReactNode;\n  renderImageExportDialog: () => React.ReactNode;\n  setAppState: React.Component<any, AppState>[\"setState\"];\n  elements: readonly NonDeletedExcalidrawElement[];\n  onLockToggle: () => void;\n  onHandToolToggle: () => void;\n  onPenModeToggle: AppClassProperties[\"togglePenMode\"];\n\n  renderTopRightUI?: (\n    isMobile: boolean,\n    appState: UIAppState,\n  ) => JSX.Element | null;\n  renderCustomStats?: ExcalidrawProps[\"renderCustomStats\"];\n  renderSidebars: () => JSX.Element | null;\n  device: Device;\n  renderWelcomeScreen: boolean;\n  UIOptions: AppProps[\"UIOptions\"];\n  app: AppClassProperties;\n};\n\nexport const MobileMenu = ({\n  appState,\n  elements,\n  actionManager,\n  setAppState,\n  onLockToggle,\n  onHandToolToggle,\n  onPenModeToggle,\n\n  renderTopRightUI,\n  renderCustomStats,\n  renderSidebars,\n  device,\n  renderWelcomeScreen,\n  UIOptions,\n  app,\n}: MobileMenuProps) => {\n  const {\n    WelcomeScreenCenterTunnel,\n    MainMenuTunnel,\n    DefaultSidebarTriggerTunnel,\n  } = useTunnels();\n  const renderToolbar = () => {\n    return (\n      <FixedSideContainer side=\"top\" className=\"App-top-bar\">\n        {renderWelcomeScreen && <WelcomeScreenCenterTunnel.Out />}\n        <Section heading=\"shapes\">\n          {(heading: React.ReactNode) => (\n            <Stack.Col gap={4} align=\"center\">\n              <Stack.Row gap={1} className=\"App-toolbar-container\">\n                <Island padding={1} className=\"App-toolbar App-toolbar--mobile\">\n                  {heading}\n                  <Stack.Row gap={1}>\n                    <ShapesSwitcher\n                      appState={appState}\n                      activeTool={appState.activeTool}\n                      UIOptions={UIOptions}\n                      app={app}\n                    />\n                  </Stack.Row>\n                </Island>\n                {renderTopRightUI && renderTopRightUI(true, appState)}\n                <div className=\"mobile-misc-tools-container\">\n                  {!appState.viewModeEnabled &&\n                    appState.openDialog?.name !== \"elementLinkSelector\" && (\n                      <DefaultSidebarTriggerTunnel.Out />\n                    )}\n                  <PenModeButton\n                    checked={appState.penMode}\n                    onChange={() => onPenModeToggle(null)}\n                    title={t(\"toolBar.penMode\")}\n                    isMobile\n                    penDetected={appState.penDetected}\n                  />\n                  <LockButton\n                    checked={appState.activeTool.locked}\n                    onChange={onLockToggle}\n                    title={t(\"toolBar.lock\")}\n                    isMobile\n                  />\n                  <HandButton\n                    checked={isHandToolActive(appState)}\n                    onChange={() => onHandToolToggle()}\n                    title={t(\"toolBar.hand\")}\n                    isMobile\n                  />\n                </div>\n              </Stack.Row>\n            </Stack.Col>\n          )}\n        </Section>\n        <HintViewer\n          appState={appState}\n          isMobile={true}\n          device={device}\n          app={app}\n        />\n      </FixedSideContainer>\n    );\n  };\n\n  const renderAppToolbar = () => {\n    if (\n      appState.viewModeEnabled ||\n      appState.openDialog?.name === \"elementLinkSelector\"\n    ) {\n      return (\n        <div className=\"App-toolbar-content\">\n          <MainMenuTunnel.Out />\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"App-toolbar-content\">\n        <MainMenuTunnel.Out />\n        {actionManager.renderAction(\"toggleEditMenu\")}\n        {actionManager.renderAction(\n          appState.multiElement ? \"finalize\" : \"duplicateSelection\",\n        )}\n        {actionManager.renderAction(\"deleteSelectedElements\")}\n        <div>\n          {actionManager.renderAction(\"undo\")}\n          {actionManager.renderAction(\"redo\")}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <>\n      {renderSidebars()}\n      {!appState.viewModeEnabled &&\n        appState.openDialog?.name !== \"elementLinkSelector\" &&\n        renderToolbar()}\n      <div\n        className=\"App-bottom-bar\"\n        style={{\n          marginBottom: SCROLLBAR_WIDTH + SCROLLBAR_MARGIN * 2,\n          marginLeft: SCROLLBAR_WIDTH + SCROLLBAR_MARGIN * 2,\n          marginRight: SCROLLBAR_WIDTH + SCROLLBAR_MARGIN * 2,\n        }}\n      >\n        <Island padding={0}>\n          {appState.openMenu === \"shape\" &&\n          !appState.viewModeEnabled &&\n          appState.openDialog?.name !== \"elementLinkSelector\" &&\n          showSelectedShapeActions(appState, elements) ? (\n            <Section className=\"App-mobile-menu\" heading=\"selectedShapeActions\">\n              <SelectedShapeActions\n                appState={appState}\n                elementsMap={app.scene.getNonDeletedElementsMap()}\n                renderAction={actionManager.renderAction}\n                app={app}\n              />\n            </Section>\n          ) : null}\n          <footer className=\"App-toolbar\">\n            {renderAppToolbar()}\n            {appState.scrolledOutside &&\n              !appState.openMenu &&\n              !appState.openSidebar && (\n                <button\n                  type=\"button\"\n                  className=\"scroll-back-to-content\"\n                  onClick={() => {\n                    setAppState((appState) => ({\n                      ...calculateScrollCenter(elements, appState),\n                    }));\n                  }}\n                >\n                  {t(\"buttons.scrollBackToContent\")}\n                </button>\n              )}\n          </footer>\n        </Island>\n      </div>\n    </>\n  );\n};\n", "import oc from \"open-color\";\nimport React, { useLayoutEffect, useRef, useState } from \"react\";\nimport { trackEvent } from \"../analytics\";\nimport type { ChartElements, Spreadsheet } from \"../charts\";\nimport { renderSpreadsheet } from \"../charts\";\nimport type { ChartType } from \"../element/types\";\nimport { t } from \"../i18n\";\nimport { exportToSvg } from \"../scene/export\";\nimport type { UIAppState } from \"../types\";\nimport { useApp } from \"./App\";\nimport { Dialog } from \"./Dialog\";\n\nimport \"./PasteChartDialog.scss\";\n\ntype OnInsertChart = (chartType: ChartType, elements: ChartElements) => void;\n\nconst ChartPreviewBtn = (props: {\n  spreadsheet: Spreadsheet | null;\n  chartType: ChartType;\n  selected: boolean;\n  onClick: OnInsertChart;\n}) => {\n  const previewRef = useRef<HTMLDivElement | null>(null);\n  const [chartElements, setChartElements] = useState<ChartElements | null>(\n    null,\n  );\n\n  useLayoutEffect(() => {\n    if (!props.spreadsheet) {\n      return;\n    }\n\n    const elements = renderSpreadsheet(\n      props.chartType,\n      props.spreadsheet,\n      0,\n      0,\n    );\n    setChartElements(elements);\n    let svg: SVGSVGElement;\n    const previewNode = previewRef.current!;\n\n    (async () => {\n      svg = await exportToSvg(\n        elements,\n        {\n          exportBackground: false,\n          viewBackgroundColor: oc.white,\n        },\n        null, // files\n        {\n          skipInliningFonts: true,\n        },\n      );\n      svg.querySelector(\".style-fonts\")?.remove();\n      previewNode.replaceChildren();\n      previewNode.appendChild(svg);\n\n      if (props.selected) {\n        (previewNode.parentNode as HTMLDivElement).focus();\n      }\n    })();\n\n    return () => {\n      previewNode.replaceChildren();\n    };\n  }, [props.spreadsheet, props.chartType, props.selected]);\n\n  return (\n    <button\n      type=\"button\"\n      className=\"ChartPreview\"\n      onClick={() => {\n        if (chartElements) {\n          props.onClick(props.chartType, chartElements);\n        }\n      }}\n    >\n      <div ref={previewRef} />\n    </button>\n  );\n};\n\nexport const PasteChartDialog = ({\n  setAppState,\n  appState,\n  onClose,\n}: {\n  appState: UIAppState;\n  onClose: () => void;\n  setAppState: React.Component<any, UIAppState>[\"setState\"];\n}) => {\n  const { onInsertElements } = useApp();\n  const handleClose = React.useCallback(() => {\n    if (onClose) {\n      onClose();\n    }\n  }, [onClose]);\n\n  const handleChartClick = (chartType: ChartType, elements: ChartElements) => {\n    onInsertElements(elements);\n    trackEvent(\"paste\", \"chart\", chartType);\n    setAppState({\n      currentChartType: chartType,\n      pasteDialog: {\n        shown: false,\n        data: null,\n      },\n    });\n  };\n\n  return (\n    <Dialog\n      size=\"small\"\n      onCloseRequest={handleClose}\n      title={t(\"labels.pasteCharts\")}\n      className={\"PasteChartDialog\"}\n      autofocus={false}\n    >\n      <div className={\"container\"}>\n        <ChartPreviewBtn\n          chartType=\"bar\"\n          spreadsheet={appState.pasteDialog.data}\n          selected={appState.currentChartType === \"bar\"}\n          onClick={handleChartClick}\n        />\n        <ChartPreviewBtn\n          chartType=\"line\"\n          spreadsheet={appState.pasteDialog.data}\n          selected={appState.currentChartType === \"line\"}\n          onClick={handleChartClick}\n        />\n      </div>\n    </Dialog>\n  );\n};\n", "import type { JSX } from \"react\";\nimport React from \"react\";\nimport { t } from \"../i18n\";\nimport { KEYS } from \"../keys\";\nimport { Dialog } from \"./Dialog\";\nimport { getShortcutKey } from \"../utils\";\nimport \"./HelpDialog.scss\";\nimport { ExternalLinkIcon, GithubIcon, youtubeIcon } from \"./icons\";\nimport { probablySupportsClipboardBlob } from \"../clipboard\";\nimport { isDarwin, isFirefox, isWindows } from \"../constants\";\nimport { getShortcutFromShortcutName } from \"../actions/shortcuts\";\n\nconst Header = () => (\n  <div className=\"HelpDialog__header\">\n    <a\n      className=\"HelpDialog__btn\"\n      href=\"https://docs.excalidraw.com\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <div className=\"HelpDialog__link-icon\">{ExternalLinkIcon}</div>\n      {t(\"helpDialog.documentation\")}\n    </a>\n    <a\n      className=\"HelpDialog__btn\"\n      href=\"https://plus.excalidraw.com/blog\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <div className=\"HelpDialog__link-icon\">{ExternalLinkIcon}</div>\n      {t(\"helpDialog.blog\")}\n    </a>\n    <a\n      className=\"HelpDialog__btn\"\n      href=\"https://github.com/excalidraw/excalidraw/issues\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <div className=\"HelpDialog__link-icon\">{GithubIcon}</div>\n      {t(\"helpDialog.github\")}\n    </a>\n    <a\n      className=\"HelpDialog__btn\"\n      href=\"https://youtube.com/@excalidraw\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <div className=\"HelpDialog__link-icon\">{youtubeIcon}</div>\n      YouTube\n    </a>\n  </div>\n);\n\nconst Section = (props: { title: string; children: React.ReactNode }) => (\n  <>\n    <h3>{props.title}</h3>\n    <div className=\"HelpDialog__islands-container\">{props.children}</div>\n  </>\n);\n\nconst ShortcutIsland = (props: {\n  caption: string;\n  children: React.ReactNode;\n  className?: string;\n}) => (\n  <div className={`HelpDialog__island ${props.className}`}>\n    <h4 className=\"HelpDialog__island-title\">{props.caption}</h4>\n    <div className=\"HelpDialog__island-content\">{props.children}</div>\n  </div>\n);\n\nfunction* intersperse(as: JSX.Element[][], delim: string | null) {\n  let first = true;\n  for (const x of as) {\n    if (!first) {\n      yield delim;\n    }\n    first = false;\n    yield x;\n  }\n}\n\nconst upperCaseSingleChars = (str: string) => {\n  return str.replace(/\\b[a-z]\\b/, (c) => c.toUpperCase());\n};\n\nconst Shortcut = ({\n  label,\n  shortcuts,\n  isOr = true,\n}: {\n  label: string;\n  shortcuts: string[];\n  isOr?: boolean;\n}) => {\n  const splitShortcutKeys = shortcuts.map((shortcut) => {\n    const keys = shortcut.endsWith(\"++\")\n      ? [...shortcut.slice(0, -2).split(\"+\"), \"+\"]\n      : shortcut.split(\"+\");\n\n    return keys.map((key) => (\n      <ShortcutKey key={key}>{upperCaseSingleChars(key)}</ShortcutKey>\n    ));\n  });\n\n  return (\n    <div className=\"HelpDialog__shortcut\">\n      <div>{label}</div>\n      <div className=\"HelpDialog__key-container\">\n        {[...intersperse(splitShortcutKeys, isOr ? t(\"helpDialog.or\") : null)]}\n      </div>\n    </div>\n  );\n};\n\nconst ShortcutKey = (props: { children: React.ReactNode }) => (\n  <kbd className=\"HelpDialog__key\" {...props} />\n);\n\nexport const HelpDialog = ({ onClose }: { onClose?: () => void }) => {\n  const handleClose = React.useCallback(() => {\n    if (onClose) {\n      onClose();\n    }\n  }, [onClose]);\n\n  return (\n    <>\n      <Dialog\n        onCloseRequest={handleClose}\n        title={t(\"helpDialog.title\")}\n        className={\"HelpDialog\"}\n      >\n        <Header />\n        <Section title={t(\"helpDialog.shortcuts\")}>\n          <ShortcutIsland\n            className=\"HelpDialog__island--tools\"\n            caption={t(\"helpDialog.tools\")}\n          >\n            <Shortcut label={t(\"toolBar.hand\")} shortcuts={[KEYS.H]} />\n            <Shortcut\n              label={t(\"toolBar.selection\")}\n              shortcuts={[KEYS.V, KEYS[\"1\"]]}\n            />\n            <Shortcut\n              label={t(\"toolBar.rectangle\")}\n              shortcuts={[KEYS.R, KEYS[\"2\"]]}\n            />\n            <Shortcut\n              label={t(\"toolBar.diamond\")}\n              shortcuts={[KEYS.D, KEYS[\"3\"]]}\n            />\n            <Shortcut\n              label={t(\"toolBar.ellipse\")}\n              shortcuts={[KEYS.O, KEYS[\"4\"]]}\n            />\n            <Shortcut\n              label={t(\"toolBar.arrow\")}\n              shortcuts={[KEYS.A, KEYS[\"5\"]]}\n            />\n            <Shortcut\n              label={t(\"toolBar.line\")}\n              shortcuts={[KEYS.L, KEYS[\"6\"]]}\n            />\n            <Shortcut\n              label={t(\"toolBar.freedraw\")}\n              shortcuts={[KEYS.P, KEYS[\"7\"]]}\n            />\n            <Shortcut\n              label={t(\"toolBar.text\")}\n              shortcuts={[KEYS.T, KEYS[\"8\"]]}\n            />\n            <Shortcut label={t(\"toolBar.image\")} shortcuts={[KEYS[\"9\"]]} />\n            <Shortcut\n              label={t(\"toolBar.eraser\")}\n              shortcuts={[KEYS.E, KEYS[\"0\"]]}\n            />\n            <Shortcut label={t(\"toolBar.frame\")} shortcuts={[KEYS.F]} />\n            <Shortcut label={t(\"toolBar.laser\")} shortcuts={[KEYS.K]} />\n            <Shortcut\n              label={t(\"labels.eyeDropper\")}\n              shortcuts={[KEYS.I, \"Shift+S\", \"Shift+G\"]}\n            />\n            <Shortcut\n              label={t(\"helpDialog.editLineArrowPoints\")}\n              shortcuts={[getShortcutKey(\"CtrlOrCmd+Enter\")]}\n            />\n            <Shortcut\n              label={t(\"helpDialog.editText\")}\n              shortcuts={[getShortcutKey(\"Enter\")]}\n            />\n            <Shortcut\n              label={t(\"helpDialog.textNewLine\")}\n              shortcuts={[\n                getShortcutKey(\"Enter\"),\n                getShortcutKey(\"Shift+Enter\"),\n              ]}\n            />\n            <Shortcut\n              label={t(\"helpDialog.textFinish\")}\n              shortcuts={[\n                getShortcutKey(\"Esc\"),\n                getShortcutKey(\"CtrlOrCmd+Enter\"),\n              ]}\n            />\n            <Shortcut\n              label={t(\"helpDialog.curvedArrow\")}\n              shortcuts={[\n                \"A\",\n                t(\"helpDialog.click\"),\n                t(\"helpDialog.click\"),\n                t(\"helpDialog.click\"),\n              ]}\n              isOr={false}\n            />\n            <Shortcut\n              label={t(\"helpDialog.curvedLine\")}\n              shortcuts={[\n                \"L\",\n                t(\"helpDialog.click\"),\n                t(\"helpDialog.click\"),\n                t(\"helpDialog.click\"),\n              ]}\n              isOr={false}\n            />\n            <Shortcut\n              label={t(\"helpDialog.cropStart\")}\n              shortcuts={[t(\"helpDialog.doubleClick\"), getShortcutKey(\"Enter\")]}\n              isOr={true}\n            />\n            <Shortcut\n              label={t(\"helpDialog.cropFinish\")}\n              shortcuts={[getShortcutKey(\"Enter\"), getShortcutKey(\"Escape\")]}\n              isOr={true}\n            />\n            <Shortcut label={t(\"toolBar.lock\")} shortcuts={[KEYS.Q]} />\n            <Shortcut\n              label={t(\"helpDialog.preventBinding\")}\n              shortcuts={[getShortcutKey(\"CtrlOrCmd\")]}\n            />\n            <Shortcut\n              label={t(\"toolBar.link\")}\n              shortcuts={[getShortcutKey(\"CtrlOrCmd+K\")]}\n            />\n          </ShortcutIsland>\n          <ShortcutIsland\n            className=\"HelpDialog__island--view\"\n            caption={t(\"helpDialog.view\")}\n          >\n            <Shortcut\n              label={t(\"buttons.zoomIn\")}\n              shortcuts={[getShortcutKey(\"CtrlOrCmd++\")]}\n            />\n            <Shortcut\n              label={t(\"buttons.zoomOut\")}\n              shortcuts={[getShortcutKey(\"CtrlOrCmd+-\")]}\n            />\n            <Shortcut\n              label={t(\"buttons.resetZoom\")}\n              shortcuts={[getShortcutKey(\"CtrlOrCmd+0\")]}\n            />\n            <Shortcut\n              label={t(\"helpDialog.zoomToFit\")}\n              shortcuts={[\"Shift+1\"]}\n            />\n            <Shortcut\n              label={t(\"helpDialog.zoomToSelection\")}\n              shortcuts={[\"Shift+2\"]}\n            />\n            <Shortcut\n              label={t(\"helpDialog.movePageUpDown\")}\n              shortcuts={[\"PgUp/PgDn\"]}\n            />\n            <Shortcut\n              label={t(\"helpDialog.movePageLeftRight\")}\n              shortcuts={[\"Shift+PgUp/PgDn\"]}\n            />\n            <Shortcut\n              label={t(\"buttons.zenMode\")}\n              shortcuts={[getShortcutKey(\"Alt+Z\")]}\n            />\n            <Shortcut\n              label={t(\"buttons.objectsSnapMode\")}\n              shortcuts={[getShortcutKey(\"Alt+S\")]}\n            />\n            <Shortcut\n              label={t(\"labels.toggleGrid\")}\n              shortcuts={[getShortcutKey(\"CtrlOrCmd+'\")]}\n            />\n            <Shortcut\n              label={t(\"labels.viewMode\")}\n              shortcuts={[getShortcutKey(\"Alt+R\")]}\n            />\n            <Shortcut\n              label={t(\"labels.toggleTheme\")}\n              shortcuts={[getShortcutKey(\"Alt+Shift+D\")]}\n            />\n            <Shortcut\n              label={t(\"stats.fullTitle\")}\n              shortcuts={[getShortcutKey(\"Alt+/\")]}\n            />\n            <Shortcut\n              label={t(\"search.title\")}\n              shortcuts={[getShortcutFromShortcutName(\"searchMenu\")]}\n            />\n            <Shortcut\n              label={t(\"commandPalette.title\")}\n              shortcuts={\n                isFirefox\n                  ? [getShortcutFromShortcutName(\"commandPalette\")]\n                  : [\n                      getShortcutFromShortcutName(\"commandPalette\"),\n                      getShortcutFromShortcutName(\"commandPalette\", 1),\n                    ]\n              }\n            />\n          </ShortcutIsland>\n          <ShortcutIsland\n            className=\"HelpDialog__island--editor\"\n            caption={t(\"helpDialog.editor\")}\n          >\n            <Shortcut\n              label={t(\"helpDialog.createFlowchart\")}\n              shortcuts={[getShortcutKey(`CtrlOrCmd+Arrow Key`)]}\n              isOr={true}\n            />\n            <Shortcut\n              label={t(\"helpDialog.navigateFlowchart\")}\n              shortcuts={[getShortcutKey(`Alt+Arrow Key`)]}\n              isOr={true}\n            />\n            <Shortcut\n              label={t(\"labels.moveCanvas\")}\n              shortcuts={[\n                getShortcutKey(`Space+${t(\"helpDialog.drag\")}`),\n                getShortcutKey(`Wheel+${t(\"helpDialog.drag\")}`),\n              ]}\n              isOr={true}\n            />\n            <Shortcut\n              label={t(\"buttons.clearReset\")}\n              shortcuts={[getShortcutKey(\"CtrlOrCmd+Delete\")]}\n            />\n            <Shortcut\n              label={t(\"labels.delete\")}\n              shortcuts={[getShortcutKey(\"Delete\")]}\n            />\n            <Shortcut\n              label={t(\"labels.cut\")}\n              shortcuts={[getShortcutKey(\"CtrlOrCmd+X\")]}\n            />\n            <Shortcut\n              label={t(\"labels.copy\")}\n              shortcuts={[getShortcutKey(\"CtrlOrCmd+C\")]}\n            />\n            <Shortcut\n              label={t(\"labels.paste\")}\n              shortcuts={[getShortcutKey(\"CtrlOrCmd+V\")]}\n            />\n            <Shortcut\n              label={t(\"labels.pasteAsPlaintext\")}\n              shortcuts={[getShortcutKey(\"CtrlOrCmd+Shift+V\")]}\n            />\n            <Shortcut\n              label={t(\"labels.selectAll\")}\n              shortcuts={[getShortcutKey(\"CtrlOrCmd+A\")]}\n            />\n            <Shortcut\n              label={t(\"labels.multiSelect\")}\n              shortcuts={[getShortcutKey(`Shift+${t(\"helpDialog.click\")}`)]}\n            />\n            <Shortcut\n              label={t(\"helpDialog.deepSelect\")}\n              shortcuts={[getShortcutKey(`CtrlOrCmd+${t(\"helpDialog.click\")}`)]}\n            />\n            <Shortcut\n              label={t(\"helpDialog.deepBoxSelect\")}\n              shortcuts={[getShortcutKey(`CtrlOrCmd+${t(\"helpDialog.drag\")}`)]}\n            />\n            {/* firefox supports clipboard API under a flag, so we'll\n                show users what they can do in the error message */}\n            {(probablySupportsClipboardBlob || isFirefox) && (\n              <Shortcut\n                label={t(\"labels.copyAsPng\")}\n                shortcuts={[getShortcutKey(\"Shift+Alt+C\")]}\n              />\n            )}\n            <Shortcut\n              label={t(\"labels.copyStyles\")}\n              shortcuts={[getShortcutKey(\"CtrlOrCmd+Alt+C\")]}\n            />\n            <Shortcut\n              label={t(\"labels.pasteStyles\")}\n              shortcuts={[getShortcutKey(\"CtrlOrCmd+Alt+V\")]}\n            />\n            <Shortcut\n              label={t(\"labels.sendToBack\")}\n              shortcuts={[\n                isDarwin\n                  ? getShortcutKey(\"CtrlOrCmd+Alt+[\")\n                  : getShortcutKey(\"CtrlOrCmd+Shift+[\"),\n              ]}\n            />\n            <Shortcut\n              label={t(\"labels.bringToFront\")}\n              shortcuts={[\n                isDarwin\n                  ? getShortcutKey(\"CtrlOrCmd+Alt+]\")\n                  : getShortcutKey(\"CtrlOrCmd+Shift+]\"),\n              ]}\n            />\n            <Shortcut\n              label={t(\"labels.sendBackward\")}\n              shortcuts={[getShortcutKey(\"CtrlOrCmd+[\")]}\n            />\n            <Shortcut\n              label={t(\"labels.bringForward\")}\n              shortcuts={[getShortcutKey(\"CtrlOrCmd+]\")]}\n            />\n            <Shortcut\n              label={t(\"labels.alignTop\")}\n              shortcuts={[getShortcutKey(\"CtrlOrCmd+Shift+Up\")]}\n            />\n            <Shortcut\n              label={t(\"labels.alignBottom\")}\n              shortcuts={[getShortcutKey(\"CtrlOrCmd+Shift+Down\")]}\n            />\n            <Shortcut\n              label={t(\"labels.alignLeft\")}\n              shortcuts={[getShortcutKey(\"CtrlOrCmd+Shift+Left\")]}\n            />\n            <Shortcut\n              label={t(\"labels.alignRight\")}\n              shortcuts={[getShortcutKey(\"CtrlOrCmd+Shift+Right\")]}\n            />\n            <Shortcut\n              label={t(\"labels.duplicateSelection\")}\n              shortcuts={[\n                getShortcutKey(\"CtrlOrCmd+D\"),\n                getShortcutKey(`Alt+${t(\"helpDialog.drag\")}`),\n              ]}\n            />\n            <Shortcut\n              label={t(\"helpDialog.toggleElementLock\")}\n              shortcuts={[getShortcutKey(\"CtrlOrCmd+Shift+L\")]}\n            />\n            <Shortcut\n              label={t(\"buttons.undo\")}\n              shortcuts={[getShortcutKey(\"CtrlOrCmd+Z\")]}\n            />\n            <Shortcut\n              label={t(\"buttons.redo\")}\n              shortcuts={\n                isWindows\n                  ? [\n                      getShortcutKey(\"CtrlOrCmd+Y\"),\n                      getShortcutKey(\"CtrlOrCmd+Shift+Z\"),\n                    ]\n                  : [getShortcutKey(\"CtrlOrCmd+Shift+Z\")]\n              }\n            />\n            <Shortcut\n              label={t(\"labels.group\")}\n              shortcuts={[getShortcutKey(\"CtrlOrCmd+G\")]}\n            />\n            <Shortcut\n              label={t(\"labels.ungroup\")}\n              shortcuts={[getShortcutKey(\"CtrlOrCmd+Shift+G\")]}\n            />\n            <Shortcut\n              label={t(\"labels.flipHorizontal\")}\n              shortcuts={[getShortcutKey(\"Shift+H\")]}\n            />\n            <Shortcut\n              label={t(\"labels.flipVertical\")}\n              shortcuts={[getShortcutKey(\"Shift+V\")]}\n            />\n            <Shortcut\n              label={t(\"labels.showStroke\")}\n              shortcuts={[getShortcutKey(\"S\")]}\n            />\n            <Shortcut\n              label={t(\"labels.showBackground\")}\n              shortcuts={[getShortcutKey(\"G\")]}\n            />\n            <Shortcut\n              label={t(\"labels.showFonts\")}\n              shortcuts={[getShortcutKey(\"Shift+F\")]}\n            />\n            <Shortcut\n              label={t(\"labels.decreaseFontSize\")}\n              shortcuts={[getShortcutKey(\"CtrlOrCmd+Shift+<\")]}\n            />\n            <Shortcut\n              label={t(\"labels.increaseFontSize\")}\n              shortcuts={[getShortcutKey(\"CtrlOrCmd+Shift+>\")]}\n            />\n          </ShortcutIsland>\n        </Section>\n      </Dialog>\n    </>\n  );\n};\n", "import \"./UserList.scss\";\n\nimport React, { useLayoutEffect } from \"react\";\nimport clsx from \"clsx\";\nimport type { Collaborator, SocketId } from \"../types\";\nimport { Tooltip } from \"./Tooltip\";\nimport { useExcalidrawActionManager } from \"./App\";\nimport type { ActionManager } from \"../actions/manager\";\n\nimport * as Popover from \"@radix-ui/react-popover\";\nimport { Island } from \"./Island\";\nimport { QuickSearch } from \"./QuickSearch\";\nimport { t } from \"../i18n\";\nimport { isShallowEqual } from \"../utils\";\nimport { supportsResizeObserver } from \"../constants\";\nimport type { MarkRequired } from \"../utility-types\";\nimport { ScrollableList } from \"./ScrollableList\";\n\nexport type GoToCollaboratorComponentProps = {\n  socketId: SocketId;\n  collaborator: Collaborator;\n  withName: boolean;\n  isBeingFollowed: boolean;\n};\n\n/** collaborator user id or socket id (fallback) */\ntype ClientId = string & { _brand: \"UserId\" };\n\nconst DEFAULT_MAX_AVATARS = 4;\nconst SHOW_COLLABORATORS_FILTER_AT = 8;\n\nconst ConditionalTooltipWrapper = ({\n  shouldWrap,\n  children,\n  username,\n}: {\n  shouldWrap: boolean;\n  children: React.ReactNode;\n  username?: string | null;\n}) =>\n  shouldWrap ? (\n    <Tooltip label={username || \"Unknown user\"}>{children}</Tooltip>\n  ) : (\n    <>{children}</>\n  );\n\nconst renderCollaborator = ({\n  actionManager,\n  collaborator,\n  socketId,\n  withName = false,\n  shouldWrapWithTooltip = false,\n  isBeingFollowed,\n}: {\n  actionManager: ActionManager;\n  collaborator: Collaborator;\n  socketId: SocketId;\n  withName?: boolean;\n  shouldWrapWithTooltip?: boolean;\n  isBeingFollowed: boolean;\n}) => {\n  const data: GoToCollaboratorComponentProps = {\n    socketId,\n    collaborator,\n    withName,\n    isBeingFollowed,\n  };\n  const avatarJSX = actionManager.renderAction(\"goToCollaborator\", data);\n\n  return (\n    <ConditionalTooltipWrapper\n      key={socketId}\n      username={collaborator.username}\n      shouldWrap={shouldWrapWithTooltip}\n    >\n      {avatarJSX}\n    </ConditionalTooltipWrapper>\n  );\n};\n\ntype UserListUserObject = Pick<\n  Collaborator,\n  | \"avatarUrl\"\n  | \"id\"\n  | \"socketId\"\n  | \"username\"\n  | \"isInCall\"\n  | \"isSpeaking\"\n  | \"isMuted\"\n>;\n\ntype UserListProps = {\n  className?: string;\n  mobile?: boolean;\n  collaborators: Map<SocketId, UserListUserObject>;\n  userToFollow: SocketId | null;\n};\n\nconst collaboratorComparatorKeys = [\n  \"avatarUrl\",\n  \"id\",\n  \"socketId\",\n  \"username\",\n  \"isInCall\",\n  \"isSpeaking\",\n  \"isMuted\",\n] as const;\n\nexport const UserList = React.memo(\n  ({ className, mobile, collaborators, userToFollow }: UserListProps) => {\n    const actionManager = useExcalidrawActionManager();\n\n    const uniqueCollaboratorsMap = new Map<\n      ClientId,\n      MarkRequired<Collaborator, \"socketId\">\n    >();\n\n    collaborators.forEach((collaborator, socketId) => {\n      const userId = (collaborator.id || socketId) as ClientId;\n      uniqueCollaboratorsMap.set(\n        // filter on user id, else fall back on unique socketId\n        userId,\n        { ...collaborator, socketId },\n      );\n    });\n\n    const uniqueCollaboratorsArray = Array.from(\n      uniqueCollaboratorsMap.values(),\n    ).filter((collaborator) => collaborator.username?.trim());\n\n    const [searchTerm, setSearchTerm] = React.useState(\"\");\n    const filteredCollaborators = uniqueCollaboratorsArray.filter(\n      (collaborator) =>\n        collaborator.username?.toLowerCase().includes(searchTerm),\n    );\n\n    const userListWrapper = React.useRef<HTMLDivElement | null>(null);\n\n    useLayoutEffect(() => {\n      if (userListWrapper.current) {\n        const updateMaxAvatars = (width: number) => {\n          const maxAvatars = Math.max(1, Math.min(8, Math.floor(width / 38)));\n          setMaxAvatars(maxAvatars);\n        };\n\n        updateMaxAvatars(userListWrapper.current.clientWidth);\n\n        if (!supportsResizeObserver) {\n          return;\n        }\n\n        const resizeObserver = new ResizeObserver((entries) => {\n          for (const entry of entries) {\n            const { width } = entry.contentRect;\n            updateMaxAvatars(width);\n          }\n        });\n\n        resizeObserver.observe(userListWrapper.current);\n\n        return () => {\n          resizeObserver.disconnect();\n        };\n      }\n    }, []);\n\n    const [maxAvatars, setMaxAvatars] = React.useState(DEFAULT_MAX_AVATARS);\n\n    const firstNCollaborators = uniqueCollaboratorsArray.slice(\n      0,\n      maxAvatars - 1,\n    );\n\n    const firstNAvatarsJSX = firstNCollaborators.map((collaborator) =>\n      renderCollaborator({\n        actionManager,\n        collaborator,\n        socketId: collaborator.socketId,\n        shouldWrapWithTooltip: true,\n        isBeingFollowed: collaborator.socketId === userToFollow,\n      }),\n    );\n\n    return mobile ? (\n      <div className={clsx(\"UserList UserList_mobile\", className)}>\n        {uniqueCollaboratorsArray.map((collaborator) =>\n          renderCollaborator({\n            actionManager,\n            collaborator,\n            socketId: collaborator.socketId,\n            shouldWrapWithTooltip: true,\n            isBeingFollowed: collaborator.socketId === userToFollow,\n          }),\n        )}\n      </div>\n    ) : (\n      <div className=\"UserList__wrapper\" ref={userListWrapper}>\n        <div\n          className={clsx(\"UserList\", className)}\n          style={{ [`--max-avatars` as any]: maxAvatars }}\n        >\n          {firstNAvatarsJSX}\n\n          {uniqueCollaboratorsArray.length > maxAvatars - 1 && (\n            <Popover.Root>\n              <Popover.Trigger className=\"UserList__more\">\n                +{uniqueCollaboratorsArray.length - maxAvatars + 1}\n              </Popover.Trigger>\n              <Popover.Content\n                style={{\n                  zIndex: 2,\n                  width: \"15rem\",\n                  textAlign: \"left\",\n                }}\n                align=\"end\"\n                sideOffset={10}\n              >\n                <Island padding={2}>\n                  {uniqueCollaboratorsArray.length >=\n                    SHOW_COLLABORATORS_FILTER_AT && (\n                    <QuickSearch\n                      placeholder={t(\"quickSearch.placeholder\")}\n                      onChange={setSearchTerm}\n                    />\n                  )}\n                  <ScrollableList\n                    className={\"dropdown-menu UserList__collaborators\"}\n                    placeholder={t(\"userList.empty\")}\n                  >\n                    {/* The list checks for `Children.count()`, hence defensively returning empty list */}\n                    {filteredCollaborators.length > 0\n                      ? [\n                          <div className=\"hint\">{t(\"userList.hint.text\")}</div>,\n                          filteredCollaborators.map((collaborator) =>\n                            renderCollaborator({\n                              actionManager,\n                              collaborator,\n                              socketId: collaborator.socketId,\n                              withName: true,\n                              isBeingFollowed:\n                                collaborator.socketId === userToFollow,\n                            }),\n                          ),\n                        ]\n                      : []}\n                  </ScrollableList>\n                  <Popover.Arrow\n                    width={20}\n                    height={10}\n                    style={{\n                      fill: \"var(--popup-bg-color)\",\n                      filter: \"drop-shadow(rgba(0, 0, 0, 0.05) 0px 3px 2px)\",\n                    }}\n                  />\n                </Island>\n              </Popover.Content>\n            </Popover.Root>\n          )}\n        </div>\n      </div>\n    );\n  },\n  (prev, next) => {\n    if (\n      prev.collaborators.size !== next.collaborators.size ||\n      prev.mobile !== next.mobile ||\n      prev.className !== next.className ||\n      prev.userToFollow !== next.userToFollow\n    ) {\n      return false;\n    }\n\n    const nextCollaboratorSocketIds = next.collaborators.keys();\n\n    for (const [socketId, collaborator] of prev.collaborators) {\n      const nextCollaborator = next.collaborators.get(socketId);\n      if (\n        !nextCollaborator ||\n        // this checks order of collaborators in the map is the same\n        // as previous render\n        socketId !== nextCollaboratorSocketIds.next().value ||\n        !isShallowEqual(\n          collaborator,\n          nextCollaborator,\n          collaboratorComparatorKeys,\n        )\n      ) {\n        return false;\n      }\n    }\n    return true;\n  },\n);\n", "import React from \"react\";\nimport type { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { t } from \"../i18n\";\n\nimport type { ExportOpts, BinaryFiles, UIAppState } from \"../types\";\nimport { Dialog } from \"./Dialog\";\nimport { exportToFileIcon, LinkIcon } from \"./icons\";\nimport { ToolButton } from \"./ToolButton\";\nimport { actionSaveFileToDisk } from \"../actions/actionExport\";\nimport { Card } from \"./Card\";\n\nimport \"./ExportDialog.scss\";\nimport { nativeFileSystemSupported } from \"../data/filesystem\";\nimport { trackEvent } from \"../analytics\";\nimport type { ActionManager } from \"../actions/manager\";\nimport { getFrame } from \"../utils\";\n\nexport type ExportCB = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  scale?: number,\n) => void;\n\nconst JSONExportModal = ({\n  elements,\n  appState,\n  setAppState,\n  files,\n  actionManager,\n  exportOpts,\n  canvas,\n  onCloseRequest,\n}: {\n  appState: UIAppState;\n  setAppState: React.Component<any, UIAppState>[\"setState\"];\n  files: BinaryFiles;\n  elements: readonly NonDeletedExcalidrawElement[];\n  actionManager: ActionManager;\n  onCloseRequest: () => void;\n  exportOpts: ExportOpts;\n  canvas: HTMLCanvasElement;\n}) => {\n  const { onExportToBackend } = exportOpts;\n  return (\n    <div className=\"ExportDialog ExportDialog--json\">\n      <div className=\"ExportDialog-cards\">\n        {exportOpts.saveFileToDisk && (\n          <Card color=\"lime\">\n            <div className=\"Card-icon\">{exportToFileIcon}</div>\n            <h2>{t(\"exportDialog.disk_title\")}</h2>\n            <div className=\"Card-details\">\n              {t(\"exportDialog.disk_details\")}\n              {!nativeFileSystemSupported &&\n                actionManager.renderAction(\"changeProjectName\")}\n            </div>\n            <ToolButton\n              className=\"Card-button\"\n              type=\"button\"\n              title={t(\"exportDialog.disk_button\")}\n              aria-label={t(\"exportDialog.disk_button\")}\n              showAriaLabel={true}\n              onClick={() => {\n                actionManager.executeAction(actionSaveFileToDisk, \"ui\");\n              }}\n            />\n          </Card>\n        )}\n        {onExportToBackend && (\n          <Card color=\"pink\">\n            <div className=\"Card-icon\">{LinkIcon}</div>\n            <h2>{t(\"exportDialog.link_title\")}</h2>\n            <div className=\"Card-details\">{t(\"exportDialog.link_details\")}</div>\n            <ToolButton\n              className=\"Card-button\"\n              type=\"button\"\n              title={t(\"exportDialog.link_button\")}\n              aria-label={t(\"exportDialog.link_button\")}\n              showAriaLabel={true}\n              onClick={async () => {\n                try {\n                  trackEvent(\"export\", \"link\", `ui (${getFrame()})`);\n                  await onExportToBackend(elements, appState, files);\n                  onCloseRequest();\n                } catch (error: any) {\n                  setAppState({ errorMessage: error.message });\n                }\n              }}\n            />\n          </Card>\n        )}\n        {exportOpts.renderCustomUI &&\n          exportOpts.renderCustomUI(elements, appState, files, canvas)}\n      </div>\n    </div>\n  );\n};\n\nexport const JSONExportDialog = ({\n  elements,\n  appState,\n  files,\n  actionManager,\n  exportOpts,\n  canvas,\n  setAppState,\n}: {\n  elements: readonly NonDeletedExcalidrawElement[];\n  appState: UIAppState;\n  files: BinaryFiles;\n  actionManager: ActionManager;\n  exportOpts: ExportOpts;\n  canvas: HTMLCanvasElement;\n  setAppState: React.Component<any, UIAppState>[\"setState\"];\n}) => {\n  const handleClose = React.useCallback(() => {\n    setAppState({ openDialog: null });\n  }, [setAppState]);\n\n  return (\n    <>\n      {appState.openDialog?.name === \"jsonExport\" && (\n        <Dialog onCloseRequest={handleClose} title={t(\"buttons.export\")}>\n          <JSONExportModal\n            elements={elements}\n            appState={appState}\n            setAppState={setAppState}\n            files={files}\n            actionManager={actionManager}\n            onCloseRequest={handleClose}\n            exportOpts={exportOpts}\n            canvas={canvas}\n          />\n        </Dialog>\n      )}\n    </>\n  );\n};\n", "import OpenColor from \"open-color\";\n\nimport \"./Card.scss\";\n\nexport const Card: React.FC<{\n  color: keyof OpenColor | \"primary\";\n  children?: React.ReactNode;\n}> = ({ children, color }) => {\n  return (\n    <div\n      className=\"Card\"\n      style={{\n        [\"--card-color\" as any]:\n          color === \"primary\" ? \"var(--color-primary)\" : OpenColor[color][7],\n        [\"--card-color-darker\" as any]:\n          color === \"primary\"\n            ? \"var(--color-primary-darker)\"\n            : OpenColor[color][8],\n        [\"--card-color-darkest\" as any]:\n          color === \"primary\"\n            ? \"var(--color-primary-darkest)\"\n            : OpenColor[color][9],\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n", "import clsx from \"clsx\";\nimport { actionShortcuts } from \"../../actions\";\nimport type { ActionManager } from \"../../actions/manager\";\nimport {\n  ExitZenModeAction,\n  FinalizeAction,\n  UndoRedoActions,\n  ZoomActions,\n} from \"../Actions\";\nimport { useDevice } from \"../App\";\nimport { useTunnels } from \"../../context/tunnels\";\nimport { HelpButton } from \"../HelpButton\";\nimport { Section } from \"../Section\";\nimport Stack from \"../Stack\";\nimport type { UIAppState } from \"../../types\";\n\nconst Footer = ({\n  appState,\n  actionManager,\n  showExitZenModeBtn,\n  renderWelcomeScreen,\n}: {\n  appState: UIAppState;\n  actionManager: ActionManager;\n  showExitZenModeBtn: boolean;\n  renderWelcomeScreen: boolean;\n}) => {\n  const { FooterCenterTunnel, WelcomeScreenHelpHintTunnel } = useTunnels();\n\n  const device = useDevice();\n  const showFinalize =\n    !appState.viewModeEnabled && appState.multiElement && device.isTouchScreen;\n\n  return (\n    <footer\n      role=\"contentinfo\"\n      className=\"layer-ui__wrapper__footer App-menu App-menu_bottom\"\n    >\n      <div\n        className={clsx(\"layer-ui__wrapper__footer-left zen-mode-transition\", {\n          \"layer-ui__wrapper__footer-left--transition-left\":\n            appState.zenModeEnabled,\n        })}\n      >\n        <Stack.Col gap={2}>\n          <Section heading=\"canvasActions\">\n            <ZoomActions\n              renderAction={actionManager.renderAction}\n              zoom={appState.zoom}\n            />\n\n            {!appState.viewModeEnabled && (\n              <UndoRedoActions\n                renderAction={actionManager.renderAction}\n                className={clsx(\"zen-mode-transition\", {\n                  \"layer-ui__wrapper__footer-left--transition-bottom\":\n                    appState.zenModeEnabled,\n                })}\n              />\n            )}\n            {showFinalize && (\n              <FinalizeAction\n                renderAction={actionManager.renderAction}\n                className={clsx(\"zen-mode-transition\", {\n                  \"layer-ui__wrapper__footer-left--transition-left\":\n                    appState.zenModeEnabled,\n                })}\n              />\n            )}\n          </Section>\n        </Stack.Col>\n      </div>\n      <FooterCenterTunnel.Out />\n      <div\n        className={clsx(\"layer-ui__wrapper__footer-right zen-mode-transition\", {\n          \"transition-right\": appState.zenModeEnabled,\n        })}\n      >\n        <div style={{ position: \"relative\" }}>\n          {renderWelcomeScreen && <WelcomeScreenHelpHintTunnel.Out />}\n          <HelpButton\n            onClick={() => actionManager.executeAction(actionShortcuts)}\n          />\n        </div>\n      </div>\n      <ExitZenModeAction\n        actionManager={actionManager}\n        showExitZenModeBtn={showExitZenModeBtn}\n      />\n    </footer>\n  );\n};\n\nexport default Footer;\nFooter.displayName = \"Footer\";\n", "import { t } from \"../i18n\";\nimport { HelpIcon } from \"./icons\";\n\ntype HelpButtonProps = {\n  name?: string;\n  id?: string;\n  onClick?(): void;\n};\n\nexport const HelpButton = (props: HelpButtonProps) => (\n  <button\n    className=\"help-icon\"\n    onClick={props.onClick}\n    type=\"button\"\n    title={`${t(\"helpDialog.title\")} \u2014 ?`}\n    aria-label={t(\"helpDialog.title\")}\n  >\n    {HelpIcon}\n  </button>\n);\n", "import React, {\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n  forwardRef,\n  useImperativeHandle,\n  useCallback,\n} from \"react\";\nimport { Island } from \"../Island\";\nimport { atom, useSetAtom } from \"../../editor-jotai\";\nimport type { SidebarProps, SidebarPropsContextValue } from \"./common\";\nimport { SidebarPropsContext } from \"./common\";\nimport { SidebarHeader } from \"./SidebarHeader\";\nimport clsx from \"clsx\";\nimport { useDevice, useExcalidrawSetAppState } from \"../App\";\nimport { updateObject } from \"../../utils\";\nimport { KEYS } from \"../../keys\";\nimport { EVENT } from \"../../constants\";\nimport { SidebarTrigger } from \"./SidebarTrigger\";\nimport { SidebarTabTriggers } from \"./SidebarTabTriggers\";\nimport { SidebarTabTrigger } from \"./SidebarTabTrigger\";\nimport { SidebarTabs } from \"./SidebarTabs\";\nimport { SidebarTab } from \"./SidebarTab\";\nimport { useUIAppState } from \"../../context/ui-appState\";\nimport { useOutsideClick } from \"../../hooks/useOutsideClick\";\n\nimport \"./Sidebar.scss\";\n\n/**\n * Flags whether the currently rendered Sidebar is docked or not, for use\n * in upstream components that need to act on this (e.g. LayerUI to shift the\n * UI). We use an atom because of potential host app sidebars (for the default\n * sidebar we could just read from appState.defaultSidebarDockedPreference).\n *\n * Since we can only render one Sidebar at a time, we can use a simple flag.\n */\nexport const isSidebarDockedAtom = atom(false);\n\nexport const SidebarInner = forwardRef(\n  (\n    {\n      name,\n      children,\n      onDock,\n      docked,\n      className,\n      ...rest\n    }: SidebarProps & Omit<React.RefAttributes<HTMLDivElement>, \"onSelect\">,\n    ref: React.ForwardedRef<HTMLDivElement>,\n  ) => {\n    if (import.meta.env.DEV && onDock && docked == null) {\n      console.warn(\n        \"Sidebar: `docked` must be set when `onDock` is supplied for the sidebar to be user-dockable. To hide this message, either pass `docked` or remove `onDock`\",\n      );\n    }\n\n    const setAppState = useExcalidrawSetAppState();\n\n    const setIsSidebarDockedAtom = useSetAtom(isSidebarDockedAtom);\n\n    useLayoutEffect(() => {\n      setIsSidebarDockedAtom(!!docked);\n      return () => {\n        setIsSidebarDockedAtom(false);\n      };\n    }, [setIsSidebarDockedAtom, docked]);\n\n    const headerPropsRef = useRef<SidebarPropsContextValue>(\n      {} as SidebarPropsContextValue,\n    );\n    headerPropsRef.current.onCloseRequest = () => {\n      setAppState({ openSidebar: null });\n    };\n    headerPropsRef.current.onDock = (isDocked) => onDock?.(isDocked);\n    // renew the ref object if the following props change since we want to\n    // rerender. We can't pass down as component props manually because\n    // the <Sidebar.Header/> can be rendered upstream.\n    headerPropsRef.current = updateObject(headerPropsRef.current, {\n      docked,\n      // explicit prop to rerender on update\n      shouldRenderDockButton: !!onDock && docked != null,\n    });\n\n    const islandRef = useRef<HTMLDivElement>(null);\n\n    useImperativeHandle(ref, () => {\n      return islandRef.current!;\n    });\n\n    const device = useDevice();\n\n    const closeLibrary = useCallback(() => {\n      const isDialogOpen = !!document.querySelector(\".Dialog\");\n\n      // Prevent closing if any dialog is open\n      if (isDialogOpen) {\n        return;\n      }\n      setAppState({ openSidebar: null });\n    }, [setAppState]);\n\n    useOutsideClick(\n      islandRef,\n      useCallback(\n        (event) => {\n          // If click on the library icon, do nothing so that LibraryButton\n          // can toggle library menu\n          if ((event.target as Element).closest(\".sidebar-trigger\")) {\n            return;\n          }\n          if (!docked || !device.editor.canFitSidebar) {\n            closeLibrary();\n          }\n        },\n        [closeLibrary, docked, device.editor.canFitSidebar],\n      ),\n    );\n\n    useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === KEYS.ESCAPE &&\n          (!docked || !device.editor.canFitSidebar)\n        ) {\n          closeLibrary();\n        }\n      };\n      document.addEventListener(EVENT.KEYDOWN, handleKeyDown);\n      return () => {\n        document.removeEventListener(EVENT.KEYDOWN, handleKeyDown);\n      };\n    }, [closeLibrary, docked, device.editor.canFitSidebar]);\n\n    return (\n      <Island\n        {...rest}\n        className={clsx(\"sidebar\", { \"sidebar--docked\": docked }, className)}\n        ref={islandRef}\n      >\n        <SidebarPropsContext.Provider value={headerPropsRef.current}>\n          {children}\n        </SidebarPropsContext.Provider>\n      </Island>\n    );\n  },\n);\nSidebarInner.displayName = \"SidebarInner\";\n\nexport const Sidebar = Object.assign(\n  forwardRef((props: SidebarProps, ref: React.ForwardedRef<HTMLDivElement>) => {\n    const appState = useUIAppState();\n\n    const { onStateChange } = props;\n\n    const refPrevOpenSidebar = useRef(appState.openSidebar);\n    useEffect(() => {\n      if (\n        // closing sidebar\n        ((!appState.openSidebar &&\n          refPrevOpenSidebar?.current?.name === props.name) ||\n          // opening current sidebar\n          (appState.openSidebar?.name === props.name &&\n            refPrevOpenSidebar?.current?.name !== props.name) ||\n          // switching tabs or switching to a different sidebar\n          refPrevOpenSidebar.current?.name === props.name) &&\n        appState.openSidebar !== refPrevOpenSidebar.current\n      ) {\n        onStateChange?.(\n          appState.openSidebar?.name !== props.name\n            ? null\n            : appState.openSidebar,\n        );\n      }\n      refPrevOpenSidebar.current = appState.openSidebar;\n    }, [appState.openSidebar, onStateChange, props.name]);\n\n    const [mounted, setMounted] = useState(false);\n    useLayoutEffect(() => {\n      setMounted(true);\n      return () => setMounted(false);\n    }, []);\n\n    // We want to render in the next tick (hence `mounted` flag) so that it's\n    // guaranteed to happen after unmount of the previous sidebar (in case the\n    // previous sidebar is mounted after the next one). This is necessary to\n    // prevent flicker of subcomponents that support fallbacks\n    // (e.g. SidebarHeader). This is because we're using flags to determine\n    // whether prefer the fallback component or not (otherwise both will render\n    // initially), and the flag won't be reset in time if the unmount order\n    // it not correct.\n    //\n    // Alternative, and more general solution would be to namespace the fallback\n    // HoC so that state is not shared between subcomponents when the wrapping\n    // component is of the same type (e.g. Sidebar -> SidebarHeader).\n    const shouldRender = mounted && appState.openSidebar?.name === props.name;\n\n    if (!shouldRender) {\n      return null;\n    }\n\n    return <SidebarInner {...props} ref={ref} key={props.name} />;\n  }),\n  {\n    Header: SidebarHeader,\n    TabTriggers: SidebarTabTriggers,\n    TabTrigger: SidebarTabTrigger,\n    Tabs: SidebarTabs,\n    Tab: SidebarTab,\n    Trigger: SidebarTrigger,\n  },\n);\nSidebar.displayName = \"Sidebar\";\n", "import type { JSX } from \"react\";\nimport React from \"react\";\nimport type { AppState, SidebarName, SidebarTabName } from \"../../types\";\n\nexport type SidebarTriggerProps = {\n  name: SidebarName;\n  tab?: SidebarTabName;\n  icon?: JSX.Element;\n  children?: React.ReactNode;\n  title?: string;\n  className?: string;\n  onToggle?: (open: boolean) => void;\n  style?: React.CSSProperties;\n};\n\nexport type SidebarProps<P = {}> = {\n  name: SidebarName;\n  children: React.ReactNode;\n  /**\n   * Called on sidebar open/close or tab change.\n   */\n  onStateChange?: (state: AppState[\"openSidebar\"]) => void;\n  /**\n   * supply alongside `docked` prop in order to make the Sidebar user-dockable\n   */\n  onDock?: (docked: boolean) => void;\n  docked?: boolean;\n  className?: string;\n  // NOTE sidebars we use internally inside the editor must have this flag set.\n  // It indicates that this sidebar should have lower precedence over host\n  // sidebars, if both are open.\n  /** @private internal */\n  __fallback?: boolean;\n} & P;\n\nexport type SidebarPropsContextValue = Pick<\n  SidebarProps,\n  \"onDock\" | \"docked\"\n> & { onCloseRequest: () => void; shouldRenderDockButton: boolean };\n\nexport const SidebarPropsContext =\n  React.createContext<SidebarPropsContextValue>({} as SidebarPropsContextValue);\n", "import clsx from \"clsx\";\nimport { useContext } from \"react\";\nimport { t } from \"../../i18n\";\nimport { useDevice } from \"../App\";\nimport { SidebarPropsContext } from \"./common\";\nimport { CloseIcon, PinIcon } from \"../icons\";\nimport { Tooltip } from \"../Tooltip\";\nimport { Button } from \"../Button\";\n\nexport const SidebarHeader = ({\n  children,\n  className,\n}: {\n  children?: React.ReactNode;\n  className?: string;\n}) => {\n  const device = useDevice();\n  const props = useContext(SidebarPropsContext);\n\n  const renderDockButton = !!(\n    device.editor.canFitSidebar && props.shouldRenderDockButton\n  );\n\n  return (\n    <div\n      className={clsx(\"sidebar__header\", className)}\n      data-testid=\"sidebar-header\"\n    >\n      {children}\n      <div className=\"sidebar__header__buttons\">\n        {renderDockButton && (\n          <Tooltip label={t(\"labels.sidebarLock\")}>\n            <Button\n              onSelect={() => props.onDock?.(!props.docked)}\n              selected={!!props.docked}\n              className=\"sidebar__dock\"\n              data-testid=\"sidebar-dock\"\n              aria-label={t(\"labels.sidebarLock\")}\n            >\n              {PinIcon}\n            </Button>\n          </Tooltip>\n        )}\n        <Button\n          data-testid=\"sidebar-close\"\n          className=\"sidebar__close\"\n          onSelect={props.onCloseRequest}\n          aria-label={t(\"buttons.close\")}\n        >\n          {CloseIcon}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nSidebarHeader.displayName = \"SidebarHeader\";\n", "import { useExcalidrawSetAppState } from \"../App\";\nimport type { SidebarTriggerProps } from \"./common\";\nimport { useUIAppState } from \"../../context/ui-appState\";\nimport clsx from \"clsx\";\n\nimport \"./SidebarTrigger.scss\";\n\nexport const SidebarTrigger = ({\n  name,\n  tab,\n  icon,\n  title,\n  children,\n  onToggle,\n  className,\n  style,\n}: SidebarTriggerProps) => {\n  const setAppState = useExcalidrawSetAppState();\n  const appState = useUIAppState();\n\n  return (\n    <label title={title} className=\"sidebar-trigger__label-element\">\n      <input\n        className=\"ToolIcon_type_checkbox\"\n        type=\"checkbox\"\n        onChange={(event) => {\n          document\n            .querySelector(\".layer-ui__wrapper\")\n            ?.classList.remove(\"animate\");\n          const isOpen = event.target.checked;\n          setAppState({ openSidebar: isOpen ? { name, tab } : null });\n          onToggle?.(isOpen);\n        }}\n        checked={appState.openSidebar?.name === name}\n        aria-label={title}\n        aria-keyshortcuts=\"0\"\n      />\n      <div className={clsx(\"sidebar-trigger\", className)} style={style}>\n        {icon && <div>{icon}</div>}\n        {children && <div className=\"sidebar-trigger__label\">{children}</div>}\n      </div>\n    </label>\n  );\n};\nSidebarTrigger.displayName = \"SidebarTrigger\";\n", "import * as RadixTabs from \"@radix-ui/react-tabs\";\n\nexport const SidebarTabTriggers = ({\n  children,\n  ...rest\n}: { children: React.ReactNode } & Omit<\n  React.RefAttributes<HTMLDivElement>,\n  \"onSelect\"\n>) => {\n  return (\n    <RadixTabs.List className=\"sidebar-triggers\" {...rest}>\n      {children}\n    </RadixTabs.List>\n  );\n};\nSidebarTabTriggers.displayName = \"SidebarTabTriggers\";\n", "import * as RadixTabs from \"@radix-ui/react-tabs\";\nimport type { SidebarTabName } from \"../../types\";\n\nexport const SidebarTabTrigger = ({\n  children,\n  tab,\n  onSelect,\n  ...rest\n}: {\n  children: React.ReactNode;\n  tab: SidebarTabName;\n  onSelect?: React.ReactEventHandler<HTMLButtonElement> | undefined;\n} & Omit<React.HTMLAttributes<HTMLButtonElement>, \"onSelect\">) => {\n  return (\n    <RadixTabs.Trigger value={tab} asChild onSelect={onSelect}>\n      <button\n        type={\"button\"}\n        className={`excalidraw-button sidebar-tab-trigger`}\n        {...rest}\n      >\n        {children}\n      </button>\n    </RadixTabs.Trigger>\n  );\n};\nSidebarTabTrigger.displayName = \"SidebarTabTrigger\";\n", "import * as RadixTabs from \"@radix-ui/react-tabs\";\nimport { useUIAppState } from \"../../context/ui-appState\";\nimport { useExcalidrawSetAppState } from \"../App\";\n\nexport const SidebarTabs = ({\n  children,\n  ...rest\n}: {\n  children: React.ReactNode;\n} & Omit<React.RefAttributes<HTMLDivElement>, \"onSelect\">) => {\n  const appState = useUIAppState();\n  const setAppState = useExcalidrawSetAppState();\n\n  if (!appState.openSidebar) {\n    return null;\n  }\n\n  const { name } = appState.openSidebar;\n\n  return (\n    <RadixTabs.Root\n      className=\"sidebar-tabs-root\"\n      value={appState.openSidebar.tab}\n      onValueChange={(tab) =>\n        setAppState((state) => ({\n          ...state,\n          openSidebar: { ...state.openSidebar, name, tab },\n        }))\n      }\n      {...rest}\n    >\n      {children}\n    </RadixTabs.Root>\n  );\n};\nSidebarTabs.displayName = \"SidebarTabs\";\n", "import * as RadixTabs from \"@radix-ui/react-tabs\";\nimport type { SidebarTabName } from \"../../types\";\n\nexport const SidebarTab = ({\n  tab,\n  children,\n  ...rest\n}: {\n  tab: SidebarTabName;\n  children: React.ReactNode;\n} & React.HTMLAttributes<HTMLDivElement>) => {\n  return (\n    <RadixTabs.Content {...rest} value={tab} data-testid={tab}>\n      {children}\n    </RadixTabs.Content>\n  );\n};\nSidebarTab.displayName = \"SidebarTab\";\n", "import { getShortcutFromShortcutName } from \"../../actions/shortcuts\";\nimport { useI18n } from \"../../i18n\";\nimport {\n  useExcalidrawSetAppState,\n  useExcalidrawActionManager,\n  useExcalidrawElements,\n  useAppProps,\n} from \"../App\";\nimport {\n  boltIcon,\n  DeviceDesktopIcon,\n  ExportIcon,\n  ExportImageIcon,\n  HelpIcon,\n  LoadIcon,\n  MoonIcon,\n  save,\n  searchIcon,\n  SunIcon,\n  TrashIcon,\n  usersIcon,\n} from \"../icons\";\nimport { GithubIcon, DiscordIcon, XBrandIcon } from \"../icons\";\nimport DropdownMenuItem from \"../dropdownMenu/DropdownMenuItem\";\nimport DropdownMenuItemLink from \"../dropdownMenu/DropdownMenuItemLink\";\nimport {\n  actionClearCanvas,\n  actionLoadScene,\n  actionSaveToActiveFile,\n  actionShortcuts,\n  actionToggleSearchMenu,\n  actionToggleTheme,\n} from \"../../actions\";\nimport clsx from \"clsx\";\nimport { activeConfirmDialogAtom } from \"../ActiveConfirmDialog\";\nimport { useSetAtom } from \"../../editor-jotai\";\nimport { useUIAppState } from \"../../context/ui-appState\";\nimport { openConfirmModal } from \"../OverwriteConfirm/OverwriteConfirmState\";\nimport Trans from \"../Trans\";\nimport DropdownMenuItemContentRadio from \"../dropdownMenu/DropdownMenuItemContentRadio\";\nimport { THEME } from \"../../constants\";\nimport type { Theme } from \"../../element/types\";\nimport { trackEvent } from \"../../analytics\";\nimport \"./DefaultItems.scss\";\n\nexport const LoadScene = () => {\n  const { t } = useI18n();\n  const actionManager = useExcalidrawActionManager();\n  const elements = useExcalidrawElements();\n\n  if (!actionManager.isActionEnabled(actionLoadScene)) {\n    return null;\n  }\n\n  const handleSelect = async () => {\n    if (\n      !elements.length ||\n      (await openConfirmModal({\n        title: t(\"overwriteConfirm.modal.loadFromFile.title\"),\n        actionLabel: t(\"overwriteConfirm.modal.loadFromFile.button\"),\n        color: \"warning\",\n        description: (\n          <Trans\n            i18nKey=\"overwriteConfirm.modal.loadFromFile.description\"\n            bold={(text) => <strong>{text}</strong>}\n            br={() => <br />}\n          />\n        ),\n      }))\n    ) {\n      actionManager.executeAction(actionLoadScene);\n    }\n  };\n\n  return (\n    <DropdownMenuItem\n      icon={LoadIcon}\n      onSelect={handleSelect}\n      data-testid=\"load-button\"\n      shortcut={getShortcutFromShortcutName(\"loadScene\")}\n      aria-label={t(\"buttons.load\")}\n    >\n      {t(\"buttons.load\")}\n    </DropdownMenuItem>\n  );\n};\nLoadScene.displayName = \"LoadScene\";\n\nexport const SaveToActiveFile = () => {\n  const { t } = useI18n();\n  const actionManager = useExcalidrawActionManager();\n\n  if (!actionManager.isActionEnabled(actionSaveToActiveFile)) {\n    return null;\n  }\n\n  return (\n    <DropdownMenuItem\n      shortcut={getShortcutFromShortcutName(\"saveScene\")}\n      data-testid=\"save-button\"\n      onSelect={() => actionManager.executeAction(actionSaveToActiveFile)}\n      icon={save}\n      aria-label={`${t(\"buttons.save\")}`}\n    >{`${t(\"buttons.save\")}`}</DropdownMenuItem>\n  );\n};\nSaveToActiveFile.displayName = \"SaveToActiveFile\";\n\nexport const SaveAsImage = () => {\n  const setAppState = useExcalidrawSetAppState();\n  const { t } = useI18n();\n  return (\n    <DropdownMenuItem\n      icon={ExportImageIcon}\n      data-testid=\"image-export-button\"\n      onSelect={() => setAppState({ openDialog: { name: \"imageExport\" } })}\n      shortcut={getShortcutFromShortcutName(\"imageExport\")}\n      aria-label={t(\"buttons.exportImage\")}\n    >\n      {t(\"buttons.exportImage\")}\n    </DropdownMenuItem>\n  );\n};\nSaveAsImage.displayName = \"SaveAsImage\";\n\nexport const CommandPalette = (opts?: { className?: string }) => {\n  const setAppState = useExcalidrawSetAppState();\n  const { t } = useI18n();\n\n  return (\n    <DropdownMenuItem\n      icon={boltIcon}\n      data-testid=\"command-palette-button\"\n      onSelect={() => {\n        trackEvent(\"command_palette\", \"open\", \"menu\");\n        setAppState({ openDialog: { name: \"commandPalette\" } });\n      }}\n      shortcut={getShortcutFromShortcutName(\"commandPalette\")}\n      aria-label={t(\"commandPalette.title\")}\n      className={opts?.className}\n    >\n      {t(\"commandPalette.title\")}\n    </DropdownMenuItem>\n  );\n};\nCommandPalette.displayName = \"CommandPalette\";\n\nexport const SearchMenu = (opts?: { className?: string }) => {\n  const { t } = useI18n();\n  const actionManager = useExcalidrawActionManager();\n\n  return (\n    <DropdownMenuItem\n      icon={searchIcon}\n      data-testid=\"search-menu-button\"\n      onSelect={() => {\n        actionManager.executeAction(actionToggleSearchMenu);\n      }}\n      shortcut={getShortcutFromShortcutName(\"searchMenu\")}\n      aria-label={t(\"search.title\")}\n      className={opts?.className}\n    >\n      {t(\"search.title\")}\n    </DropdownMenuItem>\n  );\n};\nSearchMenu.displayName = \"SearchMenu\";\n\nexport const Help = () => {\n  const { t } = useI18n();\n\n  const actionManager = useExcalidrawActionManager();\n\n  return (\n    <DropdownMenuItem\n      data-testid=\"help-menu-item\"\n      icon={HelpIcon}\n      onSelect={() => actionManager.executeAction(actionShortcuts)}\n      shortcut=\"?\"\n      aria-label={t(\"helpDialog.title\")}\n    >\n      {t(\"helpDialog.title\")}\n    </DropdownMenuItem>\n  );\n};\nHelp.displayName = \"Help\";\n\nexport const ClearCanvas = () => {\n  const { t } = useI18n();\n\n  const setActiveConfirmDialog = useSetAtom(activeConfirmDialogAtom);\n  const actionManager = useExcalidrawActionManager();\n\n  if (!actionManager.isActionEnabled(actionClearCanvas)) {\n    return null;\n  }\n\n  return (\n    <DropdownMenuItem\n      icon={TrashIcon}\n      onSelect={() => setActiveConfirmDialog(\"clearCanvas\")}\n      data-testid=\"clear-canvas-button\"\n      aria-label={t(\"buttons.clearReset\")}\n    >\n      {t(\"buttons.clearReset\")}\n    </DropdownMenuItem>\n  );\n};\nClearCanvas.displayName = \"ClearCanvas\";\n\nexport const ToggleTheme = (\n  props:\n    | {\n        allowSystemTheme: true;\n        theme: Theme | \"system\";\n        onSelect: (theme: Theme | \"system\") => void;\n      }\n    | {\n        allowSystemTheme?: false;\n        onSelect?: (theme: Theme) => void;\n      },\n) => {\n  const { t } = useI18n();\n  const appState = useUIAppState();\n  const actionManager = useExcalidrawActionManager();\n  const shortcut = getShortcutFromShortcutName(\"toggleTheme\");\n\n  if (!actionManager.isActionEnabled(actionToggleTheme)) {\n    return null;\n  }\n\n  if (props?.allowSystemTheme) {\n    return (\n      <DropdownMenuItemContentRadio\n        name=\"theme\"\n        value={props.theme}\n        onChange={(value: Theme | \"system\") => props.onSelect(value)}\n        choices={[\n          {\n            value: THEME.LIGHT,\n            label: SunIcon,\n            ariaLabel: `${t(\"buttons.lightMode\")} - ${shortcut}`,\n          },\n          {\n            value: THEME.DARK,\n            label: MoonIcon,\n            ariaLabel: `${t(\"buttons.darkMode\")} - ${shortcut}`,\n          },\n          {\n            value: \"system\",\n            label: DeviceDesktopIcon,\n            ariaLabel: t(\"buttons.systemMode\"),\n          },\n        ]}\n      >\n        {t(\"labels.theme\")}\n      </DropdownMenuItemContentRadio>\n    );\n  }\n\n  return (\n    <DropdownMenuItem\n      onSelect={(event) => {\n        // do not close the menu when changing theme\n        event.preventDefault();\n\n        if (props?.onSelect) {\n          props.onSelect(\n            appState.theme === THEME.DARK ? THEME.LIGHT : THEME.DARK,\n          );\n        } else {\n          return actionManager.executeAction(actionToggleTheme);\n        }\n      }}\n      icon={appState.theme === THEME.DARK ? SunIcon : MoonIcon}\n      data-testid=\"toggle-dark-mode\"\n      shortcut={shortcut}\n      aria-label={\n        appState.theme === THEME.DARK\n          ? t(\"buttons.lightMode\")\n          : t(\"buttons.darkMode\")\n      }\n    >\n      {appState.theme === THEME.DARK\n        ? t(\"buttons.lightMode\")\n        : t(\"buttons.darkMode\")}\n    </DropdownMenuItem>\n  );\n};\nToggleTheme.displayName = \"ToggleTheme\";\n\nexport const ChangeCanvasBackground = () => {\n  const { t } = useI18n();\n  const appState = useUIAppState();\n  const actionManager = useExcalidrawActionManager();\n  const appProps = useAppProps();\n\n  if (\n    appState.viewModeEnabled ||\n    !appProps.UIOptions.canvasActions.changeViewBackgroundColor\n  ) {\n    return null;\n  }\n  return (\n    <div style={{ marginTop: \"0.5rem\" }}>\n      <div\n        data-testid=\"canvas-background-label\"\n        style={{ fontSize: \".75rem\", marginBottom: \".5rem\" }}\n      >\n        {t(\"labels.canvasBackground\")}\n      </div>\n      <div style={{ padding: \"0 0.625rem\" }}>\n        {actionManager.renderAction(\"changeViewBackgroundColor\")}\n      </div>\n    </div>\n  );\n};\nChangeCanvasBackground.displayName = \"ChangeCanvasBackground\";\n\nexport const Export = () => {\n  const { t } = useI18n();\n  const setAppState = useExcalidrawSetAppState();\n  return (\n    <DropdownMenuItem\n      icon={ExportIcon}\n      onSelect={() => {\n        setAppState({ openDialog: { name: \"jsonExport\" } });\n      }}\n      data-testid=\"json-export-button\"\n      aria-label={t(\"buttons.export\")}\n    >\n      {t(\"buttons.export\")}\n    </DropdownMenuItem>\n  );\n};\nExport.displayName = \"Export\";\n\nexport const Socials = () => {\n  const { t } = useI18n();\n\n  return (\n    <>\n      <DropdownMenuItemLink\n        icon={GithubIcon}\n        href=\"https://github.com/excalidraw/excalidraw\"\n        aria-label=\"GitHub\"\n      >\n        GitHub\n      </DropdownMenuItemLink>\n      <DropdownMenuItemLink\n        icon={XBrandIcon}\n        href=\"https://x.com/excalidraw\"\n        aria-label=\"X\"\n      >\n        {t(\"labels.followUs\")}\n      </DropdownMenuItemLink>\n      <DropdownMenuItemLink\n        icon={DiscordIcon}\n        href=\"https://discord.gg/UexuTaE\"\n        aria-label=\"Discord\"\n      >\n        {t(\"labels.discordChat\")}\n      </DropdownMenuItemLink>\n    </>\n  );\n};\nSocials.displayName = \"Socials\";\n\nexport const LiveCollaborationTrigger = ({\n  onSelect,\n  isCollaborating,\n}: {\n  onSelect: () => void;\n  isCollaborating: boolean;\n}) => {\n  const { t } = useI18n();\n  return (\n    <DropdownMenuItem\n      data-testid=\"collab-button\"\n      icon={usersIcon}\n      className={clsx({\n        \"active-collab\": isCollaborating,\n      })}\n      onSelect={onSelect}\n    >\n      {t(\"labels.liveCollaboration\")}\n    </DropdownMenuItem>\n  );\n};\n\nLiveCollaborationTrigger.displayName = \"LiveCollaborationTrigger\";\n", "import { atom, editorJotaiStore } from \"../../editor-jotai\";\nimport type React from \"react\";\n\nexport type OverwriteConfirmState =\n  | {\n      active: true;\n      title: string;\n      description: React.ReactNode;\n      actionLabel: string;\n      color: \"danger\" | \"warning\";\n\n      onClose: () => void;\n      onConfirm: () => void;\n      onReject: () => void;\n    }\n  | { active: false };\n\nexport const overwriteConfirmStateAtom = atom<OverwriteConfirmState>({\n  active: false,\n});\n\nexport async function openConfirmModal({\n  title,\n  description,\n  actionLabel,\n  color,\n}: {\n  title: string;\n  description: React.ReactNode;\n  actionLabel: string;\n  color: \"danger\" | \"warning\";\n}) {\n  return new Promise<boolean>((resolve) => {\n    editorJotaiStore.set(overwriteConfirmStateAtom, {\n      active: true,\n      onConfirm: () => resolve(true),\n      onClose: () => resolve(false),\n      onReject: () => resolve(false),\n      title,\n      description,\n      actionLabel,\n      color,\n    });\n  });\n}\n", "import { useDevice } from \"../App\";\nimport { RadioGroup } from \"../RadioGroup\";\n\ntype Props<T> = {\n  value: T;\n  shortcut?: string;\n  choices: {\n    value: T;\n    label: React.ReactNode;\n    ariaLabel?: string;\n  }[];\n  onChange: (value: T) => void;\n  children: React.ReactNode;\n  name: string;\n};\n\nconst DropdownMenuItemContentRadio = <T,>({\n  value,\n  shortcut,\n  onChange,\n  choices,\n  children,\n  name,\n}: Props<T>) => {\n  const device = useDevice();\n\n  return (\n    <>\n      <div className=\"dropdown-menu-item-base dropdown-menu-item-bare\">\n        <label className=\"dropdown-menu-item__text\" htmlFor={name}>\n          {children}\n        </label>\n        <RadioGroup\n          name={name}\n          value={value}\n          onChange={onChange}\n          choices={choices}\n        />\n      </div>\n      {shortcut && !device.editor.isMobile && (\n        <div className=\"dropdown-menu-item__shortcut dropdown-menu-item__shortcut--orphaned\">\n          {shortcut}\n        </div>\n      )}\n    </>\n  );\n};\n\nDropdownMenuItemContentRadio.displayName = \"DropdownMenuItemContentRadio\";\n\nexport default DropdownMenuItemContentRadio;\n", "import React, { useLayoutEffect, useRef } from \"react\";\nimport { useTunnels } from \"../../context/tunnels\";\nimport { atom } from \"../../editor-jotai\";\n\nexport const withInternalFallback = <P,>(\n  componentName: string,\n  Component: React.FC<P>,\n) => {\n  const renderAtom = atom(0);\n\n  const WrapperComponent: React.FC<\n    P & {\n      __fallback?: boolean;\n    }\n  > = (props) => {\n    const {\n      tunnelsJotai: { useAtom },\n    } = useTunnels();\n    // for rerenders\n    const [, setCounter] = useAtom(renderAtom);\n    // for initial & subsequent renders. Tracked as component state\n    // due to excalidraw multi-instance scanerios.\n    const metaRef = useRef({\n      // flag set on initial render to tell the fallback component to skip the\n      // render until mount counter are initialized. This is because the counter\n      // is initialized in an effect, and thus we could end rendering both\n      // components at the same time until counter is initialized.\n      preferHost: false,\n      counter: 0,\n    });\n\n    useLayoutEffect(() => {\n      const meta = metaRef.current;\n      setCounter((c) => {\n        const next = c + 1;\n        meta.counter = next;\n\n        return next;\n      });\n      return () => {\n        setCounter((c) => {\n          const next = c - 1;\n          meta.counter = next;\n          if (!next) {\n            meta.preferHost = false;\n          }\n          return next;\n        });\n      };\n    }, [setCounter]);\n\n    if (!props.__fallback) {\n      metaRef.current.preferHost = true;\n    }\n\n    // ensure we don't render fallback and host components at the same time\n    if (\n      // either before the counters are initialized\n      (!metaRef.current.counter &&\n        props.__fallback &&\n        metaRef.current.preferHost) ||\n      // or after the counters are initialized, and both are rendered\n      // (this is the default when host renders as well)\n      (metaRef.current.counter > 1 && props.__fallback)\n    ) {\n      return null;\n    }\n\n    return <Component {...props} />;\n  };\n\n  WrapperComponent.displayName = componentName;\n\n  return WrapperComponent;\n};\n", "import React from \"react\";\nimport { useDevice, useExcalidrawSetAppState } from \"../App\";\nimport DropdownMenu from \"../dropdownMenu/DropdownMenu\";\n\nimport * as DefaultItems from \"./DefaultItems\";\n\nimport { UserList } from \"../UserList\";\nimport { t } from \"../../i18n\";\nimport { HamburgerMenuIcon } from \"../icons\";\nimport { withInternalFallback } from \"../hoc/withInternalFallback\";\nimport { composeEventHandlers } from \"../../utils\";\nimport { useTunnels } from \"../../context/tunnels\";\nimport { useUIAppState } from \"../../context/ui-appState\";\n\nconst MainMenu = Object.assign(\n  withInternalFallback(\n    \"MainMenu\",\n    ({\n      children,\n      onSelect,\n    }: {\n      children?: React.ReactNode;\n      /**\n       * Called when any menu item is selected (clicked on).\n       */\n      onSelect?: (event: Event) => void;\n    }) => {\n      const { MainMenuTunnel } = useTunnels();\n      const device = useDevice();\n      const appState = useUIAppState();\n      const setAppState = useExcalidrawSetAppState();\n      const onClickOutside = device.editor.isMobile\n        ? undefined\n        : () => setAppState({ openMenu: null });\n\n      return (\n        <MainMenuTunnel.In>\n          <DropdownMenu open={appState.openMenu === \"canvas\"}>\n            <DropdownMenu.Trigger\n              onToggle={() => {\n                setAppState({\n                  openMenu: appState.openMenu === \"canvas\" ? null : \"canvas\",\n                });\n              }}\n              data-testid=\"main-menu-trigger\"\n              className=\"main-menu-trigger\"\n            >\n              {HamburgerMenuIcon}\n            </DropdownMenu.Trigger>\n            <DropdownMenu.Content\n              onClickOutside={onClickOutside}\n              onSelect={composeEventHandlers(onSelect, () => {\n                setAppState({ openMenu: null });\n              })}\n            >\n              {children}\n              {device.editor.isMobile && appState.collaborators.size > 0 && (\n                <fieldset className=\"UserList-Wrapper\">\n                  <legend>{t(\"labels.collaborators\")}</legend>\n                  <UserList\n                    mobile={true}\n                    collaborators={appState.collaborators}\n                    userToFollow={appState.userToFollow?.socketId || null}\n                  />\n                </fieldset>\n              )}\n            </DropdownMenu.Content>\n          </DropdownMenu>\n        </MainMenuTunnel.In>\n      );\n    },\n  ),\n  {\n    Trigger: DropdownMenu.Trigger,\n    Item: DropdownMenu.Item,\n    ItemLink: DropdownMenu.ItemLink,\n    ItemCustom: DropdownMenu.ItemCustom,\n    Group: DropdownMenu.Group,\n    Separator: DropdownMenu.Separator,\n    DefaultItems,\n  },\n);\n\nexport default MainMenu;\n", "import React from \"react\";\nimport { FilledButton } from \"../FilledButton\";\nimport { useExcalidrawActionManager, useExcalidrawSetAppState } from \"../App\";\nimport { actionSaveFileToDisk } from \"../../actions\";\nimport { useI18n } from \"../../i18n\";\nimport { actionChangeExportEmbedScene } from \"../../actions/actionExport\";\n\nexport type ActionProps = {\n  title: string;\n  children: React.ReactNode;\n  actionLabel: string;\n  onClick: () => void;\n};\n\nexport const Action = ({\n  title,\n  children,\n  actionLabel,\n  onClick,\n}: ActionProps) => {\n  return (\n    <div className=\"OverwriteConfirm__Actions__Action\">\n      <h4>{title}</h4>\n      <div className=\"OverwriteConfirm__Actions__Action__content\">\n        {children}\n      </div>\n      <FilledButton\n        variant=\"outlined\"\n        color=\"muted\"\n        label={actionLabel}\n        size=\"large\"\n        fullWidth\n        onClick={onClick}\n      />\n    </div>\n  );\n};\n\nexport const ExportToImage = () => {\n  const { t } = useI18n();\n  const actionManager = useExcalidrawActionManager();\n  const setAppState = useExcalidrawSetAppState();\n\n  return (\n    <Action\n      title={t(\"overwriteConfirm.action.exportToImage.title\")}\n      actionLabel={t(\"overwriteConfirm.action.exportToImage.button\")}\n      onClick={() => {\n        actionManager.executeAction(actionChangeExportEmbedScene, \"ui\", true);\n        setAppState({ openDialog: { name: \"imageExport\" } });\n      }}\n    >\n      {t(\"overwriteConfirm.action.exportToImage.description\")}\n    </Action>\n  );\n};\n\nexport const SaveToDisk = () => {\n  const { t } = useI18n();\n  const actionManager = useExcalidrawActionManager();\n\n  return (\n    <Action\n      title={t(\"overwriteConfirm.action.saveToDisk.title\")}\n      actionLabel={t(\"overwriteConfirm.action.saveToDisk.button\")}\n      onClick={() => {\n        actionManager.executeAction(actionSaveFileToDisk, \"ui\");\n      }}\n    >\n      {t(\"overwriteConfirm.action.saveToDisk.description\")}\n    </Action>\n  );\n};\n\nconst Actions = Object.assign(\n  ({ children }: { children: React.ReactNode }) => {\n    return <div className=\"OverwriteConfirm__Actions\">{children}</div>;\n  },\n  {\n    ExportToImage,\n    SaveToDisk,\n  },\n);\n\nexport { Actions };\n", "import React from \"react\";\n\nimport { useTunnels } from \"../../context/tunnels\";\nimport { useAtom } from \"../../editor-jotai\";\nimport { Dialog } from \"../Dialog\";\nimport { withInternalFallback } from \"../hoc/withInternalFallback\";\nimport { overwriteConfirmStateAtom } from \"./OverwriteConfirmState\";\n\nimport { FilledButton } from \"../FilledButton\";\nimport { alertTriangleIcon } from \"../icons\";\nimport { Actions, Action } from \"./OverwriteConfirmActions\";\nimport \"./OverwriteConfirm.scss\";\n\nexport type OverwriteConfirmDialogProps = {\n  children: React.ReactNode;\n};\n\nconst OverwriteConfirmDialog = Object.assign(\n  withInternalFallback(\n    \"OverwriteConfirmDialog\",\n    ({ children }: OverwriteConfirmDialogProps) => {\n      const { OverwriteConfirmDialogTunnel } = useTunnels();\n      const [overwriteConfirmState, setState] = useAtom(\n        overwriteConfirmStateAtom,\n      );\n\n      if (!overwriteConfirmState.active) {\n        return null;\n      }\n\n      const handleClose = () => {\n        overwriteConfirmState.onClose();\n        setState((state) => ({ ...state, active: false }));\n      };\n\n      const handleConfirm = () => {\n        overwriteConfirmState.onConfirm();\n        setState((state) => ({ ...state, active: false }));\n      };\n\n      return (\n        <OverwriteConfirmDialogTunnel.In>\n          <Dialog onCloseRequest={handleClose} title={false} size={916}>\n            <div className=\"OverwriteConfirm\">\n              <h3>{overwriteConfirmState.title}</h3>\n              <div\n                className={`OverwriteConfirm__Description OverwriteConfirm__Description--color-${overwriteConfirmState.color}`}\n              >\n                <div className=\"OverwriteConfirm__Description__icon\">\n                  {alertTriangleIcon}\n                </div>\n                <div>{overwriteConfirmState.description}</div>\n                <div className=\"OverwriteConfirm__Description__spacer\"></div>\n                <FilledButton\n                  color={overwriteConfirmState.color}\n                  size=\"large\"\n                  label={overwriteConfirmState.actionLabel}\n                  onClick={handleConfirm}\n                />\n              </div>\n              <Actions>{children}</Actions>\n            </div>\n          </Dialog>\n        </OverwriteConfirmDialogTunnel.In>\n      );\n    },\n  ),\n  {\n    Actions,\n    Action,\n  },\n);\n\nexport { OverwriteConfirmDialog };\n", "import clsx from \"clsx\";\nimport {\n  CANVAS_SEARCH_TAB,\n  DEFAULT_SIDEBAR,\n  LIBRARY_SIDEBAR_TAB,\n} from \"../constants\";\nimport { useTunnels } from \"../context/tunnels\";\nimport { useUIAppState } from \"../context/ui-appState\";\nimport type { MarkOptional, Merge } from \"../utility-types\";\nimport { composeEventHandlers } from \"../utils\";\nimport { useExcalidrawSetAppState } from \"./App\";\nimport { withInternalFallback } from \"./hoc/withInternalFallback\";\nimport { LibraryMenu } from \"./LibraryMenu\";\nimport type { SidebarProps, SidebarTriggerProps } from \"./Sidebar/common\";\nimport { Sidebar } from \"./Sidebar/Sidebar\";\nimport \"../components/dropdownMenu/DropdownMenu.scss\";\nimport { SearchMenu } from \"./SearchMenu\";\nimport { LibraryIcon, searchIcon } from \"./icons\";\n\nconst DefaultSidebarTrigger = withInternalFallback(\n  \"DefaultSidebarTrigger\",\n  (\n    props: Omit<SidebarTriggerProps, \"name\"> &\n      React.HTMLAttributes<HTMLDivElement>,\n  ) => {\n    const { DefaultSidebarTriggerTunnel } = useTunnels();\n    return (\n      <DefaultSidebarTriggerTunnel.In>\n        <Sidebar.Trigger\n          {...props}\n          className=\"default-sidebar-trigger\"\n          name={DEFAULT_SIDEBAR.name}\n        />\n      </DefaultSidebarTriggerTunnel.In>\n    );\n  },\n);\nDefaultSidebarTrigger.displayName = \"DefaultSidebarTrigger\";\n\nconst DefaultTabTriggers = ({ children }: { children: React.ReactNode }) => {\n  const { DefaultSidebarTabTriggersTunnel } = useTunnels();\n  return (\n    <DefaultSidebarTabTriggersTunnel.In>\n      {children}\n    </DefaultSidebarTabTriggersTunnel.In>\n  );\n};\nDefaultTabTriggers.displayName = \"DefaultTabTriggers\";\n\nexport const DefaultSidebar = Object.assign(\n  withInternalFallback(\n    \"DefaultSidebar\",\n    ({\n      children,\n      className,\n      onDock,\n      docked,\n      ...rest\n    }: Merge<\n      MarkOptional<Omit<SidebarProps, \"name\">, \"children\">,\n      {\n        /** pass `false` to disable docking */\n        onDock?: SidebarProps[\"onDock\"] | false;\n      }\n    >) => {\n      const appState = useUIAppState();\n      const setAppState = useExcalidrawSetAppState();\n\n      const { DefaultSidebarTabTriggersTunnel } = useTunnels();\n\n      const isForceDocked = appState.openSidebar?.tab === CANVAS_SEARCH_TAB;\n\n      return (\n        <Sidebar\n          {...rest}\n          name=\"default\"\n          key=\"default\"\n          className={clsx(\"default-sidebar\", className)}\n          docked={\n            isForceDocked || (docked ?? appState.defaultSidebarDockedPreference)\n          }\n          onDock={\n            // `onDock=false` disables docking.\n            // if `docked` passed, but no onDock passed, disable manual docking.\n            isForceDocked || onDock === false || (!onDock && docked != null)\n              ? undefined\n              : // compose to allow the host app to listen on default behavior\n                composeEventHandlers(onDock, (docked) => {\n                  setAppState({ defaultSidebarDockedPreference: docked });\n                })\n          }\n        >\n          <Sidebar.Tabs>\n            <Sidebar.Header>\n              <Sidebar.TabTriggers>\n                <Sidebar.TabTrigger tab={CANVAS_SEARCH_TAB}>\n                  {searchIcon}\n                </Sidebar.TabTrigger>\n                <Sidebar.TabTrigger tab={LIBRARY_SIDEBAR_TAB}>\n                  {LibraryIcon}\n                </Sidebar.TabTrigger>\n                <DefaultSidebarTabTriggersTunnel.Out />\n              </Sidebar.TabTriggers>\n            </Sidebar.Header>\n            <Sidebar.Tab tab={LIBRARY_SIDEBAR_TAB}>\n              <LibraryMenu />\n            </Sidebar.Tab>\n            <Sidebar.Tab tab={CANVAS_SEARCH_TAB}>\n              <SearchMenu />\n            </Sidebar.Tab>\n            {children}\n          </Sidebar.Tabs>\n        </Sidebar>\n      );\n    },\n  ),\n  {\n    Trigger: DefaultSidebarTrigger,\n    TabTriggers: DefaultTabTriggers,\n  },\n);\n", "import { Fragment, memo, useEffect, useRef, useState } from \"react\";\nimport { collapseDownIcon, upIcon, searchIcon } from \"./icons\";\nimport { TextField } from \"./TextField\";\nimport { Button } from \"./Button\";\nimport { useApp, useExcalidrawSetAppState } from \"./App\";\nimport debounce from \"lodash.debounce\";\nimport type { AppClassProperties } from \"../types\";\nimport { isTextElement, newTextElement } from \"../element\";\nimport type { ExcalidrawTextElement } from \"../element/types\";\nimport { addEventListener, getFontString } from \"../utils\";\nimport { KEYS } from \"../keys\";\nimport clsx from \"clsx\";\nimport { atom, useAtom } from \"../editor-jotai\";\nimport { t } from \"../i18n\";\nimport { isElementCompletelyInViewport } from \"../element/sizeHelpers\";\nimport { randomInteger } from \"../random\";\nimport { CLASSES, EVENT } from \"../constants\";\nimport { useStable } from \"../hooks/useStable\";\n\nimport \"./SearchMenu.scss\";\nimport { round } from \"@excalidraw/math\";\nimport { measureText } from \"../element/textMeasurements\";\n\nconst searchQueryAtom = atom<string>(\"\");\nexport const searchItemInFocusAtom = atom<number | null>(null);\n\nconst SEARCH_DEBOUNCE = 350;\n\ntype SearchMatchItem = {\n  textElement: ExcalidrawTextElement;\n  searchQuery: SearchQuery;\n  index: number;\n  preview: {\n    indexInSearchQuery: number;\n    previewText: string;\n    moreBefore: boolean;\n    moreAfter: boolean;\n  };\n  matchedLines: {\n    offsetX: number;\n    offsetY: number;\n    width: number;\n    height: number;\n  }[];\n};\n\ntype SearchMatches = {\n  nonce: number | null;\n  items: SearchMatchItem[];\n};\n\ntype SearchQuery = string & { _brand: \"SearchQuery\" };\n\nexport const SearchMenu = () => {\n  const app = useApp();\n  const setAppState = useExcalidrawSetAppState();\n\n  const searchInputRef = useRef<HTMLInputElement>(null);\n\n  const [inputValue, setInputValue] = useAtom(searchQueryAtom);\n  const searchQuery = inputValue.trim() as SearchQuery;\n\n  const [isSearching, setIsSearching] = useState(false);\n\n  const [searchMatches, setSearchMatches] = useState<SearchMatches>({\n    nonce: null,\n    items: [],\n  });\n  const searchedQueryRef = useRef<SearchQuery | null>(null);\n  const lastSceneNonceRef = useRef<number | undefined>(undefined);\n\n  const [focusIndex, setFocusIndex] = useAtom(searchItemInFocusAtom);\n  const elementsMap = app.scene.getNonDeletedElementsMap();\n\n  useEffect(() => {\n    if (isSearching) {\n      return;\n    }\n    if (\n      searchQuery !== searchedQueryRef.current ||\n      app.scene.getSceneNonce() !== lastSceneNonceRef.current\n    ) {\n      searchedQueryRef.current = null;\n      handleSearch(searchQuery, app, (matchItems, index) => {\n        setSearchMatches({\n          nonce: randomInteger(),\n          items: matchItems,\n        });\n        searchedQueryRef.current = searchQuery;\n        lastSceneNonceRef.current = app.scene.getSceneNonce();\n        setAppState({\n          searchMatches: matchItems.map((searchMatch) => ({\n            id: searchMatch.textElement.id,\n            focus: false,\n            matchedLines: searchMatch.matchedLines,\n          })),\n        });\n      });\n    }\n  }, [\n    isSearching,\n    searchQuery,\n    elementsMap,\n    app,\n    setAppState,\n    setFocusIndex,\n    lastSceneNonceRef,\n  ]);\n\n  const goToNextItem = () => {\n    if (searchMatches.items.length > 0) {\n      setFocusIndex((focusIndex) => {\n        if (focusIndex === null) {\n          return 0;\n        }\n\n        return (focusIndex + 1) % searchMatches.items.length;\n      });\n    }\n  };\n\n  const goToPreviousItem = () => {\n    if (searchMatches.items.length > 0) {\n      setFocusIndex((focusIndex) => {\n        if (focusIndex === null) {\n          return 0;\n        }\n\n        return focusIndex - 1 < 0\n          ? searchMatches.items.length - 1\n          : focusIndex - 1;\n      });\n    }\n  };\n\n  useEffect(() => {\n    setAppState((state) => {\n      return {\n        searchMatches: state.searchMatches.map((match, index) => {\n          if (index === focusIndex) {\n            return { ...match, focus: true };\n          }\n          return { ...match, focus: false };\n        }),\n      };\n    });\n  }, [focusIndex, setAppState]);\n\n  useEffect(() => {\n    if (searchMatches.items.length > 0 && focusIndex !== null) {\n      const match = searchMatches.items[focusIndex];\n\n      if (match) {\n        const zoomValue = app.state.zoom.value;\n\n        const matchAsElement = newTextElement({\n          text: match.searchQuery,\n          x: match.textElement.x + (match.matchedLines[0]?.offsetX ?? 0),\n          y: match.textElement.y + (match.matchedLines[0]?.offsetY ?? 0),\n          width: match.matchedLines[0]?.width,\n          height: match.matchedLines[0]?.height,\n          fontSize: match.textElement.fontSize,\n          fontFamily: match.textElement.fontFamily,\n        });\n\n        const FONT_SIZE_LEGIBILITY_THRESHOLD = 14;\n\n        const fontSize = match.textElement.fontSize;\n        const isTextTiny =\n          fontSize * zoomValue < FONT_SIZE_LEGIBILITY_THRESHOLD;\n\n        if (\n          !isElementCompletelyInViewport(\n            [matchAsElement],\n            app.canvas.width / window.devicePixelRatio,\n            app.canvas.height / window.devicePixelRatio,\n            {\n              offsetLeft: app.state.offsetLeft,\n              offsetTop: app.state.offsetTop,\n              scrollX: app.state.scrollX,\n              scrollY: app.state.scrollY,\n              zoom: app.state.zoom,\n            },\n            app.scene.getNonDeletedElementsMap(),\n            app.getEditorUIOffsets(),\n          ) ||\n          isTextTiny\n        ) {\n          let zoomOptions: Parameters<AppClassProperties[\"scrollToContent\"]>[1];\n\n          if (isTextTiny) {\n            if (fontSize >= FONT_SIZE_LEGIBILITY_THRESHOLD) {\n              zoomOptions = { fitToContent: true };\n            } else {\n              zoomOptions = {\n                fitToViewport: true,\n                // calculate zoom level to make the fontSize ~equal to FONT_SIZE_THRESHOLD, rounded to nearest 10%\n                maxZoom: round(FONT_SIZE_LEGIBILITY_THRESHOLD / fontSize, 1),\n              };\n            }\n          } else {\n            zoomOptions = { fitToContent: true };\n          }\n\n          app.scrollToContent(matchAsElement, {\n            animate: true,\n            duration: 300,\n            ...zoomOptions,\n            canvasOffsets: app.getEditorUIOffsets(),\n          });\n        }\n      }\n    }\n  }, [focusIndex, searchMatches, app]);\n\n  useEffect(() => {\n    return () => {\n      setFocusIndex(null);\n      searchedQueryRef.current = null;\n      lastSceneNonceRef.current = undefined;\n      setAppState({\n        searchMatches: [],\n      });\n      setIsSearching(false);\n    };\n  }, [setAppState, setFocusIndex]);\n\n  const stableState = useStable({\n    goToNextItem,\n    goToPreviousItem,\n    searchMatches,\n  });\n\n  useEffect(() => {\n    const eventHandler = (event: KeyboardEvent) => {\n      if (\n        event.key === KEYS.ESCAPE &&\n        !app.state.openDialog &&\n        !app.state.openPopup\n      ) {\n        event.preventDefault();\n        event.stopPropagation();\n        setAppState({\n          openSidebar: null,\n        });\n        return;\n      }\n\n      if (event[KEYS.CTRL_OR_CMD] && event.key === KEYS.F) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (!searchInputRef.current?.matches(\":focus\")) {\n          if (app.state.openDialog) {\n            setAppState({\n              openDialog: null,\n            });\n          }\n          searchInputRef.current?.focus();\n          searchInputRef.current?.select();\n        } else {\n          setAppState({\n            openSidebar: null,\n          });\n        }\n      }\n\n      if (\n        event.target instanceof HTMLElement &&\n        event.target.closest(\".layer-ui__search\")\n      ) {\n        if (stableState.searchMatches.items.length) {\n          if (event.key === KEYS.ENTER) {\n            event.stopPropagation();\n            stableState.goToNextItem();\n          }\n\n          if (event.key === KEYS.ARROW_UP) {\n            event.stopPropagation();\n            stableState.goToPreviousItem();\n          } else if (event.key === KEYS.ARROW_DOWN) {\n            event.stopPropagation();\n            stableState.goToNextItem();\n          }\n        }\n      }\n    };\n\n    // `capture` needed to prevent firing on initial open from App.tsx,\n    // as well as to handle events before App ones\n    return addEventListener(window, EVENT.KEYDOWN, eventHandler, {\n      capture: true,\n      passive: false,\n    });\n  }, [setAppState, stableState, app]);\n\n  const matchCount = `${searchMatches.items.length} ${\n    searchMatches.items.length === 1\n      ? t(\"search.singleResult\")\n      : t(\"search.multipleResults\")\n  }`;\n\n  return (\n    <div className=\"layer-ui__search\">\n      <div className=\"layer-ui__search-header\">\n        <TextField\n          className={CLASSES.SEARCH_MENU_INPUT_WRAPPER}\n          value={inputValue}\n          ref={searchInputRef}\n          placeholder={t(\"search.placeholder\")}\n          icon={searchIcon}\n          onChange={(value) => {\n            setInputValue(value);\n            setIsSearching(true);\n            const searchQuery = value.trim() as SearchQuery;\n            handleSearch(searchQuery, app, (matchItems, index) => {\n              setSearchMatches({\n                nonce: randomInteger(),\n                items: matchItems,\n              });\n              setFocusIndex(index);\n              searchedQueryRef.current = searchQuery;\n              lastSceneNonceRef.current = app.scene.getSceneNonce();\n              setAppState({\n                searchMatches: matchItems.map((searchMatch) => ({\n                  id: searchMatch.textElement.id,\n                  focus: false,\n                  matchedLines: searchMatch.matchedLines,\n                })),\n              });\n\n              setIsSearching(false);\n            });\n          }}\n          selectOnRender\n        />\n      </div>\n\n      <div className=\"layer-ui__search-count\">\n        {searchMatches.items.length > 0 && (\n          <>\n            {focusIndex !== null && focusIndex > -1 ? (\n              <div>\n                {focusIndex + 1} / {matchCount}\n              </div>\n            ) : (\n              <div>{matchCount}</div>\n            )}\n            <div className=\"result-nav\">\n              <Button\n                onSelect={() => {\n                  goToNextItem();\n                }}\n                className=\"result-nav-btn\"\n              >\n                {collapseDownIcon}\n              </Button>\n              <Button\n                onSelect={() => {\n                  goToPreviousItem();\n                }}\n                className=\"result-nav-btn\"\n              >\n                {upIcon}\n              </Button>\n            </div>\n          </>\n        )}\n\n        {searchMatches.items.length === 0 &&\n          searchQuery &&\n          searchedQueryRef.current && (\n            <div style={{ margin: \"1rem auto\" }}>{t(\"search.noMatch\")}</div>\n          )}\n      </div>\n\n      <MatchList\n        matches={searchMatches}\n        onItemClick={setFocusIndex}\n        focusIndex={focusIndex}\n        searchQuery={searchQuery}\n      />\n    </div>\n  );\n};\n\nconst ListItem = (props: {\n  preview: SearchMatchItem[\"preview\"];\n  searchQuery: SearchQuery;\n  highlighted: boolean;\n  onClick?: () => void;\n}) => {\n  const preview = [\n    props.preview.moreBefore ? \"...\" : \"\",\n    props.preview.previewText.slice(0, props.preview.indexInSearchQuery),\n    props.preview.previewText.slice(\n      props.preview.indexInSearchQuery,\n      props.preview.indexInSearchQuery + props.searchQuery.length,\n    ),\n    props.preview.previewText.slice(\n      props.preview.indexInSearchQuery + props.searchQuery.length,\n    ),\n    props.preview.moreAfter ? \"...\" : \"\",\n  ];\n\n  return (\n    <div\n      tabIndex={-1}\n      className={clsx(\"layer-ui__result-item\", {\n        active: props.highlighted,\n      })}\n      onClick={props.onClick}\n      ref={(ref) => {\n        if (props.highlighted) {\n          ref?.scrollIntoView({ behavior: \"auto\", block: \"nearest\" });\n        }\n      }}\n    >\n      <div className=\"preview-text\">\n        {preview.flatMap((text, idx) => (\n          <Fragment key={idx}>{idx === 2 ? <b>{text}</b> : text}</Fragment>\n        ))}\n      </div>\n    </div>\n  );\n};\n\ninterface MatchListProps {\n  matches: SearchMatches;\n  onItemClick: (index: number) => void;\n  focusIndex: number | null;\n  searchQuery: SearchQuery;\n}\n\nconst MatchListBase = (props: MatchListProps) => {\n  return (\n    <div className=\"layer-ui__search-result-container\">\n      {props.matches.items.map((searchMatch, index) => (\n        <ListItem\n          key={searchMatch.textElement.id + searchMatch.index}\n          searchQuery={props.searchQuery}\n          preview={searchMatch.preview}\n          highlighted={index === props.focusIndex}\n          onClick={() => props.onItemClick(index)}\n        />\n      ))}\n    </div>\n  );\n};\n\nconst areEqual = (prevProps: MatchListProps, nextProps: MatchListProps) => {\n  return (\n    prevProps.matches.nonce === nextProps.matches.nonce &&\n    prevProps.focusIndex === nextProps.focusIndex\n  );\n};\n\nconst MatchList = memo(MatchListBase, areEqual);\n\nconst getMatchPreview = (\n  text: string,\n  index: number,\n  searchQuery: SearchQuery,\n) => {\n  const WORDS_BEFORE = 2;\n  const WORDS_AFTER = 5;\n\n  const substrBeforeQuery = text.slice(0, index);\n  const wordsBeforeQuery = substrBeforeQuery.split(/\\s+/);\n  // text = \"small\", query = \"mall\", not complete before\n  // text = \"small\", query = \"smal\", complete before\n  const isQueryCompleteBefore = substrBeforeQuery.endsWith(\" \");\n  const startWordIndex =\n    wordsBeforeQuery.length -\n    WORDS_BEFORE -\n    1 -\n    (isQueryCompleteBefore ? 0 : 1);\n  let wordsBeforeAsString =\n    wordsBeforeQuery.slice(startWordIndex <= 0 ? 0 : startWordIndex).join(\" \") +\n    (isQueryCompleteBefore ? \" \" : \"\");\n\n  const MAX_ALLOWED_CHARS = 20;\n\n  wordsBeforeAsString =\n    wordsBeforeAsString.length > MAX_ALLOWED_CHARS\n      ? wordsBeforeAsString.slice(-MAX_ALLOWED_CHARS)\n      : wordsBeforeAsString;\n\n  const substrAfterQuery = text.slice(index + searchQuery.length);\n  const wordsAfter = substrAfterQuery.split(/\\s+/);\n  // text = \"small\", query = \"mall\", complete after\n  // text = \"small\", query = \"smal\", not complete after\n  const isQueryCompleteAfter = !substrAfterQuery.startsWith(\" \");\n  const numberOfWordsToTake = isQueryCompleteAfter\n    ? WORDS_AFTER + 1\n    : WORDS_AFTER;\n  const wordsAfterAsString =\n    (isQueryCompleteAfter ? \"\" : \" \") +\n    wordsAfter.slice(0, numberOfWordsToTake).join(\" \");\n\n  return {\n    indexInSearchQuery: wordsBeforeAsString.length,\n    previewText: wordsBeforeAsString + searchQuery + wordsAfterAsString,\n    moreBefore: startWordIndex > 0,\n    moreAfter: wordsAfter.length > numberOfWordsToTake,\n  };\n};\n\nconst normalizeWrappedText = (\n  wrappedText: string,\n  originalText: string,\n): string => {\n  const wrappedLines = wrappedText.split(\"\\n\");\n  const normalizedLines: string[] = [];\n  let originalIndex = 0;\n\n  for (let i = 0; i < wrappedLines.length; i++) {\n    let currentLine = wrappedLines[i];\n    const nextLine = wrappedLines[i + 1];\n\n    if (nextLine) {\n      const nextLineIndexInOriginal = originalText.indexOf(\n        nextLine,\n        originalIndex,\n      );\n\n      if (nextLineIndexInOriginal > currentLine.length + originalIndex) {\n        let j = nextLineIndexInOriginal - (currentLine.length + originalIndex);\n\n        while (j > 0) {\n          currentLine += \" \";\n          j--;\n        }\n      }\n    }\n\n    normalizedLines.push(currentLine);\n    originalIndex = originalIndex + currentLine.length;\n  }\n\n  return normalizedLines.join(\"\\n\");\n};\n\nconst getMatchedLines = (\n  textElement: ExcalidrawTextElement,\n  searchQuery: SearchQuery,\n  index: number,\n) => {\n  const normalizedText = normalizeWrappedText(\n    textElement.text,\n    textElement.originalText,\n  );\n\n  const lines = normalizedText.split(\"\\n\");\n\n  const lineIndexRanges = [];\n  let currentIndex = 0;\n  let lineNumber = 0;\n\n  for (const line of lines) {\n    const startIndex = currentIndex;\n    const endIndex = startIndex + line.length - 1;\n\n    lineIndexRanges.push({\n      line,\n      startIndex,\n      endIndex,\n      lineNumber,\n    });\n\n    // Move to the next line's start index\n    currentIndex = endIndex + 1;\n    lineNumber++;\n  }\n\n  let startIndex = index;\n  let remainingQuery = textElement.originalText.slice(\n    index,\n    index + searchQuery.length,\n  );\n  const matchedLines: {\n    offsetX: number;\n    offsetY: number;\n    width: number;\n    height: number;\n  }[] = [];\n\n  for (const lineIndexRange of lineIndexRanges) {\n    if (remainingQuery === \"\") {\n      break;\n    }\n\n    if (\n      startIndex >= lineIndexRange.startIndex &&\n      startIndex <= lineIndexRange.endIndex\n    ) {\n      const matchCapacity = lineIndexRange.endIndex + 1 - startIndex;\n      const textToStart = lineIndexRange.line.slice(\n        0,\n        startIndex - lineIndexRange.startIndex,\n      );\n\n      const matchedWord = remainingQuery.slice(0, matchCapacity);\n      remainingQuery = remainingQuery.slice(matchCapacity);\n\n      const offset = measureText(\n        textToStart,\n        getFontString(textElement),\n        textElement.lineHeight,\n      );\n\n      // measureText returns a non-zero width for the empty string\n      // which is not what we're after here, hence the check and the correction\n      if (textToStart === \"\") {\n        offset.width = 0;\n      }\n\n      if (textElement.textAlign !== \"left\" && lineIndexRange.line.length > 0) {\n        const lineLength = measureText(\n          lineIndexRange.line,\n          getFontString(textElement),\n          textElement.lineHeight,\n        );\n\n        const spaceToStart =\n          textElement.textAlign === \"center\"\n            ? (textElement.width - lineLength.width) / 2\n            : textElement.width - lineLength.width;\n        offset.width += spaceToStart;\n      }\n\n      const { width, height } = measureText(\n        matchedWord,\n        getFontString(textElement),\n        textElement.lineHeight,\n      );\n\n      const offsetX = offset.width;\n      const offsetY = lineIndexRange.lineNumber * offset.height;\n\n      matchedLines.push({\n        offsetX,\n        offsetY,\n        width,\n        height,\n      });\n\n      startIndex += matchCapacity;\n    }\n  }\n\n  return matchedLines;\n};\n\nconst escapeSpecialCharacters = (string: string) => {\n  return string.replace(/[.*+?^${}()|[\\]\\\\-]/g, \"\\\\$&\");\n};\n\nconst handleSearch = debounce(\n  (\n    searchQuery: SearchQuery,\n    app: AppClassProperties,\n    cb: (matchItems: SearchMatchItem[], focusIndex: number | null) => void,\n  ) => {\n    if (!searchQuery || searchQuery === \"\") {\n      cb([], null);\n      return;\n    }\n\n    const elements = app.scene.getNonDeletedElements();\n    const texts = elements.filter((el) =>\n      isTextElement(el),\n    ) as ExcalidrawTextElement[];\n\n    texts.sort((a, b) => a.y - b.y);\n\n    const matchItems: SearchMatchItem[] = [];\n\n    const regex = new RegExp(escapeSpecialCharacters(searchQuery), \"gi\");\n\n    for (const textEl of texts) {\n      let match = null;\n      const text = textEl.originalText;\n\n      while ((match = regex.exec(text)) !== null) {\n        const preview = getMatchPreview(text, match.index, searchQuery);\n        const matchedLines = getMatchedLines(textEl, searchQuery, match.index);\n\n        if (matchedLines.length > 0) {\n          matchItems.push({\n            textElement: textEl,\n            searchQuery,\n            preview,\n            index: match.index,\n            matchedLines,\n          });\n        }\n      }\n    }\n\n    const visibleIds = new Set(\n      app.visibleElements.map((visibleElement) => visibleElement.id),\n    );\n\n    const focusIndex =\n      matchItems.findIndex((matchItem) =>\n        visibleIds.has(matchItem.textElement.id),\n      ) ?? null;\n\n    cb(matchItems, focusIndex);\n  },\n  SEARCH_DEBOUNCE,\n);\n", "import \"./ToolIcon.scss\";\n\nimport clsx from \"clsx\";\nimport type { ToolButtonSize } from \"./ToolButton\";\nimport { laserPointerToolIcon } from \"./icons\";\n\ntype LaserPointerIconProps = {\n  title?: string;\n  name?: string;\n  checked: boolean;\n  onChange?(): void;\n  isMobile?: boolean;\n};\n\nconst DEFAULT_SIZE: ToolButtonSize = \"small\";\n\nexport const LaserPointerButton = (props: LaserPointerIconProps) => {\n  return (\n    <label\n      className={clsx(\n        \"ToolIcon ToolIcon__LaserPointer\",\n        `ToolIcon_size_${DEFAULT_SIZE}`,\n        {\n          \"is-mobile\": props.isMobile,\n        },\n      )}\n      title={`${props.title}`}\n    >\n      <input\n        className=\"ToolIcon_type_checkbox\"\n        type=\"checkbox\"\n        name={props.name}\n        onChange={props.onChange}\n        checked={props.checked}\n        aria-label={props.title}\n        data-testid=\"toolbar-LaserPointer\"\n      />\n      <div className=\"ToolIcon__icon\">{laserPointerToolIcon}</div>\n    </label>\n  );\n};\n", "import { useState, useRef, useEffect, useDeferredValue } from \"react\";\nimport type { BinaryFiles } from \"../../types\";\nimport { useApp } from \"../App\";\nimport type { NonDeletedExcalidrawElement } from \"../../element/types\";\nimport { ArrowRightIcon } from \"../icons\";\nimport \"./MermaidToExcalidraw.scss\";\nimport { t } from \"../../i18n\";\nimport Trans from \"../Trans\";\nimport type { MermaidToExcalidrawLibProps } from \"./common\";\nimport {\n  convertMermaidToExcalidraw,\n  insertToEditor,\n  saveMermaidDataToStorage,\n} from \"./common\";\nimport { TTDDialogPanels } from \"./TTDDialogPanels\";\nimport { TTDDialogPanel } from \"./TTDDialogPanel\";\nimport { TTDDialogInput } from \"./TTDDialogInput\";\nimport { TTDDialogOutput } from \"./TTDDialogOutput\";\nimport { EditorLocalStorage } from \"../../data/EditorLocalStorage\";\nimport { EDITOR_LS_KEYS } from \"../../constants\";\nimport { debounce, isDevEnv } from \"../../utils\";\nimport { TTDDialogSubmitShortcut } from \"./TTDDialogSubmitShortcut\";\n\nconst MERMAID_EXAMPLE =\n  \"flowchart TD\\n A[Christmas] -->|Get money| B(Go shopping)\\n B --> C{Let me think}\\n C -->|One| D[Laptop]\\n C -->|Two| E[iPhone]\\n C -->|Three| F[Car]\";\n\nconst debouncedSaveMermaidDefinition = debounce(saveMermaidDataToStorage, 300);\n\nconst MermaidToExcalidraw = ({\n  mermaidToExcalidrawLib,\n}: {\n  mermaidToExcalidrawLib: MermaidToExcalidrawLibProps;\n}) => {\n  const [text, setText] = useState(\n    () =>\n      EditorLocalStorage.get<string>(EDITOR_LS_KEYS.MERMAID_TO_EXCALIDRAW) ||\n      MERMAID_EXAMPLE,\n  );\n  const deferredText = useDeferredValue(text.trim());\n  const [error, setError] = useState<Error | null>(null);\n\n  const canvasRef = useRef<HTMLDivElement>(null);\n  const data = useRef<{\n    elements: readonly NonDeletedExcalidrawElement[];\n    files: BinaryFiles | null;\n  }>({ elements: [], files: null });\n\n  const app = useApp();\n\n  useEffect(() => {\n    convertMermaidToExcalidraw({\n      canvasRef,\n      data,\n      mermaidToExcalidrawLib,\n      setError,\n      mermaidDefinition: deferredText,\n    }).catch((err) => {\n      if (isDevEnv()) {\n        console.error(\"Failed to parse mermaid definition\", err);\n      }\n    });\n\n    debouncedSaveMermaidDefinition(deferredText);\n  }, [deferredText, mermaidToExcalidrawLib]);\n\n  useEffect(\n    () => () => {\n      debouncedSaveMermaidDefinition.flush();\n    },\n    [],\n  );\n\n  const onInsertToEditor = () => {\n    insertToEditor({\n      app,\n      data,\n      text,\n      shouldSaveMermaidDataToStorage: true,\n    });\n  };\n\n  return (\n    <>\n      <div className=\"ttd-dialog-desc\">\n        <Trans\n          i18nKey=\"mermaid.description\"\n          flowchartLink={(el) => (\n            <a href=\"https://mermaid.js.org/syntax/flowchart.html\">{el}</a>\n          )}\n          sequenceLink={(el) => (\n            <a href=\"https://mermaid.js.org/syntax/sequenceDiagram.html\">\n              {el}\n            </a>\n          )}\n          classLink={(el) => (\n            <a href=\"https://mermaid.js.org/syntax/classDiagram.html\">{el}</a>\n          )}\n        />\n      </div>\n      <TTDDialogPanels>\n        <TTDDialogPanel label={t(\"mermaid.syntax\")}>\n          <TTDDialogInput\n            input={text}\n            placeholder={\"Write Mermaid diagram defintion here...\"}\n            onChange={(event) => setText(event.target.value)}\n            onKeyboardSubmit={() => {\n              onInsertToEditor();\n            }}\n          />\n        </TTDDialogPanel>\n        <TTDDialogPanel\n          label={t(\"mermaid.preview\")}\n          panelAction={{\n            action: () => {\n              onInsertToEditor();\n            },\n            label: t(\"mermaid.button\"),\n            icon: ArrowRightIcon,\n          }}\n          renderSubmitShortcut={() => <TTDDialogSubmitShortcut />}\n        >\n          <TTDDialogOutput\n            canvasRef={canvasRef}\n            loaded={mermaidToExcalidrawLib.loaded}\n            error={error}\n          />\n        </TTDDialogPanel>\n      </TTDDialogPanels>\n    </>\n  );\n};\nexport default MermaidToExcalidraw;\n", "import type { MermaidConfig } from \"@excalidraw/mermaid-to-excalidraw\";\nimport type { MermaidToExcalidrawResult } from \"@excalidraw/mermaid-to-excalidraw/dist/interfaces\";\nimport { DEFAULT_EXPORT_PADDING, EDITOR_LS_KEYS } from \"../../constants\";\nimport { convertToExcalidrawElements, exportToCanvas } from \"../../index\";\nimport type { NonDeletedExcalidrawElement } from \"../../element/types\";\nimport type { AppClassProperties, BinaryFiles } from \"../../types\";\nimport { canvasToBlob } from \"../../data/blob\";\nimport { EditorLocalStorage } from \"../../data/EditorLocalStorage\";\nimport { t } from \"../../i18n\";\n\nconst resetPreview = ({\n  canvasRef,\n  setError,\n}: {\n  canvasRef: React.RefObject<HTMLDivElement | null>;\n  setError: (error: Error | null) => void;\n}) => {\n  const canvasNode = canvasRef.current;\n\n  if (!canvasNode) {\n    return;\n  }\n  const parent = canvasNode.parentElement;\n  if (!parent) {\n    return;\n  }\n  parent.style.background = \"\";\n  setError(null);\n  canvasNode.replaceChildren();\n};\n\nexport interface MermaidToExcalidrawLibProps {\n  loaded: boolean;\n  api: Promise<{\n    parseMermaidToExcalidraw: (\n      definition: string,\n      config?: MermaidConfig,\n    ) => Promise<MermaidToExcalidrawResult>;\n  }>;\n}\n\ninterface ConvertMermaidToExcalidrawFormatProps {\n  canvasRef: React.RefObject<HTMLDivElement | null>;\n  mermaidToExcalidrawLib: MermaidToExcalidrawLibProps;\n  mermaidDefinition: string;\n  setError: (error: Error | null) => void;\n  data: React.MutableRefObject<{\n    elements: readonly NonDeletedExcalidrawElement[];\n    files: BinaryFiles | null;\n  }>;\n}\n\nexport const convertMermaidToExcalidraw = async ({\n  canvasRef,\n  mermaidToExcalidrawLib,\n  mermaidDefinition,\n  setError,\n  data,\n}: ConvertMermaidToExcalidrawFormatProps) => {\n  const canvasNode = canvasRef.current;\n  const parent = canvasNode?.parentElement;\n\n  if (!canvasNode || !parent) {\n    return;\n  }\n\n  if (!mermaidDefinition) {\n    resetPreview({ canvasRef, setError });\n    return;\n  }\n\n  try {\n    const api = await mermaidToExcalidrawLib.api;\n\n    let ret;\n    try {\n      ret = await api.parseMermaidToExcalidraw(mermaidDefinition);\n    } catch (err: any) {\n      ret = await api.parseMermaidToExcalidraw(\n        mermaidDefinition.replace(/\"/g, \"'\"),\n      );\n    }\n    const { elements, files } = ret;\n    setError(null);\n\n    data.current = {\n      elements: convertToExcalidrawElements(elements, {\n        regenerateIds: true,\n      }),\n      files,\n    };\n\n    const canvas = await exportToCanvas({\n      elements: data.current.elements,\n      files: data.current.files,\n      exportPadding: DEFAULT_EXPORT_PADDING,\n      maxWidthOrHeight:\n        Math.max(parent.offsetWidth, parent.offsetHeight) *\n        window.devicePixelRatio,\n    });\n    // if converting to blob fails, there's some problem that will\n    // likely prevent preview and export (e.g. canvas too big)\n    try {\n      await canvasToBlob(canvas);\n    } catch (e: any) {\n      if (e.name === \"CANVAS_POSSIBLY_TOO_BIG\") {\n        throw new Error(t(\"canvasError.canvasTooBig\"));\n      }\n      throw e;\n    }\n    parent.style.background = \"var(--default-bg-color)\";\n    canvasNode.replaceChildren(canvas);\n  } catch (err: any) {\n    parent.style.background = \"var(--default-bg-color)\";\n    if (mermaidDefinition) {\n      setError(err);\n    }\n\n    throw err;\n  }\n};\n\nexport const saveMermaidDataToStorage = (mermaidDefinition: string) => {\n  EditorLocalStorage.set(\n    EDITOR_LS_KEYS.MERMAID_TO_EXCALIDRAW,\n    mermaidDefinition,\n  );\n};\n\nexport const insertToEditor = ({\n  app,\n  data,\n  text,\n  shouldSaveMermaidDataToStorage,\n}: {\n  app: AppClassProperties;\n  data: React.MutableRefObject<{\n    elements: readonly NonDeletedExcalidrawElement[];\n    files: BinaryFiles | null;\n  }>;\n  text?: string;\n  shouldSaveMermaidDataToStorage?: boolean;\n}) => {\n  const { elements: newElements, files } = data.current;\n\n  if (!newElements.length) {\n    return;\n  }\n\n  app.addElementsFromPasteOrLibrary({\n    elements: newElements,\n    files,\n    position: \"center\",\n    fitToContent: true,\n  });\n  app.setOpenDialog(null);\n\n  if (shouldSaveMermaidDataToStorage && text) {\n    saveMermaidDataToStorage(text);\n  }\n};\n", "import type { ReactNode } from \"react\";\n\nexport const TTDDialogPanels = ({ children }: { children: ReactNode }) => {\n  return <div className=\"ttd-dialog-panels\">{children}</div>;\n};\n", "import type { ReactNode } from \"react\";\nimport { Button } from \"../Button\";\nimport clsx from \"clsx\";\nimport Spinner from \"../Spinner\";\n\ninterface TTDDialogPanelProps {\n  label: string;\n  children: ReactNode;\n  panelAction?: {\n    label: string;\n    action: () => void;\n    icon?: ReactNode;\n  };\n  panelActionDisabled?: boolean;\n  onTextSubmitInProgess?: boolean;\n  renderTopRight?: () => ReactNode;\n  renderSubmitShortcut?: () => ReactNode;\n  renderBottomRight?: () => ReactNode;\n}\n\nexport const TTDDialogPanel = ({\n  label,\n  children,\n  panelAction,\n  panelActionDisabled = false,\n  onTextSubmitInProgess,\n  renderTopRight,\n  renderSubmitShortcut,\n  renderBottomRight,\n}: TTDDialogPanelProps) => {\n  return (\n    <div className=\"ttd-dialog-panel\">\n      <div className=\"ttd-dialog-panel__header\">\n        <label>{label}</label>\n        {renderTopRight?.()}\n      </div>\n\n      {children}\n      <div\n        className={clsx(\"ttd-dialog-panel-button-container\", {\n          invisible: !panelAction,\n        })}\n        style={{ display: \"flex\", alignItems: \"center\" }}\n      >\n        <Button\n          className=\"ttd-dialog-panel-button\"\n          onSelect={panelAction ? panelAction.action : () => {}}\n          disabled={panelActionDisabled || onTextSubmitInProgess}\n        >\n          <div className={clsx({ invisible: onTextSubmitInProgess })}>\n            {panelAction?.label}\n            {panelAction?.icon && <span>{panelAction.icon}</span>}\n          </div>\n          {onTextSubmitInProgess && <Spinner />}\n        </Button>\n        {!panelActionDisabled &&\n          !onTextSubmitInProgess &&\n          renderSubmitShortcut?.()}\n        {renderBottomRight?.()}\n      </div>\n    </div>\n  );\n};\n", "import type { ChangeEventHandler } from \"react\";\nimport { useEffect, useRef } from \"react\";\nimport { EVENT } from \"../../constants\";\nimport { KEYS } from \"../../keys\";\n\ninterface TTDDialogInputProps {\n  input: string;\n  placeholder: string;\n  onChange: ChangeEventHandler<HTMLTextAreaElement>;\n  onKeyboardSubmit?: () => void;\n}\n\nexport const TTDDialogInput = ({\n  input,\n  placeholder,\n  onChange,\n  onKeyboardSubmit,\n}: TTDDialogInputProps) => {\n  const ref = useRef<HTMLTextAreaElement>(null);\n\n  const callbackRef = useRef(onKeyboardSubmit);\n  callbackRef.current = onKeyboardSubmit;\n\n  useEffect(() => {\n    if (!callbackRef.current) {\n      return;\n    }\n    const textarea = ref.current;\n    if (textarea) {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (event[KEYS.CTRL_OR_CMD] && event.key === KEYS.ENTER) {\n          event.preventDefault();\n          callbackRef.current?.();\n        }\n      };\n      textarea.addEventListener(EVENT.KEYDOWN, handleKeyDown);\n      return () => {\n        textarea.removeEventListener(EVENT.KEYDOWN, handleKeyDown);\n      };\n    }\n  }, []);\n\n  return (\n    <textarea\n      className=\"ttd-dialog-input\"\n      onChange={onChange}\n      value={input}\n      placeholder={placeholder}\n      autoFocus\n      ref={ref}\n    />\n  );\n};\n", "import Spinner from \"../Spinner\";\n\nconst ErrorComp = ({ error }: { error: string }) => {\n  return (\n    <div\n      data-testid=\"ttd-dialog-output-error\"\n      className=\"ttd-dialog-output-error\"\n    >\n      Error! <p>{error}</p>\n    </div>\n  );\n};\n\ninterface TTDDialogOutputProps {\n  error: Error | null;\n  canvasRef: React.RefObject<HTMLDivElement | null>;\n  loaded: boolean;\n}\n\nexport const TTDDialogOutput = ({\n  error,\n  canvasRef,\n  loaded,\n}: TTDDialogOutputProps) => {\n  return (\n    <div className=\"ttd-dialog-output-wrapper\">\n      {error && <ErrorComp error={error.message} />}\n      {loaded ? (\n        <div\n          ref={canvasRef}\n          style={{ opacity: error ? \"0.15\" : 1 }}\n          className=\"ttd-dialog-output-canvas-container\"\n        />\n      ) : (\n        <Spinner size=\"2rem\" />\n      )}\n    </div>\n  );\n};\n", "import { getShortcutKey } from \"../../utils\";\n\nexport const TTDDialogSubmitShortcut = () => {\n  return (\n    <div className=\"ttd-dialog-submit-shortcut\">\n      <div className=\"ttd-dialog-submit-shortcut__key\">\n        {getShortcutKey(\"CtrlOrCmd\")}\n      </div>\n      <div className=\"ttd-dialog-submit-shortcut__key\">\n        {getShortcutKey(\"Enter\")}\n      </div>\n    </div>\n  );\n};\n", "import * as RadixTabs from \"@radix-ui/react-tabs\";\nimport type { ReactNode } from \"react\";\nimport { useRef } from \"react\";\nimport { useExcalidrawSetAppState } from \"../App\";\nimport { isMemberOf } from \"../../utils\";\n\nconst TTDDialogTabs = (\n  props: {\n    children: ReactNode;\n  } & { dialog: \"ttd\"; tab: \"text-to-diagram\" | \"mermaid\" },\n) => {\n  const setAppState = useExcalidrawSetAppState();\n\n  const rootRef = useRef<HTMLDivElement>(null);\n  const minHeightRef = useRef<number>(0);\n\n  return (\n    <RadixTabs.Root\n      ref={rootRef}\n      className=\"ttd-dialog-tabs-root\"\n      value={props.tab}\n      onValueChange={(\n        // at least in test enviros, `tab` can be `undefined`\n        tab: string | undefined,\n      ) => {\n        if (!tab) {\n          return;\n        }\n        const modalContentNode =\n          rootRef.current?.closest<HTMLElement>(\".Modal__content\");\n        if (modalContentNode) {\n          const currHeight = modalContentNode.offsetHeight || 0;\n          if (currHeight > minHeightRef.current) {\n            minHeightRef.current = currHeight;\n            modalContentNode.style.minHeight = `min(${minHeightRef.current}px, 100%)`;\n          }\n        }\n        if (\n          props.dialog === \"ttd\" &&\n          isMemberOf([\"text-to-diagram\", \"mermaid\"], tab)\n        ) {\n          setAppState({\n            openDialog: { name: props.dialog, tab },\n          });\n        }\n      }}\n    >\n      {props.children}\n    </RadixTabs.Root>\n  );\n};\n\nTTDDialogTabs.displayName = \"TTDDialogTabs\";\n\nexport default TTDDialogTabs;\n", "import { Dialog } from \"../Dialog\";\nimport { useApp, useExcalidrawSetAppState } from \"../App\";\nimport MermaidToExcalidraw from \"./MermaidToExcalidraw\";\nimport TTDDialogTabs from \"./TTDDialogTabs\";\nimport type { ChangeEventHandler } from \"react\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useUIAppState } from \"../../context/ui-appState\";\nimport { withInternalFallback } from \"../hoc/withInternalFallback\";\nimport { TTDDialogTabTriggers } from \"./TTDDialogTabTriggers\";\nimport { TTDDialogTabTrigger } from \"./TTDDialogTabTrigger\";\nimport { TTDDialogTab } from \"./TTDDialogTab\";\nimport { t } from \"../../i18n\";\nimport { TTDDialogInput } from \"./TTDDialogInput\";\nimport { TTDDialogOutput } from \"./TTDDialogOutput\";\nimport { TTDDialogPanel } from \"./TTDDialogPanel\";\nimport { TTDDialogPanels } from \"./TTDDialogPanels\";\nimport type { MermaidToExcalidrawLibProps } from \"./common\";\nimport {\n  convertMermaidToExcalidraw,\n  insertToEditor,\n  saveMermaidDataToStorage,\n} from \"./common\";\nimport type { NonDeletedExcalidrawElement } from \"../../element/types\";\nimport type { BinaryFiles } from \"../../types\";\nimport { ArrowRightIcon } from \"../icons\";\n\nimport \"./TTDDialog.scss\";\nimport { atom, useAtom } from \"../../editor-jotai\";\nimport { trackEvent } from \"../../analytics\";\nimport { InlineIcon } from \"../InlineIcon\";\nimport { TTDDialogSubmitShortcut } from \"./TTDDialogSubmitShortcut\";\nimport { isFiniteNumber } from \"@excalidraw/math\";\n\nconst MIN_PROMPT_LENGTH = 3;\nconst MAX_PROMPT_LENGTH = 1000;\n\nconst rateLimitsAtom = atom<{\n  rateLimit: number;\n  rateLimitRemaining: number;\n} | null>(null);\n\nconst ttdGenerationAtom = atom<{\n  generatedResponse: string | null;\n  prompt: string | null;\n} | null>(null);\n\ntype OnTestSubmitRetValue = {\n  rateLimit?: number | null;\n  rateLimitRemaining?: number | null;\n} & (\n  | { generatedResponse: string | undefined; error?: null | undefined }\n  | {\n      error: Error;\n      generatedResponse?: null | undefined;\n    }\n);\n\nexport const TTDDialog = (\n  props:\n    | {\n        onTextSubmit(value: string): Promise<OnTestSubmitRetValue>;\n      }\n    | { __fallback: true },\n) => {\n  const appState = useUIAppState();\n\n  if (appState.openDialog?.name !== \"ttd\") {\n    return null;\n  }\n\n  return <TTDDialogBase {...props} tab={appState.openDialog.tab} />;\n};\n\n/**\n * Text to diagram (TTD) dialog\n */\nexport const TTDDialogBase = withInternalFallback(\n  \"TTDDialogBase\",\n  ({\n    tab,\n    ...rest\n  }: {\n    tab: \"text-to-diagram\" | \"mermaid\";\n  } & (\n    | {\n        onTextSubmit(value: string): Promise<OnTestSubmitRetValue>;\n      }\n    | { __fallback: true }\n  )) => {\n    const app = useApp();\n    const setAppState = useExcalidrawSetAppState();\n\n    const someRandomDivRef = useRef<HTMLDivElement>(null);\n\n    const [ttdGeneration, setTtdGeneration] = useAtom(ttdGenerationAtom);\n\n    const [text, setText] = useState(ttdGeneration?.prompt ?? \"\");\n\n    const prompt = text.trim();\n\n    const handleTextChange: ChangeEventHandler<HTMLTextAreaElement> = (\n      event,\n    ) => {\n      setText(event.target.value);\n      setTtdGeneration((s) => ({\n        generatedResponse: s?.generatedResponse ?? null,\n        prompt: event.target.value,\n      }));\n    };\n\n    const [onTextSubmitInProgess, setOnTextSubmitInProgess] = useState(false);\n    const [rateLimits, setRateLimits] = useAtom(rateLimitsAtom);\n\n    const onGenerate = async () => {\n      if (\n        prompt.length > MAX_PROMPT_LENGTH ||\n        prompt.length < MIN_PROMPT_LENGTH ||\n        onTextSubmitInProgess ||\n        rateLimits?.rateLimitRemaining === 0 ||\n        // means this is not a text-to-diagram dialog (needed for TS only)\n        \"__fallback\" in rest\n      ) {\n        if (prompt.length < MIN_PROMPT_LENGTH) {\n          setError(\n            new Error(\n              `Prompt is too short (min ${MIN_PROMPT_LENGTH} characters)`,\n            ),\n          );\n        }\n        if (prompt.length > MAX_PROMPT_LENGTH) {\n          setError(\n            new Error(\n              `Prompt is too long (max ${MAX_PROMPT_LENGTH} characters)`,\n            ),\n          );\n        }\n\n        return;\n      }\n\n      try {\n        setOnTextSubmitInProgess(true);\n\n        trackEvent(\"ai\", \"generate\", \"ttd\");\n\n        const { generatedResponse, error, rateLimit, rateLimitRemaining } =\n          await rest.onTextSubmit(prompt);\n\n        if (typeof generatedResponse === \"string\") {\n          setTtdGeneration((s) => ({\n            generatedResponse,\n            prompt: s?.prompt ?? null,\n          }));\n        }\n\n        if (isFiniteNumber(rateLimit) && isFiniteNumber(rateLimitRemaining)) {\n          setRateLimits({ rateLimit, rateLimitRemaining });\n        }\n\n        if (error) {\n          setError(error);\n          return;\n        }\n        if (!generatedResponse) {\n          setError(new Error(\"Generation failed\"));\n          return;\n        }\n\n        try {\n          await convertMermaidToExcalidraw({\n            canvasRef: someRandomDivRef,\n            data,\n            mermaidToExcalidrawLib,\n            setError,\n            mermaidDefinition: generatedResponse,\n          });\n          trackEvent(\"ai\", \"mermaid parse success\", \"ttd\");\n        } catch (error: any) {\n          console.info(\n            `%cTTD mermaid render errror: ${error.message}`,\n            \"color: red\",\n          );\n          console.info(\n            `>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\nTTD mermaid definition render errror: ${error.message}`,\n            \"color: yellow\",\n          );\n          trackEvent(\"ai\", \"mermaid parse failed\", \"ttd\");\n          setError(\n            new Error(\n              \"Generated an invalid diagram :(. You may also try a different prompt.\",\n            ),\n          );\n        }\n      } catch (error: any) {\n        let message: string | undefined = error.message;\n        if (!message || message === \"Failed to fetch\") {\n          message = \"Request failed\";\n        }\n        setError(new Error(message));\n      } finally {\n        setOnTextSubmitInProgess(false);\n      }\n    };\n\n    const refOnGenerate = useRef(onGenerate);\n    refOnGenerate.current = onGenerate;\n\n    const [mermaidToExcalidrawLib, setMermaidToExcalidrawLib] =\n      useState<MermaidToExcalidrawLibProps>({\n        loaded: false,\n        api: import(\"@excalidraw/mermaid-to-excalidraw\"),\n      });\n\n    useEffect(() => {\n      const fn = async () => {\n        await mermaidToExcalidrawLib.api;\n        setMermaidToExcalidrawLib((prev) => ({ ...prev, loaded: true }));\n      };\n      fn();\n    }, [mermaidToExcalidrawLib.api]);\n\n    const data = useRef<{\n      elements: readonly NonDeletedExcalidrawElement[];\n      files: BinaryFiles | null;\n    }>({ elements: [], files: null });\n\n    const [error, setError] = useState<Error | null>(null);\n\n    return (\n      <Dialog\n        className=\"ttd-dialog\"\n        onCloseRequest={() => {\n          app.setOpenDialog(null);\n        }}\n        size={1200}\n        title={false}\n        {...rest}\n        autofocus={false}\n      >\n        <TTDDialogTabs dialog=\"ttd\" tab={tab}>\n          {\"__fallback\" in rest && rest.__fallback ? (\n            <p className=\"dialog-mermaid-title\">{t(\"mermaid.title\")}</p>\n          ) : (\n            <TTDDialogTabTriggers>\n              <TTDDialogTabTrigger tab=\"text-to-diagram\">\n                <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                  {t(\"labels.textToDiagram\")}\n                  <div\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n                      padding: \"1px 6px\",\n                      marginLeft: \"10px\",\n                      fontSize: 10,\n                      borderRadius: \"12px\",\n                      background: \"var(--color-promo)\",\n                      color: \"var(--color-surface-lowest)\",\n                    }}\n                  >\n                    AI Beta\n                  </div>\n                </div>\n              </TTDDialogTabTrigger>\n              <TTDDialogTabTrigger tab=\"mermaid\">Mermaid</TTDDialogTabTrigger>\n            </TTDDialogTabTriggers>\n          )}\n\n          <TTDDialogTab className=\"ttd-dialog-content\" tab=\"mermaid\">\n            <MermaidToExcalidraw\n              mermaidToExcalidrawLib={mermaidToExcalidrawLib}\n            />\n          </TTDDialogTab>\n          {!(\"__fallback\" in rest) && (\n            <TTDDialogTab className=\"ttd-dialog-content\" tab=\"text-to-diagram\">\n              <div className=\"ttd-dialog-desc\">\n                Currently we use Mermaid as a middle step, so you'll get best\n                results if you describe a diagram, workflow, flow chart, and\n                similar.\n              </div>\n              <TTDDialogPanels>\n                <TTDDialogPanel\n                  label={t(\"labels.prompt\")}\n                  panelAction={{\n                    action: onGenerate,\n                    label: \"Generate\",\n                    icon: ArrowRightIcon,\n                  }}\n                  onTextSubmitInProgess={onTextSubmitInProgess}\n                  panelActionDisabled={\n                    prompt.length > MAX_PROMPT_LENGTH ||\n                    rateLimits?.rateLimitRemaining === 0\n                  }\n                  renderTopRight={() => {\n                    if (!rateLimits) {\n                      return null;\n                    }\n\n                    return (\n                      <div\n                        className=\"ttd-dialog-rate-limit\"\n                        style={{\n                          fontSize: 12,\n                          marginLeft: \"auto\",\n                          color:\n                            rateLimits.rateLimitRemaining === 0\n                              ? \"var(--color-danger)\"\n                              : undefined,\n                        }}\n                      >\n                        {rateLimits.rateLimitRemaining} requests left today\n                      </div>\n                    );\n                  }}\n                  renderSubmitShortcut={() => <TTDDialogSubmitShortcut />}\n                  renderBottomRight={() => {\n                    if (typeof ttdGeneration?.generatedResponse === \"string\") {\n                      return (\n                        <div\n                          className=\"excalidraw-link\"\n                          style={{ marginLeft: \"auto\", fontSize: 14 }}\n                          onClick={() => {\n                            if (\n                              typeof ttdGeneration?.generatedResponse ===\n                              \"string\"\n                            ) {\n                              saveMermaidDataToStorage(\n                                ttdGeneration.generatedResponse,\n                              );\n                              setAppState({\n                                openDialog: { name: \"ttd\", tab: \"mermaid\" },\n                              });\n                            }\n                          }}\n                        >\n                          View as Mermaid\n                          <InlineIcon icon={ArrowRightIcon} />\n                        </div>\n                      );\n                    }\n                    const ratio = prompt.length / MAX_PROMPT_LENGTH;\n                    if (ratio > 0.8) {\n                      return (\n                        <div\n                          style={{\n                            marginLeft: \"auto\",\n                            fontSize: 12,\n                            fontFamily: \"monospace\",\n                            color:\n                              ratio > 1 ? \"var(--color-danger)\" : undefined,\n                          }}\n                        >\n                          Length: {prompt.length}/{MAX_PROMPT_LENGTH}\n                        </div>\n                      );\n                    }\n\n                    return null;\n                  }}\n                >\n                  <TTDDialogInput\n                    onChange={handleTextChange}\n                    input={text}\n                    placeholder={\"Describe what you want to see...\"}\n                    onKeyboardSubmit={() => {\n                      refOnGenerate.current();\n                    }}\n                  />\n                </TTDDialogPanel>\n                <TTDDialogPanel\n                  label=\"Preview\"\n                  panelAction={{\n                    action: () => {\n                      console.info(\"Panel action clicked\");\n                      insertToEditor({ app, data });\n                    },\n                    label: \"Insert\",\n                    icon: ArrowRightIcon,\n                  }}\n                >\n                  <TTDDialogOutput\n                    canvasRef={someRandomDivRef}\n                    error={error}\n                    loaded={mermaidToExcalidrawLib.loaded}\n                  />\n                </TTDDialogPanel>\n              </TTDDialogPanels>\n            </TTDDialogTab>\n          )}\n        </TTDDialogTabs>\n      </Dialog>\n    );\n  },\n);\n", "import * as RadixTabs from \"@radix-ui/react-tabs\";\n\nexport const TTDDialogTabTriggers = ({\n  children,\n  ...rest\n}: { children: React.ReactNode } & React.HTMLAttributes<HTMLDivElement>) => {\n  return (\n    <RadixTabs.List className=\"ttd-dialog-triggers\" {...rest}>\n      {children}\n    </RadixTabs.List>\n  );\n};\nTTDDialogTabTriggers.displayName = \"TTDDialogTabTriggers\";\n", "import * as RadixTabs from \"@radix-ui/react-tabs\";\n\nexport const TTDDialogTabTrigger = ({\n  children,\n  tab,\n  onSelect,\n  ...rest\n}: {\n  children: React.ReactNode;\n  tab: string;\n  onSelect?: React.ReactEventHandler<HTMLButtonElement> | undefined;\n} & Omit<React.HTMLAttributes<HTMLButtonElement>, \"onSelect\">) => {\n  return (\n    <RadixTabs.Trigger value={tab} asChild onSelect={onSelect}>\n      <button type=\"button\" className=\"ttd-dialog-tab-trigger\" {...rest}>\n        {children}\n      </button>\n    </RadixTabs.Trigger>\n  );\n};\nTTDDialogTabTrigger.displayName = \"TTDDialogTabTrigger\";\n", "import * as RadixTabs from \"@radix-ui/react-tabs\";\n\nexport const TTDDialogTab = ({\n  tab,\n  children,\n  ...rest\n}: {\n  tab: string;\n  children: React.ReactNode;\n} & React.HTMLAttributes<HTMLDivElement>) => {\n  return (\n    <RadixTabs.Content {...rest} value={tab}>\n      {children}\n    </RadixTabs.Content>\n  );\n};\nTTDDialogTab.displayName = \"TTDDialogTab\";\n", "import { useEffect, useMemo, useState, memo } from \"react\";\nimport { getCommonBounds } from \"../../element/bounds\";\nimport type { NonDeletedExcalidrawElement } from \"../../element/types\";\nimport { t } from \"../../i18n\";\nimport type {\n  AppClassProperties,\n  AppState,\n  ExcalidrawProps,\n} from \"../../types\";\nimport { CloseIcon } from \"../icons\";\nimport { Island } from \"../Island\";\nimport throttle from \"lodash.throttle\";\nimport Dimension from \"./Dimension\";\nimport Angle from \"./Angle\";\nimport FontSize from \"./FontSize\";\nimport MultiDimension from \"./MultiDimension\";\nimport { elementsAreInSameGroup } from \"../../groups\";\nimport MultiAngle from \"./MultiAngle\";\nimport MultiFontSize from \"./MultiFontSize\";\nimport Position from \"./Position\";\nimport MultiPosition from \"./MultiPosition\";\nimport Collapsible from \"./Collapsible\";\nimport { useExcalidrawAppState, useExcalidrawSetAppState } from \"../App\";\nimport { getAtomicUnits } from \"./utils\";\nimport { STATS_PANELS } from \"../../constants\";\nimport { isElbowArrow, isImageElement } from \"../../element/typeChecks\";\nimport CanvasGrid from \"./CanvasGrid\";\nimport clsx from \"clsx\";\n\nimport \"./Stats.scss\";\nimport { isGridModeEnabled } from \"../../snapping\";\nimport { getUncroppedWidthAndHeight } from \"../../element/cropElement\";\nimport { round } from \"@excalidraw/math\";\nimport { frameAndChildrenSelectedTogether } from \"../../frame\";\n\ninterface StatsProps {\n  app: AppClassProperties;\n  onClose: () => void;\n  renderCustomStats: ExcalidrawProps[\"renderCustomStats\"];\n}\n\nconst STATS_TIMEOUT = 50;\n\nexport const Stats = (props: StatsProps) => {\n  const appState = useExcalidrawAppState();\n  const sceneNonce = props.app.scene.getSceneNonce() || 1;\n  const selectedElements = props.app.scene.getSelectedElements({\n    selectedElementIds: appState.selectedElementIds,\n    includeBoundTextElement: false,\n  });\n  const gridModeEnabled = isGridModeEnabled(props.app);\n\n  return (\n    <StatsInner\n      {...props}\n      appState={appState}\n      sceneNonce={sceneNonce}\n      selectedElements={selectedElements}\n      gridModeEnabled={gridModeEnabled}\n    />\n  );\n};\n\nconst StatsRow = ({\n  children,\n  columns = 1,\n  heading,\n  style,\n  ...rest\n}: {\n  children: React.ReactNode;\n  columns?: number;\n  heading?: boolean;\n  style?: React.CSSProperties;\n} & React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={clsx(\"exc-stats__row\", { \"exc-stats__row--heading\": heading })}\n    style={{\n      gridTemplateColumns: `repeat(${columns}, 1fr)`,\n      ...style,\n    }}\n    {...rest}\n  >\n    {children}\n  </div>\n);\nStatsRow.displayName = \"StatsRow\";\n\nconst StatsRows = ({\n  children,\n  order,\n  style,\n  ...rest\n}: {\n  children: React.ReactNode;\n  order?: number;\n  style?: React.CSSProperties;\n} & React.HTMLAttributes<HTMLDivElement>) => (\n  <div className=\"exc-stats__rows\" style={{ order, ...style }} {...rest}>\n    {children}\n  </div>\n);\nStatsRows.displayName = \"StatsRows\";\n\nStats.StatsRow = StatsRow;\nStats.StatsRows = StatsRows;\n\nexport const StatsInner = memo(\n  ({\n    app,\n    onClose,\n    renderCustomStats,\n    selectedElements,\n    appState,\n    sceneNonce,\n    gridModeEnabled,\n  }: StatsProps & {\n    sceneNonce: number;\n    selectedElements: readonly NonDeletedExcalidrawElement[];\n    appState: AppState;\n    gridModeEnabled: boolean;\n  }) => {\n    const scene = app.scene;\n    const elements = scene.getNonDeletedElements();\n    const elementsMap = scene.getNonDeletedElementsMap();\n    const setAppState = useExcalidrawSetAppState();\n\n    const singleElement =\n      selectedElements.length === 1 ? selectedElements[0] : null;\n\n    const multipleElements =\n      selectedElements.length > 1 ? selectedElements : null;\n\n    const cropMode =\n      appState.croppingElementId && isImageElement(singleElement);\n\n    const unCroppedDimension = cropMode\n      ? getUncroppedWidthAndHeight(singleElement)\n      : null;\n\n    const [sceneDimension, setSceneDimension] = useState<{\n      width: number;\n      height: number;\n    }>({\n      width: 0,\n      height: 0,\n    });\n\n    const throttledSetSceneDimension = useMemo(\n      () =>\n        throttle((elements: readonly NonDeletedExcalidrawElement[]) => {\n          const boundingBox = getCommonBounds(elements);\n          setSceneDimension({\n            width: Math.round(boundingBox[2]) - Math.round(boundingBox[0]),\n            height: Math.round(boundingBox[3]) - Math.round(boundingBox[1]),\n          });\n        }, STATS_TIMEOUT),\n      [],\n    );\n\n    useEffect(() => {\n      throttledSetSceneDimension(elements);\n    }, [sceneNonce, elements, throttledSetSceneDimension]);\n\n    useEffect(\n      () => () => throttledSetSceneDimension.cancel(),\n      [throttledSetSceneDimension],\n    );\n\n    const atomicUnits = useMemo(() => {\n      return getAtomicUnits(selectedElements, appState);\n    }, [selectedElements, appState]);\n\n    const _frameAndChildrenSelectedTogether = useMemo(() => {\n      return frameAndChildrenSelectedTogether(selectedElements);\n    }, [selectedElements]);\n\n    return (\n      <div className=\"exc-stats\">\n        <Island padding={3}>\n          <div className=\"title\">\n            <h2>{t(\"stats.title\")}</h2>\n            <div className=\"close\" onClick={onClose}>\n              {CloseIcon}\n            </div>\n          </div>\n\n          <Collapsible\n            label={<h3>{t(\"stats.generalStats\")}</h3>}\n            open={!!(appState.stats.panels & STATS_PANELS.generalStats)}\n            openTrigger={() =>\n              setAppState((state) => {\n                return {\n                  stats: {\n                    open: true,\n                    panels: state.stats.panels ^ STATS_PANELS.generalStats,\n                  },\n                };\n              })\n            }\n          >\n            <StatsRows>\n              <StatsRow heading>{t(\"stats.scene\")}</StatsRow>\n              <StatsRow columns={2}>\n                <div>{t(\"stats.shapes\")}</div>\n                <div>{elements.length}</div>\n              </StatsRow>\n              <StatsRow columns={2}>\n                <div>{t(\"stats.width\")}</div>\n                <div>{sceneDimension.width}</div>\n              </StatsRow>\n              <StatsRow columns={2}>\n                <div>{t(\"stats.height\")}</div>\n                <div>{sceneDimension.height}</div>\n              </StatsRow>\n              {gridModeEnabled && (\n                <>\n                  <StatsRow heading>Canvas</StatsRow>\n                  <StatsRow>\n                    <CanvasGrid\n                      property=\"gridStep\"\n                      scene={scene}\n                      appState={appState}\n                      setAppState={setAppState}\n                    />\n                  </StatsRow>\n                </>\n              )}\n            </StatsRows>\n\n            {renderCustomStats?.(elements, appState)}\n          </Collapsible>\n\n          {!_frameAndChildrenSelectedTogether && selectedElements.length > 0 && (\n            <div\n              id=\"elementStats\"\n              style={{\n                marginTop: 12,\n              }}\n            >\n              <Collapsible\n                label={<h3>{t(\"stats.elementProperties\")}</h3>}\n                open={\n                  !!(appState.stats.panels & STATS_PANELS.elementProperties)\n                }\n                openTrigger={() =>\n                  setAppState((state) => {\n                    return {\n                      stats: {\n                        open: true,\n                        panels:\n                          state.stats.panels ^ STATS_PANELS.elementProperties,\n                      },\n                    };\n                  })\n                }\n              >\n                <StatsRows>\n                  {singleElement && (\n                    <>\n                      {cropMode && (\n                        <StatsRow heading>\n                          {t(\"labels.unCroppedDimension\")}\n                        </StatsRow>\n                      )}\n\n                      {appState.croppingElementId &&\n                        isImageElement(singleElement) &&\n                        unCroppedDimension && (\n                          <StatsRow columns={2}>\n                            <div>{t(\"stats.width\")}</div>\n                            <div>{round(unCroppedDimension.width, 2)}</div>\n                          </StatsRow>\n                        )}\n\n                      {appState.croppingElementId &&\n                        isImageElement(singleElement) &&\n                        unCroppedDimension && (\n                          <StatsRow columns={2}>\n                            <div>{t(\"stats.height\")}</div>\n                            <div>{round(unCroppedDimension.height, 2)}</div>\n                          </StatsRow>\n                        )}\n\n                      <StatsRow heading data-testid=\"stats-element-type\">\n                        {appState.croppingElementId\n                          ? t(\"labels.imageCropping\")\n                          : t(`element.${singleElement.type}`)}\n                      </StatsRow>\n\n                      <StatsRow>\n                        <Position\n                          element={singleElement}\n                          property=\"x\"\n                          elementsMap={elementsMap}\n                          scene={scene}\n                          appState={appState}\n                        />\n                      </StatsRow>\n                      <StatsRow>\n                        <Position\n                          element={singleElement}\n                          property=\"y\"\n                          elementsMap={elementsMap}\n                          scene={scene}\n                          appState={appState}\n                        />\n                      </StatsRow>\n                      <StatsRow>\n                        <Dimension\n                          property=\"width\"\n                          element={singleElement}\n                          scene={scene}\n                          appState={appState}\n                        />\n                      </StatsRow>\n                      <StatsRow>\n                        <Dimension\n                          property=\"height\"\n                          element={singleElement}\n                          scene={scene}\n                          appState={appState}\n                        />\n                      </StatsRow>\n                      {!isElbowArrow(singleElement) && (\n                        <StatsRow>\n                          <Angle\n                            property=\"angle\"\n                            element={singleElement}\n                            scene={scene}\n                            appState={appState}\n                          />\n                        </StatsRow>\n                      )}\n                      <StatsRow>\n                        <FontSize\n                          property=\"fontSize\"\n                          element={singleElement}\n                          scene={scene}\n                          appState={appState}\n                        />\n                      </StatsRow>\n                    </>\n                  )}\n\n                  {multipleElements && (\n                    <>\n                      {elementsAreInSameGroup(multipleElements) && (\n                        <StatsRow heading>{t(\"element.group\")}</StatsRow>\n                      )}\n\n                      <StatsRow columns={2} style={{ margin: \"0.3125rem 0\" }}>\n                        <div>{t(\"stats.shapes\")}</div>\n                        <div>{selectedElements.length}</div>\n                      </StatsRow>\n\n                      <StatsRow>\n                        <MultiPosition\n                          property=\"x\"\n                          elements={multipleElements}\n                          elementsMap={elementsMap}\n                          atomicUnits={atomicUnits}\n                          scene={scene}\n                          appState={appState}\n                        />\n                      </StatsRow>\n                      <StatsRow>\n                        <MultiPosition\n                          property=\"y\"\n                          elements={multipleElements}\n                          elementsMap={elementsMap}\n                          atomicUnits={atomicUnits}\n                          scene={scene}\n                          appState={appState}\n                        />\n                      </StatsRow>\n                      <StatsRow>\n                        <MultiDimension\n                          property=\"width\"\n                          elements={multipleElements}\n                          elementsMap={elementsMap}\n                          atomicUnits={atomicUnits}\n                          scene={scene}\n                          appState={appState}\n                        />\n                      </StatsRow>\n                      <StatsRow>\n                        <MultiDimension\n                          property=\"height\"\n                          elements={multipleElements}\n                          elementsMap={elementsMap}\n                          atomicUnits={atomicUnits}\n                          scene={scene}\n                          appState={appState}\n                        />\n                      </StatsRow>\n                      <StatsRow>\n                        <MultiAngle\n                          property=\"angle\"\n                          elements={multipleElements}\n                          scene={scene}\n                          appState={appState}\n                        />\n                      </StatsRow>\n                      <StatsRow>\n                        <MultiFontSize\n                          property=\"fontSize\"\n                          elements={multipleElements}\n                          scene={scene}\n                          appState={appState}\n                          elementsMap={elementsMap}\n                        />\n                      </StatsRow>\n                    </>\n                  )}\n                </StatsRows>\n              </Collapsible>\n            </div>\n          )}\n        </Island>\n      </div>\n    );\n  },\n  (prev, next) => {\n    return (\n      prev.sceneNonce === next.sceneNonce &&\n      prev.selectedElements === next.selectedElements &&\n      prev.appState.stats.panels === next.appState.stats.panels &&\n      prev.gridModeEnabled === next.gridModeEnabled &&\n      prev.appState.gridStep === next.appState.gridStep &&\n      prev.appState.croppingElementId === next.appState.croppingElementId\n    );\n  },\n);\n", "import { useEffect, useRef, useState } from \"react\";\nimport { EVENT } from \"../../constants\";\nimport { KEYS } from \"../../keys\";\nimport type { ElementsMap, ExcalidrawElement } from \"../../element/types\";\nimport { deepCopyElement } from \"../../element/newElement\";\nimport clsx from \"clsx\";\nimport { useApp } from \"../App\";\nimport { InlineIcon } from \"../InlineIcon\";\nimport type { StatsInputProperty } from \"./utils\";\nimport { SMALLEST_DELTA } from \"./utils\";\nimport { CaptureUpdateAction } from \"../../store\";\nimport type Scene from \"../../scene/Scene\";\n\nimport \"./DragInput.scss\";\nimport type { AppState } from \"../../types\";\nimport { cloneJSON } from \"../../utils\";\n\nexport type DragInputCallbackType<\n  P extends StatsInputProperty,\n  E = ExcalidrawElement,\n> = (props: {\n  accumulatedChange: number;\n  instantChange: number;\n  originalElements: readonly E[];\n  originalElementsMap: ElementsMap;\n  shouldKeepAspectRatio: boolean;\n  shouldChangeByStepSize: boolean;\n  scene: Scene;\n  nextValue?: number;\n  property: P;\n  originalAppState: AppState;\n  setInputValue: (value: number) => void;\n}) => void;\n\ninterface StatsDragInputProps<\n  T extends StatsInputProperty,\n  E = ExcalidrawElement,\n> {\n  label: string | React.ReactNode;\n  icon?: React.ReactNode;\n  value: number | \"Mixed\";\n  elements: readonly E[];\n  editable?: boolean;\n  shouldKeepAspectRatio?: boolean;\n  dragInputCallback: DragInputCallbackType<T, E>;\n  property: T;\n  scene: Scene;\n  appState: AppState;\n  /** how many px you need to drag to get 1 unit change */\n  sensitivity?: number;\n}\n\nconst StatsDragInput = <\n  T extends StatsInputProperty,\n  E extends ExcalidrawElement = ExcalidrawElement,\n>({\n  label,\n  icon,\n  dragInputCallback,\n  value,\n  elements,\n  editable = true,\n  shouldKeepAspectRatio,\n  property,\n  scene,\n  appState,\n  sensitivity = 1,\n}: StatsDragInputProps<T, E>) => {\n  const app = useApp();\n  const inputRef = useRef<HTMLInputElement>(null);\n  const labelRef = useRef<HTMLDivElement>(null);\n\n  const [inputValue, setInputValue] = useState(value.toString());\n\n  const stateRef = useRef<{\n    originalAppState: AppState;\n    originalElements: readonly E[];\n    lastUpdatedValue: string;\n    updatePending: boolean;\n  }>(null!);\n  if (!stateRef.current) {\n    stateRef.current = {\n      originalAppState: cloneJSON(appState),\n      originalElements: elements,\n      lastUpdatedValue: inputValue,\n      updatePending: false,\n    };\n  }\n\n  useEffect(() => {\n    const inputValue = value.toString();\n    setInputValue(inputValue);\n    stateRef.current.lastUpdatedValue = inputValue;\n  }, [value]);\n\n  const handleInputValue = (\n    updatedValue: string,\n    elements: readonly E[],\n    appState: AppState,\n  ) => {\n    if (!stateRef.current.updatePending) {\n      return false;\n    }\n    stateRef.current.updatePending = false;\n\n    const parsed = Number(updatedValue);\n    if (isNaN(parsed)) {\n      setInputValue(value.toString());\n      return;\n    }\n\n    const rounded = Number(parsed.toFixed(2));\n    const original = Number(value);\n\n    // only update when\n    // 1. original was \"Mixed\" and we have a new value\n    // 2. original was not \"Mixed\" and the difference between a new value and previous value is greater\n    //    than the smallest delta allowed, which is 0.01\n    // reason: idempotent to avoid unnecessary\n    if (isNaN(original) || Math.abs(rounded - original) >= SMALLEST_DELTA) {\n      stateRef.current.lastUpdatedValue = updatedValue;\n      dragInputCallback({\n        accumulatedChange: 0,\n        instantChange: 0,\n        originalElements: elements,\n        originalElementsMap: app.scene.getNonDeletedElementsMap(),\n        shouldKeepAspectRatio: shouldKeepAspectRatio!!,\n        shouldChangeByStepSize: false,\n        scene,\n        nextValue: rounded,\n        property,\n        originalAppState: appState,\n        setInputValue: (value) => setInputValue(String(value)),\n      });\n      app.syncActionResult({\n        captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n      });\n    }\n  };\n\n  const callbacksRef = useRef<\n    Partial<{\n      handleInputValue: typeof handleInputValue;\n      onPointerUp: (event: PointerEvent) => void;\n      onPointerMove: (event: PointerEvent) => void;\n    }>\n  >({});\n  callbacksRef.current.handleInputValue = handleInputValue;\n\n  // make sure that clicking on canvas (which umounts the component)\n  // updates current input value (blur isn't triggered)\n  useEffect(() => {\n    const input = inputRef.current;\n    const callbacks = callbacksRef.current;\n    return () => {\n      const nextValue = input?.value;\n      if (nextValue) {\n        callbacks.handleInputValue?.(\n          nextValue,\n          stateRef.current.originalElements,\n          stateRef.current.originalAppState,\n        );\n      }\n\n      // generally not needed, but in case `pointerup` doesn't fire and\n      // we don't remove the listeners that way, we should at least remove\n      // on unmount\n      window.removeEventListener(\n        EVENT.POINTER_MOVE,\n        callbacks.onPointerMove!,\n        false,\n      );\n      window.removeEventListener(\n        EVENT.POINTER_UP,\n        callbacks.onPointerUp!,\n        false,\n      );\n    };\n  }, [\n    // we need to track change of `editable` state as mount/unmount\n    // because react doesn't trigger `blur` when a an input is blurred due\n    // to being disabled (https://github.com/facebook/react/issues/9142).\n    // As such, if we keep rendering disabled inputs, then change in selection\n    // to an element that has a given property as non-editable would not trigger\n    // blur/unmount and wouldn't update the value.\n    editable,\n  ]);\n\n  if (!editable) {\n    return null;\n  }\n\n  return (\n    <div\n      className={clsx(\"drag-input-container\", !editable && \"disabled\")}\n      data-testid={label}\n    >\n      <div\n        className=\"drag-input-label\"\n        ref={labelRef}\n        onPointerDown={(event) => {\n          if (inputRef.current && editable) {\n            document.body.classList.add(\"excalidraw-cursor-resize\");\n\n            let startValue = Number(inputRef.current.value);\n            if (isNaN(startValue)) {\n              startValue = 0;\n            }\n\n            let lastPointer: {\n              x: number;\n              y: number;\n            } | null = null;\n\n            let originalElementsMap: Map<string, ExcalidrawElement> | null =\n              app.scene\n                .getNonDeletedElements()\n                .reduce((acc: ElementsMap, element) => {\n                  acc.set(element.id, deepCopyElement(element));\n                  return acc;\n                }, new Map());\n\n            let originalElements: readonly E[] | null = elements.map(\n              (element) => originalElementsMap!.get(element.id) as E,\n            );\n\n            const originalAppState: AppState = cloneJSON(appState);\n\n            let accumulatedChange = 0;\n            let stepChange = 0;\n\n            const onPointerMove = (event: PointerEvent) => {\n              if (\n                lastPointer &&\n                originalElementsMap !== null &&\n                originalElements !== null\n              ) {\n                const instantChange = event.clientX - lastPointer.x;\n\n                if (instantChange !== 0) {\n                  stepChange += instantChange;\n\n                  if (Math.abs(stepChange) >= sensitivity) {\n                    stepChange =\n                      Math.sign(stepChange) *\n                      Math.floor(Math.abs(stepChange) / sensitivity);\n\n                    accumulatedChange += stepChange;\n\n                    dragInputCallback({\n                      accumulatedChange,\n                      instantChange: stepChange,\n                      originalElements,\n                      originalElementsMap,\n                      shouldKeepAspectRatio: shouldKeepAspectRatio!!,\n                      shouldChangeByStepSize: event.shiftKey,\n                      property,\n                      scene,\n                      originalAppState,\n                      setInputValue: (value) => setInputValue(String(value)),\n                    });\n\n                    stepChange = 0;\n                  }\n                }\n              }\n\n              lastPointer = {\n                x: event.clientX,\n                y: event.clientY,\n              };\n            };\n\n            const onPointerUp = () => {\n              window.removeEventListener(\n                EVENT.POINTER_MOVE,\n                onPointerMove,\n                false,\n              );\n\n              app.syncActionResult({\n                captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n              });\n\n              lastPointer = null;\n              accumulatedChange = 0;\n              stepChange = 0;\n              originalElements = null;\n              originalElementsMap = null;\n\n              document.body.classList.remove(\"excalidraw-cursor-resize\");\n\n              window.removeEventListener(EVENT.POINTER_UP, onPointerUp, false);\n            };\n\n            callbacksRef.current.onPointerMove = onPointerMove;\n            callbacksRef.current.onPointerUp = onPointerUp;\n\n            window.addEventListener(EVENT.POINTER_MOVE, onPointerMove, false);\n            window.addEventListener(EVENT.POINTER_UP, onPointerUp, false);\n          }\n        }}\n        onPointerEnter={() => {\n          if (labelRef.current) {\n            labelRef.current.style.cursor = \"ew-resize\";\n          }\n        }}\n      >\n        {icon ? <InlineIcon icon={icon} /> : label}\n      </div>\n      <input\n        className=\"drag-input\"\n        autoComplete=\"off\"\n        spellCheck=\"false\"\n        onKeyDown={(event) => {\n          if (editable) {\n            const eventTarget = event.target;\n            if (\n              eventTarget instanceof HTMLInputElement &&\n              event.key === KEYS.ENTER\n            ) {\n              handleInputValue(eventTarget.value, elements, appState);\n              app.focusContainer();\n            }\n          }\n        }}\n        ref={inputRef}\n        value={inputValue}\n        onChange={(event) => {\n          stateRef.current.updatePending = true;\n          setInputValue(event.target.value);\n        }}\n        onFocus={(event) => {\n          event.target.select();\n          stateRef.current.originalElements = elements;\n          stateRef.current.originalAppState = cloneJSON(appState);\n        }}\n        onBlur={(event) => {\n          if (!inputValue) {\n            setInputValue(value.toString());\n          } else if (editable) {\n            handleInputValue(\n              event.target.value,\n              stateRef.current.originalElements,\n              stateRef.current.originalAppState,\n            );\n          }\n        }}\n        disabled={!editable}\n      />\n    </div>\n  );\n};\n\nexport default StatsDragInput;\n", "import type { Radians } from \"@excalidraw/math\";\nimport { pointFrom, pointRotateRads } from \"@excalidraw/math\";\nimport {\n  bindOrUnbindLinearElements,\n  updateBoundElements,\n} from \"../../element/binding\";\nimport { mutateElement } from \"../../element/mutateElement\";\nimport { getBoundTextElement } from \"../../element/textElement\";\nimport {\n  isFrameLikeElement,\n  isLinearElement,\n  isTextElement,\n} from \"../../element/typeChecks\";\nimport type {\n  ElementsMap,\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n  NonDeletedSceneElementsMap,\n} from \"../../element/types\";\nimport {\n  getSelectedGroupIds,\n  getElementsInGroup,\n  isInGroup,\n} from \"../../groups\";\nimport type Scene from \"../../scene/Scene\";\nimport type { AppState } from \"../../types\";\n\nexport type StatsInputProperty =\n  | \"x\"\n  | \"y\"\n  | \"width\"\n  | \"height\"\n  | \"angle\"\n  | \"fontSize\"\n  | \"gridStep\";\n\nexport const SMALLEST_DELTA = 0.01;\n\nexport const isPropertyEditable = (\n  element: ExcalidrawElement,\n  property: keyof ExcalidrawElement,\n) => {\n  if (property === \"height\" && isTextElement(element)) {\n    return false;\n  }\n  if (property === \"width\" && isTextElement(element)) {\n    return false;\n  }\n  if (property === \"angle\" && isFrameLikeElement(element)) {\n    return false;\n  }\n  return true;\n};\n\nexport const getStepSizedValue = (value: number, stepSize: number) => {\n  const v = value + stepSize / 2;\n  return v - (v % stepSize);\n};\n\nexport type AtomicUnit = Record<string, true>;\nexport const getElementsInAtomicUnit = (\n  atomicUnit: AtomicUnit,\n  elementsMap: ElementsMap,\n  originalElementsMap?: ElementsMap,\n) => {\n  return Object.keys(atomicUnit)\n    .map((id) => ({\n      original: (originalElementsMap ?? elementsMap).get(id),\n      latest: elementsMap.get(id),\n    }))\n    .filter((el) => el.original !== undefined && el.latest !== undefined) as {\n    original: NonDeletedExcalidrawElement;\n    latest: NonDeletedExcalidrawElement;\n  }[];\n};\n\nexport const newOrigin = (\n  x1: number,\n  y1: number,\n  w1: number,\n  h1: number,\n  w2: number,\n  h2: number,\n  angle: number,\n) => {\n  /**\n   * The formula below is the result of solving\n   *   rotate(x1, y1, cx1, cy1, angle) = rotate(x2, y2, cx2, cy2, angle)\n   * where rotate is the function defined in math.ts\n   *\n   * This is so that the new origin (x2, y2),\n   * when rotated against the new center (cx2, cy2),\n   * coincides with (x1, y1) rotated against (cx1, cy1)\n   *\n   * The reason for doing this computation is so the element's top left corner\n   * on the canvas remains fixed after any changes in its dimension.\n   */\n\n  return {\n    x:\n      x1 +\n      (w1 - w2) / 2 +\n      ((w2 - w1) / 2) * Math.cos(angle) +\n      ((h1 - h2) / 2) * Math.sin(angle),\n    y:\n      y1 +\n      (h1 - h2) / 2 +\n      ((w2 - w1) / 2) * Math.sin(angle) +\n      ((h2 - h1) / 2) * Math.cos(angle),\n  };\n};\n\nexport const moveElement = (\n  newTopLeftX: number,\n  newTopLeftY: number,\n  originalElement: ExcalidrawElement,\n  elementsMap: NonDeletedSceneElementsMap,\n  elements: readonly NonDeletedExcalidrawElement[],\n  scene: Scene,\n  originalElementsMap: ElementsMap,\n  shouldInformMutation = true,\n) => {\n  const latestElement = elementsMap.get(originalElement.id);\n  if (!latestElement) {\n    return;\n  }\n  const [cx, cy] = [\n    originalElement.x + originalElement.width / 2,\n    originalElement.y + originalElement.height / 2,\n  ];\n  const [topLeftX, topLeftY] = pointRotateRads(\n    pointFrom(originalElement.x, originalElement.y),\n    pointFrom(cx, cy),\n    originalElement.angle,\n  );\n\n  const changeInX = newTopLeftX - topLeftX;\n  const changeInY = newTopLeftY - topLeftY;\n\n  const [x, y] = pointRotateRads(\n    pointFrom(newTopLeftX, newTopLeftY),\n    pointFrom(cx + changeInX, cy + changeInY),\n    -originalElement.angle as Radians,\n  );\n\n  mutateElement(\n    latestElement,\n    {\n      x,\n      y,\n    },\n    shouldInformMutation,\n  );\n  updateBindings(latestElement, elementsMap, elements, scene);\n\n  const boundTextElement = getBoundTextElement(\n    originalElement,\n    originalElementsMap,\n  );\n  if (boundTextElement) {\n    const latestBoundTextElement = elementsMap.get(boundTextElement.id);\n    latestBoundTextElement &&\n      mutateElement(\n        latestBoundTextElement,\n        {\n          x: boundTextElement.x + changeInX,\n          y: boundTextElement.y + changeInY,\n        },\n        shouldInformMutation,\n      );\n  }\n};\n\nexport const getAtomicUnits = (\n  targetElements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  const selectedGroupIds = getSelectedGroupIds(appState);\n  const _atomicUnits = selectedGroupIds.map((gid) => {\n    return getElementsInGroup(targetElements, gid).reduce((acc, el) => {\n      acc[el.id] = true;\n      return acc;\n    }, {} as AtomicUnit);\n  });\n  targetElements\n    .filter((el) => !isInGroup(el))\n    .forEach((el) => {\n      _atomicUnits.push({\n        [el.id]: true,\n      });\n    });\n  return _atomicUnits;\n};\n\nexport const updateBindings = (\n  latestElement: ExcalidrawElement,\n  elementsMap: NonDeletedSceneElementsMap,\n  elements: readonly NonDeletedExcalidrawElement[],\n  scene: Scene,\n  options?: {\n    simultaneouslyUpdated?: readonly ExcalidrawElement[];\n    newSize?: { width: number; height: number };\n    zoom?: AppState[\"zoom\"];\n  },\n) => {\n  if (isLinearElement(latestElement)) {\n    bindOrUnbindLinearElements(\n      [latestElement],\n      elementsMap,\n      elements,\n      scene,\n      true,\n      [],\n      options?.zoom,\n    );\n  } else {\n    updateBoundElements(latestElement, elementsMap, options);\n  }\n};\n", "import type { ExcalidrawElement } from \"../../element/types\";\nimport DragInput from \"./DragInput\";\nimport type { DragInputCallbackType } from \"./DragInput\";\nimport { getStepSizedValue, isPropertyEditable } from \"./utils\";\nimport { MIN_WIDTH_OR_HEIGHT } from \"../../constants\";\nimport { resizeSingleElement } from \"../../element/resizeElements\";\nimport type Scene from \"../../scene/Scene\";\nimport type { AppState } from \"../../types\";\nimport { isImageElement } from \"../../element/typeChecks\";\nimport {\n  MINIMAL_CROP_SIZE,\n  getUncroppedWidthAndHeight,\n} from \"../../element/cropElement\";\nimport { mutateElement } from \"../../element/mutateElement\";\nimport { clamp, round } from \"@excalidraw/math\";\n\ninterface DimensionDragInputProps {\n  property: \"width\" | \"height\";\n  element: ExcalidrawElement;\n  scene: Scene;\n  appState: AppState;\n}\n\nconst STEP_SIZE = 10;\nconst _shouldKeepAspectRatio = (element: ExcalidrawElement) => {\n  return element.type === \"image\";\n};\n\nconst handleDimensionChange: DragInputCallbackType<\n  DimensionDragInputProps[\"property\"]\n> = ({\n  accumulatedChange,\n  originalElements,\n  originalElementsMap,\n  shouldKeepAspectRatio,\n  shouldChangeByStepSize,\n  nextValue,\n  property,\n  originalAppState,\n  instantChange,\n  scene,\n}) => {\n  const elementsMap = scene.getNonDeletedElementsMap();\n  const origElement = originalElements[0];\n  const latestElement = elementsMap.get(origElement.id);\n  if (origElement && latestElement) {\n    const keepAspectRatio =\n      shouldKeepAspectRatio || _shouldKeepAspectRatio(origElement);\n    const aspectRatio = origElement.width / origElement.height;\n\n    if (originalAppState.croppingElementId === origElement.id) {\n      const element = elementsMap.get(origElement.id);\n\n      if (!element || !isImageElement(element) || !element.crop) {\n        return;\n      }\n\n      const crop = element.crop;\n      let nextCrop = { ...crop };\n\n      const isFlippedByX = element.scale[0] === -1;\n      const isFlippedByY = element.scale[1] === -1;\n\n      const { width: uncroppedWidth, height: uncroppedHeight } =\n        getUncroppedWidthAndHeight(element);\n\n      const naturalToUncroppedWidthRatio = crop.naturalWidth / uncroppedWidth;\n      const naturalToUncroppedHeightRatio =\n        crop.naturalHeight / uncroppedHeight;\n\n      const MAX_POSSIBLE_WIDTH = isFlippedByX\n        ? crop.width + crop.x\n        : crop.naturalWidth - crop.x;\n\n      const MAX_POSSIBLE_HEIGHT = isFlippedByY\n        ? crop.height + crop.y\n        : crop.naturalHeight - crop.y;\n\n      const MIN_WIDTH = MINIMAL_CROP_SIZE * naturalToUncroppedWidthRatio;\n      const MIN_HEIGHT = MINIMAL_CROP_SIZE * naturalToUncroppedHeightRatio;\n\n      if (nextValue !== undefined) {\n        if (property === \"width\") {\n          const nextValueInNatural = nextValue * naturalToUncroppedWidthRatio;\n\n          const nextCropWidth = clamp(\n            nextValueInNatural,\n            MIN_WIDTH,\n            MAX_POSSIBLE_WIDTH,\n          );\n\n          nextCrop = {\n            ...nextCrop,\n            width: nextCropWidth,\n            x: isFlippedByX ? crop.x + crop.width - nextCropWidth : crop.x,\n          };\n        } else if (property === \"height\") {\n          const nextValueInNatural = nextValue * naturalToUncroppedHeightRatio;\n          const nextCropHeight = clamp(\n            nextValueInNatural,\n            MIN_HEIGHT,\n            MAX_POSSIBLE_HEIGHT,\n          );\n\n          nextCrop = {\n            ...nextCrop,\n            height: nextCropHeight,\n            y: isFlippedByY ? crop.y + crop.height - nextCropHeight : crop.y,\n          };\n        }\n\n        mutateElement(element, {\n          crop: nextCrop,\n          width: nextCrop.width / (crop.naturalWidth / uncroppedWidth),\n          height: nextCrop.height / (crop.naturalHeight / uncroppedHeight),\n        });\n        return;\n      }\n\n      const changeInWidth = property === \"width\" ? instantChange : 0;\n      const changeInHeight = property === \"height\" ? instantChange : 0;\n\n      const nextCropWidth = clamp(\n        crop.width + changeInWidth,\n        MIN_WIDTH,\n        MAX_POSSIBLE_WIDTH,\n      );\n\n      const nextCropHeight = clamp(\n        crop.height + changeInHeight,\n        MIN_WIDTH,\n        MAX_POSSIBLE_HEIGHT,\n      );\n\n      nextCrop = {\n        ...crop,\n        x: isFlippedByX ? crop.x + crop.width - nextCropWidth : crop.x,\n        y: isFlippedByY ? crop.y + crop.height - nextCropHeight : crop.y,\n        width: nextCropWidth,\n        height: nextCropHeight,\n      };\n\n      mutateElement(element, {\n        crop: nextCrop,\n        width: nextCrop.width / (crop.naturalWidth / uncroppedWidth),\n        height: nextCrop.height / (crop.naturalHeight / uncroppedHeight),\n      });\n\n      return;\n    }\n\n    if (nextValue !== undefined) {\n      const nextWidth = Math.max(\n        property === \"width\"\n          ? nextValue\n          : keepAspectRatio\n          ? nextValue * aspectRatio\n          : origElement.width,\n        MIN_WIDTH_OR_HEIGHT,\n      );\n      const nextHeight = Math.max(\n        property === \"height\"\n          ? nextValue\n          : keepAspectRatio\n          ? nextValue / aspectRatio\n          : origElement.height,\n        MIN_WIDTH_OR_HEIGHT,\n      );\n\n      resizeSingleElement(\n        nextWidth,\n        nextHeight,\n        latestElement,\n        origElement,\n        elementsMap,\n        originalElementsMap,\n        property === \"width\" ? \"e\" : \"s\",\n        {\n          shouldMaintainAspectRatio: keepAspectRatio,\n        },\n      );\n\n      return;\n    }\n    const changeInWidth = property === \"width\" ? accumulatedChange : 0;\n    const changeInHeight = property === \"height\" ? accumulatedChange : 0;\n\n    let nextWidth = Math.max(0, origElement.width + changeInWidth);\n    if (property === \"width\") {\n      if (shouldChangeByStepSize) {\n        nextWidth = getStepSizedValue(nextWidth, STEP_SIZE);\n      } else {\n        nextWidth = Math.round(nextWidth);\n      }\n    }\n\n    let nextHeight = Math.max(0, origElement.height + changeInHeight);\n    if (property === \"height\") {\n      if (shouldChangeByStepSize) {\n        nextHeight = getStepSizedValue(nextHeight, STEP_SIZE);\n      } else {\n        nextHeight = Math.round(nextHeight);\n      }\n    }\n\n    if (keepAspectRatio) {\n      if (property === \"width\") {\n        nextHeight = Math.round((nextWidth / aspectRatio) * 100) / 100;\n      } else {\n        nextWidth = Math.round(nextHeight * aspectRatio * 100) / 100;\n      }\n    }\n\n    nextHeight = Math.max(MIN_WIDTH_OR_HEIGHT, nextHeight);\n    nextWidth = Math.max(MIN_WIDTH_OR_HEIGHT, nextWidth);\n\n    resizeSingleElement(\n      nextWidth,\n      nextHeight,\n      latestElement,\n      origElement,\n      elementsMap,\n      originalElementsMap,\n      property === \"width\" ? \"e\" : \"s\",\n      {\n        shouldMaintainAspectRatio: keepAspectRatio,\n      },\n    );\n  }\n};\n\nconst DimensionDragInput = ({\n  property,\n  element,\n  scene,\n  appState,\n}: DimensionDragInputProps) => {\n  let value = round(property === \"width\" ? element.width : element.height, 2);\n\n  if (\n    appState.croppingElementId &&\n    appState.croppingElementId === element.id &&\n    isImageElement(element) &&\n    element.crop\n  ) {\n    const { width: uncroppedWidth, height: uncroppedHeight } =\n      getUncroppedWidthAndHeight(element);\n    if (property === \"width\") {\n      const ratio = uncroppedWidth / element.crop.naturalWidth;\n      value = round(element.crop.width * ratio, 2);\n    }\n    if (property === \"height\") {\n      const ratio = uncroppedHeight / element.crop.naturalHeight;\n      value = round(element.crop.height * ratio, 2);\n    }\n  }\n\n  return (\n    <DragInput\n      label={property === \"width\" ? \"W\" : \"H\"}\n      elements={[element]}\n      dragInputCallback={handleDimensionChange}\n      value={value}\n      editable={isPropertyEditable(element, property)}\n      scene={scene}\n      appState={appState}\n      property={property}\n    />\n  );\n};\n\nexport default DimensionDragInput;\n", "import { mutateElement } from \"../../element/mutateElement\";\nimport { getBoundTextElement } from \"../../element/textElement\";\nimport { isArrowElement, isElbowArrow } from \"../../element/typeChecks\";\nimport type { ExcalidrawElement } from \"../../element/types\";\nimport { angleIcon } from \"../icons\";\nimport DragInput from \"./DragInput\";\nimport type { DragInputCallbackType } from \"./DragInput\";\nimport { getStepSizedValue, isPropertyEditable, updateBindings } from \"./utils\";\nimport type Scene from \"../../scene/Scene\";\nimport type { AppState } from \"../../types\";\nimport type { Degrees } from \"@excalidraw/math\";\nimport { degreesToRadians, radiansToDegrees } from \"@excalidraw/math\";\n\ninterface AngleProps {\n  element: ExcalidrawElement;\n  scene: Scene;\n  appState: AppState;\n  property: \"angle\";\n}\n\nconst STEP_SIZE = 15;\n\nconst handleDegreeChange: DragInputCallbackType<AngleProps[\"property\"]> = ({\n  accumulatedChange,\n  originalElements,\n  shouldChangeByStepSize,\n  nextValue,\n  scene,\n}) => {\n  const elementsMap = scene.getNonDeletedElementsMap();\n  const elements = scene.getNonDeletedElements();\n  const origElement = originalElements[0];\n  if (origElement && !isElbowArrow(origElement)) {\n    const latestElement = elementsMap.get(origElement.id);\n    if (!latestElement) {\n      return;\n    }\n\n    if (nextValue !== undefined) {\n      const nextAngle = degreesToRadians(nextValue as Degrees);\n      mutateElement(latestElement, {\n        angle: nextAngle,\n      });\n      updateBindings(latestElement, elementsMap, elements, scene);\n\n      const boundTextElement = getBoundTextElement(latestElement, elementsMap);\n      if (boundTextElement && !isArrowElement(latestElement)) {\n        mutateElement(boundTextElement, { angle: nextAngle });\n      }\n\n      return;\n    }\n\n    const originalAngleInDegrees =\n      Math.round(radiansToDegrees(origElement.angle) * 100) / 100;\n    const changeInDegrees = Math.round(accumulatedChange);\n    let nextAngleInDegrees = (originalAngleInDegrees + changeInDegrees) % 360;\n    if (shouldChangeByStepSize) {\n      nextAngleInDegrees = getStepSizedValue(nextAngleInDegrees, STEP_SIZE);\n    }\n\n    nextAngleInDegrees =\n      nextAngleInDegrees < 0 ? nextAngleInDegrees + 360 : nextAngleInDegrees;\n\n    const nextAngle = degreesToRadians(nextAngleInDegrees as Degrees);\n\n    mutateElement(latestElement, {\n      angle: nextAngle,\n    });\n    updateBindings(latestElement, elementsMap, elements, scene);\n\n    const boundTextElement = getBoundTextElement(latestElement, elementsMap);\n    if (boundTextElement && !isArrowElement(latestElement)) {\n      mutateElement(boundTextElement, { angle: nextAngle });\n    }\n  }\n};\n\nconst Angle = ({ element, scene, appState, property }: AngleProps) => {\n  return (\n    <DragInput\n      label=\"A\"\n      icon={angleIcon}\n      value={Math.round((radiansToDegrees(element.angle) % 360) * 100) / 100}\n      elements={[element]}\n      dragInputCallback={handleDegreeChange}\n      editable={isPropertyEditable(element, \"angle\")}\n      scene={scene}\n      appState={appState}\n      property={property}\n    />\n  );\n};\n\nexport default Angle;\n", "import type {\n  ExcalidrawElement,\n  ExcalidrawTextElement,\n} from \"../../element/types\";\nimport StatsDragInput from \"./DragInput\";\nimport type { DragInputCallbackType } from \"./DragInput\";\nimport { mutateElement } from \"../../element/mutateElement\";\nimport { getStepSizedValue } from \"./utils\";\nimport { fontSizeIcon } from \"../icons\";\nimport type Scene from \"../../scene/Scene\";\nimport type { AppState } from \"../../types\";\nimport { isTextElement, redrawTextBoundingBox } from \"../../element\";\nimport { hasBoundTextElement } from \"../../element/typeChecks\";\nimport { getBoundTextElement } from \"../../element/textElement\";\n\ninterface FontSizeProps {\n  element: ExcalidrawElement;\n  scene: Scene;\n  appState: AppState;\n  property: \"fontSize\";\n}\n\nconst MIN_FONT_SIZE = 4;\nconst STEP_SIZE = 4;\n\nconst handleFontSizeChange: DragInputCallbackType<\n  FontSizeProps[\"property\"],\n  ExcalidrawTextElement\n> = ({\n  accumulatedChange,\n  originalElements,\n  shouldChangeByStepSize,\n  nextValue,\n  scene,\n}) => {\n  const elementsMap = scene.getNonDeletedElementsMap();\n\n  const origElement = originalElements[0];\n  if (origElement) {\n    const latestElement = elementsMap.get(origElement.id);\n    if (!latestElement || !isTextElement(latestElement)) {\n      return;\n    }\n\n    let nextFontSize;\n\n    if (nextValue !== undefined) {\n      nextFontSize = Math.max(Math.round(nextValue), MIN_FONT_SIZE);\n    } else if (origElement.type === \"text\") {\n      const originalFontSize = Math.round(origElement.fontSize);\n      const changeInFontSize = Math.round(accumulatedChange);\n      nextFontSize = Math.max(\n        originalFontSize + changeInFontSize,\n        MIN_FONT_SIZE,\n      );\n      if (shouldChangeByStepSize) {\n        nextFontSize = getStepSizedValue(nextFontSize, STEP_SIZE);\n      }\n    }\n\n    if (nextFontSize) {\n      mutateElement(latestElement, {\n        fontSize: nextFontSize,\n      });\n      redrawTextBoundingBox(\n        latestElement,\n        scene.getContainerElement(latestElement),\n        scene.getNonDeletedElementsMap(),\n      );\n    }\n  }\n};\n\nconst FontSize = ({ element, scene, appState, property }: FontSizeProps) => {\n  const _element = isTextElement(element)\n    ? element\n    : hasBoundTextElement(element)\n    ? getBoundTextElement(element, scene.getNonDeletedElementsMap())\n    : null;\n\n  if (!_element) {\n    return null;\n  }\n\n  return (\n    <StatsDragInput\n      label=\"F\"\n      value={Math.round(_element.fontSize * 10) / 10}\n      elements={[_element]}\n      dragInputCallback={handleFontSizeChange}\n      icon={fontSizeIcon}\n      appState={appState}\n      scene={scene}\n      property={property}\n    />\n  );\n};\n\nexport default FontSize;\n", "import { useMemo } from \"react\";\nimport { getCommonBounds, isTextElement } from \"../../element\";\nimport { updateBoundElements } from \"../../element/binding\";\nimport { mutateElement } from \"../../element/mutateElement\";\nimport {\n  rescalePointsInElement,\n  resizeSingleElement,\n} from \"../../element/resizeElements\";\nimport {\n  getBoundTextElement,\n  handleBindTextResize,\n} from \"../../element/textElement\";\nimport type {\n  ElementsMap,\n  ExcalidrawElement,\n  NonDeletedSceneElementsMap,\n} from \"../../element/types\";\nimport type Scene from \"../../scene/Scene\";\nimport type { AppState } from \"../../types\";\nimport DragInput from \"./DragInput\";\nimport type { DragInputCallbackType } from \"./DragInput\";\nimport { getAtomicUnits, getStepSizedValue, isPropertyEditable } from \"./utils\";\nimport { getElementsInAtomicUnit } from \"./utils\";\nimport type { AtomicUnit } from \"./utils\";\nimport { MIN_WIDTH_OR_HEIGHT } from \"../../constants\";\nimport { pointFrom, type GlobalPoint } from \"@excalidraw/math\";\n\ninterface MultiDimensionProps {\n  property: \"width\" | \"height\";\n  elements: readonly ExcalidrawElement[];\n  elementsMap: NonDeletedSceneElementsMap;\n  atomicUnits: AtomicUnit[];\n  scene: Scene;\n  appState: AppState;\n}\n\nconst STEP_SIZE = 10;\n\nconst getResizedUpdates = (\n  anchorX: number,\n  anchorY: number,\n  scale: number,\n  origElement: ExcalidrawElement,\n) => {\n  const offsetX = origElement.x - anchorX;\n  const offsetY = origElement.y - anchorY;\n  const nextWidth = origElement.width * scale;\n  const nextHeight = origElement.height * scale;\n  const x = anchorX + offsetX * scale;\n  const y = anchorY + offsetY * scale;\n\n  return {\n    width: nextWidth,\n    height: nextHeight,\n    x,\n    y,\n    ...rescalePointsInElement(origElement, nextWidth, nextHeight, false),\n    ...(isTextElement(origElement)\n      ? { fontSize: origElement.fontSize * scale }\n      : {}),\n  };\n};\n\nconst resizeElementInGroup = (\n  anchorX: number,\n  anchorY: number,\n  property: MultiDimensionProps[\"property\"],\n  scale: number,\n  latestElement: ExcalidrawElement,\n  origElement: ExcalidrawElement,\n  elementsMap: NonDeletedSceneElementsMap,\n  originalElementsMap: ElementsMap,\n) => {\n  const updates = getResizedUpdates(anchorX, anchorY, scale, origElement);\n\n  mutateElement(latestElement, updates, false);\n  const boundTextElement = getBoundTextElement(\n    origElement,\n    originalElementsMap,\n  );\n  if (boundTextElement) {\n    const newFontSize = boundTextElement.fontSize * scale;\n    updateBoundElements(latestElement, elementsMap, {\n      newSize: { width: updates.width, height: updates.height },\n    });\n    const latestBoundTextElement = elementsMap.get(boundTextElement.id);\n    if (latestBoundTextElement && isTextElement(latestBoundTextElement)) {\n      mutateElement(\n        latestBoundTextElement,\n        {\n          fontSize: newFontSize,\n        },\n        false,\n      );\n      handleBindTextResize(\n        latestElement,\n        elementsMap,\n        property === \"width\" ? \"e\" : \"s\",\n        true,\n      );\n    }\n  }\n};\n\nconst resizeGroup = (\n  nextWidth: number,\n  nextHeight: number,\n  initialHeight: number,\n  aspectRatio: number,\n  anchor: GlobalPoint,\n  property: MultiDimensionProps[\"property\"],\n  latestElements: ExcalidrawElement[],\n  originalElements: ExcalidrawElement[],\n  elementsMap: NonDeletedSceneElementsMap,\n  originalElementsMap: ElementsMap,\n) => {\n  // keep aspect ratio for groups\n  if (property === \"width\") {\n    nextHeight = Math.round((nextWidth / aspectRatio) * 100) / 100;\n  } else {\n    nextWidth = Math.round(nextHeight * aspectRatio * 100) / 100;\n  }\n\n  const scale = nextHeight / initialHeight;\n\n  for (let i = 0; i < originalElements.length; i++) {\n    const origElement = originalElements[i];\n    const latestElement = latestElements[i];\n\n    resizeElementInGroup(\n      anchor[0],\n      anchor[1],\n      property,\n      scale,\n      latestElement,\n      origElement,\n      elementsMap,\n      originalElementsMap,\n    );\n  }\n};\n\nconst handleDimensionChange: DragInputCallbackType<\n  MultiDimensionProps[\"property\"]\n> = ({\n  accumulatedChange,\n  originalElements,\n  originalElementsMap,\n  originalAppState,\n  shouldChangeByStepSize,\n  nextValue,\n  scene,\n  property,\n}) => {\n  const elementsMap = scene.getNonDeletedElementsMap();\n  const atomicUnits = getAtomicUnits(originalElements, originalAppState);\n  if (nextValue !== undefined) {\n    for (const atomicUnit of atomicUnits) {\n      const elementsInUnit = getElementsInAtomicUnit(\n        atomicUnit,\n        elementsMap,\n        originalElementsMap,\n      );\n\n      if (elementsInUnit.length > 1) {\n        const latestElements = elementsInUnit.map((el) => el.latest!);\n        const originalElements = elementsInUnit.map((el) => el.original!);\n        const [x1, y1, x2, y2] = getCommonBounds(originalElements);\n        const initialWidth = x2 - x1;\n        const initialHeight = y2 - y1;\n        const aspectRatio = initialWidth / initialHeight;\n        const nextWidth = Math.max(\n          MIN_WIDTH_OR_HEIGHT,\n          property === \"width\" ? Math.max(0, nextValue) : initialWidth,\n        );\n        const nextHeight = Math.max(\n          MIN_WIDTH_OR_HEIGHT,\n          property === \"height\" ? Math.max(0, nextValue) : initialHeight,\n        );\n\n        resizeGroup(\n          nextWidth,\n          nextHeight,\n          initialHeight,\n          aspectRatio,\n          pointFrom(x1, y1),\n          property,\n          latestElements,\n          originalElements,\n          elementsMap,\n          originalElementsMap,\n        );\n      } else {\n        const [el] = elementsInUnit;\n        const latestElement = el?.latest;\n        const origElement = el?.original;\n\n        if (\n          latestElement &&\n          origElement &&\n          isPropertyEditable(latestElement, property)\n        ) {\n          let nextWidth =\n            property === \"width\" ? Math.max(0, nextValue) : latestElement.width;\n          if (property === \"width\") {\n            if (shouldChangeByStepSize) {\n              nextWidth = getStepSizedValue(nextWidth, STEP_SIZE);\n            } else {\n              nextWidth = Math.round(nextWidth);\n            }\n          }\n\n          let nextHeight =\n            property === \"height\"\n              ? Math.max(0, nextValue)\n              : latestElement.height;\n          if (property === \"height\") {\n            if (shouldChangeByStepSize) {\n              nextHeight = getStepSizedValue(nextHeight, STEP_SIZE);\n            } else {\n              nextHeight = Math.round(nextHeight);\n            }\n          }\n\n          nextWidth = Math.max(MIN_WIDTH_OR_HEIGHT, nextWidth);\n          nextHeight = Math.max(MIN_WIDTH_OR_HEIGHT, nextHeight);\n\n          resizeSingleElement(\n            nextWidth,\n            nextHeight,\n            latestElement,\n            origElement,\n            elementsMap,\n            originalElementsMap,\n            property === \"width\" ? \"e\" : \"s\",\n            {\n              shouldInformMutation: false,\n            },\n          );\n        }\n      }\n    }\n\n    scene.triggerUpdate();\n\n    return;\n  }\n\n  const changeInWidth = property === \"width\" ? accumulatedChange : 0;\n  const changeInHeight = property === \"height\" ? accumulatedChange : 0;\n\n  for (const atomicUnit of atomicUnits) {\n    const elementsInUnit = getElementsInAtomicUnit(\n      atomicUnit,\n      elementsMap,\n      originalElementsMap,\n    );\n\n    if (elementsInUnit.length > 1) {\n      const latestElements = elementsInUnit.map((el) => el.latest!);\n      const originalElements = elementsInUnit.map((el) => el.original!);\n\n      const [x1, y1, x2, y2] = getCommonBounds(originalElements);\n      const initialWidth = x2 - x1;\n      const initialHeight = y2 - y1;\n      const aspectRatio = initialWidth / initialHeight;\n      let nextWidth = Math.max(0, initialWidth + changeInWidth);\n      if (property === \"width\") {\n        if (shouldChangeByStepSize) {\n          nextWidth = getStepSizedValue(nextWidth, STEP_SIZE);\n        } else {\n          nextWidth = Math.round(nextWidth);\n        }\n      }\n\n      let nextHeight = Math.max(0, initialHeight + changeInHeight);\n      if (property === \"height\") {\n        if (shouldChangeByStepSize) {\n          nextHeight = getStepSizedValue(nextHeight, STEP_SIZE);\n        } else {\n          nextHeight = Math.round(nextHeight);\n        }\n      }\n\n      nextWidth = Math.max(MIN_WIDTH_OR_HEIGHT, nextWidth);\n      nextHeight = Math.max(MIN_WIDTH_OR_HEIGHT, nextHeight);\n\n      resizeGroup(\n        nextWidth,\n        nextHeight,\n        initialHeight,\n        aspectRatio,\n        pointFrom(x1, y1),\n        property,\n        latestElements,\n        originalElements,\n        elementsMap,\n        originalElementsMap,\n      );\n    } else {\n      const [el] = elementsInUnit;\n      const latestElement = el?.latest;\n      const origElement = el?.original;\n\n      if (\n        latestElement &&\n        origElement &&\n        isPropertyEditable(latestElement, property)\n      ) {\n        let nextWidth = Math.max(0, origElement.width + changeInWidth);\n        if (property === \"width\") {\n          if (shouldChangeByStepSize) {\n            nextWidth = getStepSizedValue(nextWidth, STEP_SIZE);\n          } else {\n            nextWidth = Math.round(nextWidth);\n          }\n        }\n\n        let nextHeight = Math.max(0, origElement.height + changeInHeight);\n        if (property === \"height\") {\n          if (shouldChangeByStepSize) {\n            nextHeight = getStepSizedValue(nextHeight, STEP_SIZE);\n          } else {\n            nextHeight = Math.round(nextHeight);\n          }\n        }\n\n        nextWidth = Math.max(MIN_WIDTH_OR_HEIGHT, nextWidth);\n        nextHeight = Math.max(MIN_WIDTH_OR_HEIGHT, nextHeight);\n\n        resizeSingleElement(\n          nextWidth,\n          nextHeight,\n          latestElement,\n          origElement,\n          elementsMap,\n          originalElementsMap,\n          property === \"width\" ? \"e\" : \"s\",\n          {\n            shouldInformMutation: false,\n          },\n        );\n      }\n    }\n  }\n\n  scene.triggerUpdate();\n};\n\nconst MultiDimension = ({\n  property,\n  elements,\n  elementsMap,\n  atomicUnits,\n  scene,\n  appState,\n}: MultiDimensionProps) => {\n  const sizes = useMemo(\n    () =>\n      atomicUnits.map((atomicUnit) => {\n        const elementsInUnit = getElementsInAtomicUnit(atomicUnit, elementsMap);\n\n        if (elementsInUnit.length > 1) {\n          const [x1, y1, x2, y2] = getCommonBounds(\n            elementsInUnit.map((el) => el.latest),\n          );\n          return (\n            Math.round((property === \"width\" ? x2 - x1 : y2 - y1) * 100) / 100\n          );\n        }\n        const [el] = elementsInUnit;\n\n        return (\n          Math.round(\n            (property === \"width\" ? el.latest.width : el.latest.height) * 100,\n          ) / 100\n        );\n      }),\n    [elementsMap, atomicUnits, property],\n  );\n\n  const value =\n    new Set(sizes).size === 1 ? Math.round(sizes[0] * 100) / 100 : \"Mixed\";\n\n  const editable = sizes.length > 0;\n\n  return (\n    <DragInput\n      label={property === \"width\" ? \"W\" : \"H\"}\n      elements={elements}\n      dragInputCallback={handleDimensionChange}\n      value={value}\n      editable={editable}\n      appState={appState}\n      property={property}\n      scene={scene}\n    />\n  );\n};\n\nexport default MultiDimension;\n", "import { mutateElement } from \"../../element/mutateElement\";\nimport { getBoundTextElement } from \"../../element/textElement\";\nimport { isArrowElement } from \"../../element/typeChecks\";\nimport type { ExcalidrawElement } from \"../../element/types\";\nimport { isInGroup } from \"../../groups\";\nimport type Scene from \"../../scene/Scene\";\nimport { angleIcon } from \"../icons\";\nimport DragInput from \"./DragInput\";\nimport type { DragInputCallbackType } from \"./DragInput\";\nimport { getStepSizedValue, isPropertyEditable } from \"./utils\";\nimport type { AppState } from \"../../types\";\nimport type { Degrees } from \"@excalidraw/math\";\nimport { degreesToRadians, radiansToDegrees } from \"@excalidraw/math\";\n\ninterface MultiAngleProps {\n  elements: readonly ExcalidrawElement[];\n  scene: Scene;\n  appState: AppState;\n  property: \"angle\";\n}\n\nconst STEP_SIZE = 15;\n\nconst handleDegreeChange: DragInputCallbackType<\n  MultiAngleProps[\"property\"]\n> = ({\n  accumulatedChange,\n  originalElements,\n  shouldChangeByStepSize,\n  nextValue,\n  property,\n  scene,\n}) => {\n  const elementsMap = scene.getNonDeletedElementsMap();\n  const editableLatestIndividualElements = originalElements\n    .map((el) => elementsMap.get(el.id))\n    .filter((el) => el && !isInGroup(el) && isPropertyEditable(el, property));\n  const editableOriginalIndividualElements = originalElements.filter(\n    (el) => !isInGroup(el) && isPropertyEditable(el, property),\n  );\n\n  if (nextValue !== undefined) {\n    const nextAngle = degreesToRadians(nextValue as Degrees);\n\n    for (const element of editableLatestIndividualElements) {\n      if (!element) {\n        continue;\n      }\n      mutateElement(\n        element,\n        {\n          angle: nextAngle,\n        },\n        false,\n      );\n\n      const boundTextElement = getBoundTextElement(element, elementsMap);\n      if (boundTextElement && !isArrowElement(element)) {\n        mutateElement(boundTextElement, { angle: nextAngle }, false);\n      }\n    }\n\n    scene.triggerUpdate();\n\n    return;\n  }\n\n  for (let i = 0; i < editableLatestIndividualElements.length; i++) {\n    const latestElement = editableLatestIndividualElements[i];\n    if (!latestElement) {\n      continue;\n    }\n    const originalElement = editableOriginalIndividualElements[i];\n    const originalAngleInDegrees =\n      Math.round(radiansToDegrees(originalElement.angle) * 100) / 100;\n    const changeInDegrees = Math.round(accumulatedChange);\n    let nextAngleInDegrees = (originalAngleInDegrees + changeInDegrees) % 360;\n    if (shouldChangeByStepSize) {\n      nextAngleInDegrees = getStepSizedValue(nextAngleInDegrees, STEP_SIZE);\n    }\n\n    nextAngleInDegrees =\n      nextAngleInDegrees < 0 ? nextAngleInDegrees + 360 : nextAngleInDegrees;\n\n    const nextAngle = degreesToRadians(nextAngleInDegrees as Degrees);\n\n    mutateElement(\n      latestElement,\n      {\n        angle: nextAngle,\n      },\n      false,\n    );\n\n    const boundTextElement = getBoundTextElement(latestElement, elementsMap);\n    if (boundTextElement && !isArrowElement(latestElement)) {\n      mutateElement(boundTextElement, { angle: nextAngle }, false);\n    }\n  }\n  scene.triggerUpdate();\n};\n\nconst MultiAngle = ({\n  elements,\n  scene,\n  appState,\n  property,\n}: MultiAngleProps) => {\n  const editableLatestIndividualElements = elements.filter(\n    (el) => !isInGroup(el) && isPropertyEditable(el, \"angle\"),\n  );\n  const angles = editableLatestIndividualElements.map(\n    (el) => Math.round((radiansToDegrees(el.angle) % 360) * 100) / 100,\n  );\n  const value = new Set(angles).size === 1 ? angles[0] : \"Mixed\";\n\n  const editable = editableLatestIndividualElements.some((el) =>\n    isPropertyEditable(el, \"angle\"),\n  );\n\n  return (\n    <DragInput\n      label=\"A\"\n      icon={angleIcon}\n      value={value}\n      elements={elements}\n      dragInputCallback={handleDegreeChange}\n      editable={editable}\n      appState={appState}\n      scene={scene}\n      property={property}\n    />\n  );\n};\n\nexport default MultiAngle;\n", "import { isTextElement, redrawTextBoundingBox } from \"../../element\";\nimport { mutateElement } from \"../../element/mutateElement\";\nimport { hasBoundTextElement } from \"../../element/typeChecks\";\nimport type {\n  ExcalidrawElement,\n  ExcalidrawTextElement,\n  NonDeletedSceneElementsMap,\n} from \"../../element/types\";\nimport { isInGroup } from \"../../groups\";\nimport type Scene from \"../../scene/Scene\";\nimport { fontSizeIcon } from \"../icons\";\nimport StatsDragInput from \"./DragInput\";\nimport type { DragInputCallbackType } from \"./DragInput\";\nimport { getStepSizedValue } from \"./utils\";\nimport type { AppState } from \"../../types\";\nimport { getBoundTextElement } from \"../../element/textElement\";\n\ninterface MultiFontSizeProps {\n  elements: readonly ExcalidrawElement[];\n  scene: Scene;\n  elementsMap: NonDeletedSceneElementsMap;\n  appState: AppState;\n  property: \"fontSize\";\n}\n\nconst MIN_FONT_SIZE = 4;\nconst STEP_SIZE = 4;\n\nconst getApplicableTextElements = (\n  elements: readonly (ExcalidrawElement | undefined)[],\n  elementsMap: NonDeletedSceneElementsMap,\n) =>\n  elements.reduce(\n    (acc: ExcalidrawTextElement[], el) => {\n      if (!el || isInGroup(el)) {\n        return acc;\n      }\n      if (isTextElement(el)) {\n        acc.push(el);\n        return acc;\n      }\n      if (hasBoundTextElement(el)) {\n        const boundTextElement = getBoundTextElement(el, elementsMap);\n        if (boundTextElement) {\n          acc.push(boundTextElement);\n          return acc;\n        }\n      }\n\n      return acc;\n    },\n\n    [],\n  );\n\nconst handleFontSizeChange: DragInputCallbackType<\n  MultiFontSizeProps[\"property\"],\n  ExcalidrawTextElement\n> = ({\n  accumulatedChange,\n  originalElements,\n  shouldChangeByStepSize,\n  nextValue,\n  scene,\n}) => {\n  const elementsMap = scene.getNonDeletedElementsMap();\n  const latestTextElements = originalElements.map((el) =>\n    elementsMap.get(el.id),\n  ) as ExcalidrawTextElement[];\n\n  let nextFontSize;\n\n  if (nextValue) {\n    nextFontSize = Math.max(Math.round(nextValue), MIN_FONT_SIZE);\n\n    for (const textElement of latestTextElements) {\n      mutateElement(\n        textElement,\n        {\n          fontSize: nextFontSize,\n        },\n        false,\n      );\n\n      redrawTextBoundingBox(\n        textElement,\n        scene.getContainerElement(textElement),\n        elementsMap,\n        false,\n      );\n    }\n\n    scene.triggerUpdate();\n  } else {\n    const originalTextElements = originalElements as ExcalidrawTextElement[];\n\n    for (let i = 0; i < latestTextElements.length; i++) {\n      const latestElement = latestTextElements[i];\n      const originalElement = originalTextElements[i];\n\n      const originalFontSize = Math.round(originalElement.fontSize);\n      const changeInFontSize = Math.round(accumulatedChange);\n      let nextFontSize = Math.max(\n        originalFontSize + changeInFontSize,\n        MIN_FONT_SIZE,\n      );\n      if (shouldChangeByStepSize) {\n        nextFontSize = getStepSizedValue(nextFontSize, STEP_SIZE);\n      }\n      mutateElement(\n        latestElement,\n        {\n          fontSize: nextFontSize,\n        },\n        false,\n      );\n\n      redrawTextBoundingBox(\n        latestElement,\n        scene.getContainerElement(latestElement),\n        elementsMap,\n        false,\n      );\n    }\n\n    scene.triggerUpdate();\n  }\n};\n\nconst MultiFontSize = ({\n  elements,\n  scene,\n  appState,\n  property,\n  elementsMap,\n}: MultiFontSizeProps) => {\n  const latestTextElements = getApplicableTextElements(elements, elementsMap);\n\n  if (!latestTextElements.length) {\n    return null;\n  }\n\n  const fontSizes = latestTextElements.map(\n    (textEl) => Math.round(textEl.fontSize * 10) / 10,\n  );\n  const value = new Set(fontSizes).size === 1 ? fontSizes[0] : \"Mixed\";\n  const editable = fontSizes.length > 0;\n\n  return (\n    <StatsDragInput\n      label=\"F\"\n      icon={fontSizeIcon}\n      elements={latestTextElements}\n      dragInputCallback={handleFontSizeChange}\n      value={value}\n      editable={editable}\n      scene={scene}\n      property={property}\n      appState={appState}\n    />\n  );\n};\n\nexport default MultiFontSize;\n", "import type { ElementsMap, ExcalidrawElement } from \"../../element/types\";\nimport StatsDragInput from \"./DragInput\";\nimport type { DragInputCallbackType } from \"./DragInput\";\nimport { getStepSizedValue, moveElement } from \"./utils\";\nimport type Scene from \"../../scene/Scene\";\nimport type { AppState } from \"../../types\";\nimport { clamp, pointFrom, pointRotateRads, round } from \"@excalidraw/math\";\nimport { isImageElement } from \"../../element/typeChecks\";\nimport {\n  getFlipAdjustedCropPosition,\n  getUncroppedWidthAndHeight,\n} from \"../../element/cropElement\";\nimport { mutateElement } from \"../../element/mutateElement\";\n\ninterface PositionProps {\n  property: \"x\" | \"y\";\n  element: ExcalidrawElement;\n  elementsMap: ElementsMap;\n  scene: Scene;\n  appState: AppState;\n}\n\nconst STEP_SIZE = 10;\n\nconst handlePositionChange: DragInputCallbackType<\"x\" | \"y\"> = ({\n  accumulatedChange,\n  instantChange,\n  originalElements,\n  originalElementsMap,\n  shouldChangeByStepSize,\n  nextValue,\n  property,\n  scene,\n  originalAppState,\n}) => {\n  const elementsMap = scene.getNonDeletedElementsMap();\n  const elements = scene.getNonDeletedElements();\n  const origElement = originalElements[0];\n  const [cx, cy] = [\n    origElement.x + origElement.width / 2,\n    origElement.y + origElement.height / 2,\n  ];\n  const [topLeftX, topLeftY] = pointRotateRads(\n    pointFrom(origElement.x, origElement.y),\n    pointFrom(cx, cy),\n    origElement.angle,\n  );\n\n  if (originalAppState.croppingElementId === origElement.id) {\n    const element = elementsMap.get(origElement.id);\n\n    if (!element || !isImageElement(element) || !element.crop) {\n      return;\n    }\n\n    const crop = element.crop;\n    let nextCrop = crop;\n    const isFlippedByX = element.scale[0] === -1;\n    const isFlippedByY = element.scale[1] === -1;\n    const { width: uncroppedWidth, height: uncroppedHeight } =\n      getUncroppedWidthAndHeight(element);\n\n    if (nextValue !== undefined) {\n      if (property === \"x\") {\n        const nextValueInNatural =\n          nextValue * (crop.naturalWidth / uncroppedWidth);\n\n        if (isFlippedByX) {\n          nextCrop = {\n            ...crop,\n            x: clamp(\n              crop.naturalWidth - nextValueInNatural - crop.width,\n              0,\n              crop.naturalWidth - crop.width,\n            ),\n          };\n        } else {\n          nextCrop = {\n            ...crop,\n            x: clamp(\n              nextValue * (crop.naturalWidth / uncroppedWidth),\n              0,\n              crop.naturalWidth - crop.width,\n            ),\n          };\n        }\n      }\n\n      if (property === \"y\") {\n        nextCrop = {\n          ...crop,\n          y: clamp(\n            nextValue * (crop.naturalHeight / uncroppedHeight),\n            0,\n            crop.naturalHeight - crop.height,\n          ),\n        };\n      }\n\n      mutateElement(element, {\n        crop: nextCrop,\n      });\n\n      return;\n    }\n\n    const changeInX =\n      (property === \"x\" ? instantChange : 0) * (isFlippedByX ? -1 : 1);\n    const changeInY =\n      (property === \"y\" ? instantChange : 0) * (isFlippedByY ? -1 : 1);\n\n    nextCrop = {\n      ...crop,\n      x: clamp(crop.x + changeInX, 0, crop.naturalWidth - crop.width),\n      y: clamp(crop.y + changeInY, 0, crop.naturalHeight - crop.height),\n    };\n\n    mutateElement(element, {\n      crop: nextCrop,\n    });\n\n    return;\n  }\n\n  if (nextValue !== undefined) {\n    const newTopLeftX = property === \"x\" ? nextValue : topLeftX;\n    const newTopLeftY = property === \"y\" ? nextValue : topLeftY;\n    moveElement(\n      newTopLeftX,\n      newTopLeftY,\n      origElement,\n      elementsMap,\n      elements,\n      scene,\n      originalElementsMap,\n    );\n    return;\n  }\n\n  const changeInTopX = property === \"x\" ? accumulatedChange : 0;\n  const changeInTopY = property === \"y\" ? accumulatedChange : 0;\n\n  const newTopLeftX =\n    property === \"x\"\n      ? Math.round(\n          shouldChangeByStepSize\n            ? getStepSizedValue(origElement.x + changeInTopX, STEP_SIZE)\n            : topLeftX + changeInTopX,\n        )\n      : topLeftX;\n\n  const newTopLeftY =\n    property === \"y\"\n      ? Math.round(\n          shouldChangeByStepSize\n            ? getStepSizedValue(origElement.y + changeInTopY, STEP_SIZE)\n            : topLeftY + changeInTopY,\n        )\n      : topLeftY;\n\n  moveElement(\n    newTopLeftX,\n    newTopLeftY,\n    origElement,\n    elementsMap,\n    elements,\n    scene,\n    originalElementsMap,\n  );\n};\n\nconst Position = ({\n  property,\n  element,\n  elementsMap,\n  scene,\n  appState,\n}: PositionProps) => {\n  const [topLeftX, topLeftY] = pointRotateRads(\n    pointFrom(element.x, element.y),\n    pointFrom(element.x + element.width / 2, element.y + element.height / 2),\n    element.angle,\n  );\n  let value = round(property === \"x\" ? topLeftX : topLeftY, 2);\n\n  if (\n    appState.croppingElementId === element.id &&\n    isImageElement(element) &&\n    element.crop\n  ) {\n    const flipAdjustedPosition = getFlipAdjustedCropPosition(element);\n\n    if (flipAdjustedPosition) {\n      value = round(\n        property === \"x\" ? flipAdjustedPosition.x : flipAdjustedPosition.y,\n        2,\n      );\n    }\n  }\n\n  return (\n    <StatsDragInput\n      label={property === \"x\" ? \"X\" : \"Y\"}\n      elements={[element]}\n      dragInputCallback={handlePositionChange}\n      scene={scene}\n      value={value}\n      property={property}\n      appState={appState}\n    />\n  );\n};\n\nexport default Position;\n", "import type {\n  ElementsMap,\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n  NonDeletedSceneElementsMap,\n} from \"../../element/types\";\nimport type Scene from \"../../scene/Scene\";\nimport StatsDragInput from \"./DragInput\";\nimport type { DragInputCallbackType } from \"./DragInput\";\nimport { getAtomicUnits, getStepSizedValue, isPropertyEditable } from \"./utils\";\nimport { getCommonBounds, isTextElement } from \"../../element\";\nimport { useMemo } from \"react\";\nimport { getElementsInAtomicUnit, moveElement } from \"./utils\";\nimport type { AtomicUnit } from \"./utils\";\nimport type { AppState } from \"../../types\";\nimport { pointFrom, pointRotateRads } from \"@excalidraw/math\";\n\ninterface MultiPositionProps {\n  property: \"x\" | \"y\";\n  elements: readonly ExcalidrawElement[];\n  elementsMap: ElementsMap;\n  atomicUnits: AtomicUnit[];\n  scene: Scene;\n  appState: AppState;\n}\n\nconst STEP_SIZE = 10;\n\nconst moveElements = (\n  property: MultiPositionProps[\"property\"],\n  changeInTopX: number,\n  changeInTopY: number,\n  elements: readonly ExcalidrawElement[],\n  originalElements: readonly ExcalidrawElement[],\n  elementsMap: NonDeletedSceneElementsMap,\n  originalElementsMap: ElementsMap,\n  scene: Scene,\n) => {\n  for (let i = 0; i < elements.length; i++) {\n    const origElement = originalElements[i];\n\n    const [cx, cy] = [\n      origElement.x + origElement.width / 2,\n      origElement.y + origElement.height / 2,\n    ];\n    const [topLeftX, topLeftY] = pointRotateRads(\n      pointFrom(origElement.x, origElement.y),\n      pointFrom(cx, cy),\n      origElement.angle,\n    );\n\n    const newTopLeftX =\n      property === \"x\" ? Math.round(topLeftX + changeInTopX) : topLeftX;\n\n    const newTopLeftY =\n      property === \"y\" ? Math.round(topLeftY + changeInTopY) : topLeftY;\n\n    moveElement(\n      newTopLeftX,\n      newTopLeftY,\n      origElement,\n      elementsMap,\n      elements,\n      scene,\n      originalElementsMap,\n      false,\n    );\n  }\n};\n\nconst moveGroupTo = (\n  nextX: number,\n  nextY: number,\n  originalElements: ExcalidrawElement[],\n  elementsMap: NonDeletedSceneElementsMap,\n  elements: readonly NonDeletedExcalidrawElement[],\n  originalElementsMap: ElementsMap,\n  scene: Scene,\n) => {\n  const [x1, y1, ,] = getCommonBounds(originalElements);\n  const offsetX = nextX - x1;\n  const offsetY = nextY - y1;\n\n  for (let i = 0; i < originalElements.length; i++) {\n    const origElement = originalElements[i];\n\n    const latestElement = elementsMap.get(origElement.id);\n    if (!latestElement) {\n      continue;\n    }\n\n    // bound texts are moved with their containers\n    if (!isTextElement(latestElement) || !latestElement.containerId) {\n      const [cx, cy] = [\n        latestElement.x + latestElement.width / 2,\n        latestElement.y + latestElement.height / 2,\n      ];\n\n      const [topLeftX, topLeftY] = pointRotateRads(\n        pointFrom(latestElement.x, latestElement.y),\n        pointFrom(cx, cy),\n        latestElement.angle,\n      );\n\n      moveElement(\n        topLeftX + offsetX,\n        topLeftY + offsetY,\n        origElement,\n        elementsMap,\n        elements,\n        scene,\n        originalElementsMap,\n        false,\n      );\n    }\n  }\n};\n\nconst handlePositionChange: DragInputCallbackType<\n  MultiPositionProps[\"property\"]\n> = ({\n  accumulatedChange,\n  originalElements,\n  originalElementsMap,\n  shouldChangeByStepSize,\n  nextValue,\n  property,\n  scene,\n  originalAppState,\n}) => {\n  const elementsMap = scene.getNonDeletedElementsMap();\n  const elements = scene.getNonDeletedElements();\n\n  if (nextValue !== undefined) {\n    for (const atomicUnit of getAtomicUnits(\n      originalElements,\n      originalAppState,\n    )) {\n      const elementsInUnit = getElementsInAtomicUnit(\n        atomicUnit,\n        elementsMap,\n        originalElementsMap,\n      );\n\n      if (elementsInUnit.length > 1) {\n        const [x1, y1, ,] = getCommonBounds(\n          elementsInUnit.map((el) => el.latest!),\n        );\n        const newTopLeftX = property === \"x\" ? nextValue : x1;\n        const newTopLeftY = property === \"y\" ? nextValue : y1;\n\n        moveGroupTo(\n          newTopLeftX,\n          newTopLeftY,\n          elementsInUnit.map((el) => el.original),\n          elementsMap,\n          elements,\n          originalElementsMap,\n          scene,\n        );\n      } else {\n        const origElement = elementsInUnit[0]?.original;\n        const latestElement = elementsInUnit[0]?.latest;\n        if (\n          origElement &&\n          latestElement &&\n          isPropertyEditable(latestElement, property)\n        ) {\n          const [cx, cy] = [\n            origElement.x + origElement.width / 2,\n            origElement.y + origElement.height / 2,\n          ];\n          const [topLeftX, topLeftY] = pointRotateRads(\n            pointFrom(origElement.x, origElement.y),\n            pointFrom(cx, cy),\n            origElement.angle,\n          );\n\n          const newTopLeftX = property === \"x\" ? nextValue : topLeftX;\n          const newTopLeftY = property === \"y\" ? nextValue : topLeftY;\n          moveElement(\n            newTopLeftX,\n            newTopLeftY,\n            origElement,\n            elementsMap,\n            elements,\n            scene,\n            originalElementsMap,\n            false,\n          );\n        }\n      }\n    }\n\n    scene.triggerUpdate();\n    return;\n  }\n\n  const change = shouldChangeByStepSize\n    ? getStepSizedValue(accumulatedChange, STEP_SIZE)\n    : accumulatedChange;\n\n  const changeInTopX = property === \"x\" ? change : 0;\n  const changeInTopY = property === \"y\" ? change : 0;\n\n  moveElements(\n    property,\n    changeInTopX,\n    changeInTopY,\n    originalElements,\n    originalElements,\n    elementsMap,\n    originalElementsMap,\n    scene,\n  );\n\n  scene.triggerUpdate();\n};\n\nconst MultiPosition = ({\n  property,\n  elements,\n  elementsMap,\n  atomicUnits,\n  scene,\n  appState,\n}: MultiPositionProps) => {\n  const positions = useMemo(\n    () =>\n      atomicUnits.map((atomicUnit) => {\n        const elementsInUnit = Object.keys(atomicUnit)\n          .map((id) => elementsMap.get(id))\n          .filter((el) => el !== undefined) as ExcalidrawElement[];\n\n        // we're dealing with a group\n        if (elementsInUnit.length > 1) {\n          const [x1, y1] = getCommonBounds(elementsInUnit);\n          return Math.round((property === \"x\" ? x1 : y1) * 100) / 100;\n        }\n\n        const [el] = elementsInUnit;\n        const [cx, cy] = [el.x + el.width / 2, el.y + el.height / 2];\n\n        const [topLeftX, topLeftY] = pointRotateRads(\n          pointFrom(el.x, el.y),\n          pointFrom(cx, cy),\n          el.angle,\n        );\n\n        return Math.round((property === \"x\" ? topLeftX : topLeftY) * 100) / 100;\n      }),\n    [atomicUnits, elementsMap, property],\n  );\n\n  const value = new Set(positions).size === 1 ? positions[0] : \"Mixed\";\n\n  return (\n    <StatsDragInput\n      label={property === \"x\" ? \"X\" : \"Y\"}\n      elements={elements}\n      dragInputCallback={handlePositionChange}\n      value={value}\n      property={property}\n      scene={scene}\n      appState={appState}\n    />\n  );\n};\n\nexport default MultiPosition;\n", "import StatsDragInput from \"./DragInput\";\nimport type Scene from \"../../scene/Scene\";\nimport type { AppState } from \"../../types\";\nimport { getStepSizedValue } from \"./utils\";\nimport { getNormalizedGridStep } from \"../../scene\";\n\ninterface PositionProps {\n  property: \"gridStep\";\n  scene: Scene;\n  appState: AppState;\n  setAppState: React.Component<any, AppState>[\"setState\"];\n}\n\nconst STEP_SIZE = 5;\n\nconst CanvasGrid = ({\n  property,\n  scene,\n  appState,\n  setAppState,\n}: PositionProps) => {\n  return (\n    <StatsDragInput\n      label=\"Grid step\"\n      sensitivity={8}\n      elements={[]}\n      dragInputCallback={({\n        nextValue,\n        instantChange,\n        shouldChangeByStepSize,\n        setInputValue,\n      }) => {\n        setAppState((state) => {\n          let nextGridStep;\n\n          if (nextValue) {\n            nextGridStep = nextValue;\n          } else if (instantChange) {\n            nextGridStep = shouldChangeByStepSize\n              ? getStepSizedValue(\n                  state.gridStep + STEP_SIZE * Math.sign(instantChange),\n                  STEP_SIZE,\n                )\n              : state.gridStep + instantChange;\n          }\n\n          if (!nextGridStep) {\n            setInputValue(state.gridStep);\n            return null;\n          }\n\n          nextGridStep = getNormalizedGridStep(nextGridStep);\n          setInputValue(nextGridStep);\n          return {\n            gridStep: nextGridStep,\n          };\n        });\n      }}\n      scene={scene}\n      value={appState.gridStep}\n      property={property}\n      appState={appState}\n    />\n  );\n};\n\nexport default CanvasGrid;\n", "import { TextField } from \"./TextField\";\nimport type { AppProps, AppState, UIAppState } from \"../types\";\nimport DialogActionButton from \"./DialogActionButton\";\nimport { getSelectedElements } from \"../scene\";\nimport {\n  defaultGetElementLinkFromSelection,\n  getLinkIdAndTypeFromSelection,\n} from \"../element/elementLink\";\nimport { mutateElement } from \"../element/mutateElement\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { t } from \"../i18n\";\nimport type { ElementsMap, ExcalidrawElement } from \"../element/types\";\nimport { ToolButton } from \"./ToolButton\";\nimport { TrashIcon } from \"./icons\";\nimport { KEYS } from \"../keys\";\n\nimport \"./ElementLinkDialog.scss\";\nimport { normalizeLink } from \"../data/url\";\n\nconst ElementLinkDialog = ({\n  sourceElementId,\n  onClose,\n  elementsMap,\n  appState,\n  generateLinkForSelection = defaultGetElementLinkFromSelection,\n}: {\n  sourceElementId: ExcalidrawElement[\"id\"];\n  elementsMap: ElementsMap;\n  appState: UIAppState;\n  onClose?: () => void;\n  generateLinkForSelection: AppProps[\"generateLinkForSelection\"];\n}) => {\n  const originalLink = elementsMap.get(sourceElementId)?.link ?? null;\n\n  const [nextLink, setNextLink] = useState<string | null>(originalLink);\n  const [linkEdited, setLinkEdited] = useState(false);\n\n  useEffect(() => {\n    const selectedElements = getSelectedElements(elementsMap, appState);\n    let nextLink = originalLink;\n\n    if (selectedElements.length > 0 && generateLinkForSelection) {\n      const idAndType = getLinkIdAndTypeFromSelection(\n        selectedElements,\n        appState as AppState,\n      );\n\n      if (idAndType) {\n        nextLink = normalizeLink(\n          generateLinkForSelection(idAndType.id, idAndType.type),\n        );\n      }\n    }\n\n    setNextLink(nextLink);\n  }, [\n    elementsMap,\n    appState,\n    appState.selectedElementIds,\n    originalLink,\n    generateLinkForSelection,\n  ]);\n\n  const handleConfirm = useCallback(() => {\n    if (nextLink && nextLink !== elementsMap.get(sourceElementId)?.link) {\n      const elementToLink = elementsMap.get(sourceElementId);\n      elementToLink &&\n        mutateElement(elementToLink, {\n          link: nextLink,\n        });\n    }\n\n    if (!nextLink && linkEdited && sourceElementId) {\n      const elementToLink = elementsMap.get(sourceElementId);\n      elementToLink &&\n        mutateElement(elementToLink, {\n          link: null,\n        });\n    }\n\n    onClose?.();\n  }, [sourceElementId, nextLink, elementsMap, linkEdited, onClose]);\n\n  useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (\n        appState.openDialog?.name === \"elementLinkSelector\" &&\n        event.key === KEYS.ENTER\n      ) {\n        handleConfirm();\n      }\n\n      if (\n        appState.openDialog?.name === \"elementLinkSelector\" &&\n        event.key === KEYS.ESCAPE\n      ) {\n        onClose?.();\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [appState, onClose, handleConfirm]);\n\n  return (\n    <div className=\"ElementLinkDialog\">\n      <div className=\"ElementLinkDialog__header\">\n        <h2>{t(\"elementLink.title\")}</h2>\n        <p>{t(\"elementLink.desc\")}</p>\n      </div>\n\n      <div className=\"ElementLinkDialog__input\">\n        <TextField\n          value={nextLink ?? \"\"}\n          onChange={(value) => {\n            if (!linkEdited) {\n              setLinkEdited(true);\n            }\n            setNextLink(value);\n          }}\n          onKeyDown={(event) => {\n            if (event.key === KEYS.ENTER) {\n              handleConfirm();\n            }\n          }}\n          className=\"ElementLinkDialog__input-field\"\n          selectOnRender\n        />\n\n        {originalLink && nextLink && (\n          <ToolButton\n            type=\"button\"\n            title={t(\"buttons.remove\")}\n            aria-label={t(\"buttons.remove\")}\n            label={t(\"buttons.remove\")}\n            onClick={() => {\n              // removes the link from the input\n              // but doesn't update the element\n\n              // when confirmed, will remove the link from the element\n              setNextLink(null);\n              setLinkEdited(true);\n            }}\n            className=\"ElementLinkDialog__remove\"\n            icon={TrashIcon}\n          />\n        )}\n      </div>\n\n      <div className=\"ElementLinkDialog__actions\">\n        <DialogActionButton\n          label={t(\"buttons.cancel\")}\n          onClick={() => {\n            onClose?.();\n          }}\n          style={{\n            marginRight: 10,\n          }}\n        />\n\n        <DialogActionButton\n          label={t(\"buttons.confirm\")}\n          onClick={handleConfirm}\n          actionType=\"primary\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ElementLinkDialog;\n", "import type { CSSProperties } from \"react\";\nimport { useCallback, useEffect, useRef } from \"react\";\nimport { CloseIcon } from \"./icons\";\nimport \"./Toast.scss\";\nimport { ToolButton } from \"./ToolButton\";\n\nconst DEFAULT_TOAST_TIMEOUT = 5000;\n\nexport const Toast = ({\n  message,\n  onClose,\n  closable = false,\n  // To prevent autoclose, pass duration as Infinity\n  duration = DEFAULT_TOAST_TIMEOUT,\n  style,\n}: {\n  message: string;\n  onClose: () => void;\n  closable?: boolean;\n  duration?: number;\n  style?: CSSProperties;\n}) => {\n  const timerRef = useRef<number>(0);\n  const shouldAutoClose = duration !== Infinity;\n  const scheduleTimeout = useCallback(() => {\n    if (!shouldAutoClose) {\n      return;\n    }\n    timerRef.current = window.setTimeout(() => onClose(), duration);\n  }, [onClose, duration, shouldAutoClose]);\n\n  useEffect(() => {\n    if (!shouldAutoClose) {\n      return;\n    }\n    scheduleTimeout();\n    return () => clearTimeout(timerRef.current);\n  }, [scheduleTimeout, message, duration, shouldAutoClose]);\n\n  const onMouseEnter = shouldAutoClose\n    ? () => clearTimeout(timerRef?.current)\n    : undefined;\n  const onMouseLeave = shouldAutoClose ? scheduleTimeout : undefined;\n  return (\n    <div\n      className=\"Toast\"\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n      style={style}\n    >\n      <p className=\"Toast__message\">{message}</p>\n      {closable && (\n        <ToolButton\n          icon={CloseIcon}\n          aria-label=\"close\"\n          type=\"icon\"\n          onClick={onClose}\n          className=\"close\"\n        />\n      )}\n    </div>\n  );\n};\n", "import { eyeIcon } from \"../components/icons\";\nimport { CODES, KEYS } from \"../keys\";\nimport { CaptureUpdateAction } from \"../store\";\nimport { register } from \"./register\";\n\nexport const actionToggleViewMode = register({\n  name: \"viewMode\",\n  label: \"labels.viewMode\",\n  paletteName: \"Toggle view mode\",\n  icon: eyeIcon,\n  viewMode: true,\n  trackEvent: {\n    category: \"canvas\",\n    predicate: (appState) => !appState.viewModeEnabled,\n  },\n  perform(elements, appState) {\n    return {\n      appState: {\n        ...appState,\n        viewModeEnabled: !this.checked!(appState),\n      },\n      captureUpdate: CaptureUpdateAction.EVENTUALLY,\n    };\n  },\n  checked: (appState) => appState.viewModeEnabled,\n  predicate: (elements, appState, appProps) => {\n    return typeof appProps.viewModeEnabled === \"undefined\";\n  },\n  keyTest: (event) =>\n    !event[KEYS.CTRL_OR_CMD] && event.altKey && event.code === CODES.R,\n});\n", "import { getCommonBounds, getNonDeletedElements } from \"../element\";\nimport type { ExcalidrawElement } from \"../element/types\";\nimport { addElementsToFrame, removeAllElementsFromFrame } from \"../frame\";\nimport { getFrameChildren } from \"../frame\";\nimport { KEYS } from \"../keys\";\nimport type { AppClassProperties, AppState, UIAppState } from \"../types\";\nimport { updateActiveTool } from \"../utils\";\nimport { setCursorForShape } from \"../cursor\";\nimport { register } from \"./register\";\nimport { isFrameLikeElement } from \"../element/typeChecks\";\nimport { frameToolIcon } from \"../components/icons\";\nimport { CaptureUpdateAction } from \"../store\";\nimport { getSelectedElements } from \"../scene\";\nimport { newFrameElement } from \"../element/newElement\";\nimport { getElementsInGroup } from \"../groups\";\nimport { mutateElement } from \"../element/mutateElement\";\n\nconst isSingleFrameSelected = (\n  appState: UIAppState,\n  app: AppClassProperties,\n) => {\n  const selectedElements = app.scene.getSelectedElements(appState);\n\n  return (\n    selectedElements.length === 1 && isFrameLikeElement(selectedElements[0])\n  );\n};\n\nexport const actionSelectAllElementsInFrame = register({\n  name: \"selectAllElementsInFrame\",\n  label: \"labels.selectAllElementsInFrame\",\n  trackEvent: { category: \"canvas\" },\n  perform: (elements, appState, _, app) => {\n    const selectedElement =\n      app.scene.getSelectedElements(appState).at(0) || null;\n\n    if (isFrameLikeElement(selectedElement)) {\n      const elementsInFrame = getFrameChildren(\n        getNonDeletedElements(elements),\n        selectedElement.id,\n      ).filter((element) => !(element.type === \"text\" && element.containerId));\n\n      return {\n        elements,\n        appState: {\n          ...appState,\n          selectedElementIds: elementsInFrame.reduce((acc, element) => {\n            acc[element.id] = true;\n            return acc;\n          }, {} as Record<ExcalidrawElement[\"id\"], true>),\n        },\n        captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n      };\n    }\n\n    return {\n      elements,\n      appState,\n      captureUpdate: CaptureUpdateAction.EVENTUALLY,\n    };\n  },\n  predicate: (elements, appState, _, app) =>\n    isSingleFrameSelected(appState, app),\n});\n\nexport const actionRemoveAllElementsFromFrame = register({\n  name: \"removeAllElementsFromFrame\",\n  label: \"labels.removeAllElementsFromFrame\",\n  trackEvent: { category: \"history\" },\n  perform: (elements, appState, _, app) => {\n    const selectedElement =\n      app.scene.getSelectedElements(appState).at(0) || null;\n\n    if (isFrameLikeElement(selectedElement)) {\n      return {\n        elements: removeAllElementsFromFrame(elements, selectedElement),\n        appState: {\n          ...appState,\n          selectedElementIds: {\n            [selectedElement.id]: true,\n          },\n        },\n        captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n      };\n    }\n\n    return {\n      elements,\n      appState,\n      captureUpdate: CaptureUpdateAction.EVENTUALLY,\n    };\n  },\n  predicate: (elements, appState, _, app) =>\n    isSingleFrameSelected(appState, app),\n});\n\nexport const actionupdateFrameRendering = register({\n  name: \"updateFrameRendering\",\n  label: \"labels.updateFrameRendering\",\n  viewMode: true,\n  trackEvent: { category: \"canvas\" },\n  perform: (elements, appState) => {\n    return {\n      elements,\n      appState: {\n        ...appState,\n        frameRendering: {\n          ...appState.frameRendering,\n          enabled: !appState.frameRendering.enabled,\n        },\n      },\n      captureUpdate: CaptureUpdateAction.EVENTUALLY,\n    };\n  },\n  checked: (appState: AppState) => appState.frameRendering.enabled,\n});\n\nexport const actionSetFrameAsActiveTool = register({\n  name: \"setFrameAsActiveTool\",\n  label: \"toolBar.frame\",\n  trackEvent: { category: \"toolbar\" },\n  icon: frameToolIcon,\n  viewMode: false,\n  perform: (elements, appState, _, app) => {\n    const nextActiveTool = updateActiveTool(appState, {\n      type: \"frame\",\n    });\n\n    setCursorForShape(app.interactiveCanvas, {\n      ...appState,\n      activeTool: nextActiveTool,\n    });\n\n    return {\n      elements,\n      appState: {\n        ...appState,\n        activeTool: updateActiveTool(appState, {\n          type: \"frame\",\n        }),\n      },\n      captureUpdate: CaptureUpdateAction.EVENTUALLY,\n    };\n  },\n  keyTest: (event) =>\n    !event[KEYS.CTRL_OR_CMD] &&\n    !event.shiftKey &&\n    !event.altKey &&\n    event.key.toLocaleLowerCase() === KEYS.F,\n});\n\nexport const actionWrapSelectionInFrame = register({\n  name: \"wrapSelectionInFrame\",\n  label: \"labels.wrapSelectionInFrame\",\n  trackEvent: { category: \"element\" },\n  predicate: (elements, appState, _, app) => {\n    const selectedElements = getSelectedElements(elements, appState);\n\n    return (\n      selectedElements.length > 0 &&\n      !selectedElements.some((element) => isFrameLikeElement(element))\n    );\n  },\n  perform: (elements, appState, _, app) => {\n    const selectedElements = getSelectedElements(elements, appState);\n\n    const [x1, y1, x2, y2] = getCommonBounds(\n      selectedElements,\n      app.scene.getNonDeletedElementsMap(),\n    );\n    const PADDING = 16;\n    const frame = newFrameElement({\n      x: x1 - PADDING,\n      y: y1 - PADDING,\n      width: x2 - x1 + PADDING * 2,\n      height: y2 - y1 + PADDING * 2,\n    });\n\n    // for a selected partial group, we want to remove it from the remainder of the group\n    if (appState.editingGroupId) {\n      const elementsInGroup = getElementsInGroup(\n        selectedElements,\n        appState.editingGroupId,\n      );\n\n      for (const elementInGroup of elementsInGroup) {\n        const index = elementInGroup.groupIds.indexOf(appState.editingGroupId);\n\n        mutateElement(\n          elementInGroup,\n          {\n            groupIds: elementInGroup.groupIds.slice(0, index),\n          },\n          false,\n        );\n      }\n    }\n\n    const nextElements = addElementsToFrame(\n      [...app.scene.getElementsIncludingDeleted(), frame],\n      selectedElements,\n      frame,\n      appState,\n    );\n\n    return {\n      elements: nextElements,\n      appState: {\n        selectedElementIds: { [frame.id]: true },\n      },\n      captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n    };\n  },\n});\n", "import Trans from \"./Trans\";\n\nconst BraveMeasureTextError = () => {\n  return (\n    <div data-testid=\"brave-measure-text-error\">\n      <p>\n        <Trans\n          i18nKey=\"errors.brave_measure_text_error.line1\"\n          bold={(el) => <span style={{ fontWeight: 600 }}>{el}</span>}\n        />\n      </p>\n      <p>\n        <Trans\n          i18nKey=\"errors.brave_measure_text_error.line2\"\n          bold={(el) => <span style={{ fontWeight: 600 }}>{el}</span>}\n        />\n      </p>\n      <p>\n        <Trans\n          i18nKey=\"errors.brave_measure_text_error.line3\"\n          link={(el) => (\n            <a href=\"http://docs.excalidraw.com/docs/@excalidraw/excalidraw/faq#turning-off-aggresive-block-fingerprinting-in-brave-browser\">\n              {el}\n            </a>\n          )}\n        />\n      </p>\n      <p>\n        <Trans\n          i18nKey=\"errors.brave_measure_text_error.line4\"\n          issueLink={(el) => (\n            <a href=\"https://github.com/excalidraw/excalidraw/issues/new\">\n              {el}\n            </a>\n          )}\n          discordLink={(el) => <a href=\"https://discord.gg/UexuTaE\">{el}.</a>}\n        />\n      </p>\n    </div>\n  );\n};\n\nexport default BraveMeasureTextError;\n", "import {\n  DEFAULT_FONT_FAMILY,\n  DEFAULT_FONT_SIZE,\n  TEXT_ALIGN,\n  VERTICAL_ALIGN,\n} from \"../constants\";\nimport {\n  getCommonBounds,\n  newElement,\n  newLinearElement,\n  redrawTextBoundingBox,\n} from \"../element\";\nimport { bindLinearElement } from \"../element/binding\";\nimport type { ElementConstructorOpts } from \"../element/newElement\";\nimport {\n  newArrowElement,\n  newFrameElement,\n  newImageElement,\n  newMagicFrameElement,\n  newTextElement,\n} from \"../element/newElement\";\nimport type {\n  ElementsMap,\n  ExcalidrawArrowElement,\n  ExcalidrawBindableElement,\n  ExcalidrawElement,\n  ExcalidrawFrameElement,\n  ExcalidrawFreeDrawElement,\n  ExcalidrawGenericElement,\n  ExcalidrawIframeLikeElement,\n  ExcalidrawImageElement,\n  ExcalidrawLinearElement,\n  ExcalidrawMagicFrameElement,\n  ExcalidrawSelectionElement,\n  ExcalidrawTextElement,\n  FileId,\n  FontFamilyValues,\n  NonDeletedSceneElementsMap,\n  TextAlign,\n  VerticalAlign,\n} from \"../element/types\";\nimport type { MarkOptional } from \"../utility-types\";\nimport {\n  arrayToMap,\n  assertNever,\n  cloneJSON,\n  getFontString,\n  isDevEnv,\n  toBrandedType,\n} from \"../utils\";\nimport { getSizeFromPoints } from \"../points\";\nimport { randomId } from \"../random\";\nimport { syncInvalidIndices } from \"../fractionalIndex\";\nimport { getLineHeight } from \"../fonts\";\nimport { isArrowElement } from \"../element/typeChecks\";\nimport { pointFrom, type LocalPoint } from \"@excalidraw/math\";\nimport { measureText, normalizeText } from \"../element/textMeasurements\";\n\nexport type ValidLinearElement = {\n  type: \"arrow\" | \"line\";\n  x: number;\n  y: number;\n  label?: {\n    text: string;\n    fontSize?: number;\n    fontFamily?: FontFamilyValues;\n    textAlign?: TextAlign;\n    verticalAlign?: VerticalAlign;\n  } & MarkOptional<ElementConstructorOpts, \"x\" | \"y\">;\n  end?:\n    | (\n        | (\n            | {\n                type: Exclude<\n                  ExcalidrawBindableElement[\"type\"],\n                  | \"image\"\n                  | \"text\"\n                  | \"frame\"\n                  | \"magicframe\"\n                  | \"embeddable\"\n                  | \"iframe\"\n                >;\n                id?: ExcalidrawGenericElement[\"id\"];\n              }\n            | {\n                id: ExcalidrawGenericElement[\"id\"];\n                type?: Exclude<\n                  ExcalidrawBindableElement[\"type\"],\n                  | \"image\"\n                  | \"text\"\n                  | \"frame\"\n                  | \"magicframe\"\n                  | \"embeddable\"\n                  | \"iframe\"\n                >;\n              }\n          )\n        | ((\n            | {\n                type: \"text\";\n                text: string;\n              }\n            | {\n                type?: \"text\";\n                id: ExcalidrawTextElement[\"id\"];\n                text: string;\n              }\n          ) &\n            Partial<ExcalidrawTextElement>)\n      ) &\n        MarkOptional<ElementConstructorOpts, \"x\" | \"y\">;\n  start?:\n    | (\n        | (\n            | {\n                type: Exclude<\n                  ExcalidrawBindableElement[\"type\"],\n                  | \"image\"\n                  | \"text\"\n                  | \"frame\"\n                  | \"magicframe\"\n                  | \"embeddable\"\n                  | \"iframe\"\n                >;\n                id?: ExcalidrawGenericElement[\"id\"];\n              }\n            | {\n                id: ExcalidrawGenericElement[\"id\"];\n                type?: Exclude<\n                  ExcalidrawBindableElement[\"type\"],\n                  | \"image\"\n                  | \"text\"\n                  | \"frame\"\n                  | \"magicframe\"\n                  | \"embeddable\"\n                  | \"iframe\"\n                >;\n              }\n          )\n        | ((\n            | {\n                type: \"text\";\n                text: string;\n              }\n            | {\n                type?: \"text\";\n                id: ExcalidrawTextElement[\"id\"];\n                text: string;\n              }\n          ) &\n            Partial<ExcalidrawTextElement>)\n      ) &\n        MarkOptional<ElementConstructorOpts, \"x\" | \"y\">;\n} & Partial<ExcalidrawLinearElement>;\n\nexport type ValidContainer =\n  | {\n      type: Exclude<ExcalidrawGenericElement[\"type\"], \"selection\">;\n      id?: ExcalidrawGenericElement[\"id\"];\n      label?: {\n        text: string;\n        fontSize?: number;\n        fontFamily?: FontFamilyValues;\n        textAlign?: TextAlign;\n        verticalAlign?: VerticalAlign;\n      } & MarkOptional<ElementConstructorOpts, \"x\" | \"y\">;\n    } & ElementConstructorOpts;\n\nexport type ExcalidrawElementSkeleton =\n  | Extract<\n      Exclude<ExcalidrawElement, ExcalidrawSelectionElement>,\n      ExcalidrawIframeLikeElement | ExcalidrawFreeDrawElement\n    >\n  | ({\n      type: Extract<ExcalidrawLinearElement[\"type\"], \"line\">;\n      x: number;\n      y: number;\n    } & Partial<ExcalidrawLinearElement>)\n  | ValidContainer\n  | ValidLinearElement\n  | ({\n      type: \"text\";\n      text: string;\n      x: number;\n      y: number;\n      id?: ExcalidrawTextElement[\"id\"];\n    } & Partial<ExcalidrawTextElement>)\n  | ({\n      type: Extract<ExcalidrawImageElement[\"type\"], \"image\">;\n      x: number;\n      y: number;\n      fileId: FileId;\n    } & Partial<ExcalidrawImageElement>)\n  | ({\n      type: \"frame\";\n      children: readonly ExcalidrawElement[\"id\"][];\n      name?: string;\n    } & Partial<ExcalidrawFrameElement>)\n  | ({\n      type: \"magicframe\";\n      children: readonly ExcalidrawElement[\"id\"][];\n      name?: string;\n    } & Partial<ExcalidrawMagicFrameElement>);\n\nconst DEFAULT_LINEAR_ELEMENT_PROPS = {\n  width: 100,\n  height: 0,\n};\n\nconst DEFAULT_DIMENSION = 100;\n\nconst bindTextToContainer = (\n  container: ExcalidrawElement,\n  textProps: { text: string } & MarkOptional<ElementConstructorOpts, \"x\" | \"y\">,\n  elementsMap: ElementsMap,\n) => {\n  const textElement: ExcalidrawTextElement = newTextElement({\n    x: 0,\n    y: 0,\n    textAlign: TEXT_ALIGN.CENTER,\n    verticalAlign: VERTICAL_ALIGN.MIDDLE,\n    ...textProps,\n    containerId: container.id,\n    strokeColor: textProps.strokeColor || container.strokeColor,\n  });\n\n  Object.assign(container, {\n    boundElements: (container.boundElements || []).concat({\n      type: \"text\",\n      id: textElement.id,\n    }),\n  });\n\n  redrawTextBoundingBox(textElement, container, elementsMap);\n  return [container, textElement] as const;\n};\n\nconst bindLinearElementToElement = (\n  linearElement: ExcalidrawArrowElement,\n  start: ValidLinearElement[\"start\"],\n  end: ValidLinearElement[\"end\"],\n  elementStore: ElementStore,\n  elementsMap: NonDeletedSceneElementsMap,\n): {\n  linearElement: ExcalidrawLinearElement;\n  startBoundElement?: ExcalidrawElement;\n  endBoundElement?: ExcalidrawElement;\n} => {\n  let startBoundElement;\n  let endBoundElement;\n\n  Object.assign(linearElement, {\n    startBinding: linearElement?.startBinding || null,\n    endBinding: linearElement.endBinding || null,\n  });\n\n  if (start) {\n    const width = start?.width ?? DEFAULT_DIMENSION;\n    const height = start?.height ?? DEFAULT_DIMENSION;\n\n    let existingElement;\n    if (start.id) {\n      existingElement = elementStore.getElement(start.id);\n      if (!existingElement) {\n        console.error(`No element for start binding with id ${start.id} found`);\n      }\n    }\n\n    const startX = start.x || linearElement.x - width;\n    const startY = start.y || linearElement.y - height / 2;\n    const startType = existingElement ? existingElement.type : start.type;\n\n    if (startType) {\n      if (startType === \"text\") {\n        let text = \"\";\n        if (existingElement && existingElement.type === \"text\") {\n          text = existingElement.text;\n        } else if (start.type === \"text\") {\n          text = start.text;\n        }\n        if (!text) {\n          console.error(\n            `No text found for start binding text element for ${linearElement.id}`,\n          );\n        }\n        startBoundElement = newTextElement({\n          x: startX,\n          y: startY,\n          type: \"text\",\n          ...existingElement,\n          ...start,\n          text,\n        });\n        // to position the text correctly when coordinates not provided\n        Object.assign(startBoundElement, {\n          x: start.x || linearElement.x - startBoundElement.width,\n          y: start.y || linearElement.y - startBoundElement.height / 2,\n        });\n      } else {\n        switch (startType) {\n          case \"rectangle\":\n          case \"ellipse\":\n          case \"diamond\": {\n            startBoundElement = newElement({\n              x: startX,\n              y: startY,\n              width,\n              height,\n              ...existingElement,\n              ...start,\n              type: startType,\n            });\n            break;\n          }\n          default: {\n            assertNever(\n              linearElement as never,\n              `Unhandled element start type \"${start.type}\"`,\n              true,\n            );\n          }\n        }\n      }\n\n      bindLinearElement(\n        linearElement,\n        startBoundElement as ExcalidrawBindableElement,\n        \"start\",\n        elementsMap,\n      );\n    }\n  }\n  if (end) {\n    const height = end?.height ?? DEFAULT_DIMENSION;\n    const width = end?.width ?? DEFAULT_DIMENSION;\n\n    let existingElement;\n    if (end.id) {\n      existingElement = elementStore.getElement(end.id);\n      if (!existingElement) {\n        console.error(`No element for end binding with id ${end.id} found`);\n      }\n    }\n    const endX = end.x || linearElement.x + linearElement.width;\n    const endY = end.y || linearElement.y - height / 2;\n    const endType = existingElement ? existingElement.type : end.type;\n\n    if (endType) {\n      if (endType === \"text\") {\n        let text = \"\";\n        if (existingElement && existingElement.type === \"text\") {\n          text = existingElement.text;\n        } else if (end.type === \"text\") {\n          text = end.text;\n        }\n\n        if (!text) {\n          console.error(\n            `No text found for end binding text element for ${linearElement.id}`,\n          );\n        }\n        endBoundElement = newTextElement({\n          x: endX,\n          y: endY,\n          type: \"text\",\n          ...existingElement,\n          ...end,\n          text,\n        });\n        // to position the text correctly when coordinates not provided\n        Object.assign(endBoundElement, {\n          y: end.y || linearElement.y - endBoundElement.height / 2,\n        });\n      } else {\n        switch (endType) {\n          case \"rectangle\":\n          case \"ellipse\":\n          case \"diamond\": {\n            endBoundElement = newElement({\n              x: endX,\n              y: endY,\n              width,\n              height,\n              ...existingElement,\n              ...end,\n              type: endType,\n            });\n            break;\n          }\n          default: {\n            assertNever(\n              linearElement as never,\n              `Unhandled element end type \"${endType}\"`,\n              true,\n            );\n          }\n        }\n      }\n\n      bindLinearElement(\n        linearElement,\n        endBoundElement as ExcalidrawBindableElement,\n        \"end\",\n        elementsMap,\n      );\n    }\n  }\n\n  // Safe check to early return for single point\n  if (linearElement.points.length < 2) {\n    return {\n      linearElement,\n      startBoundElement,\n      endBoundElement,\n    };\n  }\n\n  // Update start/end points by 0.5 so bindings don't overlap with start/end bound element coordinates.\n  const endPointIndex = linearElement.points.length - 1;\n  const delta = 0.5;\n\n  const newPoints = cloneJSON<readonly LocalPoint[]>(linearElement.points);\n\n  // left to right so shift the arrow towards right\n  if (\n    linearElement.points[endPointIndex][0] >\n    linearElement.points[endPointIndex - 1][0]\n  ) {\n    newPoints[0][0] = delta;\n    newPoints[endPointIndex][0] -= delta;\n  }\n\n  // right to left so shift the arrow towards left\n  if (\n    linearElement.points[endPointIndex][0] <\n    linearElement.points[endPointIndex - 1][0]\n  ) {\n    newPoints[0][0] = -delta;\n    newPoints[endPointIndex][0] += delta;\n  }\n  // top to bottom so shift the arrow towards top\n  if (\n    linearElement.points[endPointIndex][1] >\n    linearElement.points[endPointIndex - 1][1]\n  ) {\n    newPoints[0][1] = delta;\n    newPoints[endPointIndex][1] -= delta;\n  }\n\n  // bottom to top so shift the arrow towards bottom\n  if (\n    linearElement.points[endPointIndex][1] <\n    linearElement.points[endPointIndex - 1][1]\n  ) {\n    newPoints[0][1] = -delta;\n    newPoints[endPointIndex][1] += delta;\n  }\n\n  Object.assign(linearElement, { points: newPoints });\n\n  return {\n    linearElement,\n    startBoundElement,\n    endBoundElement,\n  };\n};\n\nclass ElementStore {\n  excalidrawElements = new Map<string, ExcalidrawElement>();\n\n  add = (ele?: ExcalidrawElement) => {\n    if (!ele) {\n      return;\n    }\n\n    this.excalidrawElements.set(ele.id, ele);\n  };\n\n  getElements = () => {\n    return syncInvalidIndices(Array.from(this.excalidrawElements.values()));\n  };\n\n  getElementsMap = () => {\n    return toBrandedType<NonDeletedSceneElementsMap>(\n      arrayToMap(this.getElements()),\n    );\n  };\n\n  getElement = (id: string) => {\n    return this.excalidrawElements.get(id);\n  };\n}\n\nexport const convertToExcalidrawElements = (\n  elementsSkeleton: ExcalidrawElementSkeleton[] | null,\n  opts?: { regenerateIds: boolean },\n) => {\n  if (!elementsSkeleton) {\n    return [];\n  }\n  const elements = cloneJSON(elementsSkeleton);\n  const elementStore = new ElementStore();\n  const elementsWithIds = new Map<string, ExcalidrawElementSkeleton>();\n  const oldToNewElementIdMap = new Map<string, string>();\n\n  // Create individual elements\n  for (const element of elements) {\n    let excalidrawElement: ExcalidrawElement;\n    const originalId = element.id;\n    if (opts?.regenerateIds !== false) {\n      Object.assign(element, { id: randomId() });\n    }\n\n    switch (element.type) {\n      case \"rectangle\":\n      case \"ellipse\":\n      case \"diamond\": {\n        const width =\n          element?.label?.text && element.width === undefined\n            ? 0\n            : element?.width || DEFAULT_DIMENSION;\n        const height =\n          element?.label?.text && element.height === undefined\n            ? 0\n            : element?.height || DEFAULT_DIMENSION;\n        excalidrawElement = newElement({\n          ...element,\n          width,\n          height,\n        });\n\n        break;\n      }\n      case \"line\": {\n        const width = element.width || DEFAULT_LINEAR_ELEMENT_PROPS.width;\n        const height = element.height || DEFAULT_LINEAR_ELEMENT_PROPS.height;\n        excalidrawElement = newLinearElement({\n          width,\n          height,\n          points: [pointFrom(0, 0), pointFrom(width, height)],\n          ...element,\n        });\n\n        break;\n      }\n      case \"arrow\": {\n        const width = element.width || DEFAULT_LINEAR_ELEMENT_PROPS.width;\n        const height = element.height || DEFAULT_LINEAR_ELEMENT_PROPS.height;\n        excalidrawElement = newArrowElement({\n          width,\n          height,\n          endArrowhead: \"arrow\",\n          points: [pointFrom(0, 0), pointFrom(width, height)],\n          ...element,\n          type: \"arrow\",\n        });\n\n        Object.assign(\n          excalidrawElement,\n          getSizeFromPoints(excalidrawElement.points),\n        );\n        break;\n      }\n      case \"text\": {\n        const fontFamily = element?.fontFamily || DEFAULT_FONT_FAMILY;\n        const fontSize = element?.fontSize || DEFAULT_FONT_SIZE;\n        const lineHeight = element?.lineHeight || getLineHeight(fontFamily);\n        const text = element.text ?? \"\";\n        const normalizedText = normalizeText(text);\n        const metrics = measureText(\n          normalizedText,\n          getFontString({ fontFamily, fontSize }),\n          lineHeight,\n        );\n\n        excalidrawElement = newTextElement({\n          width: metrics.width,\n          height: metrics.height,\n          fontFamily,\n          fontSize,\n          ...element,\n        });\n        break;\n      }\n      case \"image\": {\n        excalidrawElement = newImageElement({\n          width: element?.width || DEFAULT_DIMENSION,\n          height: element?.height || DEFAULT_DIMENSION,\n          ...element,\n        });\n\n        break;\n      }\n      case \"frame\": {\n        excalidrawElement = newFrameElement({\n          x: 0,\n          y: 0,\n          ...element,\n        });\n        break;\n      }\n      case \"magicframe\": {\n        excalidrawElement = newMagicFrameElement({\n          x: 0,\n          y: 0,\n          ...element,\n        });\n        break;\n      }\n      case \"freedraw\":\n      case \"iframe\":\n      case \"embeddable\": {\n        excalidrawElement = element;\n        break;\n      }\n\n      default: {\n        excalidrawElement = element;\n        assertNever(\n          element,\n          `Unhandled element type \"${(element as any).type}\"`,\n          true,\n        );\n      }\n    }\n    const existingElement = elementStore.getElement(excalidrawElement.id);\n    if (existingElement) {\n      console.error(`Duplicate id found for ${excalidrawElement.id}`);\n    } else {\n      elementStore.add(excalidrawElement);\n      elementsWithIds.set(excalidrawElement.id, element);\n      if (originalId) {\n        oldToNewElementIdMap.set(originalId, excalidrawElement.id);\n      }\n    }\n  }\n\n  const elementsMap = elementStore.getElementsMap();\n  // Add labels and arrow bindings\n  for (const [id, element] of elementsWithIds) {\n    const excalidrawElement = elementStore.getElement(id)!;\n\n    switch (element.type) {\n      case \"rectangle\":\n      case \"ellipse\":\n      case \"diamond\":\n      case \"arrow\": {\n        if (element.label?.text) {\n          let [container, text] = bindTextToContainer(\n            excalidrawElement,\n            element?.label,\n            elementsMap,\n          );\n          elementStore.add(container);\n          elementStore.add(text);\n\n          if (isArrowElement(container)) {\n            const originalStart =\n              element.type === \"arrow\" ? element?.start : undefined;\n            const originalEnd =\n              element.type === \"arrow\" ? element?.end : undefined;\n            if (originalStart && originalStart.id) {\n              const newStartId = oldToNewElementIdMap.get(originalStart.id);\n              if (newStartId) {\n                Object.assign(originalStart, { id: newStartId });\n              }\n            }\n            if (originalEnd && originalEnd.id) {\n              const newEndId = oldToNewElementIdMap.get(originalEnd.id);\n              if (newEndId) {\n                Object.assign(originalEnd, { id: newEndId });\n              }\n            }\n            const { linearElement, startBoundElement, endBoundElement } =\n              bindLinearElementToElement(\n                container,\n                originalStart,\n                originalEnd,\n                elementStore,\n                elementsMap,\n              );\n            container = linearElement;\n            elementStore.add(linearElement);\n            elementStore.add(startBoundElement);\n            elementStore.add(endBoundElement);\n          }\n        } else {\n          switch (element.type) {\n            case \"arrow\": {\n              const { start, end } = element;\n              if (start && start.id) {\n                const newStartId = oldToNewElementIdMap.get(start.id);\n                Object.assign(start, { id: newStartId });\n              }\n              if (end && end.id) {\n                const newEndId = oldToNewElementIdMap.get(end.id);\n                Object.assign(end, { id: newEndId });\n              }\n              const { linearElement, startBoundElement, endBoundElement } =\n                bindLinearElementToElement(\n                  excalidrawElement as ExcalidrawArrowElement,\n                  start,\n                  end,\n                  elementStore,\n                  elementsMap,\n                );\n\n              elementStore.add(linearElement);\n              elementStore.add(startBoundElement);\n              elementStore.add(endBoundElement);\n              break;\n            }\n          }\n        }\n        break;\n      }\n    }\n  }\n\n  // Once all the excalidraw elements are created, we can add frames since we\n  // need to calculate coordinates and dimensions of frame which is possible after all\n  // frame children are processed.\n  for (const [id, element] of elementsWithIds) {\n    if (element.type !== \"frame\" && element.type !== \"magicframe\") {\n      continue;\n    }\n    const frame = elementStore.getElement(id);\n\n    if (!frame) {\n      throw new Error(`Excalidraw element with id ${id} doesn't exist`);\n    }\n    const childrenElements: ExcalidrawElement[] = [];\n\n    element.children.forEach((id) => {\n      const newElementId = oldToNewElementIdMap.get(id);\n      if (!newElementId) {\n        throw new Error(`Element with ${id} wasn't mapped correctly`);\n      }\n\n      const elementInFrame = elementStore.getElement(newElementId);\n      if (!elementInFrame) {\n        throw new Error(`Frame element with id ${newElementId} doesn't exist`);\n      }\n      Object.assign(elementInFrame, { frameId: frame.id });\n\n      elementInFrame?.boundElements?.forEach((boundElement) => {\n        const ele = elementStore.getElement(boundElement.id);\n        if (!ele) {\n          throw new Error(\n            `Bound element with id ${boundElement.id} doesn't exist`,\n          );\n        }\n        Object.assign(ele, { frameId: frame.id });\n        childrenElements.push(ele);\n      });\n\n      childrenElements.push(elementInFrame);\n    });\n\n    let [minX, minY, maxX, maxY] = getCommonBounds(childrenElements);\n\n    const PADDING = 10;\n    minX = minX - PADDING;\n    minY = minY - PADDING;\n    maxX = maxX + PADDING;\n    maxY = maxY + PADDING;\n\n    const frameX = frame?.x || minX;\n    const frameY = frame?.y || minY;\n    const frameWidth = frame?.width || maxX - minX;\n    const frameHeight = frame?.height || maxY - minY;\n\n    Object.assign(frame, {\n      x: frameX,\n      y: frameY,\n      width: frameWidth,\n      height: frameHeight,\n    });\n    if (\n      isDevEnv() &&\n      element.children.length &&\n      (frame?.x || frame?.y || frame?.width || frame?.height)\n    ) {\n      console.info(\n        \"User provided frame attributes are being considered, if you find this inaccurate, please remove any of the attributes - x, y, width and height so frame coordinates and dimensions are calculated automatically\",\n      );\n    }\n  }\n\n  return elementStore.getElements();\n};\n", "import React, { useEffect, useRef } from \"react\";\nimport { isShallowEqual, sceneCoordsToViewportCoords } from \"../../utils\";\nimport { CURSOR_TYPE } from \"../../constants\";\nimport { t } from \"../../i18n\";\nimport type { DOMAttributes } from \"react\";\nimport type { AppState, Device, InteractiveCanvasAppState } from \"../../types\";\nimport type {\n  InteractiveCanvasRenderConfig,\n  RenderableElementsMap,\n  RenderInteractiveSceneCallback,\n} from \"../../scene/types\";\nimport type {\n  NonDeletedExcalidrawElement,\n  NonDeletedSceneElementsMap,\n} from \"../../element/types\";\nimport { isRenderThrottlingEnabled } from \"../../reactUtils\";\nimport { renderInteractiveScene } from \"../../renderer/interactiveScene\";\n\ntype InteractiveCanvasProps = {\n  containerRef: React.RefObject<HTMLDivElement | null>;\n  canvas: HTMLCanvasElement | null;\n  elementsMap: RenderableElementsMap;\n  visibleElements: readonly NonDeletedExcalidrawElement[];\n  selectedElements: readonly NonDeletedExcalidrawElement[];\n  allElementsMap: NonDeletedSceneElementsMap;\n  sceneNonce: number | undefined;\n  selectionNonce: number | undefined;\n  scale: number;\n  appState: InteractiveCanvasAppState;\n  device: Device;\n  renderInteractiveSceneCallback: (\n    data: RenderInteractiveSceneCallback,\n  ) => void;\n  handleCanvasRef: (canvas: HTMLCanvasElement | null) => void;\n  onContextMenu: Exclude<\n    DOMAttributes<HTMLCanvasElement | HTMLDivElement>[\"onContextMenu\"],\n    undefined\n  >;\n  onPointerMove: Exclude<\n    DOMAttributes<HTMLCanvasElement>[\"onPointerMove\"],\n    undefined\n  >;\n  onPointerUp: Exclude<\n    DOMAttributes<HTMLCanvasElement>[\"onPointerUp\"],\n    undefined\n  >;\n  onPointerCancel: Exclude<\n    DOMAttributes<HTMLCanvasElement>[\"onPointerCancel\"],\n    undefined\n  >;\n  onTouchMove: Exclude<\n    DOMAttributes<HTMLCanvasElement>[\"onTouchMove\"],\n    undefined\n  >;\n  onPointerDown: Exclude<\n    DOMAttributes<HTMLCanvasElement>[\"onPointerDown\"],\n    undefined\n  >;\n  onDoubleClick: Exclude<\n    DOMAttributes<HTMLCanvasElement>[\"onDoubleClick\"],\n    undefined\n  >;\n};\n\nconst InteractiveCanvas = (props: InteractiveCanvasProps) => {\n  const isComponentMounted = useRef(false);\n\n  useEffect(() => {\n    if (!isComponentMounted.current) {\n      isComponentMounted.current = true;\n      return;\n    }\n\n    const remotePointerButton: InteractiveCanvasRenderConfig[\"remotePointerButton\"] =\n      new Map();\n    const remotePointerViewportCoords: InteractiveCanvasRenderConfig[\"remotePointerViewportCoords\"] =\n      new Map();\n    const remoteSelectedElementIds: InteractiveCanvasRenderConfig[\"remoteSelectedElementIds\"] =\n      new Map();\n    const remotePointerUsernames: InteractiveCanvasRenderConfig[\"remotePointerUsernames\"] =\n      new Map();\n    const remotePointerUserStates: InteractiveCanvasRenderConfig[\"remotePointerUserStates\"] =\n      new Map();\n\n    props.appState.collaborators.forEach((user, socketId) => {\n      if (user.selectedElementIds) {\n        for (const id of Object.keys(user.selectedElementIds)) {\n          if (!remoteSelectedElementIds.has(id)) {\n            remoteSelectedElementIds.set(id, []);\n          }\n          remoteSelectedElementIds.get(id)!.push(socketId);\n        }\n      }\n      if (!user.pointer || user.pointer.renderCursor === false) {\n        return;\n      }\n      if (user.username) {\n        remotePointerUsernames.set(socketId, user.username);\n      }\n      if (user.userState) {\n        remotePointerUserStates.set(socketId, user.userState);\n      }\n      remotePointerViewportCoords.set(\n        socketId,\n        sceneCoordsToViewportCoords(\n          {\n            sceneX: user.pointer.x,\n            sceneY: user.pointer.y,\n          },\n          props.appState,\n        ),\n      );\n      remotePointerButton.set(socketId, user.button);\n    });\n\n    const selectionColor =\n      (props.containerRef?.current &&\n        getComputedStyle(props.containerRef.current).getPropertyValue(\n          \"--color-selection\",\n        )) ||\n      \"#6965db\";\n\n    renderInteractiveScene(\n      {\n        canvas: props.canvas,\n        elementsMap: props.elementsMap,\n        visibleElements: props.visibleElements,\n        selectedElements: props.selectedElements,\n        allElementsMap: props.allElementsMap,\n        scale: window.devicePixelRatio,\n        appState: props.appState,\n        renderConfig: {\n          remotePointerViewportCoords,\n          remotePointerButton,\n          remoteSelectedElementIds,\n          remotePointerUsernames,\n          remotePointerUserStates,\n          selectionColor,\n          renderScrollbars: false,\n        },\n        device: props.device,\n        callback: props.renderInteractiveSceneCallback,\n      },\n      isRenderThrottlingEnabled(),\n    );\n  });\n\n  return (\n    <canvas\n      className=\"excalidraw__canvas interactive\"\n      style={{\n        width: props.appState.width,\n        height: props.appState.height,\n        cursor: props.appState.viewModeEnabled\n          ? CURSOR_TYPE.GRAB\n          : CURSOR_TYPE.AUTO,\n      }}\n      width={props.appState.width * props.scale}\n      height={props.appState.height * props.scale}\n      ref={props.handleCanvasRef}\n      onContextMenu={props.onContextMenu}\n      onPointerMove={props.onPointerMove}\n      onPointerUp={props.onPointerUp}\n      onPointerCancel={props.onPointerCancel}\n      onTouchMove={props.onTouchMove}\n      onPointerDown={props.onPointerDown}\n      onDoubleClick={\n        props.appState.viewModeEnabled ? undefined : props.onDoubleClick\n      }\n    >\n      {t(\"labels.drawingCanvas\")}\n    </canvas>\n  );\n};\n\nconst getRelevantAppStateProps = (\n  appState: AppState,\n): InteractiveCanvasAppState => ({\n  zoom: appState.zoom,\n  scrollX: appState.scrollX,\n  scrollY: appState.scrollY,\n  width: appState.width,\n  height: appState.height,\n  viewModeEnabled: appState.viewModeEnabled,\n  openDialog: appState.openDialog,\n  editingGroupId: appState.editingGroupId,\n  editingLinearElement: appState.editingLinearElement,\n  selectedElementIds: appState.selectedElementIds,\n  frameToHighlight: appState.frameToHighlight,\n  offsetLeft: appState.offsetLeft,\n  offsetTop: appState.offsetTop,\n  theme: appState.theme,\n  pendingImageElementId: appState.pendingImageElementId,\n  selectionElement: appState.selectionElement,\n  selectedGroupIds: appState.selectedGroupIds,\n  selectedLinearElement: appState.selectedLinearElement,\n  multiElement: appState.multiElement,\n  isBindingEnabled: appState.isBindingEnabled,\n  suggestedBindings: appState.suggestedBindings,\n  isRotating: appState.isRotating,\n  elementsToHighlight: appState.elementsToHighlight,\n  collaborators: appState.collaborators, // Necessary for collab. sessions\n  activeEmbeddable: appState.activeEmbeddable,\n  snapLines: appState.snapLines,\n  zenModeEnabled: appState.zenModeEnabled,\n  editingTextElement: appState.editingTextElement,\n  isCropping: appState.isCropping,\n  croppingElementId: appState.croppingElementId,\n  searchMatches: appState.searchMatches,\n});\n\nconst areEqual = (\n  prevProps: InteractiveCanvasProps,\n  nextProps: InteractiveCanvasProps,\n) => {\n  // This could be further optimised if needed, as we don't have to render interactive canvas on each scene mutation\n  if (\n    prevProps.selectionNonce !== nextProps.selectionNonce ||\n    prevProps.sceneNonce !== nextProps.sceneNonce ||\n    prevProps.scale !== nextProps.scale ||\n    // we need to memoize on elementsMap because they may have renewed\n    // even if sceneNonce didn't change (e.g. we filter elements out based\n    // on appState)\n    prevProps.elementsMap !== nextProps.elementsMap ||\n    prevProps.visibleElements !== nextProps.visibleElements ||\n    prevProps.selectedElements !== nextProps.selectedElements\n  ) {\n    return false;\n  }\n\n  // Comparing the interactive appState for changes in case of some edge cases\n  return isShallowEqual(\n    // asserting AppState because we're being passed the whole AppState\n    // but resolve to only the InteractiveCanvas-relevant props\n    getRelevantAppStateProps(prevProps.appState as AppState),\n    getRelevantAppStateProps(nextProps.appState as AppState),\n  );\n};\n\nexport default React.memo(InteractiveCanvas, areEqual);\n", "/**\n * @param func handler taking at most single parameter (event).\n */\n\nimport { unstable_batchedUpdates } from \"react-dom\";\nimport { version as ReactVersion } from \"react\";\nimport { throttleRAF } from \"./utils\";\n\nexport const withBatchedUpdates = <\n  TFunction extends ((event: any) => void) | (() => void),\n>(\n  func: Parameters<TFunction>[\"length\"] extends 0 | 1 ? TFunction : never,\n) =>\n  ((event) => {\n    unstable_batchedUpdates(func as TFunction, event);\n  }) as TFunction;\n\n/**\n * barches React state updates and throttles the calls to a single call per\n * animation frame\n */\nexport const withBatchedUpdatesThrottled = <\n  TFunction extends ((event: any) => void) | (() => void),\n>(\n  func: Parameters<TFunction>[\"length\"] extends 0 | 1 ? TFunction : never,\n) => {\n  // @ts-ignore\n  return throttleRAF<Parameters<TFunction>>(((event) => {\n    unstable_batchedUpdates(func, event);\n  }) as TFunction);\n};\n\nexport const isRenderThrottlingEnabled = (() => {\n  // we don't want to throttle in react < 18 because of #5439 and it was\n  // getting more complex to maintain the fix\n  let IS_REACT_18_AND_UP: boolean;\n  try {\n    const version = ReactVersion.split(\".\");\n    IS_REACT_18_AND_UP = Number(version[0]) > 17;\n  } catch {\n    IS_REACT_18_AND_UP = false;\n  }\n\n  let hasWarned = false;\n\n  return () => {\n    if (window.EXCALIDRAW_THROTTLE_RENDER === true) {\n      if (!IS_REACT_18_AND_UP) {\n        if (!hasWarned) {\n          hasWarned = true;\n          console.warn(\n            \"Excalidraw: render throttling is disabled on React versions < 18.\",\n          );\n        }\n        return false;\n      }\n      return true;\n    }\n    return false;\n  };\n})();\n", "import { pointFrom, type GlobalPoint, type LocalPoint } from \"@excalidraw/math\";\nimport { THEME } from \"../constants\";\nimport type { PointSnapLine, PointerSnapLine } from \"../snapping\";\nimport type { InteractiveCanvasAppState } from \"../types\";\n\nconst SNAP_COLOR_LIGHT = \"#ff6b6b\";\nconst SNAP_COLOR_DARK = \"#ff0000\";\nconst SNAP_WIDTH = 1;\nconst SNAP_CROSS_SIZE = 2;\n\nexport const renderSnaps = (\n  context: CanvasRenderingContext2D,\n  appState: InteractiveCanvasAppState,\n) => {\n  if (!appState.snapLines.length) {\n    return;\n  }\n\n  // in dark mode, we need to adjust the color to account for color inversion.\n  // Don't change if zen mode, because we draw only crosses, we want the\n  // colors to be more visible\n  const snapColor =\n    appState.theme === THEME.LIGHT || appState.zenModeEnabled\n      ? SNAP_COLOR_LIGHT\n      : SNAP_COLOR_DARK;\n  // in zen mode make the cross more visible since we don't draw the lines\n  const snapWidth =\n    (appState.zenModeEnabled ? SNAP_WIDTH * 1.5 : SNAP_WIDTH) /\n    appState.zoom.value;\n\n  context.save();\n  context.translate(appState.scrollX, appState.scrollY);\n\n  for (const snapLine of appState.snapLines) {\n    if (snapLine.type === \"pointer\") {\n      context.lineWidth = snapWidth;\n      context.strokeStyle = snapColor;\n\n      drawPointerSnapLine(snapLine, context, appState);\n    } else if (snapLine.type === \"gap\") {\n      context.lineWidth = snapWidth;\n      context.strokeStyle = snapColor;\n\n      drawGapLine(\n        snapLine.points[0],\n        snapLine.points[1],\n        snapLine.direction,\n        appState,\n        context,\n      );\n    } else if (snapLine.type === \"points\") {\n      context.lineWidth = snapWidth;\n      context.strokeStyle = snapColor;\n      drawPointsSnapLine(snapLine, context, appState);\n    }\n  }\n\n  context.restore();\n};\n\nconst drawPointsSnapLine = (\n  pointSnapLine: PointSnapLine,\n  context: CanvasRenderingContext2D,\n  appState: InteractiveCanvasAppState,\n) => {\n  if (!appState.zenModeEnabled) {\n    const firstPoint = pointSnapLine.points[0];\n    const lastPoint = pointSnapLine.points[pointSnapLine.points.length - 1];\n\n    drawLine(firstPoint, lastPoint, context);\n  }\n\n  for (const point of pointSnapLine.points) {\n    drawCross(point, appState, context);\n  }\n};\n\nconst drawPointerSnapLine = (\n  pointerSnapLine: PointerSnapLine,\n  context: CanvasRenderingContext2D,\n  appState: InteractiveCanvasAppState,\n) => {\n  drawCross(pointerSnapLine.points[0], appState, context);\n  if (!appState.zenModeEnabled) {\n    drawLine(pointerSnapLine.points[0], pointerSnapLine.points[1], context);\n  }\n};\n\nconst drawCross = <Point extends LocalPoint | GlobalPoint>(\n  [x, y]: Point,\n  appState: InteractiveCanvasAppState,\n  context: CanvasRenderingContext2D,\n) => {\n  context.save();\n  const size =\n    (appState.zenModeEnabled ? SNAP_CROSS_SIZE * 1.5 : SNAP_CROSS_SIZE) /\n    appState.zoom.value;\n  context.beginPath();\n\n  context.moveTo(x - size, y - size);\n  context.lineTo(x + size, y + size);\n\n  context.moveTo(x + size, y - size);\n  context.lineTo(x - size, y + size);\n\n  context.stroke();\n  context.restore();\n};\n\nconst drawLine = <Point extends LocalPoint | GlobalPoint>(\n  from: Point,\n  to: Point,\n  context: CanvasRenderingContext2D,\n) => {\n  context.beginPath();\n  context.lineTo(from[0], from[1]);\n  context.lineTo(to[0], to[1]);\n  context.stroke();\n};\n\nconst drawGapLine = <Point extends LocalPoint | GlobalPoint>(\n  from: Point,\n  to: Point,\n  direction: \"horizontal\" | \"vertical\",\n  appState: InteractiveCanvasAppState,\n  context: CanvasRenderingContext2D,\n) => {\n  // a horizontal gap snap line\n  // |\u2013\u2013\u2013\u2013\u2013\u2013\u2013||\u2013\u2013\u2013\u2013\u2013\u2013\u2013|\n  // ^    ^   ^       ^\n  // \\    \\   \\       \\\n  // (1)  (2) (3)     (4)\n\n  const FULL = 8 / appState.zoom.value;\n  const HALF = FULL / 2;\n  const QUARTER = FULL / 4;\n\n  if (direction === \"horizontal\") {\n    const halfPoint = [(from[0] + to[0]) / 2, from[1]];\n    // (1)\n    if (!appState.zenModeEnabled) {\n      drawLine(\n        pointFrom(from[0], from[1] - FULL),\n        pointFrom(from[0], from[1] + FULL),\n        context,\n      );\n    }\n\n    // (3)\n    drawLine(\n      pointFrom(halfPoint[0] - QUARTER, halfPoint[1] - HALF),\n      pointFrom(halfPoint[0] - QUARTER, halfPoint[1] + HALF),\n      context,\n    );\n    drawLine(\n      pointFrom(halfPoint[0] + QUARTER, halfPoint[1] - HALF),\n      pointFrom(halfPoint[0] + QUARTER, halfPoint[1] + HALF),\n      context,\n    );\n\n    if (!appState.zenModeEnabled) {\n      // (4)\n      drawLine(\n        pointFrom(to[0], to[1] - FULL),\n        pointFrom(to[0], to[1] + FULL),\n        context,\n      );\n\n      // (2)\n      drawLine(from, to, context);\n    }\n  } else {\n    const halfPoint = [from[0], (from[1] + to[1]) / 2];\n    // (1)\n    if (!appState.zenModeEnabled) {\n      drawLine(\n        pointFrom(from[0] - FULL, from[1]),\n        pointFrom(from[0] + FULL, from[1]),\n        context,\n      );\n    }\n\n    // (3)\n    drawLine(\n      pointFrom(halfPoint[0] - HALF, halfPoint[1] - QUARTER),\n      pointFrom(halfPoint[0] + HALF, halfPoint[1] - QUARTER),\n      context,\n    );\n    drawLine(\n      pointFrom(halfPoint[0] - HALF, halfPoint[1] + QUARTER),\n      pointFrom(halfPoint[0] + HALF, halfPoint[1] + QUARTER),\n      context,\n    );\n\n    if (!appState.zenModeEnabled) {\n      // (4)\n      drawLine(\n        pointFrom(to[0] - FULL, to[1]),\n        pointFrom(to[0] + FULL, to[1]),\n        context,\n      );\n\n      // (2)\n      drawLine(from, to, context);\n    }\n  }\n};\n", "import {\n  getElementAbsoluteCoords,\n  getTransformHandlesFromCoords,\n  getTransformHandles,\n  getCommonBounds,\n} from \"../element\";\n\nimport { roundRect } from \"../renderer/roundRect\";\n\nimport {\n  getScrollBars,\n  SCROLLBAR_COLOR,\n  SCROLLBAR_WIDTH,\n} from \"../scene/scrollbars\";\n\nimport { renderSelectionElement } from \"../renderer/renderElement\";\nimport { getClientColor, renderRemoteCursors } from \"../clients\";\nimport {\n  isSelectedViaGroup,\n  getSelectedGroupIds,\n  getElementsInGroup,\n  selectGroupsFromGivenElements,\n} from \"../groups\";\nimport type {\n  TransformHandles,\n  TransformHandleType,\n} from \"../element/transformHandles\";\nimport {\n  getOmitSidesForDevice,\n  shouldShowBoundingBox,\n} from \"../element/transformHandles\";\nimport { arrayToMap, invariant, throttleRAF } from \"../utils\";\nimport {\n  DEFAULT_TRANSFORM_HANDLE_SPACING,\n  FRAME_STYLE,\n  THEME,\n} from \"../constants\";\nimport { type InteractiveCanvasAppState } from \"../types\";\n\nimport { renderSnaps } from \"../renderer/renderSnaps\";\n\nimport type {\n  SuggestedBinding,\n  SuggestedPointBinding,\n} from \"../element/binding\";\nimport {\n  BINDING_HIGHLIGHT_OFFSET,\n  BINDING_HIGHLIGHT_THICKNESS,\n  maxBindingGap,\n} from \"../element/binding\";\nimport { LinearElementEditor } from \"../element/linearElementEditor\";\nimport {\n  bootstrapCanvas,\n  fillCircle,\n  getNormalizedCanvasDimensions,\n} from \"./helpers\";\nimport oc from \"open-color\";\nimport {\n  isElbowArrow,\n  isFrameLikeElement,\n  isImageElement,\n  isLinearElement,\n  isTextElement,\n} from \"../element/typeChecks\";\nimport type {\n  ElementsMap,\n  ExcalidrawBindableElement,\n  ExcalidrawElement,\n  ExcalidrawFrameLikeElement,\n  ExcalidrawImageElement,\n  ExcalidrawLinearElement,\n  ExcalidrawTextElement,\n  GroupId,\n  NonDeleted,\n} from \"../element/types\";\nimport type {\n  InteractiveCanvasRenderConfig,\n  InteractiveSceneRenderConfig,\n  RenderableElementsMap,\n} from \"../scene/types\";\nimport {\n  pointFrom,\n  type GlobalPoint,\n  type LocalPoint,\n  type Radians,\n} from \"@excalidraw/math\";\nimport { getCornerRadius } from \"../shapes\";\n\nconst renderElbowArrowMidPointHighlight = (\n  context: CanvasRenderingContext2D,\n  appState: InteractiveCanvasAppState,\n) => {\n  invariant(appState.selectedLinearElement, \"selectedLinearElement is null\");\n\n  const { segmentMidPointHoveredCoords } = appState.selectedLinearElement;\n\n  invariant(segmentMidPointHoveredCoords, \"midPointCoords is null\");\n\n  context.save();\n  context.translate(appState.scrollX, appState.scrollY);\n\n  highlightPoint(segmentMidPointHoveredCoords, context, appState);\n\n  context.restore();\n};\n\nconst renderLinearElementPointHighlight = (\n  context: CanvasRenderingContext2D,\n  appState: InteractiveCanvasAppState,\n  elementsMap: ElementsMap,\n) => {\n  const { elementId, hoverPointIndex } = appState.selectedLinearElement!;\n  if (\n    appState.editingLinearElement?.selectedPointsIndices?.includes(\n      hoverPointIndex,\n    )\n  ) {\n    return;\n  }\n  const element = LinearElementEditor.getElement(elementId, elementsMap);\n\n  if (!element) {\n    return;\n  }\n  const point = LinearElementEditor.getPointAtIndexGlobalCoordinates(\n    element,\n    hoverPointIndex,\n    elementsMap,\n  );\n  context.save();\n  context.translate(appState.scrollX, appState.scrollY);\n\n  highlightPoint(point, context, appState);\n  context.restore();\n};\n\nconst highlightPoint = <Point extends LocalPoint | GlobalPoint>(\n  point: Point,\n  context: CanvasRenderingContext2D,\n  appState: InteractiveCanvasAppState,\n) => {\n  context.fillStyle = \"rgba(105, 101, 219, 0.4)\";\n\n  fillCircle(\n    context,\n    point[0],\n    point[1],\n    LinearElementEditor.POINT_HANDLE_SIZE / appState.zoom.value,\n    false,\n  );\n};\n\nconst strokeRectWithRotation = (\n  context: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  cx: number,\n  cy: number,\n  angle: number,\n  fill: boolean = false,\n  /** should account for zoom */\n  radius: number = 0,\n) => {\n  context.save();\n  context.translate(cx, cy);\n  context.rotate(angle);\n  if (fill) {\n    context.fillRect(x - cx, y - cy, width, height);\n  }\n  if (radius && context.roundRect) {\n    context.beginPath();\n    context.roundRect(x - cx, y - cy, width, height, radius);\n    context.stroke();\n    context.closePath();\n  } else {\n    context.strokeRect(x - cx, y - cy, width, height);\n  }\n  context.restore();\n};\n\nconst strokeDiamondWithRotation = (\n  context: CanvasRenderingContext2D,\n  width: number,\n  height: number,\n  cx: number,\n  cy: number,\n  angle: number,\n) => {\n  context.save();\n  context.translate(cx, cy);\n  context.rotate(angle);\n  context.beginPath();\n  context.moveTo(0, height / 2);\n  context.lineTo(width / 2, 0);\n  context.lineTo(0, -height / 2);\n  context.lineTo(-width / 2, 0);\n  context.closePath();\n  context.stroke();\n  context.restore();\n};\n\nconst renderSingleLinearPoint = <Point extends GlobalPoint | LocalPoint>(\n  context: CanvasRenderingContext2D,\n  appState: InteractiveCanvasAppState,\n  point: Point,\n  radius: number,\n  isSelected: boolean,\n  isPhantomPoint = false,\n) => {\n  context.strokeStyle = \"#5e5ad8\";\n  context.setLineDash([]);\n  context.fillStyle = \"rgba(255, 255, 255, 0.9)\";\n  if (isSelected) {\n    context.fillStyle = \"rgba(134, 131, 226, 0.9)\";\n  } else if (isPhantomPoint) {\n    context.fillStyle = \"rgba(177, 151, 252, 0.7)\";\n  }\n\n  fillCircle(\n    context,\n    point[0],\n    point[1],\n    radius / appState.zoom.value,\n    !isPhantomPoint,\n  );\n};\n\nconst strokeEllipseWithRotation = (\n  context: CanvasRenderingContext2D,\n  width: number,\n  height: number,\n  cx: number,\n  cy: number,\n  angle: number,\n) => {\n  context.beginPath();\n  context.ellipse(cx, cy, width / 2, height / 2, angle, 0, Math.PI * 2);\n  context.stroke();\n};\n\nconst renderBindingHighlightForBindableElement = (\n  context: CanvasRenderingContext2D,\n  element: ExcalidrawBindableElement,\n  elementsMap: ElementsMap,\n  zoom: InteractiveCanvasAppState[\"zoom\"],\n) => {\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element, elementsMap);\n  const width = x2 - x1;\n  const height = y2 - y1;\n\n  context.strokeStyle = \"rgba(0,0,0,.05)\";\n  // When zooming out, make line width greater for visibility\n  const zoomValue = zoom.value < 1 ? zoom.value : 1;\n  context.lineWidth = BINDING_HIGHLIGHT_THICKNESS / zoomValue;\n  // To ensure the binding highlight doesn't overlap the element itself\n  const padding = context.lineWidth / 2 + BINDING_HIGHLIGHT_OFFSET;\n\n  const radius = getCornerRadius(\n    Math.min(element.width, element.height),\n    element,\n  );\n\n  switch (element.type) {\n    case \"rectangle\":\n    case \"text\":\n    case \"image\":\n    case \"iframe\":\n    case \"embeddable\":\n    case \"frame\":\n    case \"magicframe\":\n      strokeRectWithRotation(\n        context,\n        x1 - padding,\n        y1 - padding,\n        width + padding * 2,\n        height + padding * 2,\n        x1 + width / 2,\n        y1 + height / 2,\n        element.angle,\n        undefined,\n        radius,\n      );\n      break;\n    case \"diamond\":\n      const side = Math.hypot(width, height);\n      const wPadding = (padding * side) / height;\n      const hPadding = (padding * side) / width;\n      strokeDiamondWithRotation(\n        context,\n        width + wPadding * 2,\n        height + hPadding * 2,\n        x1 + width / 2,\n        y1 + height / 2,\n        element.angle,\n      );\n      break;\n    case \"ellipse\":\n      strokeEllipseWithRotation(\n        context,\n        width + padding * 2,\n        height + padding * 2,\n        x1 + width / 2,\n        y1 + height / 2,\n        element.angle,\n      );\n      break;\n  }\n};\n\nconst renderBindingHighlightForSuggestedPointBinding = (\n  context: CanvasRenderingContext2D,\n  suggestedBinding: SuggestedPointBinding,\n  elementsMap: ElementsMap,\n  zoom: InteractiveCanvasAppState[\"zoom\"],\n) => {\n  const [element, startOrEnd, bindableElement] = suggestedBinding;\n\n  const threshold = maxBindingGap(\n    bindableElement,\n    bindableElement.width,\n    bindableElement.height,\n    zoom,\n  );\n\n  context.strokeStyle = \"rgba(0,0,0,0)\";\n  context.fillStyle = \"rgba(0,0,0,.05)\";\n\n  const pointIndices =\n    startOrEnd === \"both\" ? [0, -1] : startOrEnd === \"start\" ? [0] : [-1];\n  pointIndices.forEach((index) => {\n    const [x, y] = LinearElementEditor.getPointAtIndexGlobalCoordinates(\n      element,\n      index,\n      elementsMap,\n    );\n    fillCircle(context, x, y, threshold);\n  });\n};\n\ntype ElementSelectionBorder = {\n  angle: number;\n  x1: number;\n  y1: number;\n  x2: number;\n  y2: number;\n  selectionColors: string[];\n  dashed?: boolean;\n  cx: number;\n  cy: number;\n  activeEmbeddable: boolean;\n  padding?: number;\n};\n\nconst renderSelectionBorder = (\n  context: CanvasRenderingContext2D,\n  appState: InteractiveCanvasAppState,\n  elementProperties: ElementSelectionBorder,\n) => {\n  const {\n    angle,\n    x1,\n    y1,\n    x2,\n    y2,\n    selectionColors,\n    cx,\n    cy,\n    dashed,\n    activeEmbeddable,\n  } = elementProperties;\n  const elementWidth = x2 - x1;\n  const elementHeight = y2 - y1;\n\n  const padding =\n    elementProperties.padding ?? DEFAULT_TRANSFORM_HANDLE_SPACING * 2;\n\n  const linePadding = padding / appState.zoom.value;\n  const lineWidth = 8 / appState.zoom.value;\n  const spaceWidth = 4 / appState.zoom.value;\n\n  context.save();\n  context.translate(appState.scrollX, appState.scrollY);\n  context.lineWidth = (activeEmbeddable ? 4 : 1) / appState.zoom.value;\n\n  const count = selectionColors.length;\n  for (let index = 0; index < count; ++index) {\n    context.strokeStyle = selectionColors[index];\n    if (dashed) {\n      context.setLineDash([\n        lineWidth,\n        spaceWidth + (lineWidth + spaceWidth) * (count - 1),\n      ]);\n    }\n    context.lineDashOffset = (lineWidth + spaceWidth) * index;\n    strokeRectWithRotation(\n      context,\n      x1 - linePadding,\n      y1 - linePadding,\n      elementWidth + linePadding * 2,\n      elementHeight + linePadding * 2,\n      cx,\n      cy,\n      angle,\n    );\n  }\n  context.restore();\n};\n\nconst renderBindingHighlight = (\n  context: CanvasRenderingContext2D,\n  appState: InteractiveCanvasAppState,\n  suggestedBinding: SuggestedBinding,\n  elementsMap: ElementsMap,\n) => {\n  const renderHighlight = Array.isArray(suggestedBinding)\n    ? renderBindingHighlightForSuggestedPointBinding\n    : renderBindingHighlightForBindableElement;\n\n  context.save();\n  context.translate(appState.scrollX, appState.scrollY);\n  renderHighlight(context, suggestedBinding as any, elementsMap, appState.zoom);\n\n  context.restore();\n};\n\nconst renderFrameHighlight = (\n  context: CanvasRenderingContext2D,\n  appState: InteractiveCanvasAppState,\n  frame: NonDeleted<ExcalidrawFrameLikeElement>,\n  elementsMap: ElementsMap,\n) => {\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(frame, elementsMap);\n  const width = x2 - x1;\n  const height = y2 - y1;\n\n  context.strokeStyle = \"rgb(0,118,255)\";\n  context.lineWidth = FRAME_STYLE.strokeWidth / appState.zoom.value;\n\n  context.save();\n  context.translate(appState.scrollX, appState.scrollY);\n  strokeRectWithRotation(\n    context,\n    x1,\n    y1,\n    width,\n    height,\n    x1 + width / 2,\n    y1 + height / 2,\n    frame.angle,\n    false,\n    FRAME_STYLE.radius / appState.zoom.value,\n  );\n  context.restore();\n};\n\nconst renderElementsBoxHighlight = (\n  context: CanvasRenderingContext2D,\n  appState: InteractiveCanvasAppState,\n  elements: NonDeleted<ExcalidrawElement>[],\n) => {\n  const individualElements = elements.filter(\n    (element) => element.groupIds.length === 0,\n  );\n\n  const elementsInGroups = elements.filter(\n    (element) => element.groupIds.length > 0,\n  );\n\n  const getSelectionFromElements = (elements: ExcalidrawElement[]) => {\n    const [x1, y1, x2, y2] = getCommonBounds(elements);\n    return {\n      angle: 0,\n      x1,\n      x2,\n      y1,\n      y2,\n      selectionColors: [\"rgb(0,118,255)\"],\n      dashed: false,\n      cx: x1 + (x2 - x1) / 2,\n      cy: y1 + (y2 - y1) / 2,\n      activeEmbeddable: false,\n    };\n  };\n\n  const getSelectionForGroupId = (groupId: GroupId) => {\n    const groupElements = getElementsInGroup(elements, groupId);\n    return getSelectionFromElements(groupElements);\n  };\n\n  Object.entries(selectGroupsFromGivenElements(elementsInGroups, appState))\n    .filter(([id, isSelected]) => isSelected)\n    .map(([id, isSelected]) => id)\n    .map((groupId) => getSelectionForGroupId(groupId))\n    .concat(\n      individualElements.map((element) => getSelectionFromElements([element])),\n    )\n    .forEach((selection) =>\n      renderSelectionBorder(context, appState, selection),\n    );\n};\n\nconst renderLinearPointHandles = (\n  context: CanvasRenderingContext2D,\n  appState: InteractiveCanvasAppState,\n  element: NonDeleted<ExcalidrawLinearElement>,\n  elementsMap: RenderableElementsMap,\n) => {\n  if (!appState.selectedLinearElement) {\n    return;\n  }\n  context.save();\n  context.translate(appState.scrollX, appState.scrollY);\n  context.lineWidth = 1 / appState.zoom.value;\n  const points: GlobalPoint[] = LinearElementEditor.getPointsGlobalCoordinates(\n    element,\n    elementsMap,\n  );\n\n  const { POINT_HANDLE_SIZE } = LinearElementEditor;\n  const radius = appState.editingLinearElement\n    ? POINT_HANDLE_SIZE\n    : POINT_HANDLE_SIZE / 2;\n  points.forEach((point, idx) => {\n    if (isElbowArrow(element) && idx !== 0 && idx !== points.length - 1) {\n      return;\n    }\n\n    const isSelected =\n      !!appState.editingLinearElement?.selectedPointsIndices?.includes(idx);\n\n    renderSingleLinearPoint(context, appState, point, radius, isSelected);\n  });\n\n  // Rendering segment mid points\n  if (isElbowArrow(element)) {\n    const fixedSegments =\n      element.fixedSegments?.map((segment) => segment.index) || [];\n    points.slice(0, -1).forEach((p, idx) => {\n      if (\n        !LinearElementEditor.isSegmentTooShort(\n          element,\n          points[idx + 1],\n          points[idx],\n          idx,\n          appState.zoom,\n        )\n      ) {\n        renderSingleLinearPoint(\n          context,\n          appState,\n          pointFrom<GlobalPoint>(\n            (p[0] + points[idx + 1][0]) / 2,\n            (p[1] + points[idx + 1][1]) / 2,\n          ),\n          POINT_HANDLE_SIZE / 2,\n          false,\n          !fixedSegments.includes(idx + 1),\n        );\n      }\n    });\n  } else {\n    const midPoints = LinearElementEditor.getEditorMidPoints(\n      element,\n      elementsMap,\n      appState,\n    ).filter(\n      (midPoint, idx, midPoints): midPoint is GlobalPoint =>\n        midPoint !== null &&\n        !(isElbowArrow(element) && (idx === 0 || idx === midPoints.length - 1)),\n    );\n\n    midPoints.forEach((segmentMidPoint) => {\n      if (appState.editingLinearElement || points.length === 2) {\n        renderSingleLinearPoint(\n          context,\n          appState,\n          segmentMidPoint,\n          POINT_HANDLE_SIZE / 2,\n          false,\n          true,\n        );\n      }\n    });\n  }\n\n  context.restore();\n};\n\nconst renderTransformHandles = (\n  context: CanvasRenderingContext2D,\n  renderConfig: InteractiveCanvasRenderConfig,\n  appState: InteractiveCanvasAppState,\n  transformHandles: TransformHandles,\n  angle: number,\n): void => {\n  Object.keys(transformHandles).forEach((key) => {\n    const transformHandle = transformHandles[key as TransformHandleType];\n    if (transformHandle !== undefined) {\n      const [x, y, width, height] = transformHandle;\n\n      context.save();\n      context.lineWidth = 1 / appState.zoom.value;\n      if (renderConfig.selectionColor) {\n        context.strokeStyle = renderConfig.selectionColor;\n      }\n      if (key === \"rotation\") {\n        fillCircle(context, x + width / 2, y + height / 2, width / 2);\n        // prefer round corners if roundRect API is available\n      } else if (context.roundRect) {\n        context.beginPath();\n        context.roundRect(x, y, width, height, 2 / appState.zoom.value);\n        context.fill();\n        context.stroke();\n      } else {\n        strokeRectWithRotation(\n          context,\n          x,\n          y,\n          width,\n          height,\n          x + width / 2,\n          y + height / 2,\n          angle,\n          true, // fill before stroke\n        );\n      }\n      context.restore();\n    }\n  });\n};\n\nconst renderCropHandles = (\n  context: CanvasRenderingContext2D,\n  renderConfig: InteractiveCanvasRenderConfig,\n  appState: InteractiveCanvasAppState,\n  croppingElement: ExcalidrawImageElement,\n  elementsMap: ElementsMap,\n): void => {\n  const [x1, y1, , , cx, cy] = getElementAbsoluteCoords(\n    croppingElement,\n    elementsMap,\n  );\n\n  const LINE_WIDTH = 3;\n  const LINE_LENGTH = 20;\n\n  const ZOOMED_LINE_WIDTH = LINE_WIDTH / appState.zoom.value;\n  const ZOOMED_HALF_LINE_WIDTH = ZOOMED_LINE_WIDTH / 2;\n\n  const HALF_WIDTH = cx - x1 + ZOOMED_LINE_WIDTH;\n  const HALF_HEIGHT = cy - y1 + ZOOMED_LINE_WIDTH;\n\n  const HORIZONTAL_LINE_LENGTH = Math.min(\n    LINE_LENGTH / appState.zoom.value,\n    HALF_WIDTH,\n  );\n  const VERTICAL_LINE_LENGTH = Math.min(\n    LINE_LENGTH / appState.zoom.value,\n    HALF_HEIGHT,\n  );\n\n  context.save();\n  context.fillStyle = renderConfig.selectionColor;\n  context.strokeStyle = renderConfig.selectionColor;\n  context.lineWidth = ZOOMED_LINE_WIDTH;\n\n  const handles: Array<\n    [\n      [number, number],\n      [number, number],\n      [number, number],\n      [number, number],\n      [number, number],\n    ]\n  > = [\n    [\n      // x, y\n      [-HALF_WIDTH, -HALF_HEIGHT],\n      // horizontal line: first start and to\n      [0, ZOOMED_HALF_LINE_WIDTH],\n      [HORIZONTAL_LINE_LENGTH, ZOOMED_HALF_LINE_WIDTH],\n      // vertical line: second  start and to\n      [ZOOMED_HALF_LINE_WIDTH, 0],\n      [ZOOMED_HALF_LINE_WIDTH, VERTICAL_LINE_LENGTH],\n    ],\n    [\n      [HALF_WIDTH - ZOOMED_HALF_LINE_WIDTH, -HALF_HEIGHT],\n      [ZOOMED_HALF_LINE_WIDTH, ZOOMED_HALF_LINE_WIDTH],\n      [\n        -HORIZONTAL_LINE_LENGTH + ZOOMED_HALF_LINE_WIDTH,\n        ZOOMED_HALF_LINE_WIDTH,\n      ],\n      [0, 0],\n      [0, VERTICAL_LINE_LENGTH],\n    ],\n    [\n      [-HALF_WIDTH, HALF_HEIGHT],\n      [0, -ZOOMED_HALF_LINE_WIDTH],\n      [HORIZONTAL_LINE_LENGTH, -ZOOMED_HALF_LINE_WIDTH],\n      [ZOOMED_HALF_LINE_WIDTH, 0],\n      [ZOOMED_HALF_LINE_WIDTH, -VERTICAL_LINE_LENGTH],\n    ],\n    [\n      [HALF_WIDTH - ZOOMED_HALF_LINE_WIDTH, HALF_HEIGHT],\n      [ZOOMED_HALF_LINE_WIDTH, -ZOOMED_HALF_LINE_WIDTH],\n      [\n        -HORIZONTAL_LINE_LENGTH + ZOOMED_HALF_LINE_WIDTH,\n        -ZOOMED_HALF_LINE_WIDTH,\n      ],\n      [0, 0],\n      [0, -VERTICAL_LINE_LENGTH],\n    ],\n  ];\n\n  handles.forEach((handle) => {\n    const [[x, y], [x1s, y1s], [x1t, y1t], [x2s, y2s], [x2t, y2t]] = handle;\n\n    context.save();\n    context.translate(cx, cy);\n    context.rotate(croppingElement.angle);\n\n    context.beginPath();\n    context.moveTo(x + x1s, y + y1s);\n    context.lineTo(x + x1t, y + y1t);\n    context.stroke();\n\n    context.beginPath();\n    context.moveTo(x + x2s, y + y2s);\n    context.lineTo(x + x2t, y + y2t);\n    context.stroke();\n    context.restore();\n  });\n\n  context.restore();\n};\n\nconst renderTextBox = (\n  text: NonDeleted<ExcalidrawTextElement>,\n  context: CanvasRenderingContext2D,\n  appState: InteractiveCanvasAppState,\n  selectionColor: InteractiveCanvasRenderConfig[\"selectionColor\"],\n) => {\n  context.save();\n  const padding = (DEFAULT_TRANSFORM_HANDLE_SPACING * 2) / appState.zoom.value;\n  const width = text.width + padding * 2;\n  const height = text.height + padding * 2;\n  const cx = text.x + width / 2;\n  const cy = text.y + height / 2;\n  const shiftX = -(width / 2 + padding);\n  const shiftY = -(height / 2 + padding);\n  context.translate(cx + appState.scrollX, cy + appState.scrollY);\n  context.rotate(text.angle);\n  context.lineWidth = 1 / appState.zoom.value;\n  context.strokeStyle = selectionColor;\n  context.strokeRect(shiftX, shiftY, width, height);\n  context.restore();\n};\n\nconst _renderInteractiveScene = ({\n  canvas,\n  elementsMap,\n  visibleElements,\n  selectedElements,\n  allElementsMap,\n  scale,\n  appState,\n  renderConfig,\n  device,\n}: InteractiveSceneRenderConfig) => {\n  if (canvas === null) {\n    return { atLeastOneVisibleElement: false, elementsMap };\n  }\n\n  const [normalizedWidth, normalizedHeight] = getNormalizedCanvasDimensions(\n    canvas,\n    scale,\n  );\n\n  const context = bootstrapCanvas({\n    canvas,\n    scale,\n    normalizedWidth,\n    normalizedHeight,\n  });\n\n  // Apply zoom\n  context.save();\n  context.scale(appState.zoom.value, appState.zoom.value);\n\n  let editingLinearElement: NonDeleted<ExcalidrawLinearElement> | undefined =\n    undefined;\n\n  visibleElements.forEach((element) => {\n    // Getting the element using LinearElementEditor during collab mismatches version - being one head of visible elements due to\n    // ShapeCache returns empty hence making sure that we get the\n    // correct element from visible elements\n    if (appState.editingLinearElement?.elementId === element.id) {\n      if (element) {\n        editingLinearElement = element as NonDeleted<ExcalidrawLinearElement>;\n      }\n    }\n  });\n\n  if (editingLinearElement) {\n    renderLinearPointHandles(\n      context,\n      appState,\n      editingLinearElement,\n      elementsMap,\n    );\n  }\n\n  // Paint selection element\n  if (appState.selectionElement && !appState.isCropping) {\n    try {\n      renderSelectionElement(\n        appState.selectionElement,\n        context,\n        appState,\n        renderConfig.selectionColor,\n      );\n    } catch (error: any) {\n      console.error(error);\n    }\n  }\n\n  if (\n    appState.editingTextElement &&\n    isTextElement(appState.editingTextElement)\n  ) {\n    const textElement = allElementsMap.get(appState.editingTextElement.id) as\n      | ExcalidrawTextElement\n      | undefined;\n    if (textElement && !textElement.autoResize) {\n      renderTextBox(\n        textElement,\n        context,\n        appState,\n        renderConfig.selectionColor,\n      );\n    }\n  }\n\n  if (appState.isBindingEnabled) {\n    appState.suggestedBindings\n      .filter((binding) => binding != null)\n      .forEach((suggestedBinding) => {\n        renderBindingHighlight(\n          context,\n          appState,\n          suggestedBinding!,\n          elementsMap,\n        );\n      });\n  }\n\n  if (appState.frameToHighlight) {\n    renderFrameHighlight(\n      context,\n      appState,\n      appState.frameToHighlight,\n      elementsMap,\n    );\n  }\n\n  if (appState.elementsToHighlight) {\n    renderElementsBoxHighlight(context, appState, appState.elementsToHighlight);\n  }\n\n  const isFrameSelected = selectedElements.some((element) =>\n    isFrameLikeElement(element),\n  );\n\n  // Getting the element using LinearElementEditor during collab mismatches version - being one head of visible elements due to\n  // ShapeCache returns empty hence making sure that we get the\n  // correct element from visible elements\n  if (\n    selectedElements.length === 1 &&\n    appState.editingLinearElement?.elementId === selectedElements[0].id\n  ) {\n    renderLinearPointHandles(\n      context,\n      appState,\n      selectedElements[0] as NonDeleted<ExcalidrawLinearElement>,\n      elementsMap,\n    );\n  }\n\n  if (\n    isElbowArrow(selectedElements[0]) &&\n    appState.selectedLinearElement &&\n    appState.selectedLinearElement.segmentMidPointHoveredCoords\n  ) {\n    renderElbowArrowMidPointHighlight(context, appState);\n  } else if (\n    appState.selectedLinearElement &&\n    appState.selectedLinearElement.hoverPointIndex >= 0 &&\n    !(\n      isElbowArrow(selectedElements[0]) &&\n      appState.selectedLinearElement.hoverPointIndex > 0 &&\n      appState.selectedLinearElement.hoverPointIndex <\n        selectedElements[0].points.length - 1\n    )\n  ) {\n    renderLinearElementPointHighlight(context, appState, elementsMap);\n  }\n\n  // Paint selected elements\n  if (!appState.multiElement && !appState.editingLinearElement) {\n    const showBoundingBox = shouldShowBoundingBox(selectedElements, appState);\n\n    const isSingleLinearElementSelected =\n      selectedElements.length === 1 && isLinearElement(selectedElements[0]);\n    // render selected linear element points\n    if (\n      isSingleLinearElementSelected &&\n      appState.selectedLinearElement?.elementId === selectedElements[0].id &&\n      !selectedElements[0].locked\n    ) {\n      renderLinearPointHandles(\n        context,\n        appState,\n        selectedElements[0] as ExcalidrawLinearElement,\n        elementsMap,\n      );\n    }\n    const selectionColor = renderConfig.selectionColor || oc.black;\n\n    if (showBoundingBox) {\n      // Optimisation for finding quickly relevant element ids\n      const locallySelectedIds = arrayToMap(selectedElements);\n\n      const selections: ElementSelectionBorder[] = [];\n\n      for (const element of elementsMap.values()) {\n        const selectionColors = [];\n        const remoteClients = renderConfig.remoteSelectedElementIds.get(\n          element.id,\n        );\n        if (\n          !(\n            // Elbow arrow elements cannot be selected when bound on either end\n            (\n              isSingleLinearElementSelected &&\n              isElbowArrow(element) &&\n              (element.startBinding || element.endBinding)\n            )\n          )\n        ) {\n          // local user\n          if (\n            locallySelectedIds.has(element.id) &&\n            !isSelectedViaGroup(appState, element)\n          ) {\n            selectionColors.push(selectionColor);\n          }\n          // remote users\n          if (remoteClients) {\n            selectionColors.push(\n              ...remoteClients.map((socketId) => {\n                const background = getClientColor(\n                  socketId,\n                  appState.collaborators.get(socketId),\n                );\n                return background;\n              }),\n            );\n          }\n        }\n\n        if (selectionColors.length) {\n          const [x1, y1, x2, y2, cx, cy] = getElementAbsoluteCoords(\n            element,\n            elementsMap,\n            true,\n          );\n          selections.push({\n            angle: element.angle,\n            x1,\n            y1,\n            x2,\n            y2,\n            selectionColors,\n            dashed: !!remoteClients,\n            cx,\n            cy,\n            activeEmbeddable:\n              appState.activeEmbeddable?.element === element &&\n              appState.activeEmbeddable.state === \"active\",\n            padding:\n              element.id === appState.croppingElementId ||\n              isImageElement(element)\n                ? 0\n                : undefined,\n          });\n        }\n      }\n\n      const addSelectionForGroupId = (groupId: GroupId) => {\n        const groupElements = getElementsInGroup(elementsMap, groupId);\n        const [x1, y1, x2, y2] = getCommonBounds(groupElements);\n        selections.push({\n          angle: 0,\n          x1,\n          x2,\n          y1,\n          y2,\n          selectionColors: [oc.black],\n          dashed: true,\n          cx: x1 + (x2 - x1) / 2,\n          cy: y1 + (y2 - y1) / 2,\n          activeEmbeddable: false,\n        });\n      };\n\n      for (const groupId of getSelectedGroupIds(appState)) {\n        // TODO: support multiplayer selected group IDs\n        addSelectionForGroupId(groupId);\n      }\n\n      if (appState.editingGroupId) {\n        addSelectionForGroupId(appState.editingGroupId);\n      }\n\n      selections.forEach((selection) =>\n        renderSelectionBorder(context, appState, selection),\n      );\n    }\n    // Paint resize transformHandles\n    context.save();\n    context.translate(appState.scrollX, appState.scrollY);\n\n    if (selectedElements.length === 1) {\n      context.fillStyle = oc.white;\n      const transformHandles = getTransformHandles(\n        selectedElements[0],\n        appState.zoom,\n        elementsMap,\n        \"mouse\", // when we render we don't know which pointer type so use mouse,\n        getOmitSidesForDevice(device),\n      );\n      if (\n        !appState.viewModeEnabled &&\n        showBoundingBox &&\n        // do not show transform handles when text is being edited\n        !isTextElement(appState.editingTextElement) &&\n        // do not show transform handles when image is being cropped\n        !appState.croppingElementId\n      ) {\n        renderTransformHandles(\n          context,\n          renderConfig,\n          appState,\n          transformHandles,\n          selectedElements[0].angle,\n        );\n      }\n\n      if (appState.croppingElementId && !appState.isCropping) {\n        const croppingElement = elementsMap.get(appState.croppingElementId);\n\n        if (croppingElement && isImageElement(croppingElement)) {\n          renderCropHandles(\n            context,\n            renderConfig,\n            appState,\n            croppingElement,\n            elementsMap,\n          );\n        }\n      }\n    } else if (selectedElements.length > 1 && !appState.isRotating) {\n      const dashedLinePadding =\n        (DEFAULT_TRANSFORM_HANDLE_SPACING * 2) / appState.zoom.value;\n      context.fillStyle = oc.white;\n      const [x1, y1, x2, y2] = getCommonBounds(selectedElements);\n      const initialLineDash = context.getLineDash();\n      context.setLineDash([2 / appState.zoom.value]);\n      const lineWidth = context.lineWidth;\n      context.lineWidth = 1 / appState.zoom.value;\n      context.strokeStyle = selectionColor;\n      strokeRectWithRotation(\n        context,\n        x1 - dashedLinePadding,\n        y1 - dashedLinePadding,\n        x2 - x1 + dashedLinePadding * 2,\n        y2 - y1 + dashedLinePadding * 2,\n        (x1 + x2) / 2,\n        (y1 + y2) / 2,\n        0,\n      );\n      context.lineWidth = lineWidth;\n      context.setLineDash(initialLineDash);\n      const transformHandles = getTransformHandlesFromCoords(\n        [x1, y1, x2, y2, (x1 + x2) / 2, (y1 + y2) / 2],\n        0 as Radians,\n        appState.zoom,\n        \"mouse\",\n        isFrameSelected\n          ? { ...getOmitSidesForDevice(device), rotation: true }\n          : getOmitSidesForDevice(device),\n      );\n      if (selectedElements.some((element) => !element.locked)) {\n        renderTransformHandles(\n          context,\n          renderConfig,\n          appState,\n          transformHandles,\n          0,\n        );\n      }\n    }\n    context.restore();\n  }\n\n  appState.searchMatches.forEach(({ id, focus, matchedLines }) => {\n    const element = elementsMap.get(id);\n\n    if (element && isTextElement(element)) {\n      const [elementX1, elementY1, , , cx, cy] = getElementAbsoluteCoords(\n        element,\n        elementsMap,\n        true,\n      );\n\n      context.save();\n      if (appState.theme === THEME.LIGHT) {\n        if (focus) {\n          context.fillStyle = \"rgba(255, 124, 0, 0.4)\";\n        } else {\n          context.fillStyle = \"rgba(255, 226, 0, 0.4)\";\n        }\n      } else if (focus) {\n        context.fillStyle = \"rgba(229, 82, 0, 0.4)\";\n      } else {\n        context.fillStyle = \"rgba(99, 52, 0, 0.4)\";\n      }\n\n      context.translate(appState.scrollX, appState.scrollY);\n      context.translate(cx, cy);\n      context.rotate(element.angle);\n\n      matchedLines.forEach((matchedLine) => {\n        context.fillRect(\n          elementX1 + matchedLine.offsetX - cx,\n          elementY1 + matchedLine.offsetY - cy,\n          matchedLine.width,\n          matchedLine.height,\n        );\n      });\n\n      context.restore();\n    }\n  });\n\n  renderSnaps(context, appState);\n\n  context.restore();\n\n  renderRemoteCursors({\n    context,\n    renderConfig,\n    appState,\n    normalizedWidth,\n    normalizedHeight,\n  });\n\n  // Paint scrollbars\n  let scrollBars;\n  if (renderConfig.renderScrollbars) {\n    scrollBars = getScrollBars(\n      visibleElements,\n      normalizedWidth,\n      normalizedHeight,\n      appState,\n    );\n\n    context.save();\n    context.fillStyle = SCROLLBAR_COLOR;\n    context.strokeStyle = \"rgba(255,255,255,0.8)\";\n    [scrollBars.horizontal, scrollBars.vertical].forEach((scrollBar) => {\n      if (scrollBar) {\n        roundRect(\n          context,\n          scrollBar.x,\n          scrollBar.y,\n          scrollBar.width,\n          scrollBar.height,\n          SCROLLBAR_WIDTH / 2,\n        );\n      }\n    });\n    context.restore();\n  }\n\n  return {\n    scrollBars,\n    atLeastOneVisibleElement: visibleElements.length > 0,\n    elementsMap,\n  };\n};\n\n/** throttled to animation framerate */\nexport const renderInteractiveSceneThrottled = throttleRAF(\n  (config: InteractiveSceneRenderConfig) => {\n    const ret = _renderInteractiveScene(config);\n    config.callback?.(ret);\n  },\n  { trailing: true },\n);\n\n/**\n * Interactive scene is the ui-canvas where we render bounding boxes, selections\n * and other ui stuff.\n */\nexport const renderInteractiveScene = <\n  U extends typeof _renderInteractiveScene,\n  T extends boolean = false,\n>(\n  renderConfig: InteractiveSceneRenderConfig,\n  throttle?: T,\n): T extends true ? void : ReturnType<U> => {\n  if (throttle) {\n    renderInteractiveSceneThrottled(renderConfig);\n    return undefined as T extends true ? void : ReturnType<U>;\n  }\n  const ret = _renderInteractiveScene(renderConfig);\n  renderConfig.callback(ret);\n  return ret as T extends true ? void : ReturnType<U>;\n};\n", "import React, { useEffect, useRef } from \"react\";\nimport type { RoughCanvas } from \"roughjs/bin/canvas\";\nimport { renderStaticScene } from \"../../renderer/staticScene\";\nimport { isShallowEqual } from \"../../utils\";\nimport type { AppState, StaticCanvasAppState } from \"../../types\";\nimport type {\n  RenderableElementsMap,\n  StaticCanvasRenderConfig,\n} from \"../../scene/types\";\nimport type {\n  NonDeletedExcalidrawElement,\n  NonDeletedSceneElementsMap,\n} from \"../../element/types\";\nimport { isRenderThrottlingEnabled } from \"../../reactUtils\";\n\ntype StaticCanvasProps = {\n  canvas: HTMLCanvasElement;\n  rc: RoughCanvas;\n  elementsMap: RenderableElementsMap;\n  allElementsMap: NonDeletedSceneElementsMap;\n  visibleElements: readonly NonDeletedExcalidrawElement[];\n  sceneNonce: number | undefined;\n  selectionNonce: number | undefined;\n  scale: number;\n  appState: StaticCanvasAppState;\n  renderConfig: StaticCanvasRenderConfig;\n};\n\nconst StaticCanvas = (props: StaticCanvasProps) => {\n  const wrapperRef = useRef<HTMLDivElement>(null);\n  const isComponentMounted = useRef(false);\n\n  useEffect(() => {\n    const wrapper = wrapperRef.current;\n    if (!wrapper) {\n      return;\n    }\n\n    const canvas = props.canvas;\n\n    if (!isComponentMounted.current) {\n      isComponentMounted.current = true;\n\n      wrapper.replaceChildren(canvas);\n      canvas.classList.add(\"excalidraw__canvas\", \"static\");\n    }\n\n    const widthString = `${props.appState.width}px`;\n    const heightString = `${props.appState.height}px`;\n    if (canvas.style.width !== widthString) {\n      canvas.style.width = widthString;\n    }\n    if (canvas.style.height !== heightString) {\n      canvas.style.height = heightString;\n    }\n\n    const scaledWidth = props.appState.width * props.scale;\n    const scaledHeight = props.appState.height * props.scale;\n    // setting width/height resets the canvas even if dimensions not changed,\n    // which would cause flicker when we skip frame (due to throttling)\n    if (canvas.width !== scaledWidth) {\n      canvas.width = scaledWidth;\n    }\n    if (canvas.height !== scaledHeight) {\n      canvas.height = scaledHeight;\n    }\n\n    renderStaticScene(\n      {\n        canvas,\n        rc: props.rc,\n        scale: props.scale,\n        elementsMap: props.elementsMap,\n        allElementsMap: props.allElementsMap,\n        visibleElements: props.visibleElements,\n        appState: props.appState,\n        renderConfig: props.renderConfig,\n      },\n      isRenderThrottlingEnabled(),\n    );\n  });\n\n  return <div className=\"excalidraw__canvas-wrapper\" ref={wrapperRef} />;\n};\n\nconst getRelevantAppStateProps = (\n  appState: AppState,\n): StaticCanvasAppState => ({\n  zoom: appState.zoom,\n  scrollX: appState.scrollX,\n  scrollY: appState.scrollY,\n  width: appState.width,\n  height: appState.height,\n  viewModeEnabled: appState.viewModeEnabled,\n  openDialog: appState.openDialog,\n  hoveredElementIds: appState.hoveredElementIds,\n  offsetLeft: appState.offsetLeft,\n  offsetTop: appState.offsetTop,\n  theme: appState.theme,\n  pendingImageElementId: appState.pendingImageElementId,\n  shouldCacheIgnoreZoom: appState.shouldCacheIgnoreZoom,\n  viewBackgroundColor: appState.viewBackgroundColor,\n  exportScale: appState.exportScale,\n  selectedElementsAreBeingDragged: appState.selectedElementsAreBeingDragged,\n  gridSize: appState.gridSize,\n  gridStep: appState.gridStep,\n  frameRendering: appState.frameRendering,\n  selectedElementIds: appState.selectedElementIds,\n  frameToHighlight: appState.frameToHighlight,\n  editingGroupId: appState.editingGroupId,\n  currentHoveredFontFamily: appState.currentHoveredFontFamily,\n  croppingElementId: appState.croppingElementId,\n});\n\nconst areEqual = (\n  prevProps: StaticCanvasProps,\n  nextProps: StaticCanvasProps,\n) => {\n  if (\n    prevProps.sceneNonce !== nextProps.sceneNonce ||\n    prevProps.scale !== nextProps.scale ||\n    // we need to memoize on elementsMap because they may have renewed\n    // even if sceneNonce didn't change (e.g. we filter elements out based\n    // on appState)\n    prevProps.elementsMap !== nextProps.elementsMap ||\n    prevProps.visibleElements !== nextProps.visibleElements\n  ) {\n    return false;\n  }\n\n  return (\n    isShallowEqual(\n      // asserting AppState because we're being passed the whole AppState\n      // but resolve to only the StaticCanvas-relevant props\n      getRelevantAppStateProps(prevProps.appState as AppState),\n      getRelevantAppStateProps(nextProps.appState as AppState),\n    ) && isShallowEqual(prevProps.renderConfig, nextProps.renderConfig)\n  );\n};\n\nexport default React.memo(StaticCanvas, areEqual);\n", "import { isElementInViewport } from \"../element/sizeHelpers\";\nimport { isImageElement } from \"../element/typeChecks\";\nimport type {\n  ExcalidrawElement,\n  NonDeletedElementsMap,\n  NonDeletedExcalidrawElement,\n} from \"../element/types\";\nimport { renderInteractiveSceneThrottled } from \"../renderer/interactiveScene\";\nimport { renderStaticSceneThrottled } from \"../renderer/staticScene\";\n\nimport type { AppState } from \"../types\";\nimport { memoize, toBrandedType } from \"../utils\";\nimport type Scene from \"./Scene\";\nimport type { RenderableElementsMap } from \"./types\";\n\nexport class Renderer {\n  private scene: Scene;\n\n  constructor(scene: Scene) {\n    this.scene = scene;\n  }\n\n  public getRenderableElements = (() => {\n    const getVisibleCanvasElements = ({\n      elementsMap,\n      zoom,\n      offsetLeft,\n      offsetTop,\n      scrollX,\n      scrollY,\n      height,\n      width,\n    }: {\n      elementsMap: NonDeletedElementsMap;\n      zoom: AppState[\"zoom\"];\n      offsetLeft: AppState[\"offsetLeft\"];\n      offsetTop: AppState[\"offsetTop\"];\n      scrollX: AppState[\"scrollX\"];\n      scrollY: AppState[\"scrollY\"];\n      height: AppState[\"height\"];\n      width: AppState[\"width\"];\n    }): readonly NonDeletedExcalidrawElement[] => {\n      const visibleElements: NonDeletedExcalidrawElement[] = [];\n      for (const element of elementsMap.values()) {\n        if (\n          isElementInViewport(\n            element,\n            width,\n            height,\n            {\n              zoom,\n              offsetLeft,\n              offsetTop,\n              scrollX,\n              scrollY,\n            },\n            elementsMap,\n          )\n        ) {\n          visibleElements.push(element);\n        }\n      }\n      return visibleElements;\n    };\n\n    const getRenderableElements = ({\n      elements,\n      editingTextElement,\n      newElementId,\n      pendingImageElementId,\n    }: {\n      elements: readonly NonDeletedExcalidrawElement[];\n      editingTextElement: AppState[\"editingTextElement\"];\n      newElementId: ExcalidrawElement[\"id\"] | undefined;\n      pendingImageElementId: AppState[\"pendingImageElementId\"];\n    }) => {\n      const elementsMap = toBrandedType<RenderableElementsMap>(new Map());\n\n      for (const element of elements) {\n        if (isImageElement(element)) {\n          if (\n            // => not placed on canvas yet (but in elements array)\n            pendingImageElementId === element.id\n          ) {\n            continue;\n          }\n        }\n\n        if (newElementId === element.id) {\n          continue;\n        }\n\n        // we don't want to render text element that's being currently edited\n        // (it's rendered on remote only)\n        if (\n          !editingTextElement ||\n          editingTextElement.type !== \"text\" ||\n          element.id !== editingTextElement.id\n        ) {\n          elementsMap.set(element.id, element);\n        }\n      }\n      return elementsMap;\n    };\n\n    return memoize(\n      ({\n        zoom,\n        offsetLeft,\n        offsetTop,\n        scrollX,\n        scrollY,\n        height,\n        width,\n        editingTextElement,\n        newElementId,\n        pendingImageElementId,\n        // cache-invalidation nonce\n        sceneNonce: _sceneNonce,\n      }: {\n        zoom: AppState[\"zoom\"];\n        offsetLeft: AppState[\"offsetLeft\"];\n        offsetTop: AppState[\"offsetTop\"];\n        scrollX: AppState[\"scrollX\"];\n        scrollY: AppState[\"scrollY\"];\n        height: AppState[\"height\"];\n        width: AppState[\"width\"];\n        editingTextElement: AppState[\"editingTextElement\"];\n        /** note: first render of newElement will always bust the cache\n         * (we'd have to prefilter elements outside of this function) */\n        newElementId: ExcalidrawElement[\"id\"] | undefined;\n        pendingImageElementId: AppState[\"pendingImageElementId\"];\n        sceneNonce: ReturnType<InstanceType<typeof Scene>[\"getSceneNonce\"]>;\n      }) => {\n        const elements = this.scene.getNonDeletedElements();\n\n        const elementsMap = getRenderableElements({\n          elements,\n          editingTextElement,\n          newElementId,\n          pendingImageElementId,\n        });\n\n        const visibleElements = getVisibleCanvasElements({\n          elementsMap,\n          zoom,\n          offsetLeft,\n          offsetTop,\n          scrollX,\n          scrollY,\n          height,\n          width,\n        });\n\n        return { elementsMap, visibleElements };\n      },\n    );\n  })();\n\n  // NOTE Doesn't destroy everything (scene, rc, etc.) because it may not be\n  // safe to break TS contract here (for upstream cases)\n  public destroy() {\n    renderInteractiveSceneThrottled.cancel();\n    renderStaticSceneThrottled.cancel();\n    this.getRenderableElements.clear();\n  }\n}\n", "import { useEffect, useRef } from \"react\";\nimport type { Trail } from \"../animated-trail\";\n\nimport \"./SVGLayer.scss\";\n\ntype SVGLayerProps = {\n  trails: Trail[];\n};\n\nexport const SVGLayer = ({ trails }: SVGLayerProps) => {\n  const svgRef = useRef<SVGSVGElement | null>(null);\n\n  useEffect(() => {\n    if (svgRef.current) {\n      for (const trail of trails) {\n        trail.start(svgRef.current);\n      }\n    }\n\n    return () => {\n      for (const trail of trails) {\n        trail.stop();\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, trails);\n\n  return (\n    <div className=\"SVGLayer\">\n      <svg ref={svgRef} />\n    </div>\n  );\n};\n", "import type { AppState } from \"../types\";\nimport { sceneCoordsToViewportCoords } from \"../utils\";\nimport type { ElementsMap, NonDeletedExcalidrawElement } from \"./types\";\nimport { getElementAbsoluteCoords } from \".\";\nimport { useExcalidrawAppState } from \"../components/App\";\n\nimport \"./ElementCanvasButtons.scss\";\n\nconst CONTAINER_PADDING = 5;\n\nconst getContainerCoords = (\n  element: NonDeletedExcalidrawElement,\n  appState: AppState,\n  elementsMap: ElementsMap,\n) => {\n  const [x1, y1] = getElementAbsoluteCoords(element, elementsMap);\n  const { x: viewportX, y: viewportY } = sceneCoordsToViewportCoords(\n    { sceneX: x1 + element.width, sceneY: y1 },\n    appState,\n  );\n  const x = viewportX - appState.offsetLeft + 10;\n  const y = viewportY - appState.offsetTop;\n  return { x, y };\n};\n\nexport const ElementCanvasButtons = ({\n  children,\n  element,\n  elementsMap,\n}: {\n  children: React.ReactNode;\n  element: NonDeletedExcalidrawElement;\n  elementsMap: ElementsMap;\n}) => {\n  const appState = useExcalidrawAppState();\n\n  if (\n    appState.contextMenu ||\n    appState.newElement ||\n    appState.resizingElement ||\n    appState.isRotating ||\n    appState.openMenu ||\n    appState.viewModeEnabled\n  ) {\n    return null;\n  }\n\n  const { x, y } = getContainerCoords(element, appState, elementsMap);\n\n  return (\n    <div\n      className=\"excalidraw-canvas-buttons\"\n      style={{\n        top: `${y}px`,\n        left: `${x}px`,\n        // width: CONTAINER_WIDTH,\n        padding: CONTAINER_PADDING,\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n", "import type { JSX } from \"react\";\nimport clsx from \"clsx\";\nimport type { ToolButtonSize } from \"./ToolButton\";\n\nimport \"./ToolIcon.scss\";\n\nconst DEFAULT_SIZE: ToolButtonSize = \"small\";\n\nexport const ElementCanvasButton = (props: {\n  title?: string;\n  icon: JSX.Element;\n  name?: string;\n  checked: boolean;\n  onChange?(): void;\n  isMobile?: boolean;\n}) => {\n  return (\n    <label\n      className={clsx(\n        \"ToolIcon ToolIcon__MagicButton\",\n        `ToolIcon_size_${DEFAULT_SIZE}`,\n        {\n          \"is-mobile\": props.isMobile,\n        },\n      )}\n      title={`${props.title}`}\n    >\n      <input\n        className=\"ToolIcon_type_checkbox\"\n        type=\"checkbox\"\n        name={props.name}\n        onChange={props.onChange}\n        checked={props.checked}\n        aria-label={props.title}\n      />\n      <div className=\"ToolIcon__icon\">{props.icon}</div>\n    </label>\n  );\n};\n", "import type { UserToFollow } from \"../../types\";\nimport { CloseIcon } from \"../icons\";\nimport \"./FollowMode.scss\";\n\ninterface FollowModeProps {\n  width: number;\n  height: number;\n  userToFollow: UserToFollow;\n  onDisconnect: () => void;\n}\n\nconst FollowMode = ({\n  height,\n  width,\n  userToFollow,\n  onDisconnect,\n}: FollowModeProps) => {\n  return (\n    <div className=\"follow-mode\" style={{ width, height }}>\n      <div className=\"follow-mode__badge\">\n        <div className=\"follow-mode__badge__label\">\n          Following{\" \"}\n          <span\n            className=\"follow-mode__badge__username\"\n            title={userToFollow.username}\n          >\n            {userToFollow.username}\n          </span>\n        </div>\n        <button\n          type=\"button\"\n          onClick={onDisconnect}\n          className=\"follow-mode__disconnect-btn\"\n        >\n          {CloseIcon}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default FollowMode;\n", "export type AnimationCallback = (timestamp: number) => void | boolean;\n\nexport type AnimationTarget = {\n  callback: AnimationCallback;\n  stopped: boolean;\n};\n\nexport class AnimationFrameHandler {\n  private targets = new WeakMap<object, AnimationTarget>();\n  private rafIds = new WeakMap<object, number>();\n\n  register(key: object, callback: AnimationCallback) {\n    this.targets.set(key, { callback, stopped: true });\n  }\n\n  start(key: object) {\n    const target = this.targets.get(key);\n\n    if (!target) {\n      return;\n    }\n\n    if (this.rafIds.has(key)) {\n      return;\n    }\n\n    this.targets.set(key, { ...target, stopped: false });\n    this.scheduleFrame(key);\n  }\n\n  stop(key: object) {\n    const target = this.targets.get(key);\n    if (target && !target.stopped) {\n      this.targets.set(key, { ...target, stopped: true });\n    }\n\n    this.cancelFrame(key);\n  }\n\n  private constructFrame(key: object): FrameRequestCallback {\n    return (timestamp: number) => {\n      const target = this.targets.get(key);\n\n      if (!target) {\n        return;\n      }\n\n      const shouldAbort = this.onFrame(target, timestamp);\n\n      if (!target.stopped && !shouldAbort) {\n        this.scheduleFrame(key);\n      } else {\n        this.cancelFrame(key);\n      }\n    };\n  }\n\n  private scheduleFrame(key: object) {\n    const rafId = requestAnimationFrame(this.constructFrame(key));\n\n    this.rafIds.set(key, rafId);\n  }\n\n  private cancelFrame(key: object) {\n    if (this.rafIds.has(key)) {\n      const rafId = this.rafIds.get(key)!;\n\n      cancelAnimationFrame(rafId);\n    }\n\n    this.rafIds.delete(key);\n  }\n\n  private onFrame(target: AnimationTarget, timestamp: number): boolean {\n    const shouldAbort = target.callback(timestamp);\n\n    return shouldAbort ?? false;\n  }\n}\n", "import type { LaserPointerOptions } from \"@excalidraw/laser-pointer\";\nimport { LaserPointer } from \"@excalidraw/laser-pointer\";\nimport type { AnimationFrameHandler } from \"./animation-frame-handler\";\nimport type { AppState } from \"./types\";\nimport { getSvgPathFromStroke, sceneCoordsToViewportCoords } from \"./utils\";\nimport type App from \"./components/App\";\nimport { SVG_NS } from \"./constants\";\n\nexport interface Trail {\n  start(container: SVGSVGElement): void;\n  stop(): void;\n\n  startPath(x: number, y: number): void;\n  addPointToPath(x: number, y: number): void;\n  endPath(): void;\n}\n\nexport interface AnimatedTrailOptions {\n  fill: (trail: AnimatedTrail) => string;\n}\n\nexport class AnimatedTrail implements Trail {\n  private currentTrail?: LaserPointer;\n  private pastTrails: LaserPointer[] = [];\n\n  private container?: SVGSVGElement;\n  private trailElement: SVGPathElement;\n\n  constructor(\n    private animationFrameHandler: AnimationFrameHandler,\n    private app: App,\n    private options: Partial<LaserPointerOptions> &\n      Partial<AnimatedTrailOptions>,\n  ) {\n    this.animationFrameHandler.register(this, this.onFrame.bind(this));\n\n    this.trailElement = document.createElementNS(SVG_NS, \"path\");\n  }\n\n  get hasCurrentTrail() {\n    return !!this.currentTrail;\n  }\n\n  hasLastPoint(x: number, y: number) {\n    if (this.currentTrail) {\n      const len = this.currentTrail.originalPoints.length;\n      return (\n        this.currentTrail.originalPoints[len - 1][0] === x &&\n        this.currentTrail.originalPoints[len - 1][1] === y\n      );\n    }\n\n    return false;\n  }\n\n  start(container?: SVGSVGElement) {\n    if (container) {\n      this.container = container;\n    }\n\n    if (this.trailElement.parentNode !== this.container && this.container) {\n      this.container.appendChild(this.trailElement);\n    }\n\n    this.animationFrameHandler.start(this);\n  }\n\n  stop() {\n    this.animationFrameHandler.stop(this);\n\n    if (this.trailElement.parentNode === this.container) {\n      this.container?.removeChild(this.trailElement);\n    }\n  }\n\n  startPath(x: number, y: number) {\n    this.currentTrail = new LaserPointer(this.options);\n\n    this.currentTrail.addPoint([x, y, performance.now()]);\n\n    this.update();\n  }\n\n  addPointToPath(x: number, y: number) {\n    if (this.currentTrail) {\n      this.currentTrail.addPoint([x, y, performance.now()]);\n      this.update();\n    }\n  }\n\n  endPath() {\n    if (this.currentTrail) {\n      this.currentTrail.close();\n      this.currentTrail.options.keepHead = false;\n      this.pastTrails.push(this.currentTrail);\n      this.currentTrail = undefined;\n      this.update();\n    }\n  }\n\n  private update() {\n    this.start();\n  }\n\n  private onFrame() {\n    const paths: string[] = [];\n\n    for (const trail of this.pastTrails) {\n      paths.push(this.drawTrail(trail, this.app.state));\n    }\n\n    if (this.currentTrail) {\n      const currentPath = this.drawTrail(this.currentTrail, this.app.state);\n\n      paths.push(currentPath);\n    }\n\n    this.pastTrails = this.pastTrails.filter((trail) => {\n      return trail.getStrokeOutline().length !== 0;\n    });\n\n    if (paths.length === 0) {\n      this.stop();\n    }\n\n    const svgPaths = paths.join(\" \").trim();\n\n    this.trailElement.setAttribute(\"d\", svgPaths);\n    this.trailElement.setAttribute(\n      \"fill\",\n      (this.options.fill ?? (() => \"black\"))(this),\n    );\n  }\n\n  private drawTrail(trail: LaserPointer, state: AppState): string {\n    const stroke = trail\n      .getStrokeOutline(trail.options.size / state.zoom.value)\n      .map(([x, y]) => {\n        const result = sceneCoordsToViewportCoords(\n          { sceneX: x, sceneY: y },\n          state,\n        );\n\n        return [result.x, result.y];\n      });\n\n    return getSvgPathFromStroke(stroke, true);\n  }\n}\n", "import type { LaserPointerOptions } from \"@excalidraw/laser-pointer\";\nimport type { Trail } from \"./animated-trail\";\nimport { AnimatedTrail } from \"./animated-trail\";\nimport type { AnimationFrameHandler } from \"./animation-frame-handler\";\nimport type App from \"./components/App\";\nimport type { SocketId } from \"./types\";\nimport { easeOut } from \"./utils\";\nimport { getClientColor } from \"./clients\";\nimport { DEFAULT_LASER_COLOR } from \"./constants\";\n\nexport class LaserTrails implements Trail {\n  public localTrail: AnimatedTrail;\n  private collabTrails = new Map<SocketId, AnimatedTrail>();\n\n  private container?: SVGSVGElement;\n\n  constructor(\n    private animationFrameHandler: AnimationFrameHandler,\n    private app: App,\n  ) {\n    this.animationFrameHandler.register(this, this.onFrame.bind(this));\n\n    this.localTrail = new AnimatedTrail(animationFrameHandler, app, {\n      ...this.getTrailOptions(),\n      fill: () => DEFAULT_LASER_COLOR,\n    });\n  }\n\n  private getTrailOptions() {\n    return {\n      simplify: 0,\n      streamline: 0.4,\n      sizeMapping: (c) => {\n        const DECAY_TIME = 1000;\n        const DECAY_LENGTH = 50;\n        const t = Math.max(\n          0,\n          1 - (performance.now() - c.pressure) / DECAY_TIME,\n        );\n        const l =\n          (DECAY_LENGTH -\n            Math.min(DECAY_LENGTH, c.totalLength - c.currentIndex)) /\n          DECAY_LENGTH;\n\n        return Math.min(easeOut(l), easeOut(t));\n      },\n    } as Partial<LaserPointerOptions>;\n  }\n\n  startPath(x: number, y: number): void {\n    this.localTrail.startPath(x, y);\n  }\n\n  addPointToPath(x: number, y: number): void {\n    this.localTrail.addPointToPath(x, y);\n  }\n\n  endPath(): void {\n    this.localTrail.endPath();\n  }\n\n  start(container: SVGSVGElement) {\n    this.container = container;\n\n    this.animationFrameHandler.start(this);\n    this.localTrail.start(container);\n  }\n\n  stop() {\n    this.animationFrameHandler.stop(this);\n    this.localTrail.stop();\n  }\n\n  onFrame() {\n    this.updateCollabTrails();\n  }\n\n  private updateCollabTrails() {\n    if (!this.container || this.app.state.collaborators.size === 0) {\n      return;\n    }\n\n    for (const [key, collaborator] of this.app.state.collaborators.entries()) {\n      let trail!: AnimatedTrail;\n\n      if (!this.collabTrails.has(key)) {\n        trail = new AnimatedTrail(this.animationFrameHandler, this.app, {\n          ...this.getTrailOptions(),\n          fill: () =>\n            collaborator.pointer?.laserColor ||\n            getClientColor(key, collaborator),\n        });\n        trail.start(this.container);\n\n        this.collabTrails.set(key, trail);\n      } else {\n        trail = this.collabTrails.get(key)!;\n      }\n\n      if (collaborator.pointer && collaborator.pointer.tool === \"laser\") {\n        if (collaborator.button === \"down\" && !trail.hasCurrentTrail) {\n          trail.startPath(collaborator.pointer.x, collaborator.pointer.y);\n        }\n\n        if (\n          collaborator.button === \"down\" &&\n          trail.hasCurrentTrail &&\n          !trail.hasLastPoint(collaborator.pointer.x, collaborator.pointer.y)\n        ) {\n          trail.addPointToPath(collaborator.pointer.x, collaborator.pointer.y);\n        }\n\n        if (collaborator.button === \"up\" && trail.hasCurrentTrail) {\n          trail.addPointToPath(collaborator.pointer.x, collaborator.pointer.y);\n          trail.endPath();\n        }\n      }\n    }\n\n    for (const key of this.collabTrails.keys()) {\n      if (!this.app.state.collaborators.has(key)) {\n        const trail = this.collabTrails.get(key)!;\n        trail.stop();\n        this.collabTrails.delete(key);\n      }\n    }\n  }\n}\n", "import { CODES, KEYS } from \"../keys\";\nimport {\n  isWritableElement,\n  getFontString,\n  getFontFamilyString,\n  isTestEnv,\n} from \"../utils\";\nimport Scene from \"../scene/Scene\";\nimport {\n  isArrowElement,\n  isBoundToContainer,\n  isTextElement,\n} from \"./typeChecks\";\nimport { CLASSES, POINTER_BUTTON } from \"../constants\";\nimport type {\n  ExcalidrawElement,\n  ExcalidrawLinearElement,\n  ExcalidrawTextElementWithContainer,\n  ExcalidrawTextElement,\n} from \"./types\";\nimport type { AppState } from \"../types\";\nimport { bumpVersion, mutateElement } from \"./mutateElement\";\nimport {\n  getBoundTextElementId,\n  getContainerElement,\n  getTextElementAngle,\n  redrawTextBoundingBox,\n  getBoundTextMaxHeight,\n  getBoundTextMaxWidth,\n  computeContainerDimensionForBoundText,\n  computeBoundTextPosition,\n  getBoundTextElement,\n} from \"./textElement\";\nimport { wrapText } from \"./textWrapping\";\nimport {\n  actionDecreaseFontSize,\n  actionIncreaseFontSize,\n} from \"../actions/actionProperties\";\nimport {\n  actionResetZoom,\n  actionZoomIn,\n  actionZoomOut,\n} from \"../actions/actionCanvas\";\nimport type App from \"../components/App\";\nimport { LinearElementEditor } from \"./linearElementEditor\";\nimport { parseClipboard } from \"../clipboard\";\nimport {\n  originalContainerCache,\n  updateOriginalContainerCache,\n} from \"./containerCache\";\nimport { getTextWidth } from \"./textMeasurements\";\nimport { normalizeText } from \"./textMeasurements\";\n\nconst getTransform = (\n  width: number,\n  height: number,\n  angle: number,\n  appState: AppState,\n  maxWidth: number,\n  maxHeight: number,\n) => {\n  const { zoom } = appState;\n  const degree = (180 * angle) / Math.PI;\n  let translateX = (width * (zoom.value - 1)) / 2;\n  let translateY = (height * (zoom.value - 1)) / 2;\n  if (width > maxWidth && zoom.value !== 1) {\n    translateX = (maxWidth * (zoom.value - 1)) / 2;\n  }\n  if (height > maxHeight && zoom.value !== 1) {\n    translateY = (maxHeight * (zoom.value - 1)) / 2;\n  }\n  return `translate(${translateX}px, ${translateY}px) scale(${zoom.value}) rotate(${degree}deg)`;\n};\n\nexport const textWysiwyg = ({\n  id,\n  onChange,\n  onSubmit,\n  getViewportCoords,\n  element,\n  canvas,\n  excalidrawContainer,\n  app,\n  autoSelect = true,\n}: {\n  id: ExcalidrawElement[\"id\"];\n  /**\n   * textWysiwyg only deals with `originalText`\n   *\n   * Note: `text`, which can be wrapped and therefore different from `originalText`,\n   *       is derived from `originalText`\n   */\n  onChange?: (nextOriginalText: string) => void;\n  onSubmit: (data: { viaKeyboard: boolean; nextOriginalText: string }) => void;\n  getViewportCoords: (x: number, y: number) => [number, number];\n  element: ExcalidrawTextElement;\n  canvas: HTMLCanvasElement;\n  excalidrawContainer: HTMLDivElement | null;\n  app: App;\n  autoSelect?: boolean;\n}) => {\n  const textPropertiesUpdated = (\n    updatedTextElement: ExcalidrawTextElement,\n    editable: HTMLTextAreaElement,\n  ) => {\n    if (!editable.style.fontFamily || !editable.style.fontSize) {\n      return false;\n    }\n    const currentFont = editable.style.fontFamily.replace(/\"/g, \"\");\n    if (\n      getFontFamilyString({ fontFamily: updatedTextElement.fontFamily }) !==\n      currentFont\n    ) {\n      return true;\n    }\n    if (`${updatedTextElement.fontSize}px` !== editable.style.fontSize) {\n      return true;\n    }\n    return false;\n  };\n\n  const updateWysiwygStyle = () => {\n    const appState = app.state;\n    const updatedTextElement =\n      Scene.getScene(element)?.getElement<ExcalidrawTextElement>(id);\n\n    if (!updatedTextElement) {\n      return;\n    }\n    const { textAlign, verticalAlign } = updatedTextElement;\n    const elementsMap = app.scene.getNonDeletedElementsMap();\n    if (updatedTextElement && isTextElement(updatedTextElement)) {\n      let coordX = updatedTextElement.x;\n      let coordY = updatedTextElement.y;\n      const container = getContainerElement(\n        updatedTextElement,\n        app.scene.getNonDeletedElementsMap(),\n      );\n\n      let width = updatedTextElement.width;\n\n      // set to element height by default since that's\n      // what is going to be used for unbounded text\n      let height = updatedTextElement.height;\n\n      let maxWidth = updatedTextElement.width;\n      let maxHeight = updatedTextElement.height;\n\n      if (container && updatedTextElement.containerId) {\n        if (isArrowElement(container)) {\n          const boundTextCoords =\n            LinearElementEditor.getBoundTextElementPosition(\n              container,\n              updatedTextElement as ExcalidrawTextElementWithContainer,\n              elementsMap,\n            );\n          coordX = boundTextCoords.x;\n          coordY = boundTextCoords.y;\n        }\n        const propertiesUpdated = textPropertiesUpdated(\n          updatedTextElement,\n          editable,\n        );\n\n        let originalContainerData;\n        if (propertiesUpdated) {\n          originalContainerData = updateOriginalContainerCache(\n            container.id,\n            container.height,\n          );\n        } else {\n          originalContainerData = originalContainerCache[container.id];\n          if (!originalContainerData) {\n            originalContainerData = updateOriginalContainerCache(\n              container.id,\n              container.height,\n            );\n          }\n        }\n\n        maxWidth = getBoundTextMaxWidth(container, updatedTextElement);\n\n        maxHeight = getBoundTextMaxHeight(\n          container,\n          updatedTextElement as ExcalidrawTextElementWithContainer,\n        );\n\n        // autogrow container height if text exceeds\n        if (!isArrowElement(container) && height > maxHeight) {\n          const targetContainerHeight = computeContainerDimensionForBoundText(\n            height,\n            container.type,\n          );\n\n          mutateElement(container, { height: targetContainerHeight });\n          return;\n        } else if (\n          // autoshrink container height until original container height\n          // is reached when text is removed\n          !isArrowElement(container) &&\n          container.height > originalContainerData.height &&\n          height < maxHeight\n        ) {\n          const targetContainerHeight = computeContainerDimensionForBoundText(\n            height,\n            container.type,\n          );\n          mutateElement(container, { height: targetContainerHeight });\n        } else {\n          const { y } = computeBoundTextPosition(\n            container,\n            updatedTextElement as ExcalidrawTextElementWithContainer,\n            elementsMap,\n          );\n          coordY = y;\n        }\n      }\n      const [viewportX, viewportY] = getViewportCoords(coordX, coordY);\n      const initialSelectionStart = editable.selectionStart;\n      const initialSelectionEnd = editable.selectionEnd;\n      const initialLength = editable.value.length;\n\n      // restore cursor position after value updated so it doesn't\n      // go to the end of text when container auto expanded\n      if (\n        initialSelectionStart === initialSelectionEnd &&\n        initialSelectionEnd !== initialLength\n      ) {\n        // get diff between length and selection end and shift\n        // the cursor by \"diff\" times to position correctly\n        const diff = initialLength - initialSelectionEnd;\n        editable.selectionStart = editable.value.length - diff;\n        editable.selectionEnd = editable.value.length - diff;\n      }\n\n      if (!container) {\n        maxWidth = (appState.width - 8 - viewportX) / appState.zoom.value;\n        width = Math.min(width, maxWidth);\n      } else {\n        width += 0.5;\n      }\n\n      // add 5% buffer otherwise it causes wysiwyg to jump\n      height *= 1.05;\n\n      const font = getFontString(updatedTextElement);\n\n      // Make sure text editor height doesn't go beyond viewport\n      const editorMaxHeight =\n        (appState.height - viewportY) / appState.zoom.value;\n      Object.assign(editable.style, {\n        font,\n        // must be defined *after* font \u00AF\\_(\u30C4)_/\u00AF\n        lineHeight: updatedTextElement.lineHeight,\n        width: `${width}px`,\n        height: `${height}px`,\n        left: `${viewportX}px`,\n        top: `${viewportY}px`,\n        transform: getTransform(\n          width,\n          height,\n          getTextElementAngle(updatedTextElement, container),\n          appState,\n          maxWidth,\n          editorMaxHeight,\n        ),\n        textAlign,\n        verticalAlign,\n        color: updatedTextElement.strokeColor,\n        opacity: updatedTextElement.opacity / 100,\n        filter: \"var(--theme-filter)\",\n        maxHeight: `${editorMaxHeight}px`,\n      });\n      editable.scrollTop = 0;\n      // For some reason updating font attribute doesn't set font family\n      // hence updating font family explicitly for test environment\n      if (isTestEnv()) {\n        editable.style.fontFamily = getFontFamilyString(updatedTextElement);\n      }\n\n      mutateElement(updatedTextElement, { x: coordX, y: coordY });\n    }\n  };\n\n  const editable = document.createElement(\"textarea\");\n\n  editable.dir = \"auto\";\n  editable.tabIndex = 0;\n  editable.dataset.type = \"wysiwyg\";\n  // prevent line wrapping on Safari\n  editable.wrap = \"off\";\n  editable.classList.add(\"excalidraw-wysiwyg\");\n\n  let whiteSpace = \"pre\";\n  let wordBreak = \"normal\";\n\n  if (isBoundToContainer(element) || !element.autoResize) {\n    whiteSpace = \"pre-wrap\";\n    wordBreak = \"break-word\";\n  }\n  Object.assign(editable.style, {\n    position: \"absolute\",\n    display: \"inline-block\",\n    minHeight: \"1em\",\n    backfaceVisibility: \"hidden\",\n    margin: 0,\n    padding: 0,\n    border: 0,\n    outline: 0,\n    resize: \"none\",\n    background: \"transparent\",\n    overflow: \"hidden\",\n    // must be specified because in dark mode canvas creates a stacking context\n    zIndex: \"var(--zIndex-wysiwyg)\",\n    wordBreak,\n    // prevent line wrapping (`whitespace: nowrap` doesn't work on FF)\n    whiteSpace,\n    overflowWrap: \"break-word\",\n    boxSizing: \"content-box\",\n  });\n  editable.value = element.originalText;\n  updateWysiwygStyle();\n\n  if (onChange) {\n    editable.onpaste = async (event) => {\n      const clipboardData = await parseClipboard(event, true);\n      if (!clipboardData.text) {\n        return;\n      }\n      const data = normalizeText(clipboardData.text);\n      if (!data) {\n        return;\n      }\n      const container = getContainerElement(\n        element,\n        app.scene.getNonDeletedElementsMap(),\n      );\n\n      const font = getFontString({\n        fontSize: app.state.currentItemFontSize,\n        fontFamily: app.state.currentItemFontFamily,\n      });\n      if (container) {\n        const boundTextElement = getBoundTextElement(\n          container,\n          app.scene.getNonDeletedElementsMap(),\n        );\n        const wrappedText = wrapText(\n          `${editable.value}${data}`,\n          font,\n          getBoundTextMaxWidth(container, boundTextElement),\n        );\n        const width = getTextWidth(wrappedText, font);\n        editable.style.width = `${width}px`;\n      }\n    };\n\n    editable.oninput = () => {\n      const normalized = normalizeText(editable.value);\n      if (editable.value !== normalized) {\n        const selectionStart = editable.selectionStart;\n        editable.value = normalized;\n        // put the cursor at some position close to where it was before\n        // normalization (otherwise it'll end up at the end of the text)\n        editable.selectionStart = selectionStart;\n        editable.selectionEnd = selectionStart;\n      }\n      onChange(editable.value);\n    };\n  }\n\n  editable.onkeydown = (event) => {\n    if (!event.shiftKey && actionZoomIn.keyTest(event)) {\n      event.preventDefault();\n      app.actionManager.executeAction(actionZoomIn);\n      updateWysiwygStyle();\n    } else if (!event.shiftKey && actionZoomOut.keyTest(event)) {\n      event.preventDefault();\n      app.actionManager.executeAction(actionZoomOut);\n      updateWysiwygStyle();\n    } else if (!event.shiftKey && actionResetZoom.keyTest(event)) {\n      event.preventDefault();\n      app.actionManager.executeAction(actionResetZoom);\n      updateWysiwygStyle();\n    } else if (actionDecreaseFontSize.keyTest(event)) {\n      app.actionManager.executeAction(actionDecreaseFontSize);\n    } else if (actionIncreaseFontSize.keyTest(event)) {\n      app.actionManager.executeAction(actionIncreaseFontSize);\n    } else if (event.key === KEYS.ESCAPE) {\n      event.preventDefault();\n      submittedViaKeyboard = true;\n      handleSubmit();\n    } else if (event.key === KEYS.ENTER && event[KEYS.CTRL_OR_CMD]) {\n      event.preventDefault();\n      if (event.isComposing || event.keyCode === 229) {\n        return;\n      }\n      submittedViaKeyboard = true;\n      handleSubmit();\n    } else if (\n      event.key === KEYS.TAB ||\n      (event[KEYS.CTRL_OR_CMD] &&\n        (event.code === CODES.BRACKET_LEFT ||\n          event.code === CODES.BRACKET_RIGHT))\n    ) {\n      event.preventDefault();\n      if (event.isComposing) {\n        return;\n      } else if (event.shiftKey || event.code === CODES.BRACKET_LEFT) {\n        outdent();\n      } else {\n        indent();\n      }\n      // We must send an input event to resize the element\n      editable.dispatchEvent(new Event(\"input\"));\n    }\n  };\n\n  const TAB_SIZE = 4;\n  const TAB = \" \".repeat(TAB_SIZE);\n  const RE_LEADING_TAB = new RegExp(`^ {1,${TAB_SIZE}}`);\n  const indent = () => {\n    const { selectionStart, selectionEnd } = editable;\n    const linesStartIndices = getSelectedLinesStartIndices();\n\n    let value = editable.value;\n    linesStartIndices.forEach((startIndex: number) => {\n      const startValue = value.slice(0, startIndex);\n      const endValue = value.slice(startIndex);\n\n      value = `${startValue}${TAB}${endValue}`;\n    });\n\n    editable.value = value;\n\n    editable.selectionStart = selectionStart + TAB_SIZE;\n    editable.selectionEnd = selectionEnd + TAB_SIZE * linesStartIndices.length;\n  };\n\n  const outdent = () => {\n    const { selectionStart, selectionEnd } = editable;\n    const linesStartIndices = getSelectedLinesStartIndices();\n    const removedTabs: number[] = [];\n\n    let value = editable.value;\n    linesStartIndices.forEach((startIndex) => {\n      const tabMatch = value\n        .slice(startIndex, startIndex + TAB_SIZE)\n        .match(RE_LEADING_TAB);\n\n      if (tabMatch) {\n        const startValue = value.slice(0, startIndex);\n        const endValue = value.slice(startIndex + tabMatch[0].length);\n\n        // Delete a tab from the line\n        value = `${startValue}${endValue}`;\n        removedTabs.push(startIndex);\n      }\n    });\n\n    editable.value = value;\n\n    if (removedTabs.length) {\n      if (selectionStart > removedTabs[removedTabs.length - 1]) {\n        editable.selectionStart = Math.max(\n          selectionStart - TAB_SIZE,\n          removedTabs[removedTabs.length - 1],\n        );\n      } else {\n        // If the cursor is before the first tab removed, ex:\n        // Line| #1\n        //     Line #2\n        // Lin|e #3\n        // we should reset the selectionStart to his initial value.\n        editable.selectionStart = selectionStart;\n      }\n      editable.selectionEnd = Math.max(\n        editable.selectionStart,\n        selectionEnd - TAB_SIZE * removedTabs.length,\n      );\n    }\n  };\n\n  /**\n   * @returns indices of start positions of selected lines, in reverse order\n   */\n  const getSelectedLinesStartIndices = () => {\n    let { selectionStart, selectionEnd, value } = editable;\n\n    // chars before selectionStart on the same line\n    const startOffset = value.slice(0, selectionStart).match(/[^\\n]*$/)![0]\n      .length;\n    // put caret at the start of the line\n    selectionStart = selectionStart - startOffset;\n\n    const selected = value.slice(selectionStart, selectionEnd);\n\n    return selected\n      .split(\"\\n\")\n      .reduce(\n        (startIndices, line, idx, lines) =>\n          startIndices.concat(\n            idx\n              ? // curr line index is prev line's start + prev line's length + \\n\n                startIndices[idx - 1] + lines[idx - 1].length + 1\n              : // first selected line\n                selectionStart,\n          ),\n        [] as number[],\n      )\n      .reverse();\n  };\n\n  const stopEvent = (event: Event) => {\n    if (event.target instanceof HTMLCanvasElement) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  };\n\n  // using a state variable instead of passing it to the handleSubmit callback\n  // so that we don't need to create separate a callback for event handlers\n  let submittedViaKeyboard = false;\n  const handleSubmit = () => {\n    // prevent double submit\n    if (isDestroyed) {\n      return;\n    }\n    isDestroyed = true;\n    // cleanup must be run before onSubmit otherwise when app blurs the wysiwyg\n    // it'd get stuck in an infinite loop of blur\u2192onSubmit after we re-focus the\n    // wysiwyg on update\n    cleanup();\n    const updateElement = Scene.getScene(element)?.getElement(\n      element.id,\n    ) as ExcalidrawTextElement;\n    if (!updateElement) {\n      return;\n    }\n    const container = getContainerElement(\n      updateElement,\n      app.scene.getNonDeletedElementsMap(),\n    );\n\n    if (container) {\n      if (editable.value.trim()) {\n        const boundTextElementId = getBoundTextElementId(container);\n        if (!boundTextElementId || boundTextElementId !== element.id) {\n          mutateElement(container, {\n            boundElements: (container.boundElements || []).concat({\n              type: \"text\",\n              id: element.id,\n            }),\n          });\n        } else if (isArrowElement(container)) {\n          // updating an arrow label may change bounds, prevent stale cache:\n          bumpVersion(container);\n        }\n      } else {\n        mutateElement(container, {\n          boundElements: container.boundElements?.filter(\n            (ele) =>\n              !isTextElement(\n                ele as ExcalidrawTextElement | ExcalidrawLinearElement,\n              ),\n          ),\n        });\n      }\n      redrawTextBoundingBox(\n        updateElement,\n        container,\n        app.scene.getNonDeletedElementsMap(),\n      );\n    }\n\n    onSubmit({\n      viaKeyboard: submittedViaKeyboard,\n      nextOriginalText: editable.value,\n    });\n  };\n\n  const cleanup = () => {\n    // remove events to ensure they don't late-fire\n    editable.onblur = null;\n    editable.oninput = null;\n    editable.onkeydown = null;\n\n    if (observer) {\n      observer.disconnect();\n    }\n\n    window.removeEventListener(\"resize\", updateWysiwygStyle);\n    window.removeEventListener(\"wheel\", stopEvent, true);\n    window.removeEventListener(\"pointerdown\", onPointerDown);\n    window.removeEventListener(\"pointerup\", bindBlurEvent);\n    window.removeEventListener(\"blur\", handleSubmit);\n    window.removeEventListener(\"beforeunload\", handleSubmit);\n    unbindUpdate();\n    unbindOnScroll();\n\n    editable.remove();\n  };\n\n  const bindBlurEvent = (event?: MouseEvent) => {\n    window.removeEventListener(\"pointerup\", bindBlurEvent);\n    // Deferred so that the pointerdown that initiates the wysiwyg doesn't\n    // trigger the blur on ensuing pointerup.\n    // Also to handle cases such as picking a color which would trigger a blur\n    // in that same tick.\n    const target = event?.target;\n\n    const isPropertiesTrigger =\n      target instanceof HTMLElement &&\n      target.classList.contains(\"properties-trigger\");\n\n    setTimeout(() => {\n      editable.onblur = handleSubmit;\n\n      // case: clicking on the same property \u2192 no change \u2192 no update \u2192 no focus\n      if (!isPropertiesTrigger) {\n        editable.focus();\n      }\n    });\n  };\n\n  const temporarilyDisableSubmit = () => {\n    editable.onblur = null;\n    window.addEventListener(\"pointerup\", bindBlurEvent);\n    // handle edge-case where pointerup doesn't fire e.g. due to user\n    // alt-tabbing away\n    window.addEventListener(\"blur\", handleSubmit);\n  };\n\n  // prevent blur when changing properties from the menu\n  const onPointerDown = (event: MouseEvent) => {\n    const target = event?.target;\n\n    // panning canvas\n    if (event.button === POINTER_BUTTON.WHEEL) {\n      // trying to pan by clicking inside text area itself -> handle here\n      if (target instanceof HTMLTextAreaElement) {\n        event.preventDefault();\n        app.handleCanvasPanUsingWheelOrSpaceDrag(event);\n      }\n      temporarilyDisableSubmit();\n      return;\n    }\n\n    const isPropertiesTrigger =\n      target instanceof HTMLElement &&\n      target.classList.contains(\"properties-trigger\");\n\n    if (\n      ((event.target instanceof HTMLElement ||\n        event.target instanceof SVGElement) &&\n        event.target.closest(\n          `.${CLASSES.SHAPE_ACTIONS_MENU}, .${CLASSES.ZOOM_ACTIONS}`,\n        ) &&\n        !isWritableElement(event.target)) ||\n      isPropertiesTrigger\n    ) {\n      temporarilyDisableSubmit();\n    } else if (\n      event.target instanceof HTMLCanvasElement &&\n      // Vitest simply ignores stopPropagation, capture-mode, or rAF\n      // so without introducing crazier hacks, nothing we can do\n      !isTestEnv()\n    ) {\n      // On mobile, blur event doesn't seem to always fire correctly,\n      // so we want to also submit on pointerdown outside the wysiwyg.\n      // Done in the next frame to prevent pointerdown from creating a new text\n      // immediately (if tools locked) so that users on mobile have chance\n      // to submit first (to hide virtual keyboard).\n      // Note: revisit if we want to differ this behavior on Desktop\n      requestAnimationFrame(() => {\n        handleSubmit();\n      });\n    }\n  };\n\n  // handle updates of textElement properties of editing element\n  const unbindUpdate = app.scene.onUpdate(() => {\n    updateWysiwygStyle();\n    const isPopupOpened = !!document.activeElement?.closest(\n      \".properties-content\",\n    );\n    if (!isPopupOpened) {\n      editable.focus();\n    }\n  });\n\n  const unbindOnScroll = app.onScrollChangeEmitter.on(() => {\n    updateWysiwygStyle();\n  });\n\n  // ---------------------------------------------------------------------------\n\n  let isDestroyed = false;\n\n  if (autoSelect) {\n    // select on init (focusing is done separately inside the bindBlurEvent()\n    // because we need it to happen *after* the blur event from `pointerdown`)\n    editable.select();\n  }\n  bindBlurEvent();\n\n  // reposition wysiwyg in case of canvas is resized. Using ResizeObserver\n  // is preferred so we catch changes from host, where window may not resize.\n  let observer: ResizeObserver | null = null;\n  if (canvas && \"ResizeObserver\" in window) {\n    observer = new window.ResizeObserver(() => {\n      updateWysiwygStyle();\n    });\n    observer.observe(canvas);\n  } else {\n    window.addEventListener(\"resize\", updateWysiwygStyle);\n  }\n\n  editable.onpointerdown = (event) => event.stopPropagation();\n\n  // rAF (+ capture to by doubly sure) so we don't catch te pointerdown that\n  // triggered the wysiwyg\n  requestAnimationFrame(() => {\n    window.addEventListener(\"pointerdown\", onPointerDown, { capture: true });\n  });\n  window.addEventListener(\"beforeunload\", handleSubmit);\n  excalidrawContainer\n    ?.querySelector(\".excalidraw-textEditorContainer\")!\n    .appendChild(editable);\n};\n", "import { isTextElement } from \"../element\";\nimport { newElementWith } from \"../element/mutateElement\";\nimport { measureText } from \"../element/textMeasurements\";\nimport { getSelectedElements } from \"../scene\";\nimport { CaptureUpdateAction } from \"../store\";\nimport type { AppClassProperties } from \"../types\";\nimport { getFontString } from \"../utils\";\nimport { register } from \"./register\";\n\nexport const actionTextAutoResize = register({\n  name: \"autoResize\",\n  label: \"labels.autoResize\",\n  icon: null,\n  trackEvent: { category: \"element\" },\n  predicate: (elements, appState, _: unknown, app: AppClassProperties) => {\n    const selectedElements = getSelectedElements(elements, appState);\n    return (\n      selectedElements.length === 1 &&\n      isTextElement(selectedElements[0]) &&\n      !selectedElements[0].autoResize\n    );\n  },\n  perform: (elements, appState, _, app) => {\n    const selectedElements = getSelectedElements(elements, appState);\n\n    return {\n      appState,\n      elements: elements.map((element) => {\n        if (element.id === selectedElements[0].id && isTextElement(element)) {\n          const metrics = measureText(\n            element.originalText,\n            getFontString(element),\n            element.lineHeight,\n          );\n\n          return newElementWith(element, {\n            autoResize: true,\n            width: metrics.width,\n            height: metrics.height,\n            text: element.originalText,\n          });\n        }\n        return element;\n      }),\n      captureUpdate: CaptureUpdateAction.IMMEDIATELY,\n    };\n  },\n});\n", "/** heuristically checks whether the text may be a mermaid diagram definition */\nexport const isMaybeMermaidDefinition = (text: string) => {\n  const chartTypes = [\n    \"flowchart\",\n    \"graph\",\n    \"sequenceDiagram\",\n    \"classDiagram\",\n    \"stateDiagram\",\n    \"stateDiagram-v2\",\n    \"erDiagram\",\n    \"journey\",\n    \"gantt\",\n    \"pie\",\n    \"quadrantChart\",\n    \"requirementDiagram\",\n    \"gitGraph\",\n    \"C4Context\",\n    \"mindmap\",\n    \"timeline\",\n    \"zenuml\",\n    \"sankey\",\n    \"xychart\",\n    \"block\",\n  ];\n\n  const re = new RegExp(\n    `^(?:%%{.*?}%%[\\\\s\\\\n]*)?\\\\b(?:${chartTypes\n      .map((x) => `\\\\s*${x}(-beta)?`)\n      .join(\"|\")})\\\\b`,\n  );\n\n  return re.test(text.trim());\n};\n", "import { useEffect, useRef } from \"react\";\nimport type { NonDeletedSceneElementsMap } from \"../../element/types\";\nimport type { AppState } from \"../../types\";\nimport type {\n  RenderableElementsMap,\n  StaticCanvasRenderConfig,\n} from \"../../scene/types\";\nimport type { RoughCanvas } from \"roughjs/bin/canvas\";\nimport { renderNewElementScene } from \"../../renderer/renderNewElementScene\";\nimport { isRenderThrottlingEnabled } from \"../../reactUtils\";\n\ninterface NewElementCanvasProps {\n  appState: AppState;\n  elementsMap: RenderableElementsMap;\n  allElementsMap: NonDeletedSceneElementsMap;\n  scale: number;\n  rc: RoughCanvas;\n  renderConfig: StaticCanvasRenderConfig;\n}\n\nconst NewElementCanvas = (props: NewElementCanvasProps) => {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  useEffect(() => {\n    if (!canvasRef.current) {\n      return;\n    }\n    renderNewElementScene(\n      {\n        canvas: canvasRef.current,\n        scale: props.scale,\n        newElement: props.appState.newElement,\n        elementsMap: props.elementsMap,\n        allElementsMap: props.allElementsMap,\n        rc: props.rc,\n        renderConfig: props.renderConfig,\n        appState: props.appState,\n      },\n      isRenderThrottlingEnabled(),\n    );\n  });\n\n  return (\n    <canvas\n      className=\"excalidraw__canvas\"\n      style={{\n        width: props.appState.width,\n        height: props.appState.height,\n      }}\n      width={props.appState.width * props.scale}\n      height={props.appState.height * props.scale}\n      ref={canvasRef}\n    />\n  );\n};\n\nexport default NewElementCanvas;\n", "import type { NewElementSceneRenderConfig } from \"../scene/types\";\nimport { throttleRAF } from \"../utils\";\nimport { bootstrapCanvas, getNormalizedCanvasDimensions } from \"./helpers\";\nimport { renderElement } from \"./renderElement\";\n\nconst _renderNewElementScene = ({\n  canvas,\n  rc,\n  newElement,\n  elementsMap,\n  allElementsMap,\n  scale,\n  appState,\n  renderConfig,\n}: NewElementSceneRenderConfig) => {\n  if (canvas) {\n    const [normalizedWidth, normalizedHeight] = getNormalizedCanvasDimensions(\n      canvas,\n      scale,\n    );\n\n    const context = bootstrapCanvas({\n      canvas,\n      scale,\n      normalizedWidth,\n      normalizedHeight,\n    });\n\n    // Apply zoom\n    context.save();\n    context.scale(appState.zoom.value, appState.zoom.value);\n\n    if (newElement && newElement.type !== \"selection\") {\n      renderElement(\n        newElement,\n        elementsMap,\n        allElementsMap,\n        rc,\n        context,\n        renderConfig,\n        appState,\n      );\n    } else {\n      context.clearRect(0, 0, normalizedWidth, normalizedHeight);\n    }\n  }\n};\n\nexport const renderNewElementSceneThrottled = throttleRAF(\n  (config: NewElementSceneRenderConfig) => {\n    _renderNewElementScene(config);\n  },\n  { trailing: true },\n);\n\nexport const renderNewElementScene = (\n  renderConfig: NewElementSceneRenderConfig,\n  throttle?: boolean,\n) => {\n  if (throttle) {\n    renderNewElementSceneThrottled(renderConfig);\n    return;\n  }\n\n  _renderNewElementScene(renderConfig);\n};\n", "const polyfill = () => {\n  if (!Array.prototype.at) {\n    // Taken from https://github.com/tc39/proposal-relative-indexing-method#polyfill so that it works in tests\n    /* eslint-disable */\n    Object.defineProperty(Array.prototype, \"at\", {\n      value: function (n: number) {\n        // ToInteger() abstract op\n        n = Math.trunc(n) || 0;\n        // Allow negative indexing from the end\n        if (n < 0) {\n          n += this.length;\n        }\n        // OOB access is guaranteed to return undefined\n        if (n < 0 || n >= this.length) {\n          return undefined;\n        }\n        // Otherwise, this is just normal property access\n        return this[n];\n      },\n      writable: true,\n      enumerable: false,\n      configurable: true,\n    });\n  }\n\n  if (!Element.prototype.replaceChildren) {\n    Element.prototype.replaceChildren = function (...nodes) {\n      this.innerHTML = \"\";\n      this.append(...nodes);\n    };\n  }\n};\nexport default polyfill;\n", "import clsx from \"clsx\";\nimport { useTunnels } from \"../../context/tunnels\";\nimport \"./FooterCenter.scss\";\nimport { useUIAppState } from \"../../context/ui-appState\";\n\nconst FooterCenter = ({ children }: { children?: React.ReactNode }) => {\n  const { FooterCenterTunnel } = useTunnels();\n  const appState = useUIAppState();\n  return (\n    <FooterCenterTunnel.In>\n      <div\n        className={clsx(\"footer-center zen-mode-transition\", {\n          \"layer-ui__wrapper__footer-left--transition-bottom\":\n            appState.zenModeEnabled,\n        })}\n      >\n        {children}\n      </div>\n    </FooterCenterTunnel.In>\n  );\n};\n\nexport default FooterCenter;\nFooterCenter.displayName = \"FooterCenter\";\n", "import \"./ExcalidrawLogo.scss\";\n\nconst LogoIcon = () => (\n  <svg\n    viewBox=\"0 0 40 40\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className=\"ExcalidrawLogo-icon\"\n  >\n    <path\n      d=\"M39.9 32.889a.326.326 0 0 0-.279-.056c-2.094-3.083-4.774-6-7.343-8.833l-.419-.472a.212.212 0 0 0-.056-.139.586.586 0 0 0-.167-.111l-.084-.083-.056-.056c-.084-.167-.28-.278-.475-.167-.782.39-1.507.973-2.206 1.528-.92.722-1.842 1.445-2.708 2.25a8.405 8.405 0 0 0-.977 1.028c-.14.194-.028.361.14.444-.615.611-1.23 1.223-1.843 1.861a.315.315 0 0 0-.084.223c0 .083.056.166.111.194l1.09.833v.028c1.535 1.528 4.244 3.611 7.12 5.861.418.334.865.667 1.284 1 .195.223.39.473.558.695.084.11.28.139.391.055.056.056.14.111.196.167a.398.398 0 0 0 .167.056.255.255 0 0 0 .224-.111.394.394 0 0 0 .055-.167c.029 0 .028.028.056.028a.318.318 0 0 0 .224-.084l5.082-5.528a.309.309 0 0 0 0-.444Zm-14.63-1.917a.485.485 0 0 0 .111.14c.586.5 1.2 1 1.843 1.555l-2.569-1.945-.251-.166c-.056-.028-.112-.084-.168-.111l-.195-.167.056-.056.055-.055.112-.111c.866-.861 2.346-2.306 3.1-3.028-.81.805-2.43 3.167-2.095 3.944Zm8.767 6.89-2.122-1.612a44.713 44.713 0 0 0-2.625-2.5c1.145.861 2.122 1.611 2.262 1.75 1.117.972 1.06.806 1.815 1.445l.921.666a1.06 1.06 0 0 1-.251.25Zm.558.416-.056-.028c.084-.055.168-.111.252-.194l-.196.222ZM1.089 5.75c.055.361.14.722.195 1.056.335 1.833.67 3.5 1.284 4.75l.252.944c.084.361.223.806.363.917 1.424 1.25 3.602 3.11 5.947 4.889a.295.295 0 0 0 .363 0s0 .027.028.027a.254.254 0 0 0 .196.084.318.318 0 0 0 .223-.084c2.988-3.305 5.221-6.027 6.813-8.305.112-.111.14-.278.14-.417.111-.111.195-.25.307-.333.111-.111.111-.306 0-.39l-.028-.027c0-.055-.028-.139-.084-.167-.698-.666-1.2-1.138-1.731-1.638-.922-.862-1.871-1.75-3.881-3.75l-.028-.028c-.028-.028-.056-.056-.112-.056-.558-.194-1.703-.389-3.127-.639C6.087 2.223 3.21 1.723.614.944c0 0-.168 0-.196.028l-.083.084c-.028.027-.056.055-.224.11h.056-.056c.028.167.028.278.084.473 0 .055.112.5.112.555l.782 3.556Zm15.496 3.278-.335-.334c.084.112.196.195.335.334Zm-3.546 4.666-.056.056c0-.028.028-.056.056-.056Zm-2.038-10c.168.167.866.834 1.033.973-.726-.334-2.54-1.167-3.379-1.445.838.167 1.983.334 2.346.472ZM1.424 2.306c.419.722.754 3.222 1.089 5.666-.196-.778-.335-1.555-.503-2.278-.251-1.277-.503-2.416-.838-3.416.056 0 .14 0 .252.028Zm-.168-.584c-.112 0-.223-.028-.307-.028 0-.027 0-.055-.028-.055.14 0 .223.028.335.083Zm-1.089.222c0-.027 0-.027 0 0ZM39.453 1.333c.028-.11-.558-.61-.363-.639.42-.027.42-.666 0-.666-.558.028-1.144.166-1.675.25-.977.194-1.982.389-2.96.61-2.205.473-4.383.973-6.561 1.557-.67.194-1.424.333-2.066.666-.224.111-.196.333-.084.472-.056.028-.084.028-.14.056-.195.028-.363.056-.558.083-.168.028-.252.167-.224.334 0 .027.028.083.028.11-1.173 1.556-2.485 3.195-3.909 4.945-1.396 1.611-2.876 3.306-4.356 5.056-4.719 5.5-10.052 11.75-15.943 17.25a.268.268 0 0 0 0 .389c.028.027.056.055.084.055-.084.084-.168.14-.252.222-.056.056-.084.111-.084.167a.605.605 0 0 0-.111.139c-.112.111-.112.305.028.389.111.11.307.11.39-.028.029-.028.029-.056.056-.056a.44.44 0 0 1 .615 0c.335.362.67.723.977 1.028l-.698-.583c-.112-.111-.307-.083-.39.028-.113.11-.085.305.027.389l7.427 6.194c.056.056.112.056.196.056s.14-.028.195-.084l.168-.166c.028.027.083.027.111.027.084 0 .14-.027.196-.083 10.052-10.055 18.15-17.639 27.42-24.417.083-.055.111-.166.111-.25.112 0 .196-.083.251-.194 1.704-5.194 2.039-9.806 2.15-12.083v-.028c0-.028.028-.056.028-.083.028-.056.028-.084.028-.084a1.626 1.626 0 0 0-.111-1.028ZM21.472 9.5c.446-.5.893-1.028 1.34-1.5-2.876 3.778-7.65 9.583-14.408 16.5 4.607-5.083 9.242-10.333 13.068-15ZM5.193 35.778h.084-.084Zm3.462 3.194c-.027-.028-.027-.028 0-.028v.028Zm4.16-3.583c.224-.25.448-.472.699-.722 0 0 0 .027.028.027-.252.223-.475.445-.726.695Zm1.146-1.111c.14-.14.279-.334.446-.5l.028-.028c1.648-1.694 3.351-3.389 5.082-5.111l.028-.028c.419-.333.921-.694 1.368-1.028a379.003 379.003 0 0 0-6.952 6.695ZM24.794 6.472c-.921 1.195-1.954 2.778-2.82 4.028-2.736 3.944-11.532 13.583-11.727 13.75a1976.983 1976.983 0 0 1-8.042 7.639l-.167.167c-.14-.167-.14-.417.028-.556C14.49 19.861 22.03 10.167 25.074 5.917c-.084.194-.14.36-.28.555Zm4.83 5.695c-1.116-.64-1.646-1.64-1.34-2.611l.084-.334c.028-.083.084-.194.14-.277.307-.5.754-.917 1.257-1.167.027 0 .055 0 .083-.028-.028-.056-.028-.139-.028-.222.028-.167.14-.278.335-.278.335 0 1.369.306 1.76.639.111.083.223.194.335.305.14.167.363.445.474.667.056.028.112.306.196.445.056.222.111.472.084.694-.028.028 0 .194-.028.194a2.668 2.668 0 0 1-.363 1.028c-.028.028-.028.056-.056.084l-.028.027c-.14.223-.335.417-.53.556-.643.444-1.369.583-2.095.389 0 0-.195-.084-.28-.111Zm8.154-.834a39.098 39.098 0 0 1-.893 3.167c0 .028-.028.083 0 .111-.056 0-.084.028-.14.056-2.206 1.61-4.356 3.305-6.506 5.028 1.843-1.64 3.686-3.306 5.613-4.945.558-.5.949-1.139 1.06-1.861l.28-1.667v-.055c.14-.334.67-.195.586.166Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n\nconst LogoText = () => (\n  <svg\n    viewBox=\"0 0 450 55\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    className=\"ExcalidrawLogo-text\"\n  >\n    <path\n      d=\"M429.27 96.74c2.47-1.39 4.78-3.02 6.83-4.95 1.43-1.35 2.73-2.86 3.81-4.51-.66.9-1.4 1.77-2.23 2.59-2.91 2.84-5.72 5.09-8.42 6.87h.01ZM343.6 69.36c.33 3.13.58 6.27.79 9.4.09 1.37.18 2.75.25 4.12-.12-4.46-.27-8.93-.5-13.39-.11-2.08-.24-4.16-.4-6.24-.06 1.79-.11 3.85-.13 6.11h-.01ZM378.47 98.34c.01-.37.07-1.13.01-6.51-.11 1.9-.22 3.81-.31 5.71-.07 1.42-.22 2.91-.16 4.35.39.03.78.07 1.17.1-.92-.85-.76-2.01-.72-3.66l.01.01ZM344.09 86.12c-.09-2.41-.22-4.83-.39-7.24v12.21c.15-.05.32-.09.47-.14.05-1.61-.03-3.23-.09-4.83h.01ZM440.69 66.79c-.22-.34-.45-.67-.69-.99-3.71-4.87-9.91-7.14-15.65-8.55-1.05-.26-2.12-.49-3.18-.71 2.29.59 4.48 1.26 6.64 2.02 7.19 2.54 10.57 5.41 12.88 8.23ZM305.09 72.46l1.2 3.6c.84 2.53 1.67 5.06 2.46 7.61.24.78.5 1.57.73 2.36.22-.04.44-.08.67-.12a776.9 776.9 0 0 1-5.01-13.57c-.02.04-.03.09-.05.13v-.01ZM345.49 90.25v.31c1.48-.42 3.05-.83 4.66-1.2-1.56.25-3.12.52-4.66.89ZM371.02 90.22c0-.57-.04-1.14-.11-1.71-.06-.02-.12-.04-.19-.05-.21-.05-.43-.08-.65-.11.42.16.74.88.95 1.87ZM398.93 54.23c-.13 0-.27-.01-.4-.02l.03.4c.11-.15.23-.27.37-.38ZM401.57 62.28v-.15c-1.22-.24-2.86-.61-3.23-1.25-.09-.15-.18-.51-.27-.98-.09.37-.2.73-.33 1.09 1.24.56 2.52.98 3.83 1.29ZM421.73 88.68c-2.97 1.65-6.28 3.12-9.69 3.68v.18c4.72-.14 11.63-3.85 16.33-8.38-2.04 1.75-4.33 3.24-6.63 4.53l-.01-.01ZM411.28 80.92c-.05-1.2-.09-2.4-.15-3.6-.21 5.66-.46 11.38-.47 14.51.24-.02.48-.04.71-.07.15-3.61.05-7.23-.09-10.83v-.01Z\"\n      transform=\"translate(-144.023 -51.76)\"\n    />\n    <path\n      d=\"M425.38 67.41c-3.5-1.45-7.19-2.57-14.06-3.62.09 1.97.06 4.88-.03 8.12.03.04.06.09.06.15.19 1.36.28 2.73.37 4.1.25 3.77.39 7.55.41 11.33 0 1.38-.01 2.76-.07 4.13 1.4-.25 2.78-.65 4.12-1.15 4.07-1.5 7.94-3.78 11.28-6.54 2.33-1.92 5.13-4.49 5.88-7.58.63-3.53-2.45-6.68-7.97-8.96l.01.02ZM411.35 92.53v-.06l-.34.03c.11.01.22.03.34.03ZM314.26 64.06c-.23-.59-.47-1.17-.7-1.75.57 1.62 1.11 3.25 1.6 4.9l.15.54 2.35 6.05c.32.82.66 1.64.98 2.46-1.38-4.1-2.83-8.17-4.39-12.2h.01ZM156.82 103.07c-.18.13-.38.23-.58.33 1.32-.03 2.66-.2 3.93-.34.86-.09 1.72-.22 2.58-.33-2.12.1-4.12.17-5.94.34h.01ZM210.14 68.88s.03.04.05.07c.18-.31.39-.64.58-.96-.21.3-.42.6-.64.89h.01ZM201.65 82.8c-.5.77-1.02 1.56-1.49 2.37 1.11-1.55 2.21-3.1 3.2-4.59-.23.23-.49.51-.75.79-.32.47-.65.95-.96 1.43ZM194.03 98.66c-.33-.4-.65-.84-1.05-1.17-.24-.2-.07-.49.17-.56-.23-.26-.42-.5-.63-.75 1.51-2.55 3.93-5.87 6.4-9.28-.17-.08-.29-.28-.2-.49.04-.09.09-.17.13-.26-1.21 1.78-2.42 3.55-3.61 5.33-.87 1.31-1.74 2.64-2.54 4-.29.5-.63 1.04-.87 1.61.81.65 1.63 1.27 2.47 1.88-.09-.11-.18-.21-.27-.32v.01ZM307.79 82.93c-1-3.17-2.05-6.32-3.1-9.48-1.62 4.08-3.69 9.17-6.16 15.19 3.32-1.04 6.77-1.87 10.27-2.5-.32-1.08-.67-2.15-1.01-3.21ZM149.5 80.7c.05-1.71.04-3.43 0-5.14-.1 2.26-.16 4.51-.22 6.77-.02.73-.03 1.46-.04 2.19.14-1.27.2-2.55.24-3.82h.02ZM228.98 98.3c.39 1.25.91 3.03.94 3.91.06-.03.12-.07.17-.1.08-1.29-.55-2.65-1.11-3.81ZM307.72 53.36c.81.5 1.53 1.04 2.07 1.49-.38-.8-.78-1.58-1.21-2.35-.17.03-.34.06-.51.11-.43.12-.86.26-1.29.41.35-.01.53.1.94.34ZM283.69 96.14c3.91-7.25 6.89-13.35 8.88-18.15l1.1-2.66c-1.27 2.64-2.56 5.27-3.83 7.9-1.53 3.15-3.06 6.31-4.58 9.47-.87 1.81-1.76 3.62-2.54 5.47.04.02.07.04.11.07.05.05.1.09.15.14.05-.73.27-1.48.71-2.24ZM289.92 103.23s-.04.01-.05.03c0-.02.04-.03.05-.04.05-.05.11-.1.16-.15l.21-.21c-.55 0-1.5-.27-2.55-.72.4.26.8.51 1.22.74.24.13.48.26.73.37.05.02.1.03.14.05a.27.27 0 0 1 .08-.07h.01ZM269.23 68.49c-.39-.19-.82-.48-1.33-.87-3.06-1.56-6.31-2.78-9.36-2.35-3.5.49-5.7 1.11-7.74 2.44 5.71-2.6 12.82-2.07 18.44.79l-.01-.01ZM177.87 53.69l1.06.03c-.96-.22-2-.25-2.89-.3-4.95-.26-9.99.33-14.86 1.19-2.44.43-4.88.95-7.28 1.59 9.09-1.76 15.69-2.77 23.97-2.51ZM219.85 55.51c-.18.12-.36.27-.56.45-.45.53-.86 1.11-1.26 1.66-1.91 2.61-3.71 5.31-5.57 7.95l-.12.18 8.05-10.11c-.18-.05-.36-.1-.55-.13h.01ZM510.71 54.1c.12-.15.29-.3.53-.45.69-.4 3.72-.63 5.87-.74-.36-.02-.73-.04-1.09-.05-1.84-.03-3.67.09-5.49.35.05.3.12.59.18.88v.01ZM510.76 86.02c1.37-3.07 2.49-6.27 3.57-9.46.55-1.64 1.12-3.3 1.6-4.97-1.59 4.01-3.67 9.14-6.2 15.3.24-.08.5-.14.74-.22.1-.22.19-.44.29-.65ZM566.95 75.76c.11-.02.23.03.31.11-.05-.13-.09-.26-.14-.39-.05.09-.11.18-.17.28ZM511.33 86.41c3.08-.89 6.24-1.62 9.46-2.14-1.51-3.98-2.98-7.96-4.39-11.87-.05.15-.09.31-.14.46-1.02 3.32-2.15 6.61-3.39 9.85-.48 1.25-.98 2.49-1.53 3.7h-.01ZM578.24 74.45c.11-.44.23-.87.35-1.31-.31.7-.64 1.39-.97 2.08.09.21.19.4.28.61.12-.46.23-.92.35-1.38h-.01ZM520.62 53.11c-.09 0-.18-.01-.28-.02.38.34.29 1.08.93 2.53l6.65 17.15c2.2 5.68 4.69 11.36 7.41 16.87l1.06 2.17c-2.95-7.05-5.92-14.08-8.87-21.13-1.58-3.79-3.16-7.59-4.7-11.4-.78-1.92-1.73-3.89-2.25-5.91-.03-.1 0-.19.04-.26h.01ZM578.78 77.87c1.45-5.77 3.07-10.43 3.58-13.36.05-.34.16-.88.31-1.55-.67 1.79-1.37 3.56-2.08 5.33-.12.43-.23.86-.35 1.29-.65 2.43-1.29 4.86-1.9 7.3.14.33.29.65.43 1l.01-.01ZM545.3 94.66c.02-.44.03-.83.05-1.12.02-1.01.05-2.02.11-3.02.03-6.66-.46-14.33-1.46-22.8-.13-.42-.27-1.24-.56-2.89 0-.02 0-.04-.01-.06.62 6.61.95 13.25 1.32 19.87.17 3.08.33 6.16.52 9.23.02.25.03.52.04.78l-.01.01ZM580.77 102.81c.13.2.27.38.37.49.27-.11.53-.22.8-.32-.43.09-.82.05-1.17-.16v-.01ZM530.48 104.07h.33c-.36-.13-.71-.32-1.04-.56.14.24.3.47.45.7.06-.08.14-.13.26-.13v-.01ZM542.63 58.82c.06.23.11.47.15.71.14-.33.36-.62.7-.86-.28.05-.57.11-.85.15ZM583.81 57.87c.15-.7.29-1.41.42-2.11-.14.45-.28.9-.42 1.34-.46 1.44-.89 2.89-1.31 4.34.44-1.19.88-2.37 1.31-3.57ZM523.62 91.48c-4.66 1.17-9.05 2.89-14.02 5.27 4.65-1.84 9.48-3.29 14.28-4.63-.09-.22-.17-.41-.26-.64ZM460.64 78.3c-.04-2.9-.11-5.81-.28-8.71-.1-1.68-.17-3.43-.5-5.09-.07.02-.14.03-.2.05.3 6.54.45 12.17.51 17.12.17-.07.34-.14.51-.2 0-1.06-.01-2.11-.03-3.17h-.01ZM470.63 63.24c-3.38-.26-6.81.32-10.1 1.1.41 2.01.47 4.14.57 6.18.18 3.55.25 7.11.27 10.67 3.31-1.38 6.5-3.12 9.3-5.35 1.96-1.56 3.86-3.41 5.02-5.66.73-1.41 1.19-3.22.26-4.65-1.09-1.7-3.46-2.14-5.32-2.29ZM460.29 63.68c1-.24 2.01-.46 3.04-.65-1.15.16-2.37.38-3.71.69v.13c.07-.02.15-.04.22-.05.11-.13.3-.18.45-.11v-.01ZM457.24 100.96c.43-.03.86-.07 1.29-.11.14-.49.27-.99.38-1.49-.44.7-1 1.23-1.67 1.6ZM482.88 104.98c-.18.23-.36.38-.55.47.14.09.27.19.4.28a70.76 70.76 0 0 0 4.37-4.63c.76-.89 1.52-1.81 2.19-2.77-.3-.27-.61-.53-.92-.79-.07 1.94-4.62 6.32-5.49 7.45v-.01Z\"\n      transform=\"translate(-144.023 -51.76)\"\n    />\n    <path\n      d=\"M474.36 63.31c-.4-.16-.84-.27-1.29-.37 1.56.42 3.08 1.22 3.76 2.74.62 1.4.32 2.95-.28 4.32.7-1.22.94-2.34.74-3.47-.24-1.33-1.19-2.54-2.93-3.21v-.01ZM477.34 89.18c-1.2-.81-2.4-1.62-3.6-2.42-.14.1-.26.19-.4.29 1.4.67 2.73 1.39 4 2.13ZM465.88 93.85c.37.25.74.5 1.1.75.46.32.92.65 1.38.97-1.57-1.2-2.01-1.61-2.49-1.72h.01ZM574.92 90.06c-2.28-5.21-4.93-11.13-5.67-12.26-.1-.15-1.57-3.01-1.63-3.08 0 0-.01.02-.02.02.4 1.37 1.09 2.69 1.65 3.99 2.14 4.95 4.36 9.86 6.67 14.73.6 1.26 1.21 2.52 1.83 3.78-.75-2.01-1.64-4.45-2.83-7.18ZM448.73 65.29c.1.2.22.38.34.57.22-.02.43-.06.65-.08v-.08c-.14-.05-.25 0-.99-.41ZM460.16 94.81c-.02.31-.06.59-.1.89-.03 1.71-.33 3.43-.79 5.07.15-.02.3-.03.45-.05.01-.04.02-.08.03-.11.09-.34.15-.69.2-1.03.17-1.07.25-2.16.33-3.24.05-.69.08-1.39.12-2.08-.27.1-.27.26-.24.57v-.02Z\"\n      transform=\"translate(-144.023 -51.76)\"\n    />\n    <path\n      d=\"m328.67 98.12-3.22-6.58c-1.29-2.63-2.53-5.29-3.72-7.97-.25-.85-.52-1.69-.79-2.53-.81-2.57-1.67-5.12-2.55-7.67-1.92-5.53-3.9-11.08-6.32-16.41-.72-1.58-1.46-3.44-2.63-4.79-.03-.17-.16-.29-.34-.36a.282.282 0 0 0-.23-.04c-.06-.01-.12 0-.18.01-.74.06-1.5.38-2.19.61-2.22.77-4.4 1.64-6.63 2.38-.03-.08-.06-.16-.09-.25-.15-.42-.82-.24-.67.19.03.09.07.19.1.28l-.18.06c-.36.11-.28.6 0 .68.18 1.18.63 2.36.98 3.49.03.09.06.17.08.26-.08.23-.17.46-.24.64-.37.98-.79 1.94-1.21 2.9-1.27 2.89-2.62 5.75-3.98 8.6-3.18 6.67-6.44 13.31-9.64 19.97-1.08 2.25-2.2 4.5-3.15 6.81-.13.32.24.5.5.37 1.34 1.33 2.84 2.5 4.4 3.57.65.44 1.31.87 2.01 1.24.4.22.86.48 1.33.5.24.01.35-.19.33-.37.11-.1.21-.21.28-.28.41-.41.81-.84 1.2-1.26.85-.92 1.69-1.87 2.5-2.84 6.31-2.34 12.6-4.31 18.71-5.84 2.14 5.3 3.43 8.43 3.97 9.58.55 1.05 1.15 1.88 1.82 2.52 1.32.56 6.96-.03 9.23-1.96.87-1.28 1.19-2.67.93-4.15-.09-.5-.22-.95-.4-1.33l-.01-.03Zm-20.09-45.61c.43.77.83 1.56 1.21 2.35-.54-.45-1.27-.99-2.07-1.49-.42-.24-.6-.35-.94-.34.43-.15.85-.29 1.29-.41.17-.05.34-.08.51-.11Zm-25.86 45.66c.78-1.85 1.67-3.66 2.54-5.47 1.51-3.16 3.05-6.31 4.58-9.47 1.28-2.63 2.56-5.26 3.83-7.9l-1.1 2.66c-1.99 4.79-4.97 10.9-8.88 18.15-.43.76-.66 1.51-.71 2.24-.05-.05-.1-.09-.15-.14a.259.259 0 0 0-.11-.07Zm6.24 4.71c-.42-.23-.82-.48-1.22-.74 1.05.45 2 .72 2.55.72l-.21.21c-.05.05-.11.1-.16.15-.01.01-.04.03-.05.04 0-.02.03-.02.05-.03a.27.27 0 0 0-.08.07c-.05-.02-.1-.03-.14-.05-.25-.1-.49-.24-.73-.37h-.01Zm15.73-29.43c1.05 3.15 2.1 6.31 3.1 9.48.34 1.06.69 2.13 1.01 3.21-3.5.63-6.95 1.46-10.27 2.5 2.48-6.03 4.54-11.11 6.16-15.19Zm4.79 12.57c-.23-.79-.49-1.58-.73-2.36-.79-2.54-1.63-5.08-2.46-7.61l-1.2-3.6c.02-.04.04-.09.05-.13 1.6 4.45 3.28 9 5.01 13.57l-.67.12v.01Zm5.83-18.27-.15-.54c-.49-1.64-1.03-3.28-1.6-4.9.23.58.47 1.17.7 1.75 1.56 4.03 3.01 8.1 4.39 12.2-.33-.82-.67-1.64-.98-2.46l-2.35-6.05h-.01ZM390.43 79.37c-.13-10.43-.22-17.5-.24-19.97-.24-1.6.21-2.88-.65-3.65-.14-.13-.32-.23-.52-.32h.03c.45 0 .45-.69 0-.7-1.75-.03-3.5-.04-5.25-.14-1.38-.08-2.76-.21-4.15-.31-.07 0-.12.01-.17.04-.21-.07-.47.03-.45.31l.03.45c-.11.14-.19.3-.22.5-.21 1.26-.32 13.67-.36 23.59-.32 5.79-.67 11.57-.97 17.36-.09 1.73-.29 3.54-.21 5.3-.39.02-.38.64.04.69v.12c.05.44.74.45.7 0v-.06c1.1.09 2.2.21 3.3.3 1.14.19 2.44.2 3.29.17 1.73-.05 2.92-.05 3.8-.37.45-.05.9-.11 1.35-.17.44-.06.25-.73-.19-.67h-.01c.24-.32.45-.72.62-1.25.66-1.84.41-6.36.34-11.33l-.13-9.9.02.01Zm-12.26 18.17c.09-1.91.2-3.81.31-5.71.06 5.38 0 6.14-.01 6.51-.05 1.65-.21 2.81.72 3.66-.39-.04-.78-.07-1.17-.1-.06-1.44.09-2.93.16-4.35l-.01-.01ZM588.97 53.85c-2.06-.25-3.17-.51-3.76-.6a.3.3 0 0 1 .04-.08c.22-.39-.39-.75-.6-.35-.56 1.02-.9 2.19-1.26 3.29-.61 1.88-1.17 3.78-1.72 5.68-.63 2.19-1.24 4.39-1.83 6.59-.81 2.03-1.67 4.05-2.61 6.03-1.7-3.64-3.11-6.04-4.03-7.57-2.26-3.74-2.85-5.48-3.57-6.08l.31-.09c.43-.12.25-.8-.19-.67-1.06.3-2.12.6-3.17.95-.93.32-1.85.69-2.76 1.07-.13.05-.19.16-.22.27-.04.02-.08.05-.11.07-.04-.06-.07-.12-.11-.18a.354.354 0 0 0-.48-.12c-.16.09-.22.32-.13.48l.33.54c0 .09.02.18.06.28.51 1.16.78 1.38.72 1.47-2.42 3.44-5.41 7.86-6.2 9.1-1.27 1.97-2.01 3.14-2.45 3.84l-.91-6.56-.43-4.1c-.19-1.85-.37-3.23-.53-4.13-.19-1.1-.3-2.15-.45-3.16-.2-1.36-.29-2.06-.47-2.42h.04c.45.02.45-.68 0-.7-3.43-.16-6.81.94-10.17 1.48-.24-.22-.73-.04-.58.32.24.59.33 1.25.43 1.87.17 1.06.29 2.13.4 3.2.32 3.09.53 6.2.74 9.3.44 6.75.77 13.51 1.17 20.26.11 1.95.13 3.96.46 5.89.05.3.37.31.55.14.74 1.71 2.87 1.27 6.13 1.27 1.34 0 2.39.04 2.99-.11.02.32.48.53.63.18 3.61-8.26 7.41-16.46 12.05-24.2.03-.05.04-.1.05-.15.3.73.64 1.45.94 2.16.97 2.26 1.97 4.52 2.98 6.76 2.26 5.03 4.54 10.07 7.09 14.96.47.9.94 1.79 1.47 2.65.2.32.4.67.66.96-.18.25 0 .68.34.54.91-.38 1.82-.75 2.76-1.07 1.04-.35 2.11-.65 3.17-.95.39-.11.28-.66-.07-.68.62-.4.95-.96.87-1.91-.3-3.34.72-7.47.86-8.52l2.14-11.43c1.75-10.74 3.13-17.51 3.23-20.86.02-.49.08-2.84.13-3.24.17-1.25.48-1-4.96-1.65l.03-.02Zm-46.19 5.67c-.04-.24-.09-.48-.15-.71l.85-.15c-.34.24-.56.53-.7.86Zm1.95 25.12c-.36-6.63-.7-13.26-1.32-19.87 0 .02 0 .04.01.06.29 1.65.44 2.47.56 2.89 1 8.46 1.5 16.14 1.46 22.8-.06.99-.1 2-.11 3.02-.01.29-.03.68-.05 1.12-.01-.26-.03-.53-.04-.78-.19-3.08-.35-6.16-.52-9.23l.01-.01Zm36.4 18.66c-.11-.11-.24-.29-.37-.49.35.21.74.26 1.17.16-.27.11-.53.22-.8.32v.01Zm-.89-33.72c.12-.43.23-.86.35-1.29.71-1.77 1.41-3.55 2.08-5.33-.15.68-.26 1.22-.31 1.55-.5 2.94-2.13 7.59-3.58 13.36-.15-.35-.29-.66-.43-1 .61-2.44 1.25-4.87 1.9-7.3l-.01.01Zm3.56-12.48c.14-.44.28-.89.42-1.34-.13.7-.27 1.41-.42 2.11-.43 1.19-.86 2.38-1.31 3.57.42-1.45.85-2.9 1.31-4.34Zm-5.22 16.05c-.11.44-.23.87-.35 1.31-.12.46-.23.92-.35 1.38-.1-.22-.19-.4-.28-.61.34-.69.66-1.38.97-2.08h.01Zm-11.64 2.62c.06-.1.12-.19.17-.28.05.13.09.26.14.39a.398.398 0 0 0-.31-.11Zm2.3 2.98c-.56-1.3-1.25-2.63-1.65-3.99 0 0 .01-.02.02-.02.06.08 1.52 2.93 1.63 3.08.73 1.13 3.38 7.04 5.67 12.26 1.2 2.73 2.08 5.17 2.83 7.18-.62-1.25-1.23-2.51-1.83-3.78-2.31-4.87-4.53-9.78-6.67-14.73ZM275.92 87.03c-1.06-2.18-1.13-3.45-2.44-2.93-1.52.57-2.94 1.3-4.5 2.1-1.4.72-2.68 1.44-3.92 2.12.01-.25-.24-.5-.51-.34-4.8 2.93-12.41 4.7-17.28 1.31-1.98-1.77-3.32-4.15-3.97-5.78-.29-.95-.49-1.94-.63-2.93-.14-3.34 1.58-6.53 3.9-9.12.8-.79 1.68-1.51 2.66-2.12 3.7-2.3 8.22-3.07 12.51-2.51 2.71.35 5.32 1.24 7.71 2.55.39.22.75-.39.35-.6-.18-.1-.37-.18-.55-.27.56.27 1.03.33 1.51.19l-.48.39c-.15.11-.23.3-.13.48.09.15.33.24.48.13 1.3-.97 2.46-2.09 3.45-3.37.37-.29.64-.6.65-.97v-.02c.08-.33-.03-.7-.21-1.08-.31-.87-.98-2.01-2.19-3.26-2.43-2.52-3.79-3.45-5.68-4.26-1.14-.49-3.12-1.06-4.42-1.23-3.28-.42-10.64-1.21-18.18 4.11-7.74 5.46-11.94 12.3-12.23 20.61-.08 2.06.04 3.98.34 5.71.74 4.18 2.57 8 5.44 11.34 4.26 4.99 9.76 7.52 16.34 7.52 4.85 0 9.69-1.77 14.89-4.62.23-.12.45-.23.68-.35 2.19-1.1 4.37-2.23 6.46-3.5.49-.3 1.03-.61 1.5-.98 1.47-.87 1.11-1.12.49-2.95-.39-1.14-.76-2.7-2.06-5.36l.02-.01Zm-17.38-21.76c3.05-.42 6.31.79 9.36 2.35.51.39.94.68 1.33.87-5.61-2.86-12.72-3.39-18.44-.79 2.05-1.33 4.24-1.95 7.74-2.44l.01.01ZM443.67 72.67c-.4-2.2-1.15-4.33-2.37-6.22-1.49-2.32-3.58-4.19-5.91-5.64-6.17-3.81-13.75-5.11-20.83-6.01-3.23-.41-6.47-.69-9.72-.92l-1.39-.12c-.85-.07-1.52-.1-2.05-.1-1.08-.06-2.17-.12-3.25-.17-.08 0-.14.02-.19.05-.1.05-.18.14-.16.3.27 2.55-.01 5.12-.92 7.52-.15.38.4.56.62.28 1.32.59 2.68 1.05 4.08 1.37 0 2.78-.14 7.58-.33 12.91 0 0 0 .02-.01.03-.61 3.66-.79 7.42-1 11.12-.23 4.01-.43 8.03-.44 12.05 0 .64 0 1.28.03 1.93.02.31 0 .68.15.96.06.11.14.16.24.17-.2.17-.21.54.11.59 3.83.67 7.78.71 11.68.25 2.3-.19 4.87-.65 7.65-1.56 1.85-.54 3.67-1.18 5.43-1.91 7.2-3.02 14.31-8.07 17.35-15.53.76-1.86 1.17-3.8 1.31-5.75.3-1.93.28-3.82-.09-5.58l.01-.02Zm-19.32-15.42c5.74 1.41 11.94 3.68 15.65 8.55.25.32.47.65.69.99-2.3-2.82-5.68-5.69-12.88-8.23-2.16-.76-4.35-1.43-6.64-2.02 1.06.21 2.13.45 3.18.71Zm-25.82-3.04c.13 0 .27.01.4.02-.14.1-.26.23-.37.38 0-.13-.02-.26-.03-.4Zm34.82 22.17c-.75 3.09-3.55 5.66-5.88 7.58-3.35 2.76-7.21 5.03-11.28 6.54-1.33.49-2.71.9-4.12 1.15.06-1.38.08-2.76.07-4.13-.02-3.78-.16-7.56-.41-11.33-.09-1.37-.18-2.74-.37-4.1 0-.06-.03-.11-.06-.15.09-3.25.12-6.16.03-8.12 6.86 1.05 10.56 2.17 14.06 3.62 5.52 2.28 8.59 5.44 7.97 8.96l-.01-.02Zm-22 16.15c-.12 0-.23-.02-.34-.03l.34-.03v.06Zm-.69-.7c0-3.13.26-8.84.47-14.51.06 1.2.11 2.41.15 3.6.15 3.6.25 7.23.09 10.83-.24.03-.48.05-.71.07v.01Zm-12.33-30.94c.37.63 2.01 1.01 3.23 1.25v.15c-1.31-.31-2.59-.73-3.83-1.29.12-.36.23-.72.33-1.09.08.48.18.84.27.98Zm13.7 31.65v-.18c3.41-.56 6.71-2.02 9.69-3.68 2.31-1.28 4.59-2.78 6.63-4.53-4.69 4.53-11.61 8.24-16.33 8.38l.01.01Zm24.07-.75c-2.05 1.93-4.37 3.56-6.83 4.95 2.7-1.78 5.52-4.03 8.42-6.87.82-.82 1.56-1.69 2.23-2.59-1.08 1.65-2.38 3.16-3.81 4.51h-.01ZM187.16 92.14c-.79-2.47-2.1-7.12-3.1-6.87-.19-.01-2.09.77-4.08 1.54-3.06 1.18-5.91 2.13-10.09 2.82-2.74.42-5.87 1.01-10.61 1.06.04-3.34.05-6.01.05-7.99 7.97-.65 12.33-2.11 16.37-3.55 1.11-.39 2.69-1.01 2.63-1.8-.08-.35-.55-1.39-1.17-2.61-.47-1.16-.98-2.31-1.61-3.38-.42-.71-1.04-1.69-1.86-2.06-.11-.08-.22-.13-.29-.12-.02 0-.04 0-.07.01-.19-.04-.39-.05-.6-.01-.17.03-.24.15-.25.28-.04.02-.09.04-.14.05-4.33 1.48-8.85 2.33-13.24 3.61a499.1 499.1 0 0 0-.31-8.19c4.51-.99 8.88-1.38 13.11-1.82 3.68-.38 6.28.12 7.47.34.59.11.9.16 1.16.18h.1c-.1.37.44.66.62.28.02-.04.03-.08.05-.13.15.2.53.22.62-.1.17-.58.19-1.21.21-1.81v-.36c.03-.15.05-.3.07-.45.52-2.47.33-5.09-.64-7.44-.11-.27-.44-.28-.6-.14-.08-.21-.15-.42-.24-.62-.19-.41-.79-.05-.6.35.03.07.05.15.09.22-.98-.42-2.15-.54-3.17-.63-2.17-.19-4.37-.14-6.54 0-5.7.35-11.4 1.3-16.91 2.79-2.08.56-4.13 1.22-6.14 2-4.54 1.05-3.79 1.51-2.17 6.07.18.51.46 1.68.54 1.94.82 2.47 1.08 2.13 3.1 2.13s0 .05 0 .08h.52c-.48 2.66-.51 5.45-.62 8.13-.15 3.48-.22 6.96-.28 10.45 0 .41-.01.82-.02 1.23-.16.29-.33.57-.51.85-.05.38-.09.77-.14 1.18-.42 3.52-.59 6.48-.52 8.8v.34c.02.47.05.76.06.87.16 1.57-.26 3.47 1.35 3.79 1.61.32 3.5.55 4.85.55.11 0 .22-.02.33-.02 1.79.24 3.67.05 5.45-.12 2.85-.28 5.69-.7 8.51-1.19 3.03-.53 6.05-1.14 9.04-1.86 2.4-.58 4.82-1.19 7.13-2.06.51-.19 1.73-.57 2.46-1.14 1.81-.68 2.18-1 1.57-2.67-.23-.62-.48-1.49-.91-2.78l-.03-.02Zm-11.12-38.71c.89.05 1.93.08 2.89.3-.33 0-.68-.02-1.06-.03-8.28-.26-14.88.75-23.97 2.51 2.41-.64 4.85-1.16 7.28-1.59 4.87-.86 9.91-1.45 14.86-1.19Zm-26.53 22.13c.03 1.71.04 3.43 0 5.14-.04 1.27-.11 2.55-.24 3.82 0-.73.02-1.46.04-2.19.05-2.26.12-4.51.22-6.77h-.02Zm6.73 27.85c.2-.1.4-.21.58-.33 1.82-.17 3.82-.24 5.94-.34-.86.11-1.72.24-2.58.33-1.27.14-2.61.31-3.93.34h-.01ZM534.48 85.44c-3.52-8.38-7.07-16.75-10.5-25.17-.63-1.54-1.25-3.09-1.86-4.65-.31-.8-.65-1.6-.87-2.43-.04-.17-.17-.24-.31-.25.1-.2 0-.51-.29-.53-1.59-.08-3.18-.22-4.78-.25-1.96-.03-3.91.13-5.84.42-.31.05-.31.38-.13.56-.03.06-.05.14-.04.22.23 1.54.63 3.06 1.16 4.53.13.35.27.7.41 1.06l-2.68 6.18c-.11.03-.2.09-.25.22-.67 1.9-1.52 3.73-2.34 5.56a536.85 536.85 0 0 1-3.9 8.45c-2.64 5.64-5.34 11.25-7.91 16.93-.44.97-.88 1.94-1.29 2.93-.2.48-.47 1-.55 1.52v.05c-.02.12.02.26.16.34 1.19.73 2.41 1.41 3.66 2.05 1.2.62 2.45 1.25 3.76 1.61.43.12.62-.55.19-.67-1.13-.31-2.2-.83-3.24-1.36 1.09.36 2.1.69 2.75.93 2.82 1.01 2.38 1.1 4.3-3.75 2.1-1.09 4.34-1.96 6.53-2.79 4.35-1.64 8.8-3.03 13.27-4.29.82 2.01 1.77 3.97 2.72 5.92.35.83.62 1.45.79 1.82.22.42.45.8.69 1.15.17.33.33.67.5 1 .42.8.84 1.63 1.4 2.35.23.29.6 0 .55-.31 1.53-.02 3.06-.07 4.58-.27.92-.12 1.82-.32 2.71-.54 1.39-.27 3.85-1.11 3.74-1.42-.67-1.96-1.55-3.87-2.34-5.78-1.57-3.78-3.16-7.56-4.75-11.33v-.01Zm-11.65-26.16c1.54 3.81 3.12 7.6 4.7 11.4 2.94 7.05 5.91 14.09 8.87 21.13l-1.06-2.17c-2.71-5.51-5.2-11.19-7.41-16.87l-6.65-17.15c-.65-1.45-.55-2.19-.93-2.53.09 0 .18.01.28.02a.29.29 0 0 0-.04.26c.52 2.02 1.47 3.98 2.25 5.91h-.01Zm-6.58 13.58c.05-.15.09-.31.14-.46 1.41 3.92 2.88 7.9 4.39 11.87-3.22.52-6.38 1.25-9.46 2.14.55-1.22 1.05-2.46 1.53-3.7 1.24-3.24 2.37-6.53 3.39-9.85h.01Zm-.23-20c.36 0 .73.03 1.09.05-2.15.1-5.18.33-5.87.74-.24.15-.41.3-.53.45-.06-.29-.13-.58-.18-.88 1.82-.26 3.65-.39 5.49-.35v-.01Zm-.09 18.72c-.49 1.67-1.05 3.33-1.6 4.97-1.07 3.19-2.19 6.38-3.57 9.46-.09.21-.19.43-.29.65-.25.07-.5.14-.74.22 2.53-6.16 4.61-11.29 6.2-15.3Zm-6.34 25.16c4.97-2.38 9.37-4.1 14.02-5.27l.26.64c-4.8 1.35-9.63 2.8-14.28 4.63Zm20.17 6.76c.33.23.68.42 1.04.56h-.33c-.12 0-.21.06-.26.13-.15-.23-.31-.45-.45-.7v.01ZM226.57 91.75c-3.55-4.74-6.68-9.11-9.31-12.99 9.2-15.25 10.05-17.81 10.35-18.38.17-.34 1.09-2.27.64-2.53-1.13-.65-1.03-.65-2.97-1.71-1.19-.65-3.04-1.61-4.53-2.12-1.71-.59-1.24-.36-3 2.77-.06.1-.11.2-.17.3-.75 1.02-1.48 2.05-2.2 3.09-1.88 2.71-3.73 5.45-5.69 8.1-3.68-4.91-6.88-8.76-9.51-11.43-.15-.15-.3-.29-.46-.42-1.27-1.28-7.24 3.53-7.93 5.58-.09.09-.19.16-.28.25-.27.26.03.64.33.58.19.65.5 1.29.94 1.91 3.85 5.06 7.19 9.76 9.94 14-1.23 2.61-3.06 5-4.67 7.38l-2.28 3.33c-.5.66-.93 1.23-1.29 1.69-.67.93-2.09 2.61-2.3 3.87-.51.85-1.16 1.84-1.29 2.83-.06.44.61.63.67.19.01-.08.04-.15.06-.22 1.36 1.08 2.76 2.11 4.19 3.11 1.3.91 2.62 1.85 4.04 2.56.21.1.4 0 .48-.17.24.07.48.14.72.2.44.1.62-.57.19-.67-2.02-.48-3.77-1.57-5.23-3.02-.47-.46-.9-.96-1.32-1.46 1.74 1.35 4.2 2.89 5.89 4.14 1.39 1.03 2.85-2.27 4.22-4.2 1.86-2.64 3.96-5.86 5.52-8.29l10.39 14.51c.67.81 1.14 1.21 1.57 1.36-.05.24.12.51.41.4 1.53-.58 3.05-1.19 4.54-1.87 1.52-.69 3.06-1.45 4.36-2.5a.28.28 0 0 0 .12-.23c1.66-1.1.81-1.74-1.41-4.91-1.13-1.58-1.71-2.36-3.7-5.01l-.03-.02Zm2.41 6.54c.56 1.15 1.19 2.52 1.11 3.81-.06.04-.12.07-.17.1-.03-.88-.55-2.66-.94-3.91Zm-16.51-32.73c1.86-2.65 3.65-5.35 5.57-7.95.4-.55.81-1.13 1.26-1.66.19-.18.38-.33.56-.45.18.03.36.08.55.13l-8.05 10.11.12-.18h-.01ZM192.7 95.48c.79-1.37 1.66-2.69 2.54-4 1.19-1.79 2.4-3.56 3.61-5.33-.04.09-.09.17-.13.26-.1.22.03.41.2.49-2.47 3.42-4.89 6.73-6.4 9.28.21.24.4.48.63.75-.24.07-.4.36-.17.56.4.33.72.77 1.05 1.17.09.11.18.21.27.32-.84-.61-1.66-1.24-2.47-1.88.24-.57.58-1.11.87-1.61v-.01Zm7.46-10.32c.47-.81.98-1.59 1.49-2.37.31-.48.64-.95.96-1.43.26-.29.52-.56.75-.79-.99 1.48-2.09 3.03-3.2 4.59Zm10.03-16.22s-.03-.05-.05-.07c.22-.29.43-.59.64-.89-.2.32-.4.65-.58.96h-.01ZM371.54 87.96c-.01-.08-.01-.16-.03-.23-.06-.38-.58-.29-.66.03-.3-.05-.6-.08-.81-.11-1.14-.15-2.29-.19-3.44-.2 1.04-.09 2.09-.18 3.14-.23.45-.02.45-.72 0-.7-6.57.35-13.14 1.23-19.65 2.11-1.53.21-3.05.42-4.57.68-.01 0-.02.01-.04.01-.04-3.33-.13-6.66-.24-9.99-.19-5.7-.4-11.41-.88-17.1-.13-1.51-.23-3.07-.49-4.58 0-.25 0-.48-.02-.68-.06-1.19-.04-2.61-.68-2.78-.16-.07-.72-.16-1.5-.24.22-.17.16-.62-.2-.63-1.19-.04-2.39.09-3.57.23-1.2.14-2.41.32-3.59.6-.16-.1-.41-.06-.5.12-.06.02-.13.03-.19.05-.35.1-.29.55-.03.66-.26.6-.19 2.27-.21 3-.02.66-.66 33.73-.9 40.3-.03.65.06 1.12.04 1.45-.16 3.05.87 4.96 6.34 3.93 1.09-.08 2.75-.77 5.36-1.43 4.13-1.04 5.78-1.52 6.2-1.65 6.43-1.69 6.78-1.97 11.72-2.43.55-.05 4.8-.38 6.03-.3.64.04 1.19.07 1.65.1.09 0 .16-.03.24-.05.1.27.56.33.66-.02.39-1.32.61-2.71.78-4.08.2-1.61.29-3.24.15-4.86.24.03.52-.23.38-.53-.09-.2-.27-.33-.49-.43v-.02Zm-.63.56c.07.57.11 1.14.11 1.71-.21-.99-.53-1.71-.95-1.87.22.03.44.06.65.11.06.01.12.04.19.05Zm-25.41 1.73c1.54-.36 3.1-.64 4.66-.89-1.61.37-3.18.77-4.66 1.2v-.31Zm-.86-7.37c-.07-1.37-.16-2.75-.25-4.12-.21-3.13-.45-6.27-.79-9.4.02-2.25.08-4.31.13-6.11.16 2.08.29 4.16.4 6.24.23 4.46.38 8.93.5 13.39h.01Zm-.94-4c.16 2.41.29 4.83.39 7.24.06 1.6.14 3.22.09 4.83-.15.05-.32.09-.47.14V78.88h-.01ZM483.72 92.83c-3.05-2.28-6.22-4.4-9.38-6.51 8.86-6.49 13.49-12.95 13.73-19.23.04-.76 0-1.5-.13-2.2-.67-3.82-3.5-6.68-8.39-8.48.13.04.27.08.4.13 3.92 1.39 7.74 4.23 8.5 8.56.34 1.95-.05 3.96-.98 5.69-.21.4.39.75.6.35 1.86-3.46 1.46-7.55-.97-10.63-3.53-4.47-9.76-5.88-15.16-6.16-2.32-.12-4.64-.04-6.95.19-6 .32-12.71 1.68-17.63 3.21-.37.11-.67.23-.92.35-.2-.17-.62.02-.57.37v.03c-.64.68-.18 1.64.48 3.21.38.91.67 1.89 1.15 2.58.32.76.68 1.51 1.13 2.19.14.21.38.19.53.07.19-.02.38-.05.57-.08v1.57c-.06.06-.1.13-.11.23-.27 4.18-.34 8.38-.48 12.57l-.3 9.03c-.24 3.91-.44 6.77-.46 7.26-.05.88-.11 1.95.07 2.81-.01.22-.02.43-.04.65 0 .11-.02.23-.03.35 0 .05-.03.27-.01.16-.05.4.5.59.64.28.05.04.12.08.2.08 1.75.13 3.5.28 5.25.3 1.69.02 3.38-.12 5.06-.32.08.23.36.39.55.15.06-.08.11-.17.16-.26.18-.09.24-.32.18-.48.05-.2.1-.4.13-.6.16-.86.25-1.74.33-2.62.11-1.17.17-2.34.23-3.51.15-.01.32-.03.52-.04.36-.03 1.73-.15 2.06-.15.39 0 .7-.02.95-.04 1.76 1.11 3.45 2.35 5.14 3.55 2.83 2.01 5.64 4.04 8.47 6.04 1.42 1 2.85 2 4.29 2.97.1.06.19.07.27.04.08 0 .17-.02.25-.1 1.61-1.56 3.15-3.18 4.6-4.88.75-.88 1.49-1.78 2.15-2.73.01.01.03.02.04.03.34.3.83-.2.49-.49-2.16-1.9-4.34-3.76-6.64-5.48l.03-.01Zm-6.38-3.65a55.72 55.72 0 0 0-4-2.13c.14-.1.26-.19.4-.29 1.2.81 2.4 1.61 3.6 2.42Zm-20.1 11.78c.67-.37 1.23-.91 1.67-1.6-.11.5-.24 1-.38 1.49-.43.04-.86.08-1.29.11Zm2.38-37.24c1.34-.31 2.56-.52 3.71-.69-1.03.19-2.04.41-3.04.65-.14-.07-.34-.02-.45.11-.07.02-.15.04-.22.05v-.13.01Zm.04.84c.07-.02.14-.03.2-.05.34 1.66.41 3.41.5 5.09.17 2.9.24 5.81.28 8.71l.03 3.17c-.17.07-.34.14-.51.2-.06-4.96-.21-10.58-.51-17.12h.01Zm16.04 5.62c-1.16 2.25-3.06 4.1-5.02 5.66-2.8 2.23-5.99 3.97-9.3 5.35-.01-3.56-.09-7.12-.27-10.67-.1-2.04-.16-4.16-.57-6.18 3.3-.78 6.72-1.36 10.1-1.1 1.85.14 4.23.59 5.32 2.29.92 1.43.46 3.24-.26 4.65Zm.85-.18c.6-1.37.9-2.92.28-4.32-.67-1.52-2.2-2.32-3.76-2.74.46.1.89.21 1.29.37 1.74.67 2.69 1.88 2.93 3.21.2 1.13-.05 2.25-.74 3.47V70Zm-27.47-4.14c-.12-.19-.23-.38-.34-.57.74.42.85.36.99.41v.08c-.22.03-.43.06-.65.08Zm11.21 30.46c-.08 1.08-.16 2.17-.33 3.24-.05.35-.11.69-.2 1.03 0 .04-.02.07-.03.11-.15.02-.3.04-.45.05.45-1.64.76-3.36.79-5.07.03-.29.08-.57.1-.89-.03-.31-.03-.47.24-.57-.04.69-.07 1.39-.12 2.08v.02Zm5.6-2.47c.48.11.92.52 2.49 1.72-.46-.32-.92-.65-1.38-.97-.37-.25-.73-.5-1.1-.75h-.01Zm21.23 7.24a70.76 70.76 0 0 1-4.37 4.63c-.14-.09-.27-.19-.4-.28.19-.09.37-.24.55-.47.87-1.14 5.43-5.51 5.49-7.45.31.26.62.53.92.79-.67.97-1.42 1.88-2.19 2.77v.01Z\"\n      fill=\"currentColor\"\n      transform=\"translate(-144.023 -51.76)\"\n    />\n  </svg>\n);\n\ntype LogoSize = \"xs\" | \"small\" | \"normal\" | \"large\" | \"custom\";\n\ninterface LogoProps {\n  size?: LogoSize;\n  withText?: boolean;\n  style?: React.CSSProperties;\n  /**\n   * If true, the logo will not be wrapped in a Link component.\n   * The link prop will be ignored as well.\n   * It will merely be a plain div.\n   */\n  isNotLink?: boolean;\n}\n\nexport const ExcalidrawLogo = ({\n  style,\n  size = \"small\",\n  withText,\n}: LogoProps) => {\n  return (\n    <div className={`ExcalidrawLogo is-${size}`} style={style}>\n      <LogoIcon />\n      {withText && <LogoText />}\n    </div>\n  );\n};\n", "import type { JSX } from \"react\";\nimport { actionLoadScene, actionShortcuts } from \"../../actions\";\nimport { getShortcutFromShortcutName } from \"../../actions/shortcuts\";\nimport { t, useI18n } from \"../../i18n\";\nimport { useDevice, useExcalidrawActionManager } from \"../App\";\nimport { useTunnels } from \"../../context/tunnels\";\nimport { HelpIcon, LoadIcon, usersIcon } from \"../icons\";\nimport { useUIAppState } from \"../../context/ui-appState\";\nimport { ExcalidrawLogo } from \"../ExcalidrawLogo\";\n\nconst WelcomeScreenMenuItemContent = ({\n  icon,\n  shortcut,\n  children,\n}: {\n  icon?: JSX.Element;\n  shortcut?: string | null;\n  children: React.ReactNode;\n}) => {\n  const device = useDevice();\n  return (\n    <>\n      <div className=\"welcome-screen-menu-item__icon\">{icon}</div>\n      <div className=\"welcome-screen-menu-item__text\">{children}</div>\n      {shortcut && !device.editor.isMobile && (\n        <div className=\"welcome-screen-menu-item__shortcut\">{shortcut}</div>\n      )}\n    </>\n  );\n};\nWelcomeScreenMenuItemContent.displayName = \"WelcomeScreenMenuItemContent\";\n\nconst WelcomeScreenMenuItem = ({\n  onSelect,\n  children,\n  icon,\n  shortcut,\n  className = \"\",\n  ...props\n}: {\n  onSelect: () => void;\n  children: React.ReactNode;\n  icon?: JSX.Element;\n  shortcut?: string | null;\n} & React.ButtonHTMLAttributes<HTMLButtonElement>) => {\n  return (\n    <button\n      {...props}\n      type=\"button\"\n      className={`welcome-screen-menu-item ${className}`}\n      onClick={onSelect}\n    >\n      <WelcomeScreenMenuItemContent icon={icon} shortcut={shortcut}>\n        {children}\n      </WelcomeScreenMenuItemContent>\n    </button>\n  );\n};\nWelcomeScreenMenuItem.displayName = \"WelcomeScreenMenuItem\";\n\nconst WelcomeScreenMenuItemLink = ({\n  children,\n  href,\n  icon,\n  shortcut,\n  className = \"\",\n  ...props\n}: {\n  children: React.ReactNode;\n  href: string;\n  icon?: JSX.Element;\n  shortcut?: string | null;\n} & React.AnchorHTMLAttributes<HTMLAnchorElement>) => {\n  return (\n    <a\n      {...props}\n      className={`welcome-screen-menu-item ${className}`}\n      href={href}\n      target=\"_blank\"\n      rel=\"noreferrer\"\n    >\n      <WelcomeScreenMenuItemContent icon={icon} shortcut={shortcut}>\n        {children}\n      </WelcomeScreenMenuItemContent>\n    </a>\n  );\n};\nWelcomeScreenMenuItemLink.displayName = \"WelcomeScreenMenuItemLink\";\n\nconst Center = ({ children }: { children?: React.ReactNode }) => {\n  const { WelcomeScreenCenterTunnel } = useTunnels();\n  return (\n    <WelcomeScreenCenterTunnel.In>\n      <div className=\"welcome-screen-center\">\n        {children || (\n          <>\n            <Logo />\n            <Heading>{t(\"welcomeScreen.defaults.center_heading\")}</Heading>\n            <Menu>\n              <MenuItemLoadScene />\n              <MenuItemHelp />\n            </Menu>\n          </>\n        )}\n      </div>\n    </WelcomeScreenCenterTunnel.In>\n  );\n};\nCenter.displayName = \"Center\";\n\nconst Logo = ({ children }: { children?: React.ReactNode }) => {\n  return (\n    <div className=\"welcome-screen-center__logo excalifont welcome-screen-decor\">\n      {children || <ExcalidrawLogo withText />}\n    </div>\n  );\n};\nLogo.displayName = \"Logo\";\n\nconst Heading = ({ children }: { children: React.ReactNode }) => {\n  return (\n    <div className=\"welcome-screen-center__heading welcome-screen-decor excalifont\">\n      {children}\n    </div>\n  );\n};\nHeading.displayName = \"Heading\";\n\nconst Menu = ({ children }: { children?: React.ReactNode }) => {\n  return <div className=\"welcome-screen-menu\">{children}</div>;\n};\nMenu.displayName = \"Menu\";\n\nconst MenuItemHelp = () => {\n  const actionManager = useExcalidrawActionManager();\n\n  return (\n    <WelcomeScreenMenuItem\n      onSelect={() => actionManager.executeAction(actionShortcuts)}\n      shortcut=\"?\"\n      icon={HelpIcon}\n    >\n      {t(\"helpDialog.title\")}\n    </WelcomeScreenMenuItem>\n  );\n};\nMenuItemHelp.displayName = \"MenuItemHelp\";\n\nconst MenuItemLoadScene = () => {\n  const appState = useUIAppState();\n  const actionManager = useExcalidrawActionManager();\n\n  if (appState.viewModeEnabled) {\n    return null;\n  }\n\n  return (\n    <WelcomeScreenMenuItem\n      onSelect={() => actionManager.executeAction(actionLoadScene)}\n      shortcut={getShortcutFromShortcutName(\"loadScene\")}\n      icon={LoadIcon}\n    >\n      {t(\"buttons.load\")}\n    </WelcomeScreenMenuItem>\n  );\n};\nMenuItemLoadScene.displayName = \"MenuItemLoadScene\";\n\nconst MenuItemLiveCollaborationTrigger = ({\n  onSelect,\n}: {\n  onSelect: () => any;\n}) => {\n  const { t } = useI18n();\n  return (\n    <WelcomeScreenMenuItem shortcut={null} onSelect={onSelect} icon={usersIcon}>\n      {t(\"labels.liveCollaboration\")}\n    </WelcomeScreenMenuItem>\n  );\n};\nMenuItemLiveCollaborationTrigger.displayName =\n  \"MenuItemLiveCollaborationTrigger\";\n\n// -----------------------------------------------------------------------------\n\nCenter.Logo = Logo;\nCenter.Heading = Heading;\nCenter.Menu = Menu;\nCenter.MenuItem = WelcomeScreenMenuItem;\nCenter.MenuItemLink = WelcomeScreenMenuItemLink;\nCenter.MenuItemHelp = MenuItemHelp;\nCenter.MenuItemLoadScene = MenuItemLoadScene;\nCenter.MenuItemLiveCollaborationTrigger = MenuItemLiveCollaborationTrigger;\n\nexport { Center };\n", "import { t } from \"../../i18n\";\nimport { useTunnels } from \"../../context/tunnels\";\nimport {\n  WelcomeScreenHelpArrow,\n  WelcomeScreenMenuArrow,\n  WelcomeScreenTopToolbarArrow,\n} from \"../icons\";\n\nconst MenuHint = ({ children }: { children?: React.ReactNode }) => {\n  const { WelcomeScreenMenuHintTunnel } = useTunnels();\n  return (\n    <WelcomeScreenMenuHintTunnel.In>\n      <div className=\"excalifont welcome-screen-decor welcome-screen-decor-hint welcome-screen-decor-hint--menu\">\n        {WelcomeScreenMenuArrow}\n        <div className=\"welcome-screen-decor-hint__label\">\n          {children || t(\"welcomeScreen.defaults.menuHint\")}\n        </div>\n      </div>\n    </WelcomeScreenMenuHintTunnel.In>\n  );\n};\nMenuHint.displayName = \"MenuHint\";\n\nconst ToolbarHint = ({ children }: { children?: React.ReactNode }) => {\n  const { WelcomeScreenToolbarHintTunnel } = useTunnels();\n  return (\n    <WelcomeScreenToolbarHintTunnel.In>\n      <div className=\"excalifont welcome-screen-decor welcome-screen-decor-hint welcome-screen-decor-hint--toolbar\">\n        <div className=\"welcome-screen-decor-hint__label\">\n          {children || t(\"welcomeScreen.defaults.toolbarHint\")}\n        </div>\n        {WelcomeScreenTopToolbarArrow}\n      </div>\n    </WelcomeScreenToolbarHintTunnel.In>\n  );\n};\nToolbarHint.displayName = \"ToolbarHint\";\n\nconst HelpHint = ({ children }: { children?: React.ReactNode }) => {\n  const { WelcomeScreenHelpHintTunnel } = useTunnels();\n  return (\n    <WelcomeScreenHelpHintTunnel.In>\n      <div className=\"excalifont welcome-screen-decor welcome-screen-decor-hint welcome-screen-decor-hint--help\">\n        <div>{children || t(\"welcomeScreen.defaults.helpHint\")}</div>\n        {WelcomeScreenHelpArrow}\n      </div>\n    </WelcomeScreenHelpHintTunnel.In>\n  );\n};\nHelpHint.displayName = \"HelpHint\";\n\nexport { HelpHint, MenuHint, ToolbarHint };\n", "import { Center } from \"./WelcomeScreen.Center\";\nimport { MenuHint, ToolbarHint, HelpHint } from \"./WelcomeScreen.Hints\";\n\nimport \"./WelcomeScreen.scss\";\n\nconst WelcomeScreen = (props: { children?: React.ReactNode }) => {\n  return (\n    <>\n      {props.children || (\n        <>\n          <Center />\n          <MenuHint />\n          <ToolbarHint />\n          <HelpHint />\n        </>\n      )}\n    </>\n  );\n};\n\nWelcomeScreen.displayName = \"WelcomeScreen\";\n\nWelcomeScreen.Center = Center;\nWelcomeScreen.Hints = { MenuHint, ToolbarHint, HelpHint };\n\nexport default WelcomeScreen;\n", "import { t } from \"../../i18n\";\nimport { share } from \"../icons\";\nimport { Button } from \"../Button\";\n\nimport clsx from \"clsx\";\n\nimport \"./LiveCollaborationTrigger.scss\";\nimport { useUIAppState } from \"../../context/ui-appState\";\n\nconst LiveCollaborationTrigger = ({\n  isCollaborating,\n  onSelect,\n  ...rest\n}: {\n  isCollaborating: boolean;\n  onSelect: () => void;\n} & React.ButtonHTMLAttributes<HTMLButtonElement>) => {\n  const appState = useUIAppState();\n\n  const showIconOnly = appState.width < 830;\n\n  return (\n    <Button\n      {...rest}\n      className={clsx(\"collab-button\", { active: isCollaborating })}\n      type=\"button\"\n      onSelect={onSelect}\n      style={{ position: \"relative\", width: showIconOnly ? undefined : \"auto\" }}\n      title={t(\"labels.liveCollaboration\")}\n    >\n      {showIconOnly ? share : t(\"labels.share\")}\n      {appState.collaborators.size > 0 && (\n        <div className=\"CollabButton-collaborators\">\n          {appState.collaborators.size}\n        </div>\n      )}\n    </Button>\n  );\n};\n\nexport default LiveCollaborationTrigger;\nLiveCollaborationTrigger.displayName = \"LiveCollaborationTrigger\";\n", "import throttle from \"lodash.throttle\";\nimport { ENV } from \"../constants\";\nimport type { OrderedExcalidrawElement } from \"../element/types\";\nimport {\n  orderByFractionalIndex,\n  syncInvalidIndices,\n  validateFractionalIndices,\n} from \"../fractionalIndex\";\nimport type { AppState } from \"../types\";\nimport type { MakeBrand } from \"../utility-types\";\nimport { arrayToMap } from \"../utils\";\n\nexport type ReconciledExcalidrawElement = OrderedExcalidrawElement &\n  MakeBrand<\"ReconciledElement\">;\n\nexport type RemoteExcalidrawElement = OrderedExcalidrawElement &\n  MakeBrand<\"RemoteExcalidrawElement\">;\n\nconst shouldDiscardRemoteElement = (\n  localAppState: AppState,\n  local: OrderedExcalidrawElement | undefined,\n  remote: RemoteExcalidrawElement,\n): boolean => {\n  if (\n    local &&\n    // local element is being edited\n    (local.id === localAppState.editingTextElement?.id ||\n      local.id === localAppState.resizingElement?.id ||\n      local.id === localAppState.newElement?.id || // TODO: Is this still valid? As newElement is selection element, which is never part of the elements array\n      // local element is newer\n      local.version > remote.version ||\n      // resolve conflicting edits deterministically by taking the one with\n      // the lowest versionNonce\n      (local.version === remote.version &&\n        local.versionNonce < remote.versionNonce))\n  ) {\n    return true;\n  }\n  return false;\n};\n\nconst validateIndicesThrottled = throttle(\n  (\n    orderedElements: readonly OrderedExcalidrawElement[],\n    localElements: readonly OrderedExcalidrawElement[],\n    remoteElements: readonly RemoteExcalidrawElement[],\n  ) => {\n    if (\n      import.meta.env.DEV ||\n      import.meta.env.MODE === ENV.TEST ||\n      window?.DEBUG_FRACTIONAL_INDICES\n    ) {\n      // create new instances due to the mutation\n      const elements = syncInvalidIndices(\n        orderedElements.map((x) => ({ ...x })),\n      );\n\n      validateFractionalIndices(elements, {\n        // throw in dev & test only, to remain functional on `DEBUG_FRACTIONAL_INDICES`\n        shouldThrow: import.meta.env.DEV || import.meta.env.MODE === ENV.TEST,\n        includeBoundTextValidation: true,\n        reconciliationContext: {\n          localElements,\n          remoteElements,\n        },\n      });\n    }\n  },\n  1000 * 60,\n  { leading: true, trailing: false },\n);\n\nexport const reconcileElements = (\n  localElements: readonly OrderedExcalidrawElement[],\n  remoteElements: readonly RemoteExcalidrawElement[],\n  localAppState: AppState,\n): ReconciledExcalidrawElement[] => {\n  const localElementsMap = arrayToMap(localElements);\n  const reconciledElements: OrderedExcalidrawElement[] = [];\n  const added = new Set<string>();\n\n  // process remote elements\n  for (const remoteElement of remoteElements) {\n    if (!added.has(remoteElement.id)) {\n      const localElement = localElementsMap.get(remoteElement.id);\n      const discardRemoteElement = shouldDiscardRemoteElement(\n        localAppState,\n        localElement,\n        remoteElement,\n      );\n\n      if (localElement && discardRemoteElement) {\n        reconciledElements.push(localElement);\n        added.add(localElement.id);\n      } else {\n        reconciledElements.push(remoteElement);\n        added.add(remoteElement.id);\n      }\n    }\n  }\n\n  // process remaining local elements\n  for (const localElement of localElements) {\n    if (!added.has(localElement.id)) {\n      reconciledElements.push(localElement);\n      added.add(localElement.id);\n    }\n  }\n\n  const orderedElements = orderByFractionalIndex(reconciledElements);\n\n  validateIndicesThrottled(orderedElements, localElements, remoteElements);\n\n  // de-duplicate indices\n  syncInvalidIndices(orderedElements);\n\n  return orderedElements as ReconciledExcalidrawElement[];\n};\n", "import type { JSX } from \"react\";\nimport type { ReactNode } from \"react\";\nimport { useTunnels } from \"../../context/tunnels\";\nimport DropdownMenu from \"../dropdownMenu/DropdownMenu\";\nimport { useExcalidrawSetAppState } from \"../App\";\nimport { brainIcon } from \"../icons\";\nimport { t } from \"../../i18n\";\nimport { trackEvent } from \"../../analytics\";\n\nexport const TTDDialogTrigger = ({\n  children,\n  icon,\n}: {\n  children?: ReactNode;\n  icon?: JSX.Element;\n}) => {\n  const { TTDDialogTriggerTunnel } = useTunnels();\n  const setAppState = useExcalidrawSetAppState();\n\n  return (\n    <TTDDialogTriggerTunnel.In>\n      <DropdownMenu.Item\n        onSelect={() => {\n          trackEvent(\"ai\", \"dialog open\", \"ttd\");\n          setAppState({ openDialog: { name: \"ttd\", tab: \"text-to-diagram\" } });\n        }}\n        icon={icon ?? brainIcon}\n      >\n        {children ?? t(\"labels.textToDiagram\")}\n        <DropdownMenu.Item.Badge>AI</DropdownMenu.Item.Badge>\n      </DropdownMenu.Item>\n    </TTDDialogTriggerTunnel.In>\n  );\n};\nTTDDialogTrigger.displayName = \"TTDDialogTrigger\";\n", "import { useLayoutEffect } from \"react\";\nimport { useApp } from \"../App\";\nimport type { GenerateDiagramToCode } from \"../../types\";\n\nexport const DiagramToCodePlugin = (props: {\n  generate: GenerateDiagramToCode;\n}) => {\n  const app = useApp();\n\n  useLayoutEffect(() => {\n    app.setPlugins({\n      diagramToCode: { generate: props.generate },\n    });\n  }, [app, props.generate]);\n\n  return null;\n};\n", "let keyCount = 0;\nfunction atom(read, write) {\n  const key = `atom${++keyCount}`;\n  const config = {\n    toString() {\n      return (import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && this.debugLabel ? key + \":\" + this.debugLabel : key;\n    }\n  };\n  if (typeof read === \"function\") {\n    config.read = read;\n  } else {\n    config.init = read;\n    config.read = defaultRead;\n    config.write = defaultWrite;\n  }\n  if (write) {\n    config.write = write;\n  }\n  return config;\n}\nfunction defaultRead(get) {\n  return get(this);\n}\nfunction defaultWrite(get, set, arg) {\n  return set(\n    this,\n    typeof arg === \"function\" ? arg(get(this)) : arg\n  );\n}\n\nconst isSelfAtom = (atom, a) => atom.unstable_is ? atom.unstable_is(a) : a === atom;\nconst hasInitialValue = (atom) => \"init\" in atom;\nconst isActuallyWritableAtom = (atom) => !!atom.write;\nconst cancelablePromiseMap = /* @__PURE__ */ new WeakMap();\nconst isPendingPromise = (value) => {\n  var _a;\n  return isPromiseLike(value) && !((_a = cancelablePromiseMap.get(value)) == null ? void 0 : _a[1]);\n};\nconst cancelPromise = (promise, nextValue) => {\n  const promiseState = cancelablePromiseMap.get(promise);\n  if (promiseState) {\n    promiseState[1] = true;\n    promiseState[0].forEach((fn) => fn(nextValue));\n  } else if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    throw new Error(\"[Bug] cancelable promise not found\");\n  }\n};\nconst patchPromiseForCancelability = (promise) => {\n  if (cancelablePromiseMap.has(promise)) {\n    return;\n  }\n  const promiseState = [/* @__PURE__ */ new Set(), false];\n  cancelablePromiseMap.set(promise, promiseState);\n  const settle = () => {\n    promiseState[1] = true;\n  };\n  promise.then(settle, settle);\n  promise.onCancel = (fn) => {\n    promiseState[0].add(fn);\n  };\n};\nconst isPromiseLike = (x) => typeof (x == null ? void 0 : x.then) === \"function\";\nconst isAtomStateInitialized = (atomState) => \"v\" in atomState || \"e\" in atomState;\nconst returnAtomValue = (atomState) => {\n  if (\"e\" in atomState) {\n    throw atomState.e;\n  }\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && !(\"v\" in atomState)) {\n    throw new Error(\"[Bug] atom state is not initialized\");\n  }\n  return atomState.v;\n};\nconst addPendingPromiseToDependency = (atom, promise, dependencyAtomState) => {\n  if (!dependencyAtomState.p.has(atom)) {\n    dependencyAtomState.p.add(atom);\n    promise.then(\n      () => {\n        dependencyAtomState.p.delete(atom);\n      },\n      () => {\n        dependencyAtomState.p.delete(atom);\n      }\n    );\n  }\n};\nconst addDependency = (batch, atom, atomState, a, aState) => {\n  var _a;\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && a === atom) {\n    throw new Error(\"[Bug] atom cannot depend on itself\");\n  }\n  atomState.d.set(a, aState.n);\n  if (isPendingPromise(atomState.v)) {\n    addPendingPromiseToDependency(atom, atomState.v, aState);\n  }\n  (_a = aState.m) == null ? void 0 : _a.t.add(atom);\n  if (batch) {\n    addBatchAtomDependent(batch, a, atom);\n  }\n};\nconst createBatch = () => ({\n  D: /* @__PURE__ */ new Map(),\n  H: /* @__PURE__ */ new Set(),\n  M: /* @__PURE__ */ new Set(),\n  L: /* @__PURE__ */ new Set()\n});\nconst addBatchFunc = (batch, priority, fn) => {\n  batch[priority].add(fn);\n};\nconst registerBatchAtom = (batch, atom, atomState) => {\n  if (!batch.D.has(atom)) {\n    batch.D.set(atom, /* @__PURE__ */ new Set());\n    addBatchFunc(batch, \"M\", () => {\n      var _a;\n      (_a = atomState.m) == null ? void 0 : _a.l.forEach((listener) => addBatchFunc(batch, \"M\", listener));\n    });\n  }\n};\nconst addBatchAtomDependent = (batch, atom, dependent) => {\n  const dependents = batch.D.get(atom);\n  if (dependents) {\n    dependents.add(dependent);\n  }\n};\nconst getBatchAtomDependents = (batch, atom) => batch.D.get(atom);\nconst flushBatch = (batch) => {\n  let error;\n  let hasError = false;\n  const call = (fn) => {\n    try {\n      fn();\n    } catch (e) {\n      if (!hasError) {\n        error = e;\n        hasError = true;\n      }\n    }\n  };\n  while (batch.H.size || batch.M.size || batch.L.size) {\n    batch.D.clear();\n    batch.H.forEach(call);\n    batch.H.clear();\n    batch.M.forEach(call);\n    batch.M.clear();\n    batch.L.forEach(call);\n    batch.L.clear();\n  }\n  if (hasError) {\n    throw error;\n  }\n};\nconst buildStore = (...[getAtomState, atomRead, atomWrite, atomOnMount]) => {\n  const setAtomStateValueOrPromise = (atom, atomState, valueOrPromise) => {\n    const hasPrevValue = \"v\" in atomState;\n    const prevValue = atomState.v;\n    const pendingPromise = isPendingPromise(atomState.v) ? atomState.v : null;\n    if (isPromiseLike(valueOrPromise)) {\n      patchPromiseForCancelability(valueOrPromise);\n      for (const a of atomState.d.keys()) {\n        addPendingPromiseToDependency(atom, valueOrPromise, getAtomState(a));\n      }\n      atomState.v = valueOrPromise;\n    } else {\n      atomState.v = valueOrPromise;\n    }\n    delete atomState.e;\n    delete atomState.x;\n    if (!hasPrevValue || !Object.is(prevValue, atomState.v)) {\n      ++atomState.n;\n      if (pendingPromise) {\n        cancelPromise(pendingPromise, valueOrPromise);\n      }\n    }\n  };\n  const readAtomState = (batch, atom) => {\n    var _a;\n    const atomState = getAtomState(atom);\n    if (isAtomStateInitialized(atomState)) {\n      if (atomState.m && !atomState.x) {\n        return atomState;\n      }\n      if (Array.from(atomState.d).every(\n        ([a, n]) => (\n          // Recursively, read the atom state of the dependency, and\n          // check if the atom epoch number is unchanged\n          readAtomState(batch, a).n === n\n        )\n      )) {\n        return atomState;\n      }\n    }\n    atomState.d.clear();\n    let isSync = true;\n    const getter = (a) => {\n      if (isSelfAtom(atom, a)) {\n        const aState2 = getAtomState(a);\n        if (!isAtomStateInitialized(aState2)) {\n          if (hasInitialValue(a)) {\n            setAtomStateValueOrPromise(a, aState2, a.init);\n          } else {\n            throw new Error(\"no atom init\");\n          }\n        }\n        return returnAtomValue(aState2);\n      }\n      const aState = readAtomState(batch, a);\n      try {\n        return returnAtomValue(aState);\n      } finally {\n        if (isSync) {\n          addDependency(batch, atom, atomState, a, aState);\n        } else {\n          const batch2 = createBatch();\n          addDependency(batch2, atom, atomState, a, aState);\n          mountDependencies(batch2, atom, atomState);\n          flushBatch(batch2);\n        }\n      }\n    };\n    let controller;\n    let setSelf;\n    const options = {\n      get signal() {\n        if (!controller) {\n          controller = new AbortController();\n        }\n        return controller.signal;\n      },\n      get setSelf() {\n        if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && !isActuallyWritableAtom(atom)) {\n          console.warn(\"setSelf function cannot be used with read-only atom\");\n        }\n        if (!setSelf && isActuallyWritableAtom(atom)) {\n          setSelf = (...args) => {\n            if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && isSync) {\n              console.warn(\"setSelf function cannot be called in sync\");\n            }\n            if (!isSync) {\n              return writeAtom(atom, ...args);\n            }\n          };\n        }\n        return setSelf;\n      }\n    };\n    try {\n      const valueOrPromise = atomRead(atom, getter, options);\n      setAtomStateValueOrPromise(atom, atomState, valueOrPromise);\n      if (isPromiseLike(valueOrPromise)) {\n        (_a = valueOrPromise.onCancel) == null ? void 0 : _a.call(valueOrPromise, () => controller == null ? void 0 : controller.abort());\n        const complete = () => {\n          if (atomState.m) {\n            const batch2 = createBatch();\n            mountDependencies(batch2, atom, atomState);\n            flushBatch(batch2);\n          }\n        };\n        valueOrPromise.then(complete, complete);\n      }\n      return atomState;\n    } catch (error) {\n      delete atomState.v;\n      atomState.e = error;\n      delete atomState.x;\n      ++atomState.n;\n      return atomState;\n    } finally {\n      isSync = false;\n    }\n  };\n  const readAtom = (atom) => returnAtomValue(readAtomState(void 0, atom));\n  const getMountedOrBatchDependents = (batch, atom, atomState) => {\n    var _a, _b;\n    const dependents = /* @__PURE__ */ new Map();\n    for (const a of ((_a = atomState.m) == null ? void 0 : _a.t) || []) {\n      const aState = getAtomState(a);\n      if (aState.m) {\n        dependents.set(a, aState);\n      }\n    }\n    for (const atomWithPendingPromise of atomState.p) {\n      dependents.set(\n        atomWithPendingPromise,\n        getAtomState(atomWithPendingPromise)\n      );\n    }\n    (_b = getBatchAtomDependents(batch, atom)) == null ? void 0 : _b.forEach((dependent) => {\n      dependents.set(dependent, getAtomState(dependent));\n    });\n    return dependents;\n  };\n  const recomputeDependents = (batch, atom, atomState) => {\n    const topSortedReversed = [];\n    const visiting = /* @__PURE__ */ new Set();\n    const visited = /* @__PURE__ */ new Set();\n    const stack = [[atom, atomState]];\n    while (stack.length > 0) {\n      const [a, aState] = stack[stack.length - 1];\n      if (visited.has(a)) {\n        stack.pop();\n        continue;\n      }\n      if (visiting.has(a)) {\n        topSortedReversed.push([a, aState, aState.n]);\n        visited.add(a);\n        aState.x = true;\n        stack.pop();\n        continue;\n      }\n      visiting.add(a);\n      for (const [d, s] of getMountedOrBatchDependents(batch, a, aState)) {\n        if (a !== d && !visiting.has(d)) {\n          stack.push([d, s]);\n        }\n      }\n    }\n    addBatchFunc(batch, \"H\", () => {\n      const changedAtoms = /* @__PURE__ */ new Set([atom]);\n      for (let i = topSortedReversed.length - 1; i >= 0; --i) {\n        const [a, aState, prevEpochNumber] = topSortedReversed[i];\n        let hasChangedDeps = false;\n        for (const dep of aState.d.keys()) {\n          if (dep !== a && changedAtoms.has(dep)) {\n            hasChangedDeps = true;\n            break;\n          }\n        }\n        if (hasChangedDeps) {\n          readAtomState(batch, a);\n          mountDependencies(batch, a, aState);\n          if (prevEpochNumber !== aState.n) {\n            registerBatchAtom(batch, a, aState);\n            changedAtoms.add(a);\n          }\n        }\n        delete aState.x;\n      }\n    });\n  };\n  const writeAtomState = (batch, atom, ...args) => {\n    let isSync = true;\n    const getter = (a) => returnAtomValue(readAtomState(batch, a));\n    const setter = (a, ...args2) => {\n      const aState = getAtomState(a);\n      try {\n        if (isSelfAtom(atom, a)) {\n          if (!hasInitialValue(a)) {\n            throw new Error(\"atom not writable\");\n          }\n          const prevEpochNumber = aState.n;\n          const v = args2[0];\n          setAtomStateValueOrPromise(a, aState, v);\n          mountDependencies(batch, a, aState);\n          if (prevEpochNumber !== aState.n) {\n            registerBatchAtom(batch, a, aState);\n            recomputeDependents(batch, a, aState);\n          }\n          return void 0;\n        } else {\n          return writeAtomState(batch, a, ...args2);\n        }\n      } finally {\n        if (!isSync) {\n          flushBatch(batch);\n        }\n      }\n    };\n    try {\n      return atomWrite(atom, getter, setter, ...args);\n    } finally {\n      isSync = false;\n    }\n  };\n  const writeAtom = (atom, ...args) => {\n    const batch = createBatch();\n    try {\n      return writeAtomState(batch, atom, ...args);\n    } finally {\n      flushBatch(batch);\n    }\n  };\n  const mountDependencies = (batch, atom, atomState) => {\n    if (atomState.m && !isPendingPromise(atomState.v)) {\n      for (const a of atomState.d.keys()) {\n        if (!atomState.m.d.has(a)) {\n          const aMounted = mountAtom(batch, a, getAtomState(a));\n          aMounted.t.add(atom);\n          atomState.m.d.add(a);\n        }\n      }\n      for (const a of atomState.m.d || []) {\n        if (!atomState.d.has(a)) {\n          atomState.m.d.delete(a);\n          const aMounted = unmountAtom(batch, a, getAtomState(a));\n          aMounted == null ? void 0 : aMounted.t.delete(atom);\n        }\n      }\n    }\n  };\n  const mountAtom = (batch, atom, atomState) => {\n    if (!atomState.m) {\n      readAtomState(batch, atom);\n      for (const a of atomState.d.keys()) {\n        const aMounted = mountAtom(batch, a, getAtomState(a));\n        aMounted.t.add(atom);\n      }\n      atomState.m = {\n        l: /* @__PURE__ */ new Set(),\n        d: new Set(atomState.d.keys()),\n        t: /* @__PURE__ */ new Set()\n      };\n      if (isActuallyWritableAtom(atom)) {\n        const mounted = atomState.m;\n        let setAtom;\n        const createInvocationContext = (batch2, fn) => {\n          let isSync = true;\n          setAtom = (...args) => {\n            try {\n              return writeAtomState(batch2, atom, ...args);\n            } finally {\n              if (!isSync) {\n                flushBatch(batch2);\n              }\n            }\n          };\n          try {\n            return fn();\n          } finally {\n            isSync = false;\n          }\n        };\n        addBatchFunc(batch, \"L\", () => {\n          const onUnmount = createInvocationContext(\n            batch,\n            () => atomOnMount(atom, (...args) => setAtom(...args))\n          );\n          if (onUnmount) {\n            mounted.u = (batch2) => createInvocationContext(batch2, onUnmount);\n          }\n        });\n      }\n    }\n    return atomState.m;\n  };\n  const unmountAtom = (batch, atom, atomState) => {\n    if (atomState.m && !atomState.m.l.size && !Array.from(atomState.m.t).some((a) => {\n      var _a;\n      return (_a = getAtomState(a).m) == null ? void 0 : _a.d.has(atom);\n    })) {\n      const onUnmount = atomState.m.u;\n      if (onUnmount) {\n        addBatchFunc(batch, \"L\", () => onUnmount(batch));\n      }\n      delete atomState.m;\n      for (const a of atomState.d.keys()) {\n        const aMounted = unmountAtom(batch, a, getAtomState(a));\n        aMounted == null ? void 0 : aMounted.t.delete(atom);\n      }\n      return void 0;\n    }\n    return atomState.m;\n  };\n  const subscribeAtom = (atom, listener) => {\n    const batch = createBatch();\n    const atomState = getAtomState(atom);\n    const mounted = mountAtom(batch, atom, atomState);\n    const listeners = mounted.l;\n    listeners.add(listener);\n    flushBatch(batch);\n    return () => {\n      listeners.delete(listener);\n      const batch2 = createBatch();\n      unmountAtom(batch2, atom, atomState);\n      flushBatch(batch2);\n    };\n  };\n  const unstable_derive = (fn) => buildStore(...fn(getAtomState, atomRead, atomWrite, atomOnMount));\n  const store = {\n    get: readAtom,\n    set: writeAtom,\n    sub: subscribeAtom,\n    unstable_derive\n  };\n  return store;\n};\nconst deriveDevStoreRev4 = (store) => {\n  const proxyAtomStateMap = /* @__PURE__ */ new WeakMap();\n  const debugMountedAtoms = /* @__PURE__ */ new Set();\n  let savedGetAtomState;\n  let inRestoreAtom = 0;\n  const derivedStore = store.unstable_derive(\n    (getAtomState, atomRead, atomWrite, atomOnMount) => {\n      savedGetAtomState = getAtomState;\n      return [\n        (atom) => {\n          let proxyAtomState = proxyAtomStateMap.get(atom);\n          if (!proxyAtomState) {\n            const atomState = getAtomState(atom);\n            proxyAtomState = new Proxy(atomState, {\n              set(target, prop, value) {\n                if (prop === \"m\") {\n                  debugMountedAtoms.add(atom);\n                }\n                return Reflect.set(target, prop, value);\n              },\n              deleteProperty(target, prop) {\n                if (prop === \"m\") {\n                  debugMountedAtoms.delete(atom);\n                }\n                return Reflect.deleteProperty(target, prop);\n              }\n            });\n            proxyAtomStateMap.set(atom, proxyAtomState);\n          }\n          return proxyAtomState;\n        },\n        atomRead,\n        (atom, getter, setter, ...args) => {\n          if (inRestoreAtom) {\n            return setter(atom, ...args);\n          }\n          return atomWrite(atom, getter, setter, ...args);\n        },\n        atomOnMount\n      ];\n    }\n  );\n  const savedStoreSet = derivedStore.set;\n  const devStore = {\n    // store dev methods (these are tentative and subject to change without notice)\n    dev4_get_internal_weak_map: () => ({\n      get: (atom) => {\n        const atomState = savedGetAtomState(atom);\n        if (atomState.n === 0) {\n          return void 0;\n        }\n        return atomState;\n      }\n    }),\n    dev4_get_mounted_atoms: () => debugMountedAtoms,\n    dev4_restore_atoms: (values) => {\n      const restoreAtom = {\n        read: () => null,\n        write: (_get, set) => {\n          ++inRestoreAtom;\n          try {\n            for (const [atom, value] of values) {\n              if (hasInitialValue(atom)) {\n                set(atom, value);\n              }\n            }\n          } finally {\n            --inRestoreAtom;\n          }\n        }\n      };\n      savedStoreSet(restoreAtom);\n    }\n  };\n  return Object.assign(derivedStore, devStore);\n};\nconst createStore = () => {\n  const atomStateMap = /* @__PURE__ */ new WeakMap();\n  const getAtomState = (atom) => {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && !atom) {\n      throw new Error(\"Atom is undefined or null\");\n    }\n    let atomState = atomStateMap.get(atom);\n    if (!atomState) {\n      atomState = { d: /* @__PURE__ */ new Map(), p: /* @__PURE__ */ new Set(), n: 0 };\n      atomStateMap.set(atom, atomState);\n    }\n    return atomState;\n  };\n  const store = buildStore(\n    getAtomState,\n    (atom, ...params) => atom.read(...params),\n    (atom, ...params) => atom.write(...params),\n    (atom, ...params) => {\n      var _a;\n      return (_a = atom.onMount) == null ? void 0 : _a.call(atom, ...params);\n    }\n  );\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    return deriveDevStoreRev4(store);\n  }\n  return store;\n};\nlet defaultStore;\nconst getDefaultStore = () => {\n  if (!defaultStore) {\n    defaultStore = createStore();\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      globalThis.__JOTAI_DEFAULT_STORE__ || (globalThis.__JOTAI_DEFAULT_STORE__ = defaultStore);\n      if (globalThis.__JOTAI_DEFAULT_STORE__ !== defaultStore) {\n        console.warn(\n          \"Detected multiple Jotai instances. It may cause unexpected behavior with the default store. https://github.com/pmndrs/jotai/discussions/2044\"\n        );\n      }\n    }\n  }\n  return defaultStore;\n};\n\nexport { atom, createStore, getDefaultStore };\n", "'use client';\nimport ReactExports, { createContext, useContext, useRef, createElement, useReducer, useEffect, useDebugValue, useCallback } from 'react';\nimport { getDefaultStore, createStore } from 'jotai/vanilla';\n\nconst StoreContext = createContext(\n  void 0\n);\nconst useStore = (options) => {\n  const store = useContext(StoreContext);\n  return (options == null ? void 0 : options.store) || store || getDefaultStore();\n};\nconst Provider = ({\n  children,\n  store\n}) => {\n  const storeRef = useRef(void 0);\n  if (!store && !storeRef.current) {\n    storeRef.current = createStore();\n  }\n  return createElement(\n    StoreContext.Provider,\n    {\n      value: store || storeRef.current\n    },\n    children\n  );\n};\n\nconst isPromiseLike = (x) => typeof (x == null ? void 0 : x.then) === \"function\";\nconst attachPromiseMeta = (promise) => {\n  promise.status = \"pending\";\n  promise.then(\n    (v) => {\n      promise.status = \"fulfilled\";\n      promise.value = v;\n    },\n    (e) => {\n      promise.status = \"rejected\";\n      promise.reason = e;\n    }\n  );\n};\nconst use = ReactExports.use || ((promise) => {\n  if (promise.status === \"pending\") {\n    throw promise;\n  } else if (promise.status === \"fulfilled\") {\n    return promise.value;\n  } else if (promise.status === \"rejected\") {\n    throw promise.reason;\n  } else {\n    attachPromiseMeta(promise);\n    throw promise;\n  }\n});\nconst continuablePromiseMap = /* @__PURE__ */ new WeakMap();\nconst createContinuablePromise = (promise) => {\n  let continuablePromise = continuablePromiseMap.get(promise);\n  if (!continuablePromise) {\n    continuablePromise = new Promise((resolve, reject) => {\n      let curr = promise;\n      const onFulfilled = (me) => (v) => {\n        if (curr === me) {\n          resolve(v);\n        }\n      };\n      const onRejected = (me) => (e) => {\n        if (curr === me) {\n          reject(e);\n        }\n      };\n      const registerCancelHandler = (p) => {\n        if (\"onCancel\" in p && typeof p.onCancel === \"function\") {\n          p.onCancel((nextValue) => {\n            if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && nextValue === p) {\n              throw new Error(\"[Bug] p is not updated even after cancelation\");\n            }\n            if (isPromiseLike(nextValue)) {\n              continuablePromiseMap.set(nextValue, continuablePromise);\n              curr = nextValue;\n              nextValue.then(onFulfilled(nextValue), onRejected(nextValue));\n              registerCancelHandler(nextValue);\n            } else {\n              resolve(nextValue);\n            }\n          });\n        }\n      };\n      promise.then(onFulfilled(promise), onRejected(promise));\n      registerCancelHandler(promise);\n    });\n    continuablePromiseMap.set(promise, continuablePromise);\n  }\n  return continuablePromise;\n};\nfunction useAtomValue(atom, options) {\n  const store = useStore(options);\n  const [[valueFromReducer, storeFromReducer, atomFromReducer], rerender] = useReducer(\n    (prev) => {\n      const nextValue = store.get(atom);\n      if (Object.is(prev[0], nextValue) && prev[1] === store && prev[2] === atom) {\n        return prev;\n      }\n      return [nextValue, store, atom];\n    },\n    void 0,\n    () => [store.get(atom), store, atom]\n  );\n  let value = valueFromReducer;\n  if (storeFromReducer !== store || atomFromReducer !== atom) {\n    rerender();\n    value = store.get(atom);\n  }\n  const delay = options == null ? void 0 : options.delay;\n  useEffect(() => {\n    const unsub = store.sub(atom, () => {\n      if (typeof delay === \"number\") {\n        const value2 = store.get(atom);\n        if (isPromiseLike(value2)) {\n          attachPromiseMeta(createContinuablePromise(value2));\n        }\n        setTimeout(rerender, delay);\n        return;\n      }\n      rerender();\n    });\n    rerender();\n    return unsub;\n  }, [store, atom, delay]);\n  useDebugValue(value);\n  if (isPromiseLike(value)) {\n    const promise = createContinuablePromise(value);\n    return use(promise);\n  }\n  return value;\n}\n\nfunction useSetAtom(atom, options) {\n  const store = useStore(options);\n  const setAtom = useCallback(\n    (...args) => {\n      if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && !(\"write\" in atom)) {\n        throw new Error(\"not writable atom\");\n      }\n      return store.set(atom, ...args);\n    },\n    [store, atom]\n  );\n  return setAtom;\n}\n\nfunction useAtom(atom, options) {\n  return [\n    useAtomValue(atom, options),\n    // We do wrong type assertion here, which results in throwing an error.\n    useSetAtom(atom, options)\n  ];\n}\n\nexport { Provider, useAtom, useAtomValue, useSetAtom, useStore };\n", "'use client';\nimport { useCallback, useMemo } from 'react';\nimport { useSetAtom, useAtom, useStore } from 'jotai/react';\nimport { RESET } from 'jotai/vanilla/utils';\nimport { atom } from 'jotai/vanilla';\n\nfunction useResetAtom(anAtom, options) {\n  const setAtom = useSetAtom(anAtom, options);\n  const resetAtom = useCallback(() => setAtom(RESET), [setAtom]);\n  return resetAtom;\n}\n\nfunction useReducerAtom(anAtom, reducer, options) {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] useReducerAtom is deprecated and will be removed in the future. Please create your own version using the recipe. https://github.com/pmndrs/jotai/pull/2467\"\n    );\n  }\n  const [state, setState] = useAtom(anAtom, options);\n  const dispatch = useCallback(\n    (action) => {\n      setState((prev) => reducer(prev, action));\n    },\n    [setState, reducer]\n  );\n  return [state, dispatch];\n}\n\nfunction useAtomCallback(callback, options) {\n  const anAtom = useMemo(\n    () => atom(null, (get, set, ...args) => callback(get, set, ...args)),\n    [callback]\n  );\n  return useSetAtom(anAtom, options);\n}\n\nconst hydratedMap = /* @__PURE__ */ new WeakMap();\nfunction useHydrateAtoms(values, options) {\n  const store = useStore(options);\n  const hydratedSet = getHydratedSet(store);\n  for (const [atom, value] of values) {\n    if (!hydratedSet.has(atom) || (options == null ? void 0 : options.dangerouslyForceHydrate)) {\n      hydratedSet.add(atom);\n      store.set(atom, value);\n    }\n  }\n}\nconst getHydratedSet = (store) => {\n  let hydratedSet = hydratedMap.get(store);\n  if (!hydratedSet) {\n    hydratedSet = /* @__PURE__ */ new WeakSet();\n    hydratedMap.set(store, hydratedSet);\n  }\n  return hydratedSet;\n};\n\nexport { useAtomCallback, useHydrateAtoms, useReducerAtom, useResetAtom };\n", "import { atom } from 'jotai/vanilla';\n\nconst RESET = Symbol(\n  (import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" ? \"RESET\" : \"\"\n);\n\nfunction atomWithReset(initialValue) {\n  const anAtom = atom(\n    initialValue,\n    (get, set, update) => {\n      const nextValue = typeof update === \"function\" ? update(get(anAtom)) : update;\n      set(anAtom, nextValue === RESET ? initialValue : nextValue);\n    }\n  );\n  return anAtom;\n}\n\nfunction atomWithReducer(initialValue, reducer) {\n  return atom(initialValue, function(get, set, action) {\n    set(this, reducer(get(this), action));\n  });\n}\n\nfunction atomFamily(initializeAtom, areEqual) {\n  let shouldRemove = null;\n  const atoms = /* @__PURE__ */ new Map();\n  const listeners = /* @__PURE__ */ new Set();\n  const createAtom = (param) => {\n    let item;\n    if (areEqual === void 0) {\n      item = atoms.get(param);\n    } else {\n      for (const [key, value] of atoms) {\n        if (areEqual(key, param)) {\n          item = value;\n          break;\n        }\n      }\n    }\n    if (item !== void 0) {\n      if (shouldRemove == null ? void 0 : shouldRemove(item[1], param)) {\n        createAtom.remove(param);\n      } else {\n        return item[0];\n      }\n    }\n    const newAtom = initializeAtom(param);\n    atoms.set(param, [newAtom, Date.now()]);\n    notifyListeners(\"CREATE\", param, newAtom);\n    return newAtom;\n  };\n  function notifyListeners(type, param, atom) {\n    for (const listener of listeners) {\n      listener({ type, param, atom });\n    }\n  }\n  createAtom.unstable_listen = (callback) => {\n    listeners.add(callback);\n    return () => {\n      listeners.delete(callback);\n    };\n  };\n  createAtom.getParams = () => atoms.keys();\n  createAtom.remove = (param) => {\n    if (areEqual === void 0) {\n      if (!atoms.has(param)) return;\n      const [atom] = atoms.get(param);\n      atoms.delete(param);\n      notifyListeners(\"REMOVE\", param, atom);\n    } else {\n      for (const [key, [atom]] of atoms) {\n        if (areEqual(key, param)) {\n          atoms.delete(key);\n          notifyListeners(\"REMOVE\", key, atom);\n          break;\n        }\n      }\n    }\n  };\n  createAtom.setShouldRemove = (fn) => {\n    shouldRemove = fn;\n    if (!shouldRemove) return;\n    for (const [key, [atom, createdAt]] of atoms) {\n      if (shouldRemove(createdAt, key)) {\n        atoms.delete(key);\n        notifyListeners(\"REMOVE\", key, atom);\n      }\n    }\n  };\n  return createAtom;\n}\n\nconst getCached$2 = (c, m, k) => (m.has(k) ? m : m.set(k, c())).get(k);\nconst cache1$3 = /* @__PURE__ */ new WeakMap();\nconst memo3 = (create, dep1, dep2, dep3) => {\n  const cache2 = getCached$2(() => /* @__PURE__ */ new WeakMap(), cache1$3, dep1);\n  const cache3 = getCached$2(() => /* @__PURE__ */ new WeakMap(), cache2, dep2);\n  return getCached$2(create, cache3, dep3);\n};\nfunction selectAtom(anAtom, selector, equalityFn = Object.is) {\n  return memo3(\n    () => {\n      const EMPTY = Symbol();\n      const selectValue = ([value, prevSlice]) => {\n        if (prevSlice === EMPTY) {\n          return selector(value);\n        }\n        const slice = selector(value, prevSlice);\n        return equalityFn(prevSlice, slice) ? prevSlice : slice;\n      };\n      const derivedAtom = atom((get) => {\n        const prev = get(derivedAtom);\n        const value = get(anAtom);\n        return selectValue([value, prev]);\n      });\n      derivedAtom.init = EMPTY;\n      return derivedAtom;\n    },\n    anAtom,\n    selector,\n    equalityFn\n  );\n}\n\nconst frozenAtoms = /* @__PURE__ */ new WeakSet();\nconst deepFreeze = (obj) => {\n  if (typeof obj !== \"object\" || obj === null) return;\n  Object.freeze(obj);\n  const propNames = Object.getOwnPropertyNames(obj);\n  for (const name of propNames) {\n    const value = obj[name];\n    deepFreeze(value);\n  }\n  return obj;\n};\nfunction freezeAtom(anAtom) {\n  if (frozenAtoms.has(anAtom)) {\n    return anAtom;\n  }\n  frozenAtoms.add(anAtom);\n  const origRead = anAtom.read;\n  anAtom.read = function(get, options) {\n    return deepFreeze(origRead.call(this, get, options));\n  };\n  if (\"write\" in anAtom) {\n    const origWrite = anAtom.write;\n    anAtom.write = function(get, set, ...args) {\n      return origWrite.call(\n        this,\n        get,\n        (...setArgs) => {\n          if (setArgs[0] === anAtom) {\n            setArgs[1] = deepFreeze(setArgs[1]);\n          }\n          return set(...setArgs);\n        },\n        ...args\n      );\n    };\n  }\n  return anAtom;\n}\nfunction freezeAtomCreator(createAtom) {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] freezeAtomCreator is deprecated, define it on users end\"\n    );\n  }\n  return (...args) => freezeAtom(createAtom(...args));\n}\n\nconst getCached$1 = (c, m, k) => (m.has(k) ? m : m.set(k, c())).get(k);\nconst cache1$2 = /* @__PURE__ */ new WeakMap();\nconst memo2$1 = (create, dep1, dep2) => {\n  const cache2 = getCached$1(() => /* @__PURE__ */ new WeakMap(), cache1$2, dep1);\n  return getCached$1(create, cache2, dep2);\n};\nconst cacheKeyForEmptyKeyExtractor = {};\nconst isWritable = (atom2) => !!atom2.write;\nconst isFunction = (x) => typeof x === \"function\";\nfunction splitAtom(arrAtom, keyExtractor) {\n  return memo2$1(\n    () => {\n      const mappingCache = /* @__PURE__ */ new WeakMap();\n      const getMapping = (arr, prev) => {\n        let mapping = mappingCache.get(arr);\n        if (mapping) {\n          return mapping;\n        }\n        const prevMapping = prev && mappingCache.get(prev);\n        const atomList = [];\n        const keyList = [];\n        arr.forEach((item, index) => {\n          const key = keyExtractor ? keyExtractor(item) : index;\n          keyList[index] = key;\n          const cachedAtom = prevMapping && prevMapping.atomList[prevMapping.keyList.indexOf(key)];\n          if (cachedAtom) {\n            atomList[index] = cachedAtom;\n            return;\n          }\n          const read = (get) => {\n            const prev2 = get(mappingAtom);\n            const currArr = get(arrAtom);\n            const mapping2 = getMapping(currArr, prev2 == null ? void 0 : prev2.arr);\n            const index2 = mapping2.keyList.indexOf(key);\n            if (index2 < 0 || index2 >= currArr.length) {\n              const prevItem = arr[getMapping(arr).keyList.indexOf(key)];\n              if (prevItem) {\n                return prevItem;\n              }\n              throw new Error(\"splitAtom: index out of bounds for read\");\n            }\n            return currArr[index2];\n          };\n          const write = (get, set, update) => {\n            const prev2 = get(mappingAtom);\n            const arr2 = get(arrAtom);\n            const mapping2 = getMapping(arr2, prev2 == null ? void 0 : prev2.arr);\n            const index2 = mapping2.keyList.indexOf(key);\n            if (index2 < 0 || index2 >= arr2.length) {\n              throw new Error(\"splitAtom: index out of bounds for write\");\n            }\n            const nextItem = isFunction(update) ? update(arr2[index2]) : update;\n            if (!Object.is(arr2[index2], nextItem)) {\n              set(arrAtom, [\n                ...arr2.slice(0, index2),\n                nextItem,\n                ...arr2.slice(index2 + 1)\n              ]);\n            }\n          };\n          atomList[index] = isWritable(arrAtom) ? atom(read, write) : atom(read);\n        });\n        if (prevMapping && prevMapping.keyList.length === keyList.length && prevMapping.keyList.every((x, i) => x === keyList[i])) {\n          mapping = prevMapping;\n        } else {\n          mapping = { arr, atomList, keyList };\n        }\n        mappingCache.set(arr, mapping);\n        return mapping;\n      };\n      const mappingAtom = atom((get) => {\n        const prev = get(mappingAtom);\n        const arr = get(arrAtom);\n        const mapping = getMapping(arr, prev == null ? void 0 : prev.arr);\n        return mapping;\n      });\n      if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n        mappingAtom.debugPrivate = true;\n      }\n      mappingAtom.init = void 0;\n      const splittedAtom = isWritable(arrAtom) ? atom(\n        (get) => get(mappingAtom).atomList,\n        (get, set, action) => {\n          switch (action.type) {\n            case \"remove\": {\n              const index = get(splittedAtom).indexOf(action.atom);\n              if (index >= 0) {\n                const arr = get(arrAtom);\n                set(arrAtom, [\n                  ...arr.slice(0, index),\n                  ...arr.slice(index + 1)\n                ]);\n              }\n              break;\n            }\n            case \"insert\": {\n              const index = action.before ? get(splittedAtom).indexOf(action.before) : get(splittedAtom).length;\n              if (index >= 0) {\n                const arr = get(arrAtom);\n                set(arrAtom, [\n                  ...arr.slice(0, index),\n                  action.value,\n                  ...arr.slice(index)\n                ]);\n              }\n              break;\n            }\n            case \"move\": {\n              const index1 = get(splittedAtom).indexOf(action.atom);\n              const index2 = action.before ? get(splittedAtom).indexOf(action.before) : get(splittedAtom).length;\n              if (index1 >= 0 && index2 >= 0) {\n                const arr = get(arrAtom);\n                if (index1 < index2) {\n                  set(arrAtom, [\n                    ...arr.slice(0, index1),\n                    ...arr.slice(index1 + 1, index2),\n                    arr[index1],\n                    ...arr.slice(index2)\n                  ]);\n                } else {\n                  set(arrAtom, [\n                    ...arr.slice(0, index2),\n                    arr[index1],\n                    ...arr.slice(index2, index1),\n                    ...arr.slice(index1 + 1)\n                  ]);\n                }\n              }\n              break;\n            }\n          }\n        }\n      ) : atom((get) => get(mappingAtom).atomList);\n      return splittedAtom;\n    },\n    arrAtom,\n    keyExtractor || cacheKeyForEmptyKeyExtractor\n  );\n}\n\nfunction atomWithDefault(getDefault) {\n  const EMPTY = Symbol();\n  const overwrittenAtom = atom(EMPTY);\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    overwrittenAtom.debugPrivate = true;\n  }\n  const anAtom = atom(\n    (get, options) => {\n      const overwritten = get(overwrittenAtom);\n      if (overwritten !== EMPTY) {\n        return overwritten;\n      }\n      return getDefault(get, options);\n    },\n    (get, set, update) => {\n      if (update === RESET) {\n        set(overwrittenAtom, EMPTY);\n      } else if (typeof update === \"function\") {\n        const prevValue = get(anAtom);\n        set(overwrittenAtom, update(prevValue));\n      } else {\n        set(overwrittenAtom, update);\n      }\n    }\n  );\n  return anAtom;\n}\n\nconst isPromiseLike = (x) => typeof (x == null ? void 0 : x.then) === \"function\";\nfunction withStorageValidator(validator) {\n  return (unknownStorage) => {\n    const storage = {\n      ...unknownStorage,\n      getItem: (key, initialValue) => {\n        const validate = (value2) => {\n          if (!validator(value2)) {\n            return initialValue;\n          }\n          return value2;\n        };\n        const value = unknownStorage.getItem(key, initialValue);\n        if (isPromiseLike(value)) {\n          return value.then(validate);\n        }\n        return validate(value);\n      }\n    };\n    return storage;\n  };\n}\nfunction createJSONStorage(getStringStorage = () => {\n  try {\n    return window.localStorage;\n  } catch (e) {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      if (typeof window !== \"undefined\") {\n        console.warn(e);\n      }\n    }\n    return void 0;\n  }\n}, options) {\n  var _a;\n  let lastStr;\n  let lastValue;\n  const storage = {\n    getItem: (key, initialValue) => {\n      var _a2, _b;\n      const parse = (str2) => {\n        str2 = str2 || \"\";\n        if (lastStr !== str2) {\n          try {\n            lastValue = JSON.parse(str2, options == null ? void 0 : options.reviver);\n          } catch (e) {\n            return initialValue;\n          }\n          lastStr = str2;\n        }\n        return lastValue;\n      };\n      const str = (_b = (_a2 = getStringStorage()) == null ? void 0 : _a2.getItem(key)) != null ? _b : null;\n      if (isPromiseLike(str)) {\n        return str.then(parse);\n      }\n      return parse(str);\n    },\n    setItem: (key, newValue) => {\n      var _a2;\n      return (_a2 = getStringStorage()) == null ? void 0 : _a2.setItem(\n        key,\n        JSON.stringify(newValue, options == null ? void 0 : options.replacer)\n      );\n    },\n    removeItem: (key) => {\n      var _a2;\n      return (_a2 = getStringStorage()) == null ? void 0 : _a2.removeItem(key);\n    }\n  };\n  const createHandleSubscribe = (subscriber2) => (key, callback, initialValue) => subscriber2(key, (v) => {\n    let newValue;\n    try {\n      newValue = JSON.parse(v || \"\");\n    } catch (e) {\n      newValue = initialValue;\n    }\n    callback(newValue);\n  });\n  let subscriber;\n  try {\n    subscriber = (_a = getStringStorage()) == null ? void 0 : _a.subscribe;\n  } catch (e) {\n  }\n  if (!subscriber && typeof window !== \"undefined\" && typeof window.addEventListener === \"function\" && window.Storage) {\n    subscriber = (key, callback) => {\n      if (!(getStringStorage() instanceof window.Storage)) {\n        return () => {\n        };\n      }\n      const storageEventCallback = (e) => {\n        if (e.storageArea === getStringStorage() && e.key === key) {\n          callback(e.newValue);\n        }\n      };\n      window.addEventListener(\"storage\", storageEventCallback);\n      return () => {\n        window.removeEventListener(\"storage\", storageEventCallback);\n      };\n    };\n  }\n  if (subscriber) {\n    storage.subscribe = createHandleSubscribe(subscriber);\n  }\n  return storage;\n}\nconst defaultStorage = createJSONStorage();\nfunction atomWithStorage(key, initialValue, storage = defaultStorage, options) {\n  const getOnInit = options == null ? void 0 : options.getOnInit;\n  const baseAtom = atom(\n    getOnInit ? storage.getItem(key, initialValue) : initialValue\n  );\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    baseAtom.debugPrivate = true;\n  }\n  baseAtom.onMount = (setAtom) => {\n    setAtom(storage.getItem(key, initialValue));\n    let unsub;\n    if (storage.subscribe) {\n      unsub = storage.subscribe(key, setAtom, initialValue);\n    }\n    return unsub;\n  };\n  const anAtom = atom(\n    (get) => get(baseAtom),\n    (get, set, update) => {\n      const nextValue = typeof update === \"function\" ? update(get(baseAtom)) : update;\n      if (nextValue === RESET) {\n        set(baseAtom, initialValue);\n        return storage.removeItem(key);\n      }\n      if (nextValue instanceof Promise) {\n        return nextValue.then((resolvedValue) => {\n          set(baseAtom, resolvedValue);\n          return storage.setItem(key, resolvedValue);\n        });\n      }\n      set(baseAtom, nextValue);\n      return storage.setItem(key, nextValue);\n    }\n  );\n  return anAtom;\n}\n\nfunction atomWithObservable(getObservable, options) {\n  const returnResultData = (result) => {\n    if (\"e\" in result) {\n      throw result.e;\n    }\n    return result.d;\n  };\n  const observableResultAtom = atom((get) => {\n    var _a;\n    let observable = getObservable(get);\n    const itself = (_a = observable[Symbol.observable]) == null ? void 0 : _a.call(observable);\n    if (itself) {\n      observable = itself;\n    }\n    let resolve;\n    const makePending = () => new Promise((r) => {\n      resolve = r;\n    });\n    const initialResult = options && \"initialValue\" in options ? {\n      d: typeof options.initialValue === \"function\" ? options.initialValue() : options.initialValue\n    } : makePending();\n    let setResult;\n    let lastResult;\n    const listener = (result) => {\n      lastResult = result;\n      resolve == null ? void 0 : resolve(result);\n      setResult == null ? void 0 : setResult(result);\n    };\n    let subscription;\n    let timer;\n    const isNotMounted = () => !setResult;\n    const start = () => {\n      if (subscription) {\n        clearTimeout(timer);\n        subscription.unsubscribe();\n      }\n      subscription = observable.subscribe({\n        next: (d) => listener({ d }),\n        error: (e) => listener({ e }),\n        complete: () => {\n        }\n      });\n      if (isNotMounted() && (options == null ? void 0 : options.unstable_timeout)) {\n        timer = setTimeout(() => {\n          if (subscription) {\n            subscription.unsubscribe();\n            subscription = void 0;\n          }\n        }, options.unstable_timeout);\n      }\n    };\n    start();\n    const resultAtom = atom(lastResult || initialResult);\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      resultAtom.debugPrivate = true;\n    }\n    resultAtom.onMount = (update) => {\n      setResult = update;\n      if (lastResult) {\n        update(lastResult);\n      }\n      if (subscription) {\n        clearTimeout(timer);\n      } else {\n        start();\n      }\n      return () => {\n        setResult = void 0;\n        if (subscription) {\n          subscription.unsubscribe();\n          subscription = void 0;\n        }\n      };\n    };\n    return [resultAtom, observable, makePending, start, isNotMounted];\n  });\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    observableResultAtom.debugPrivate = true;\n  }\n  const observableAtom = atom(\n    (get) => {\n      const [resultAtom] = get(observableResultAtom);\n      const result = get(resultAtom);\n      if (result instanceof Promise) {\n        return result.then(returnResultData);\n      }\n      return returnResultData(result);\n    },\n    (get, set, data) => {\n      const [resultAtom, observable, makePending, start, isNotMounted] = get(observableResultAtom);\n      if (\"next\" in observable) {\n        if (isNotMounted()) {\n          set(resultAtom, makePending());\n          start();\n        }\n        observable.next(data);\n      } else {\n        throw new Error(\"observable is not subject\");\n      }\n    }\n  );\n  return observableAtom;\n}\n\nconst cache1$1 = /* @__PURE__ */ new WeakMap();\nconst memo1 = (create, dep1) => (cache1$1.has(dep1) ? cache1$1 : cache1$1.set(dep1, create())).get(dep1);\nconst isPromise$1 = (x) => x instanceof Promise;\nconst LOADING = { state: \"loading\" };\nfunction loadable(anAtom) {\n  return memo1(() => {\n    const loadableCache = /* @__PURE__ */ new WeakMap();\n    const refreshAtom = atom(0);\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      refreshAtom.debugPrivate = true;\n    }\n    const derivedAtom = atom(\n      (get, { setSelf }) => {\n        get(refreshAtom);\n        let value;\n        try {\n          value = get(anAtom);\n        } catch (error) {\n          return { state: \"hasError\", error };\n        }\n        if (!isPromise$1(value)) {\n          return { state: \"hasData\", data: value };\n        }\n        const promise = value;\n        const cached1 = loadableCache.get(promise);\n        if (cached1) {\n          return cached1;\n        }\n        promise.then(\n          (data) => {\n            loadableCache.set(promise, { state: \"hasData\", data });\n            setSelf();\n          },\n          (error) => {\n            loadableCache.set(promise, { state: \"hasError\", error });\n            setSelf();\n          }\n        );\n        const cached2 = loadableCache.get(promise);\n        if (cached2) {\n          return cached2;\n        }\n        loadableCache.set(promise, LOADING);\n        return LOADING;\n      },\n      (_get, set) => {\n        set(refreshAtom, (c) => c + 1);\n      }\n    );\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      derivedAtom.debugPrivate = true;\n    }\n    return atom((get) => get(derivedAtom));\n  }, anAtom);\n}\n\nconst getCached = (c, m, k) => (m.has(k) ? m : m.set(k, c())).get(k);\nconst cache1 = /* @__PURE__ */ new WeakMap();\nconst memo2 = (create, dep1, dep2) => {\n  const cache2 = getCached(() => /* @__PURE__ */ new WeakMap(), cache1, dep1);\n  return getCached(create, cache2, dep2);\n};\nconst isPromise = (x) => x instanceof Promise;\nconst defaultFallback = () => void 0;\nfunction unwrap(anAtom, fallback = defaultFallback) {\n  return memo2(\n    () => {\n      const promiseErrorCache = /* @__PURE__ */ new WeakMap();\n      const promiseResultCache = /* @__PURE__ */ new WeakMap();\n      const refreshAtom = atom(0);\n      if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n        refreshAtom.debugPrivate = true;\n      }\n      const promiseAndValueAtom = atom(\n        (get, { setSelf }) => {\n          get(refreshAtom);\n          const prev = get(promiseAndValueAtom);\n          const promise = get(anAtom);\n          if (!isPromise(promise)) {\n            return { v: promise };\n          }\n          if (promise !== (prev == null ? void 0 : prev.p)) {\n            promise.then(\n              (v) => {\n                promiseResultCache.set(promise, v);\n                setSelf();\n              },\n              (e) => {\n                promiseErrorCache.set(promise, e);\n                setSelf();\n              }\n            );\n          }\n          if (promiseErrorCache.has(promise)) {\n            throw promiseErrorCache.get(promise);\n          }\n          if (promiseResultCache.has(promise)) {\n            return {\n              p: promise,\n              v: promiseResultCache.get(promise)\n            };\n          }\n          if (prev && \"v\" in prev) {\n            return { p: promise, f: fallback(prev.v), v: prev.v };\n          }\n          return { p: promise, f: fallback() };\n        },\n        (_get, set) => {\n          set(refreshAtom, (c) => c + 1);\n        }\n      );\n      promiseAndValueAtom.init = void 0;\n      if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n        promiseAndValueAtom.debugPrivate = true;\n      }\n      return atom(\n        (get) => {\n          const state = get(promiseAndValueAtom);\n          if (\"f\" in state) {\n            return state.f;\n          }\n          return state.v;\n        },\n        (_get, set, ...args) => set(anAtom, ...args)\n      );\n    },\n    anAtom,\n    fallback\n  );\n}\n\nfunction atomWithRefresh(read, write) {\n  const refreshAtom = atom(0);\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    refreshAtom.debugPrivate = true;\n  }\n  return atom(\n    (get, options) => {\n      get(refreshAtom);\n      return read(get, options);\n    },\n    (get, set, ...args) => {\n      if (args.length === 0) {\n        set(refreshAtom, (c) => c + 1);\n      } else if (write) {\n        return write(get, set, ...args);\n      }\n    }\n  );\n}\n\nfunction atomWithLazy(makeInitial) {\n  const a = atom(void 0);\n  delete a.init;\n  Object.defineProperty(a, \"init\", {\n    get() {\n      return makeInitial();\n    }\n  });\n  return a;\n}\n\nexport { RESET, atomFamily, atomWithDefault, atomWithLazy, atomWithObservable, atomWithReducer, atomWithRefresh, atomWithReset, atomWithStorage, createJSONStorage, freezeAtom, freezeAtomCreator, loadable, selectAtom, splitAtom, withStorageValidator as unstable_withStorageValidator, unwrap };\n", "import { createContext, useContext, useRef } from 'react';\nimport type { ReactNode } from 'react';\nimport { createStore } from 'jotai/vanilla';\nimport type { WritableAtom } from 'jotai/vanilla';\nimport {\n  useAtom as useAtomOrig,\n  useAtomValue as useAtomValueOrig,\n  useSetAtom as useSetAtomOrig,\n  useStore as useStoreOrig,\n} from 'jotai/react';\nimport { useHydrateAtoms } from 'jotai/react/utils';\n\ntype Store = ReturnType<typeof createStore>;\ntype AnyWritableAtom = WritableAtom<unknown, any[], any>;\n\nexport function createIsolation() {\n  const StoreContext = createContext<Store | null>(null);\n\n  function Provider({\n    store,\n    initialValues = [],\n    children,\n  }: {\n    store?: Store;\n    initialValues?: Iterable<readonly [AnyWritableAtom, unknown]>;\n    children: ReactNode;\n  }) {\n    const storeRef = useRef(store);\n    if (!storeRef.current) {\n      storeRef.current = createStore();\n    }\n    useHydrateAtoms(initialValues as any, { store: storeRef.current });\n    return (\n      <StoreContext.Provider value={storeRef.current}>\n        {children}\n      </StoreContext.Provider>\n    );\n  }\n\n  const useStore = ((options?: any) => {\n    const store = useContext(StoreContext);\n    if (!store) throw new Error('Missing Provider from createIsolation');\n    return useStoreOrig({ store, ...options });\n  }) as typeof useStoreOrig;\n\n  const useAtom = ((anAtom: any, options?: any) => {\n    const store = useStore();\n    return useAtomOrig(anAtom, { store, ...options });\n  }) as typeof useAtomOrig;\n\n  const useAtomValue = ((anAtom: any, options?: any) => {\n    const store = useStore();\n    return useAtomValueOrig(anAtom, { store, ...options });\n  }) as typeof useAtomValueOrig;\n\n  const useSetAtom = ((anAtom: any, options?: any) => {\n    const store = useStore();\n    return useSetAtomOrig(anAtom, { store, ...options });\n  }) as typeof useSetAtomOrig;\n\n  return { Provider, useStore, useAtom, useAtomValue, useSetAtom };\n}\n", "import { atom, type Atom } from 'jotai';\nimport type { AnyAtomFamily, AnyAtom, AnyWritableAtom, Scope } from './types';\n\nconst globalScopeKey: { name?: string } = {};\nif (process.env.NODE_ENV !== 'production') {\n  globalScopeKey.name = 'unscoped';\n  globalScopeKey.toString = toString;\n}\n\ntype GlobalScopeKey = typeof globalScopeKey;\n\nexport function createScope(\n  atoms: Set<AnyAtom>,\n  atomFamilies: Set<AnyAtomFamily>,\n  parentScope: Scope | undefined,\n  scopeName?: string | undefined,\n): Scope {\n  const explicit = new WeakMap<AnyAtom, [AnyAtom, Scope?]>();\n  const implicit = new WeakMap<AnyAtom, [AnyAtom, Scope?]>();\n  type ScopeMap = WeakMap<AnyAtom, [AnyAtom, Scope?]>;\n  const inherited = new WeakMap<Scope | GlobalScopeKey, ScopeMap>();\n\n  const currentScope: Scope = {\n    getAtom,\n    cleanup() {},\n    prepareWriteAtom(anAtom, originalAtom, implicitScope) {\n      if (\n        originalAtom.read === defaultRead &&\n        isWritableAtom(originalAtom) &&\n        isWritableAtom(anAtom) &&\n        originalAtom.write !== defaultWrite &&\n        currentScope !== implicitScope\n      ) {\n        // atom is writable with init and holds a value\n        // we need to preserve the value, so we don't want to copy the atom\n        // instead, we need to override write until the write is finished\n        const { write } = originalAtom;\n        anAtom.write = createScopedWrite(\n          originalAtom.write.bind(\n            originalAtom,\n          ) as (typeof originalAtom)['write'],\n          implicitScope,\n        );\n        return () => {\n          anAtom.write = write;\n        };\n      }\n      return undefined;\n    },\n  };\n\n  if (scopeName && process.env.NODE_ENV !== 'production') {\n    currentScope.name = scopeName;\n    currentScope.toString = toString;\n  }\n\n  // populate explicitly scoped atoms\n  for (const anAtom of atoms) {\n    explicit.set(anAtom, [cloneAtom(anAtom, currentScope), currentScope]);\n  }\n\n  const cleanupFamiliesSet = new Set<() => void>();\n  for (const atomFamily of atomFamilies) {\n    for (const param of atomFamily.getParams()) {\n      const anAtom = atomFamily(param);\n      if (!explicit.has(anAtom)) {\n        explicit.set(anAtom, [cloneAtom(anAtom, currentScope), currentScope]);\n      }\n    }\n    const cleanupFamily = atomFamily.unstable_listen((e) => {\n      if (e.type === 'CREATE' && !explicit.has(e.atom)) {\n        explicit.set(e.atom, [cloneAtom(e.atom, currentScope), currentScope]);\n      } else if (!atoms.has(e.atom)) {\n        explicit.delete(e.atom);\n      }\n    });\n    cleanupFamiliesSet.add(cleanupFamily);\n  }\n  currentScope.cleanup = combineVoidFunctions(\n    currentScope.cleanup,\n    ...Array.from(cleanupFamiliesSet),\n  );\n\n  /**\n   * Returns a scoped atom from the original atom.\n   * @param anAtom\n   * @param implicitScope the atom is implicitly scoped in the provided scope\n   * @returns the scoped atom and the scope of the atom\n   */\n  function getAtom<T extends AnyAtom>(\n    anAtom: T,\n    implicitScope?: Scope,\n  ): [T, Scope?] {\n    if (explicit.has(anAtom)) {\n      return explicit.get(anAtom) as [T, Scope];\n    }\n    if (implicitScope === currentScope) {\n      // dependencies of explicitly scoped atoms are implicitly scoped\n      // implicitly scoped atoms are only accessed by implicit and explicit scoped atoms\n      if (!implicit.has(anAtom)) {\n        implicit.set(anAtom, [cloneAtom(anAtom, implicitScope), implicitScope]);\n      }\n      return implicit.get(anAtom) as [T, Scope];\n    }\n    const scopeKey = implicitScope ?? globalScopeKey;\n    if (parentScope) {\n      // inherited atoms are copied so they can access scoped atoms\n      // but they are not explicitly scoped\n      // dependencies of inherited atoms first check if they are explicitly scoped\n      // otherwise they use their original scope's atom\n      if (!inherited.get(scopeKey)?.has(anAtom)) {\n        const [ancestorAtom, explicitScope] = parentScope.getAtom(\n          anAtom,\n          implicitScope,\n        );\n        setInheritedAtom(\n          inheritAtom(ancestorAtom, anAtom, explicitScope),\n          anAtom,\n          implicitScope,\n          explicitScope,\n        );\n      }\n      return inherited.get(scopeKey)!.get(anAtom) as [T, Scope];\n    }\n    if (!inherited.get(scopeKey)?.has(anAtom)) {\n      // non-primitive atoms may need to access scoped atoms\n      // so we need to create a copy of the atom\n      setInheritedAtom(inheritAtom(anAtom, anAtom), anAtom);\n    }\n    return inherited.get(scopeKey)!.get(anAtom) as [T, Scope?];\n  }\n\n  function setInheritedAtom<T extends AnyAtom>(\n    scopedAtom: T,\n    originalAtom: T,\n    implicitScope?: Scope,\n    explicitScope?: Scope,\n  ) {\n    const scopeKey = implicitScope ?? globalScopeKey;\n    if (!inherited.has(scopeKey)) {\n      inherited.set(scopeKey, new WeakMap());\n    }\n    inherited.get(scopeKey)!.set(\n      originalAtom,\n      [\n        scopedAtom, //\n        explicitScope,\n      ].filter(Boolean) as [T, Scope?],\n    );\n  }\n\n  /**\n   * @returns a copy of the atom for derived atoms or the original atom for primitive and writable atoms\n   */\n  function inheritAtom<T>(\n    anAtom: Atom<T>,\n    originalAtom: Atom<T>,\n    implicitScope?: Scope,\n  ) {\n    if (originalAtom.read !== defaultRead) {\n      return cloneAtom(originalAtom, implicitScope);\n    }\n    return anAtom;\n  }\n\n  /**\n   * @returns a scoped copy of the atom\n   */\n  function cloneAtom<T>(originalAtom: Atom<T>, implicitScope?: Scope) {\n    // avoid reading `init` to preserve lazy initialization\n    const scopedAtom: Atom<T> = Object.create(\n      Object.getPrototypeOf(originalAtom),\n      Object.getOwnPropertyDescriptors(originalAtom),\n    );\n\n    if (scopedAtom.read !== defaultRead) {\n      scopedAtom.read = createScopedRead<typeof scopedAtom>(\n        originalAtom.read.bind(originalAtom),\n        implicitScope,\n      );\n    }\n\n    if (\n      isWritableAtom(scopedAtom) &&\n      isWritableAtom(originalAtom) &&\n      scopedAtom.write !== defaultWrite\n    ) {\n      scopedAtom.write = createScopedWrite(\n        originalAtom.write.bind(originalAtom),\n        implicitScope,\n      );\n    }\n\n    return scopedAtom;\n  }\n\n  function createScopedRead<T extends Atom<unknown>>(\n    read: T['read'],\n    implicitScope?: Scope,\n  ): T['read'] {\n    return function scopedRead(get, opts) {\n      return read(\n        function scopedGet(a) {\n          const [scopedAtom] = getAtom(a, implicitScope);\n          return get(scopedAtom);\n        }, //\n        opts,\n      );\n    };\n  }\n\n  function createScopedWrite<T extends AnyWritableAtom>(\n    write: T['write'],\n    implicitScope?: Scope,\n  ): T['write'] {\n    return function scopedWrite(get, set, ...args) {\n      return write(\n        function scopedGet(a) {\n          const [scopedAtom] = getAtom(a, implicitScope);\n          return get(scopedAtom);\n        },\n        function scopedSet(a, ...v) {\n          const [scopedAtom] = getAtom(a, implicitScope);\n          return set(scopedAtom, ...v);\n        },\n        ...args,\n      );\n    };\n  }\n\n  return currentScope;\n}\n\nfunction isWritableAtom(anAtom: AnyAtom): anAtom is AnyWritableAtom {\n  return 'write' in anAtom;\n}\n\nconst { read: defaultRead, write: defaultWrite } = atom<unknown>(null);\n\nfunction toString(this: { name: string }) {\n  return this.name;\n}\n\nfunction combineVoidFunctions(...fns: (() => void)[]) {\n  return function combinedFunctions() {\n    for (const fn of fns) {\n      fn();\n    }\n  };\n}\n", "import type { Store, Scope } from './types';\n\nfunction PatchedStore() {}\n\n/**\n * @returns a patched store that intercepts get and set calls to apply the scope\n */\nexport function createPatchedStore(baseStore: Store, scope: Scope): Store {\n  const store: Store = {\n    ...baseStore,\n    get(anAtom, ...args) {\n      const [scopedAtom] = scope.getAtom(anAtom);\n      return baseStore.get(scopedAtom, ...args);\n    },\n    set(anAtom, ...args) {\n      const [scopedAtom, implicitScope] = scope.getAtom(anAtom);\n      const restore = scope.prepareWriteAtom(scopedAtom, anAtom, implicitScope);\n      try {\n        return baseStore.set(scopedAtom, ...args);\n      } finally {\n        restore?.();\n      }\n    },\n    sub(anAtom, ...args) {\n      const [scopedAtom] = scope.getAtom(anAtom);\n      return baseStore.sub(scopedAtom, ...args);\n    },\n    // TODO: update this patch to support devtools\n  };\n  return Object.assign(Object.create(PatchedStore.prototype), store);\n}\n\n/**\n * @returns true if the current scope is the first descendant scope under Provider\n */\nexport function isTopLevelScope(parentStore: Store) {\n  return !(parentStore instanceof PatchedStore);\n}\n", "import { Provider, useStore } from 'jotai/react';\nimport {\n  type EffectCallback,\n  createContext,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n  type PropsWithChildren,\n} from 'react';\nimport { createScope } from './scope';\nimport type { AnyAtom, AnyAtomFamily, Store, Scope } from './types';\nimport { createPatchedStore, isTopLevelScope } from './patchedStore';\n\nconst ScopeContext = createContext<{\n  scope: Scope | undefined;\n  baseStore: Store | undefined;\n}>({ scope: undefined, baseStore: undefined });\n\nexport function ScopeProvider({\n  atoms,\n  atomFamilies,\n  children,\n  debugName,\n}: PropsWithChildren<{\n  atoms: Iterable<AnyAtom>;\n  atomFamilies?: Iterable<AnyAtomFamily>;\n  debugName?: string;\n}>): JSX.Element;\nexport function ScopeProvider({\n  atoms,\n  atomFamilies,\n  children,\n  debugName,\n}: PropsWithChildren<{\n  atoms?: Iterable<AnyAtom>;\n  atomFamilies: Iterable<AnyAtomFamily>;\n  debugName?: string;\n}>): JSX.Element;\nexport function ScopeProvider({\n  atoms,\n  atomFamilies,\n  children,\n  debugName,\n}: PropsWithChildren<{\n  atoms?: Iterable<AnyAtom>;\n  atomFamilies?: Iterable<AnyAtomFamily>;\n  debugName?: string;\n}>) {\n  const parentStore: Store = useStore();\n  let { scope: parentScope, baseStore = parentStore } =\n    useContext(ScopeContext);\n  // if this ScopeProvider is the first descendant scope under Provider then it is the top level scope\n  // https://github.com/jotaijs/jotai-scope/pull/33#discussion_r1604268003\n  if (isTopLevelScope(parentStore)) {\n    parentScope = undefined;\n    baseStore = parentStore;\n  }\n\n  // atomSet is used to detect if the atoms prop has changed.\n  const atomSet = new Set(atoms);\n  const atomFamilySet = new Set(atomFamilies);\n\n  function initialize() {\n    const scope = createScope(atomSet, atomFamilySet, parentScope, debugName);\n    return {\n      patchedStore: createPatchedStore(baseStore, scope),\n      scopeContext: { scope, baseStore },\n      hasChanged(current: {\n        baseStore: Store;\n        parentScope: Scope | undefined;\n        atomSet: Set<AnyAtom>;\n        atomFamilySet: Set<AnyAtomFamily>;\n      }) {\n        return (\n          parentScope !== current.parentScope ||\n          baseStore !== current.baseStore ||\n          !isEqualSet(atomSet, current.atomSet) ||\n          !isEqualSet(atomFamilySet, current.atomFamilySet)\n        );\n      },\n    };\n  }\n\n  const [state, setState] = useState(initialize);\n  const { hasChanged, scopeContext, patchedStore } = state;\n  if (hasChanged({ parentScope, atomSet, atomFamilySet, baseStore })) {\n    scopeContext.scope?.cleanup();\n    setState(initialize);\n  }\n  const { cleanup } = scopeContext.scope;\n  useEvent(() => cleanup, []);\n  return (\n    <ScopeContext.Provider value={scopeContext}>\n      <Provider store={patchedStore}>{children}</Provider>\n    </ScopeContext.Provider>\n  );\n}\n\nfunction isEqualSet(a: Set<unknown>, b: Set<unknown>) {\n  return a === b || (a.size === b.size && Array.from(a).every((v) => b.has(v)));\n}\n\nfunction useEvent(fn: EffectCallback, deps: unknown[]) {\n  const ref = useRef(fn);\n  ref.current = fn;\n  useEffect(() => ref.current(), deps);\n}\n", "import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { useFocusGuards } from '@radix-ui/react-focus-guards';\nimport { FocusScope } from '@radix-ui/react-focus-scope';\nimport { useId } from '@radix-ui/react-id';\nimport * as PopperPrimitive from '@radix-ui/react-popper';\nimport { createPopperScope } from '@radix-ui/react-popper';\nimport { Portal as PortalPrimitive } from '@radix-ui/react-portal';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { Slot } from '@radix-ui/react-slot';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { hideOthers } from 'aria-hidden';\nimport { RemoveScroll } from 'react-remove-scroll';\n\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Popover\n * -----------------------------------------------------------------------------------------------*/\n\nconst POPOVER_NAME = 'Popover';\n\ntype ScopedProps<P> = P & { __scopePopover?: Scope };\nconst [createPopoverContext, createPopoverScope] = createContextScope(POPOVER_NAME, [\n  createPopperScope,\n]);\nconst usePopperScope = createPopperScope();\n\ntype PopoverContextValue = {\n  triggerRef: React.RefObject<HTMLButtonElement | null>;\n  contentId: string;\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  onOpenToggle(): void;\n  hasCustomAnchor: boolean;\n  onCustomAnchorAdd(): void;\n  onCustomAnchorRemove(): void;\n  modal: boolean;\n};\n\nconst [PopoverProvider, usePopoverContext] =\n  createPopoverContext<PopoverContextValue>(POPOVER_NAME);\n\ninterface PopoverProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?: (open: boolean) => void;\n  modal?: boolean;\n}\n\nconst Popover: React.FC<PopoverProps> = (props: ScopedProps<PopoverProps>) => {\n  const {\n    __scopePopover,\n    children,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    modal = false,\n  } = props;\n  const popperScope = usePopperScope(__scopePopover);\n  const triggerRef = React.useRef<HTMLButtonElement>(null);\n  const [hasCustomAnchor, setHasCustomAnchor] = React.useState(false);\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange,\n  });\n\n  return (\n    <PopperPrimitive.Root {...popperScope}>\n      <PopoverProvider\n        scope={__scopePopover}\n        contentId={useId()}\n        triggerRef={triggerRef}\n        open={open}\n        onOpenChange={setOpen}\n        onOpenToggle={React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen])}\n        hasCustomAnchor={hasCustomAnchor}\n        onCustomAnchorAdd={React.useCallback(() => setHasCustomAnchor(true), [])}\n        onCustomAnchorRemove={React.useCallback(() => setHasCustomAnchor(false), [])}\n        modal={modal}\n      >\n        {children}\n      </PopoverProvider>\n    </PopperPrimitive.Root>\n  );\n};\n\nPopover.displayName = POPOVER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverAnchor\n * -----------------------------------------------------------------------------------------------*/\n\nconst ANCHOR_NAME = 'PopoverAnchor';\n\ntype PopoverAnchorElement = React.ElementRef<typeof PopperPrimitive.Anchor>;\ntype PopperAnchorProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Anchor>;\ninterface PopoverAnchorProps extends PopperAnchorProps {}\n\nconst PopoverAnchor = React.forwardRef<PopoverAnchorElement, PopoverAnchorProps>(\n  (props: ScopedProps<PopoverAnchorProps>, forwardedRef) => {\n    const { __scopePopover, ...anchorProps } = props;\n    const context = usePopoverContext(ANCHOR_NAME, __scopePopover);\n    const popperScope = usePopperScope(__scopePopover);\n    const { onCustomAnchorAdd, onCustomAnchorRemove } = context;\n\n    React.useEffect(() => {\n      onCustomAnchorAdd();\n      return () => onCustomAnchorRemove();\n    }, [onCustomAnchorAdd, onCustomAnchorRemove]);\n\n    return <PopperPrimitive.Anchor {...popperScope} {...anchorProps} ref={forwardedRef} />;\n  }\n);\n\nPopoverAnchor.displayName = ANCHOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'PopoverTrigger';\n\ntype PopoverTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface PopoverTriggerProps extends PrimitiveButtonProps {}\n\nconst PopoverTrigger = React.forwardRef<PopoverTriggerElement, PopoverTriggerProps>(\n  (props: ScopedProps<PopoverTriggerProps>, forwardedRef) => {\n    const { __scopePopover, ...triggerProps } = props;\n    const context = usePopoverContext(TRIGGER_NAME, __scopePopover);\n    const popperScope = usePopperScope(__scopePopover);\n    const composedTriggerRef = useComposedRefs(forwardedRef, context.triggerRef);\n\n    const trigger = (\n      <Primitive.button\n        type=\"button\"\n        aria-haspopup=\"dialog\"\n        aria-expanded={context.open}\n        aria-controls={context.contentId}\n        data-state={getState(context.open)}\n        {...triggerProps}\n        ref={composedTriggerRef}\n        onClick={composeEventHandlers(props.onClick, context.onOpenToggle)}\n      />\n    );\n\n    return context.hasCustomAnchor ? (\n      trigger\n    ) : (\n      <PopperPrimitive.Anchor asChild {...popperScope}>\n        {trigger}\n      </PopperPrimitive.Anchor>\n    );\n  }\n);\n\nPopoverTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'PopoverPortal';\n\ntype PortalContextValue = { forceMount?: true };\nconst [PortalProvider, usePortalContext] = createPopoverContext<PortalContextValue>(PORTAL_NAME, {\n  forceMount: undefined,\n});\n\ntype PortalProps = React.ComponentPropsWithoutRef<typeof PortalPrimitive>;\ninterface PopoverPortalProps {\n  children?: React.ReactNode;\n  /**\n   * Specify a container element to portal the content into.\n   */\n  container?: PortalProps['container'];\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst PopoverPortal: React.FC<PopoverPortalProps> = (props: ScopedProps<PopoverPortalProps>) => {\n  const { __scopePopover, forceMount, children, container } = props;\n  const context = usePopoverContext(PORTAL_NAME, __scopePopover);\n  return (\n    <PortalProvider scope={__scopePopover} forceMount={forceMount}>\n      <Presence present={forceMount || context.open}>\n        <PortalPrimitive asChild container={container}>\n          {children}\n        </PortalPrimitive>\n      </Presence>\n    </PortalProvider>\n  );\n};\n\nPopoverPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'PopoverContent';\n\ninterface PopoverContentProps extends PopoverContentTypeProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst PopoverContent = React.forwardRef<PopoverContentTypeElement, PopoverContentProps>(\n  (props: ScopedProps<PopoverContentProps>, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopePopover);\n    const { forceMount = portalContext.forceMount, ...contentProps } = props;\n    const context = usePopoverContext(CONTENT_NAME, props.__scopePopover);\n    return (\n      <Presence present={forceMount || context.open}>\n        {context.modal ? (\n          <PopoverContentModal {...contentProps} ref={forwardedRef} />\n        ) : (\n          <PopoverContentNonModal {...contentProps} ref={forwardedRef} />\n        )}\n      </Presence>\n    );\n  }\n);\n\nPopoverContent.displayName = CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype PopoverContentTypeElement = PopoverContentImplElement;\ninterface PopoverContentTypeProps\n  extends Omit<PopoverContentImplProps, 'trapFocus' | 'disableOutsidePointerEvents'> {}\n\nconst PopoverContentModal = React.forwardRef<PopoverContentTypeElement, PopoverContentTypeProps>(\n  (props: ScopedProps<PopoverContentTypeProps>, forwardedRef) => {\n    const context = usePopoverContext(CONTENT_NAME, props.__scopePopover);\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, contentRef);\n    const isRightClickOutsideRef = React.useRef(false);\n\n    // aria-hide everything except the content (better supported equivalent to setting aria-modal)\n    React.useEffect(() => {\n      const content = contentRef.current;\n      if (content) return hideOthers(content);\n    }, []);\n\n    return (\n      <RemoveScroll as={Slot} allowPinchZoom>\n        <PopoverContentImpl\n          {...props}\n          ref={composedRefs}\n          // we make sure we're not trapping once it's been closed\n          // (closed !== unmounted when animating out)\n          trapFocus={context.open}\n          disableOutsidePointerEvents\n          onCloseAutoFocus={composeEventHandlers(props.onCloseAutoFocus, (event) => {\n            event.preventDefault();\n            if (!isRightClickOutsideRef.current) context.triggerRef.current?.focus();\n          })}\n          onPointerDownOutside={composeEventHandlers(\n            props.onPointerDownOutside,\n            (event) => {\n              const originalEvent = event.detail.originalEvent;\n              const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n              const isRightClick = originalEvent.button === 2 || ctrlLeftClick;\n\n              isRightClickOutsideRef.current = isRightClick;\n            },\n            { checkForDefaultPrevented: false }\n          )}\n          // When focus is trapped, a `focusout` event may still happen.\n          // We make sure we don't trigger our `onDismiss` in such case.\n          onFocusOutside={composeEventHandlers(\n            props.onFocusOutside,\n            (event) => event.preventDefault(),\n            { checkForDefaultPrevented: false }\n          )}\n        />\n      </RemoveScroll>\n    );\n  }\n);\n\nconst PopoverContentNonModal = React.forwardRef<PopoverContentTypeElement, PopoverContentTypeProps>(\n  (props: ScopedProps<PopoverContentTypeProps>, forwardedRef) => {\n    const context = usePopoverContext(CONTENT_NAME, props.__scopePopover);\n    const hasInteractedOutsideRef = React.useRef(false);\n    const hasPointerDownOutsideRef = React.useRef(false);\n\n    return (\n      <PopoverContentImpl\n        {...props}\n        ref={forwardedRef}\n        trapFocus={false}\n        disableOutsidePointerEvents={false}\n        onCloseAutoFocus={(event) => {\n          props.onCloseAutoFocus?.(event);\n\n          if (!event.defaultPrevented) {\n            if (!hasInteractedOutsideRef.current) context.triggerRef.current?.focus();\n            // Always prevent auto focus because we either focus manually or want user agent focus\n            event.preventDefault();\n          }\n\n          hasInteractedOutsideRef.current = false;\n          hasPointerDownOutsideRef.current = false;\n        }}\n        onInteractOutside={(event) => {\n          props.onInteractOutside?.(event);\n\n          if (!event.defaultPrevented) {\n            hasInteractedOutsideRef.current = true;\n            if (event.detail.originalEvent.type === 'pointerdown') {\n              hasPointerDownOutsideRef.current = true;\n            }\n          }\n\n          // Prevent dismissing when clicking the trigger.\n          // As the trigger is already setup to close, without doing so would\n          // cause it to close and immediately open.\n          const target = event.target as HTMLElement;\n          const targetIsTrigger = context.triggerRef.current?.contains(target);\n          if (targetIsTrigger) event.preventDefault();\n\n          // On Safari if the trigger is inside a container with tabIndex={0}, when clicked\n          // we will get the pointer down outside event on the trigger, but then a subsequent\n          // focus outside event on the container, we ignore any focus outside event when we've\n          // already had a pointer down outside event.\n          if (event.detail.originalEvent.type === 'focusin' && hasPointerDownOutsideRef.current) {\n            event.preventDefault();\n          }\n        }}\n      />\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype PopoverContentImplElement = React.ElementRef<typeof PopperPrimitive.Content>;\ntype FocusScopeProps = React.ComponentPropsWithoutRef<typeof FocusScope>;\ntype DismissableLayerProps = React.ComponentPropsWithoutRef<typeof DismissableLayer>;\ntype PopperContentProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Content>;\ninterface PopoverContentImplProps\n  extends Omit<PopperContentProps, 'onPlaced'>,\n    Omit<DismissableLayerProps, 'onDismiss'> {\n  /**\n   * Whether focus should be trapped within the `Popover`\n   * (default: false)\n   */\n  trapFocus?: FocusScopeProps['trapped'];\n\n  /**\n   * Event handler called when auto-focusing on open.\n   * Can be prevented.\n   */\n  onOpenAutoFocus?: FocusScopeProps['onMountAutoFocus'];\n\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  onCloseAutoFocus?: FocusScopeProps['onUnmountAutoFocus'];\n}\n\nconst PopoverContentImpl = React.forwardRef<PopoverContentImplElement, PopoverContentImplProps>(\n  (props: ScopedProps<PopoverContentImplProps>, forwardedRef) => {\n    const {\n      __scopePopover,\n      trapFocus,\n      onOpenAutoFocus,\n      onCloseAutoFocus,\n      disableOutsidePointerEvents,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      onFocusOutside,\n      onInteractOutside,\n      ...contentProps\n    } = props;\n    const context = usePopoverContext(CONTENT_NAME, __scopePopover);\n    const popperScope = usePopperScope(__scopePopover);\n\n    // Make sure the whole tree has focus guards as our `Popover` may be\n    // the last element in the DOM (because of the `Portal`)\n    useFocusGuards();\n\n    return (\n      <FocusScope\n        asChild\n        loop\n        trapped={trapFocus}\n        onMountAutoFocus={onOpenAutoFocus}\n        onUnmountAutoFocus={onCloseAutoFocus}\n      >\n        <DismissableLayer\n          asChild\n          disableOutsidePointerEvents={disableOutsidePointerEvents}\n          onInteractOutside={onInteractOutside}\n          onEscapeKeyDown={onEscapeKeyDown}\n          onPointerDownOutside={onPointerDownOutside}\n          onFocusOutside={onFocusOutside}\n          onDismiss={() => context.onOpenChange(false)}\n        >\n          <PopperPrimitive.Content\n            data-state={getState(context.open)}\n            role=\"dialog\"\n            id={context.contentId}\n            {...popperScope}\n            {...contentProps}\n            ref={forwardedRef}\n            style={{\n              ...contentProps.style,\n              // re-namespace exposed content custom properties\n              ...{\n                '--radix-popover-content-transform-origin': 'var(--radix-popper-transform-origin)',\n                '--radix-popover-content-available-width': 'var(--radix-popper-available-width)',\n                '--radix-popover-content-available-height': 'var(--radix-popper-available-height)',\n                '--radix-popover-trigger-width': 'var(--radix-popper-anchor-width)',\n                '--radix-popover-trigger-height': 'var(--radix-popper-anchor-height)',\n              },\n            }}\n          />\n        </DismissableLayer>\n      </FocusScope>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverClose\n * -----------------------------------------------------------------------------------------------*/\n\nconst CLOSE_NAME = 'PopoverClose';\n\ntype PopoverCloseElement = React.ElementRef<typeof Primitive.button>;\ninterface PopoverCloseProps extends PrimitiveButtonProps {}\n\nconst PopoverClose = React.forwardRef<PopoverCloseElement, PopoverCloseProps>(\n  (props: ScopedProps<PopoverCloseProps>, forwardedRef) => {\n    const { __scopePopover, ...closeProps } = props;\n    const context = usePopoverContext(CLOSE_NAME, __scopePopover);\n    return (\n      <Primitive.button\n        type=\"button\"\n        {...closeProps}\n        ref={forwardedRef}\n        onClick={composeEventHandlers(props.onClick, () => context.onOpenChange(false))}\n      />\n    );\n  }\n);\n\nPopoverClose.displayName = CLOSE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'PopoverArrow';\n\ntype PopoverArrowElement = React.ElementRef<typeof PopperPrimitive.Arrow>;\ntype PopperArrowProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Arrow>;\ninterface PopoverArrowProps extends PopperArrowProps {}\n\nconst PopoverArrow = React.forwardRef<PopoverArrowElement, PopoverArrowProps>(\n  (props: ScopedProps<PopoverArrowProps>, forwardedRef) => {\n    const { __scopePopover, ...arrowProps } = props;\n    const popperScope = usePopperScope(__scopePopover);\n    return <PopperPrimitive.Arrow {...popperScope} {...arrowProps} ref={forwardedRef} />;\n  }\n);\n\nPopoverArrow.displayName = ARROW_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getState(open: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nconst Root = Popover;\nconst Anchor = PopoverAnchor;\nconst Trigger = PopoverTrigger;\nconst Portal = PopoverPortal;\nconst Content = PopoverContent;\nconst Close = PopoverClose;\nconst Arrow = PopoverArrow;\n\nexport {\n  createPopoverScope,\n  //\n  Popover,\n  PopoverAnchor,\n  PopoverTrigger,\n  PopoverPortal,\n  PopoverContent,\n  PopoverClose,\n  PopoverArrow,\n  //\n  Root,\n  Anchor,\n  Trigger,\n  Portal,\n  Content,\n  Close,\n  Arrow,\n};\nexport type {\n  PopoverProps,\n  PopoverAnchorProps,\n  PopoverTriggerProps,\n  PopoverPortalProps,\n  PopoverContentProps,\n  PopoverCloseProps,\n  PopoverArrowProps,\n};\n", "function composeEventHandlers<E>(\n  originalEventHandler?: (event: E) => void,\n  ourEventHandler?: (event: E) => void,\n  { checkForDefaultPrevented = true } = {}\n) {\n  return function handleEvent(event: E) {\n    originalEventHandler?.(event);\n\n    if (checkForDefaultPrevented === false || !(event as unknown as Event).defaultPrevented) {\n      return ourEventHandler?.(event);\n    }\n  };\n}\n\nexport { composeEventHandlers };\n", "import * as React from 'react';\n\ntype PossibleRef<T> = React.Ref<T> | undefined;\n\n/**\n * Set a given ref to a given value\n * This utility takes care of different types of refs: callback refs and RefObject(s)\n */\nfunction setRef<T>(ref: PossibleRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    return ref(value);\n  } else if (ref !== null && ref !== undefined) {\n    ref.current = value;\n  }\n}\n\n/**\n * A utility to compose multiple refs together\n * Accepts callback refs and RefObject(s)\n */\nfunction composeRefs<T>(...refs: PossibleRef<T>[]): React.RefCallback<T> {\n  return (node) => {\n    let hasCleanup = false;\n    const cleanups = refs.map((ref) => {\n      const cleanup = setRef(ref, node);\n      if (!hasCleanup && typeof cleanup == 'function') {\n        hasCleanup = true;\n      }\n      return cleanup;\n    });\n\n    // React <19 will log an error to the console if a callback ref returns a\n    // value. We don't use ref cleanups internally so this will only happen if a\n    // user's ref callback returns a value, which we only expect if they are\n    // using the cleanup functionality added in React 19.\n    if (hasCleanup) {\n      return () => {\n        for (let i = 0; i < cleanups.length; i++) {\n          const cleanup = cleanups[i];\n          if (typeof cleanup == 'function') {\n            cleanup();\n          } else {\n            setRef(refs[i], null);\n          }\n        }\n      };\n    }\n  };\n}\n\n/**\n * A custom hook that composes multiple refs\n * Accepts callback refs and RefObject(s)\n */\nfunction useComposedRefs<T>(...refs: PossibleRef<T>[]): React.RefCallback<T> {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return React.useCallback(composeRefs(...refs), refs);\n}\n\nexport { composeRefs, useComposedRefs };\n", "import * as React from 'react';\n\nfunction createContext<ContextValueType extends object | null>(\n  rootComponentName: string,\n  defaultContext?: ContextValueType\n) {\n  const Context = React.createContext<ContextValueType | undefined>(defaultContext);\n\n  const Provider: React.FC<ContextValueType & { children: React.ReactNode }> = (props) => {\n    const { children, ...context } = props;\n    // Only re-memoize when prop values change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const value = React.useMemo(() => context, Object.values(context)) as ContextValueType;\n    return <Context.Provider value={value}>{children}</Context.Provider>;\n  };\n\n  Provider.displayName = rootComponentName + 'Provider';\n\n  function useContext(consumerName: string) {\n    const context = React.useContext(Context);\n    if (context) return context;\n    if (defaultContext !== undefined) return defaultContext;\n    // if a defaultContext wasn't specified, it's a required context.\n    throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n  }\n\n  return [Provider, useContext] as const;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * createContextScope\n * -----------------------------------------------------------------------------------------------*/\n\ntype Scope<C = any> = { [scopeName: string]: React.Context<C>[] } | undefined;\ntype ScopeHook = (scope: Scope) => { [__scopeProp: string]: Scope };\ninterface CreateScope {\n  scopeName: string;\n  (): ScopeHook;\n}\n\nfunction createContextScope(scopeName: string, createContextScopeDeps: CreateScope[] = []) {\n  let defaultContexts: any[] = [];\n\n  /* -----------------------------------------------------------------------------------------------\n   * createContext\n   * ---------------------------------------------------------------------------------------------*/\n\n  function createContext<ContextValueType extends object | null>(\n    rootComponentName: string,\n    defaultContext?: ContextValueType\n  ) {\n    const BaseContext = React.createContext<ContextValueType | undefined>(defaultContext);\n    const index = defaultContexts.length;\n    defaultContexts = [...defaultContexts, defaultContext];\n\n    const Provider: React.FC<\n      ContextValueType & { scope: Scope<ContextValueType>; children: React.ReactNode }\n    > = (props) => {\n      const { scope, children, ...context } = props;\n      const Context = scope?.[scopeName]?.[index] || BaseContext;\n      // Only re-memoize when prop values change\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      const value = React.useMemo(() => context, Object.values(context)) as ContextValueType;\n      return <Context.Provider value={value}>{children}</Context.Provider>;\n    };\n\n    Provider.displayName = rootComponentName + 'Provider';\n\n    function useContext(consumerName: string, scope: Scope<ContextValueType | undefined>) {\n      const Context = scope?.[scopeName]?.[index] || BaseContext;\n      const context = React.useContext(Context);\n      if (context) return context;\n      if (defaultContext !== undefined) return defaultContext;\n      // if a defaultContext wasn't specified, it's a required context.\n      throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n    }\n\n    return [Provider, useContext] as const;\n  }\n\n  /* -----------------------------------------------------------------------------------------------\n   * createScope\n   * ---------------------------------------------------------------------------------------------*/\n\n  const createScope: CreateScope = () => {\n    const scopeContexts = defaultContexts.map((defaultContext) => {\n      return React.createContext(defaultContext);\n    });\n    return function useScope(scope: Scope) {\n      const contexts = scope?.[scopeName] || scopeContexts;\n      return React.useMemo(\n        () => ({ [`__scope${scopeName}`]: { ...scope, [scopeName]: contexts } }),\n        [scope, contexts]\n      );\n    };\n  };\n\n  createScope.scopeName = scopeName;\n  return [createContext, composeContextScopes(createScope, ...createContextScopeDeps)] as const;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * composeContextScopes\n * -----------------------------------------------------------------------------------------------*/\n\nfunction composeContextScopes(...scopes: CreateScope[]) {\n  const baseScope = scopes[0];\n  if (scopes.length === 1) return baseScope;\n\n  const createScope: CreateScope = () => {\n    const scopeHooks = scopes.map((createScope) => ({\n      useScope: createScope(),\n      scopeName: createScope.scopeName,\n    }));\n\n    return function useComposedScopes(overrideScopes) {\n      const nextScopes = scopeHooks.reduce((nextScopes, { useScope, scopeName }) => {\n        // We are calling a hook inside a callback which React warns against to avoid inconsistent\n        // renders, however, scoping doesn't have render side effects so we ignore the rule.\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const scopeProps = useScope(overrideScopes);\n        const currentScope = scopeProps[`__scope${scopeName}`];\n        return { ...nextScopes, ...currentScope };\n      }, {});\n\n      return React.useMemo(() => ({ [`__scope${baseScope.scopeName}`]: nextScopes }), [nextScopes]);\n    };\n  };\n\n  createScope.scopeName = baseScope.scopeName;\n  return createScope;\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nexport { createContext, createContextScope };\nexport type { CreateScope, Scope };\n", "import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { Primitive, dispatchDiscreteCustomEvent } from '@radix-ui/react-primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useEscapeKeydown } from '@radix-ui/react-use-escape-keydown';\n\n/* -------------------------------------------------------------------------------------------------\n * DismissableLayer\n * -----------------------------------------------------------------------------------------------*/\n\nconst DISMISSABLE_LAYER_NAME = 'DismissableLayer';\nconst CONTEXT_UPDATE = 'dismissableLayer.update';\nconst POINTER_DOWN_OUTSIDE = 'dismissableLayer.pointerDownOutside';\nconst FOCUS_OUTSIDE = 'dismissableLayer.focusOutside';\n\nlet originalBodyPointerEvents: string;\n\nconst DismissableLayerContext = React.createContext({\n  layers: new Set<DismissableLayerElement>(),\n  layersWithOutsidePointerEventsDisabled: new Set<DismissableLayerElement>(),\n  branches: new Set<DismissableLayerBranchElement>(),\n});\n\ntype DismissableLayerElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface DismissableLayerProps extends PrimitiveDivProps {\n  /**\n   * When `true`, hover/focus/click interactions will be disabled on elements outside\n   * the `DismissableLayer`. Users will need to click twice on outside elements to\n   * interact with them: once to close the `DismissableLayer`, and again to trigger the element.\n   */\n  disableOutsidePointerEvents?: boolean;\n  /**\n   * Event handler called when the escape key is down.\n   * Can be prevented.\n   */\n  onEscapeKeyDown?: (event: KeyboardEvent) => void;\n  /**\n   * Event handler called when the a `pointerdown` event happens outside of the `DismissableLayer`.\n   * Can be prevented.\n   */\n  onPointerDownOutside?: (event: PointerDownOutsideEvent) => void;\n  /**\n   * Event handler called when the focus moves outside of the `DismissableLayer`.\n   * Can be prevented.\n   */\n  onFocusOutside?: (event: FocusOutsideEvent) => void;\n  /**\n   * Event handler called when an interaction happens outside the `DismissableLayer`.\n   * Specifically, when a `pointerdown` event happens outside or focus moves outside of it.\n   * Can be prevented.\n   */\n  onInteractOutside?: (event: PointerDownOutsideEvent | FocusOutsideEvent) => void;\n  /**\n   * Handler called when the `DismissableLayer` should be dismissed\n   */\n  onDismiss?: () => void;\n}\n\nconst DismissableLayer = React.forwardRef<DismissableLayerElement, DismissableLayerProps>(\n  (props, forwardedRef) => {\n    const {\n      disableOutsidePointerEvents = false,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      onFocusOutside,\n      onInteractOutside,\n      onDismiss,\n      ...layerProps\n    } = props;\n    const context = React.useContext(DismissableLayerContext);\n    const [node, setNode] = React.useState<DismissableLayerElement | null>(null);\n    const ownerDocument = node?.ownerDocument ?? globalThis?.document;\n    const [, force] = React.useState({});\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setNode(node));\n    const layers = Array.from(context.layers);\n    const [highestLayerWithOutsidePointerEventsDisabled] = [...context.layersWithOutsidePointerEventsDisabled].slice(-1); // prettier-ignore\n    const highestLayerWithOutsidePointerEventsDisabledIndex = layers.indexOf(highestLayerWithOutsidePointerEventsDisabled); // prettier-ignore\n    const index = node ? layers.indexOf(node) : -1;\n    const isBodyPointerEventsDisabled = context.layersWithOutsidePointerEventsDisabled.size > 0;\n    const isPointerEventsEnabled = index >= highestLayerWithOutsidePointerEventsDisabledIndex;\n\n    const pointerDownOutside = usePointerDownOutside((event) => {\n      const target = event.target as HTMLElement;\n      const isPointerDownOnBranch = [...context.branches].some((branch) => branch.contains(target));\n      if (!isPointerEventsEnabled || isPointerDownOnBranch) return;\n      onPointerDownOutside?.(event);\n      onInteractOutside?.(event);\n      if (!event.defaultPrevented) onDismiss?.();\n    }, ownerDocument);\n\n    const focusOutside = useFocusOutside((event) => {\n      const target = event.target as HTMLElement;\n      const isFocusInBranch = [...context.branches].some((branch) => branch.contains(target));\n      if (isFocusInBranch) return;\n      onFocusOutside?.(event);\n      onInteractOutside?.(event);\n      if (!event.defaultPrevented) onDismiss?.();\n    }, ownerDocument);\n\n    useEscapeKeydown((event) => {\n      const isHighestLayer = index === context.layers.size - 1;\n      if (!isHighestLayer) return;\n      onEscapeKeyDown?.(event);\n      if (!event.defaultPrevented && onDismiss) {\n        event.preventDefault();\n        onDismiss();\n      }\n    }, ownerDocument);\n\n    React.useEffect(() => {\n      if (!node) return;\n      if (disableOutsidePointerEvents) {\n        if (context.layersWithOutsidePointerEventsDisabled.size === 0) {\n          originalBodyPointerEvents = ownerDocument.body.style.pointerEvents;\n          ownerDocument.body.style.pointerEvents = 'none';\n        }\n        context.layersWithOutsidePointerEventsDisabled.add(node);\n      }\n      context.layers.add(node);\n      dispatchUpdate();\n      return () => {\n        if (\n          disableOutsidePointerEvents &&\n          context.layersWithOutsidePointerEventsDisabled.size === 1\n        ) {\n          ownerDocument.body.style.pointerEvents = originalBodyPointerEvents;\n        }\n      };\n    }, [node, ownerDocument, disableOutsidePointerEvents, context]);\n\n    /**\n     * We purposefully prevent combining this effect with the `disableOutsidePointerEvents` effect\n     * because a change to `disableOutsidePointerEvents` would remove this layer from the stack\n     * and add it to the end again so the layering order wouldn't be _creation order_.\n     * We only want them to be removed from context stacks when unmounted.\n     */\n    React.useEffect(() => {\n      return () => {\n        if (!node) return;\n        context.layers.delete(node);\n        context.layersWithOutsidePointerEventsDisabled.delete(node);\n        dispatchUpdate();\n      };\n    }, [node, context]);\n\n    React.useEffect(() => {\n      const handleUpdate = () => force({});\n      document.addEventListener(CONTEXT_UPDATE, handleUpdate);\n      return () => document.removeEventListener(CONTEXT_UPDATE, handleUpdate);\n    }, []);\n\n    return (\n      <Primitive.div\n        {...layerProps}\n        ref={composedRefs}\n        style={{\n          pointerEvents: isBodyPointerEventsDisabled\n            ? isPointerEventsEnabled\n              ? 'auto'\n              : 'none'\n            : undefined,\n          ...props.style,\n        }}\n        onFocusCapture={composeEventHandlers(props.onFocusCapture, focusOutside.onFocusCapture)}\n        onBlurCapture={composeEventHandlers(props.onBlurCapture, focusOutside.onBlurCapture)}\n        onPointerDownCapture={composeEventHandlers(\n          props.onPointerDownCapture,\n          pointerDownOutside.onPointerDownCapture\n        )}\n      />\n    );\n  }\n);\n\nDismissableLayer.displayName = DISMISSABLE_LAYER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DismissableLayerBranch\n * -----------------------------------------------------------------------------------------------*/\n\nconst BRANCH_NAME = 'DismissableLayerBranch';\n\ntype DismissableLayerBranchElement = React.ElementRef<typeof Primitive.div>;\ninterface DismissableLayerBranchProps extends PrimitiveDivProps {}\n\nconst DismissableLayerBranch = React.forwardRef<\n  DismissableLayerBranchElement,\n  DismissableLayerBranchProps\n>((props, forwardedRef) => {\n  const context = React.useContext(DismissableLayerContext);\n  const ref = React.useRef<DismissableLayerBranchElement>(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n\n  React.useEffect(() => {\n    const node = ref.current;\n    if (node) {\n      context.branches.add(node);\n      return () => {\n        context.branches.delete(node);\n      };\n    }\n  }, [context.branches]);\n\n  return <Primitive.div {...props} ref={composedRefs} />;\n});\n\nDismissableLayerBranch.displayName = BRANCH_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype PointerDownOutsideEvent = CustomEvent<{ originalEvent: PointerEvent }>;\ntype FocusOutsideEvent = CustomEvent<{ originalEvent: FocusEvent }>;\n\n/**\n * Listens for `pointerdown` outside a react subtree. We use `pointerdown` rather than `pointerup`\n * to mimic layer dismissing behaviour present in OS.\n * Returns props to pass to the node we want to check for outside events.\n */\nfunction usePointerDownOutside(\n  onPointerDownOutside?: (event: PointerDownOutsideEvent) => void,\n  ownerDocument: Document = globalThis?.document\n) {\n  const handlePointerDownOutside = useCallbackRef(onPointerDownOutside) as EventListener;\n  const isPointerInsideReactTreeRef = React.useRef(false);\n  const handleClickRef = React.useRef(() => {});\n\n  React.useEffect(() => {\n    const handlePointerDown = (event: PointerEvent) => {\n      if (event.target && !isPointerInsideReactTreeRef.current) {\n        const eventDetail = { originalEvent: event };\n\n        function handleAndDispatchPointerDownOutsideEvent() {\n          handleAndDispatchCustomEvent(\n            POINTER_DOWN_OUTSIDE,\n            handlePointerDownOutside,\n            eventDetail,\n            { discrete: true }\n          );\n        }\n\n        /**\n         * On touch devices, we need to wait for a click event because browsers implement\n         * a ~350ms delay between the time the user stops touching the display and when the\n         * browser executres events. We need to ensure we don't reactivate pointer-events within\n         * this timeframe otherwise the browser may execute events that should have been prevented.\n         *\n         * Additionally, this also lets us deal automatically with cancellations when a click event\n         * isn't raised because the page was considered scrolled/drag-scrolled, long-pressed, etc.\n         *\n         * This is why we also continuously remove the previous listener, because we cannot be\n         * certain that it was raised, and therefore cleaned-up.\n         */\n        if (event.pointerType === 'touch') {\n          ownerDocument.removeEventListener('click', handleClickRef.current);\n          handleClickRef.current = handleAndDispatchPointerDownOutsideEvent;\n          ownerDocument.addEventListener('click', handleClickRef.current, { once: true });\n        } else {\n          handleAndDispatchPointerDownOutsideEvent();\n        }\n      } else {\n        // We need to remove the event listener in case the outside click has been canceled.\n        // See: https://github.com/radix-ui/primitives/issues/2171\n        ownerDocument.removeEventListener('click', handleClickRef.current);\n      }\n      isPointerInsideReactTreeRef.current = false;\n    };\n    /**\n     * if this hook executes in a component that mounts via a `pointerdown` event, the event\n     * would bubble up to the document and trigger a `pointerDownOutside` event. We avoid\n     * this by delaying the event listener registration on the document.\n     * This is not React specific, but rather how the DOM works, ie:\n     * ```\n     * button.addEventListener('pointerdown', () => {\n     *   console.log('I will log');\n     *   document.addEventListener('pointerdown', () => {\n     *     console.log('I will also log');\n     *   })\n     * });\n     */\n    const timerId = window.setTimeout(() => {\n      ownerDocument.addEventListener('pointerdown', handlePointerDown);\n    }, 0);\n    return () => {\n      window.clearTimeout(timerId);\n      ownerDocument.removeEventListener('pointerdown', handlePointerDown);\n      ownerDocument.removeEventListener('click', handleClickRef.current);\n    };\n  }, [ownerDocument, handlePointerDownOutside]);\n\n  return {\n    // ensures we check React component tree (not just DOM tree)\n    onPointerDownCapture: () => (isPointerInsideReactTreeRef.current = true),\n  };\n}\n\n/**\n * Listens for when focus happens outside a react subtree.\n * Returns props to pass to the root (node) of the subtree we want to check.\n */\nfunction useFocusOutside(\n  onFocusOutside?: (event: FocusOutsideEvent) => void,\n  ownerDocument: Document = globalThis?.document\n) {\n  const handleFocusOutside = useCallbackRef(onFocusOutside) as EventListener;\n  const isFocusInsideReactTreeRef = React.useRef(false);\n\n  React.useEffect(() => {\n    const handleFocus = (event: FocusEvent) => {\n      if (event.target && !isFocusInsideReactTreeRef.current) {\n        const eventDetail = { originalEvent: event };\n        handleAndDispatchCustomEvent(FOCUS_OUTSIDE, handleFocusOutside, eventDetail, {\n          discrete: false,\n        });\n      }\n    };\n    ownerDocument.addEventListener('focusin', handleFocus);\n    return () => ownerDocument.removeEventListener('focusin', handleFocus);\n  }, [ownerDocument, handleFocusOutside]);\n\n  return {\n    onFocusCapture: () => (isFocusInsideReactTreeRef.current = true),\n    onBlurCapture: () => (isFocusInsideReactTreeRef.current = false),\n  };\n}\n\nfunction dispatchUpdate() {\n  const event = new CustomEvent(CONTEXT_UPDATE);\n  document.dispatchEvent(event);\n}\n\nfunction handleAndDispatchCustomEvent<E extends CustomEvent, OriginalEvent extends Event>(\n  name: string,\n  handler: ((event: E) => void) | undefined,\n  detail: { originalEvent: OriginalEvent } & (E extends CustomEvent<infer D> ? D : never),\n  { discrete }: { discrete: boolean }\n) {\n  const target = detail.originalEvent.target;\n  const event = new CustomEvent(name, { bubbles: false, cancelable: true, detail });\n  if (handler) target.addEventListener(name, handler as EventListener, { once: true });\n\n  if (discrete) {\n    dispatchDiscreteCustomEvent(target, event);\n  } else {\n    target.dispatchEvent(event);\n  }\n}\n\nconst Root = DismissableLayer;\nconst Branch = DismissableLayerBranch;\n\nexport {\n  DismissableLayer,\n  DismissableLayerBranch,\n  //\n  Root,\n  Branch,\n};\nexport type { DismissableLayerProps };\n", "import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Slot } from '@radix-ui/react-slot';\n\nconst NODES = [\n  'a',\n  'button',\n  'div',\n  'form',\n  'h2',\n  'h3',\n  'img',\n  'input',\n  'label',\n  'li',\n  'nav',\n  'ol',\n  'p',\n  'span',\n  'svg',\n  'ul',\n] as const;\n\ntype Primitives = { [E in (typeof NODES)[number]]: PrimitiveForwardRefComponent<E> };\ntype PrimitivePropsWithRef<E extends React.ElementType> = React.ComponentPropsWithRef<E> & {\n  asChild?: boolean;\n};\n\ninterface PrimitiveForwardRefComponent<E extends React.ElementType>\n  extends React.ForwardRefExoticComponent<PrimitivePropsWithRef<E>> {}\n\n/* -------------------------------------------------------------------------------------------------\n * Primitive\n * -----------------------------------------------------------------------------------------------*/\n\nconst Primitive = NODES.reduce((primitive, node) => {\n  const Node = React.forwardRef((props: PrimitivePropsWithRef<typeof node>, forwardedRef: any) => {\n    const { asChild, ...primitiveProps } = props;\n    const Comp: any = asChild ? Slot : node;\n\n    if (typeof window !== 'undefined') {\n      (window as any)[Symbol.for('radix-ui')] = true;\n    }\n\n    return <Comp {...primitiveProps} ref={forwardedRef} />;\n  });\n\n  Node.displayName = `Primitive.${node}`;\n\n  return { ...primitive, [node]: Node };\n}, {} as Primitives);\n\n/* -------------------------------------------------------------------------------------------------\n * Utils\n * -----------------------------------------------------------------------------------------------*/\n\n/**\n * Flush custom event dispatch\n * https://github.com/radix-ui/primitives/pull/1378\n *\n * React batches *all* event handlers since version 18, this introduces certain considerations when using custom event types.\n *\n * Internally, React prioritises events in the following order:\n *  - discrete\n *  - continuous\n *  - default\n *\n * https://github.com/facebook/react/blob/a8a4742f1c54493df00da648a3f9d26e3db9c8b5/packages/react-dom/src/events/ReactDOMEventListener.js#L294-L350\n *\n * `discrete` is an  important distinction as updates within these events are applied immediately.\n * React however, is not able to infer the priority of custom event types due to how they are detected internally.\n * Because of this, it's possible for updates from custom events to be unexpectedly batched when\n * dispatched by another `discrete` event.\n *\n * In order to ensure that updates from custom events are applied predictably, we need to manually flush the batch.\n * This utility should be used when dispatching a custom event from within another `discrete` event, this utility\n * is not necessary when dispatching known event types, or if dispatching a custom type inside a non-discrete event.\n * For example:\n *\n * dispatching a known click \uD83D\uDC4E\n * target.dispatchEvent(new Event(\u2018click\u2019))\n *\n * dispatching a custom type within a non-discrete event \uD83D\uDC4E\n * onScroll={(event) => event.target.dispatchEvent(new CustomEvent(\u2018customType\u2019))}\n *\n * dispatching a custom type within a `discrete` event \uD83D\uDC4D\n * onPointerDown={(event) => dispatchDiscreteCustomEvent(event.target, new CustomEvent(\u2018customType\u2019))}\n *\n * Note: though React classifies `focus`, `focusin` and `focusout` events as `discrete`, it's  not recommended to use\n * this utility with them. This is because it's possible for those handlers to be called implicitly during render\n * e.g. when focus is within a component as it is unmounted, or when managing focus on mount.\n */\n\nfunction dispatchDiscreteCustomEvent<E extends CustomEvent>(target: E['target'], event: E) {\n  if (target) ReactDOM.flushSync(() => target.dispatchEvent(event));\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Primitive;\n\nexport {\n  Primitive,\n  //\n  Root,\n  //\n  dispatchDiscreteCustomEvent,\n};\nexport type { PrimitivePropsWithRef };\n", "import * as React from 'react';\nimport { composeRefs } from '@radix-ui/react-compose-refs';\n\n/* -------------------------------------------------------------------------------------------------\n * Slot\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotProps extends React.HTMLAttributes<HTMLElement> {\n  children?: React.ReactNode;\n}\n\nconst Slot = React.forwardRef<HTMLElement, SlotProps>((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n  const childrenArray = React.Children.toArray(children);\n  const slottable = childrenArray.find(isSlottable);\n\n  if (slottable) {\n    // the new element to render is the one passed as a child of `Slottable`\n    const newElement = slottable.props.children;\n\n    const newChildren = childrenArray.map((child) => {\n      if (child === slottable) {\n        // because the new element will be the one rendered, we are only interested\n        // in grabbing its children (`newElement.props.children`)\n        if (React.Children.count(newElement) > 1) return React.Children.only(null);\n        return React.isValidElement(newElement)\n          ? (newElement.props as { children: React.ReactNode }).children\n          : null;\n      } else {\n        return child;\n      }\n    });\n\n    return (\n      <SlotClone {...slotProps} ref={forwardedRef}>\n        {React.isValidElement(newElement)\n          ? React.cloneElement(newElement, undefined, newChildren)\n          : null}\n      </SlotClone>\n    );\n  }\n\n  return (\n    <SlotClone {...slotProps} ref={forwardedRef}>\n      {children}\n    </SlotClone>\n  );\n});\n\nSlot.displayName = 'Slot';\n\n/* -------------------------------------------------------------------------------------------------\n * SlotClone\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotCloneProps {\n  children: React.ReactNode;\n}\n\nconst SlotClone = React.forwardRef<any, SlotCloneProps>((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n\n  if (React.isValidElement(children)) {\n    const childrenRef = getElementRef(children);\n    const props = mergeProps(slotProps, children.props as AnyProps);\n    // do not pass ref to React.Fragment for React 19 compatibility\n    if (children.type !== React.Fragment) {\n      props.ref = forwardedRef ? composeRefs(forwardedRef, childrenRef) : childrenRef;\n    }\n    return React.cloneElement(children, props);\n  }\n\n  return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n});\n\nSlotClone.displayName = 'SlotClone';\n\n/* -------------------------------------------------------------------------------------------------\n * Slottable\n * -----------------------------------------------------------------------------------------------*/\n\nconst Slottable = ({ children }: { children: React.ReactNode }) => {\n  return <>{children}</>;\n};\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype AnyProps = Record<string, any>;\n\nfunction isSlottable(\n  child: React.ReactNode\n): child is React.ReactElement<React.ComponentProps<typeof Slottable>, typeof Slottable> {\n  return React.isValidElement(child) && child.type === Slottable;\n}\n\nfunction mergeProps(slotProps: AnyProps, childProps: AnyProps) {\n  // all child props should override\n  const overrideProps = { ...childProps };\n\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n\n    const isHandler = /^on[A-Z]/.test(propName);\n    if (isHandler) {\n      // if the handler exists on both, we compose them\n      if (slotPropValue && childPropValue) {\n        overrideProps[propName] = (...args: unknown[]) => {\n          childPropValue(...args);\n          slotPropValue(...args);\n        };\n      }\n      // but if it exists only on the slot, we use only this one\n      else if (slotPropValue) {\n        overrideProps[propName] = slotPropValue;\n      }\n    }\n    // if it's `style`, we merge them\n    else if (propName === 'style') {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === 'className') {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(' ');\n    }\n  }\n\n  return { ...slotProps, ...overrideProps };\n}\n\n// Before React 19 accessing `element.props.ref` will throw a warning and suggest using `element.ref`\n// After React 19 accessing `element.ref` does the opposite.\n// https://github.com/facebook/react/pull/28348\n//\n// Access the ref using the method that doesn't yield a warning.\nfunction getElementRef(element: React.ReactElement) {\n  // React <=18 in DEV\n  let getter = Object.getOwnPropertyDescriptor(element.props, 'ref')?.get;\n  let mayWarn = getter && 'isReactWarning' in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return (element as any).ref;\n  }\n\n  // React 19 in DEV\n  getter = Object.getOwnPropertyDescriptor(element, 'ref')?.get;\n  mayWarn = getter && 'isReactWarning' in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return (element.props as { ref?: React.Ref<unknown> }).ref;\n  }\n\n  // Not DEV\n  return (element.props as { ref?: React.Ref<unknown> }).ref || (element as any).ref;\n}\n\nconst Root = Slot;\n\nexport {\n  Slot,\n  Slottable,\n  //\n  Root,\n};\nexport type { SlotProps };\n", "import * as React from 'react';\n\n/**\n * A custom hook that converts a callback to a ref to avoid triggering re-renders when passed as a\n * prop or avoid re-executing effects when passed as a dependency\n */\nfunction useCallbackRef<T extends (...args: any[]) => any>(callback: T | undefined): T {\n  const callbackRef = React.useRef(callback);\n\n  React.useEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  // https://github.com/facebook/react/issues/19240\n  return React.useMemo(() => ((...args) => callbackRef.current?.(...args)) as T, []);\n}\n\nexport { useCallbackRef };\n", "import * as React from 'react';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\n\n/**\n * Listens for when the escape key is down\n */\nfunction useEscapeKeydown(\n  onEscapeKeyDownProp?: (event: KeyboardEvent) => void,\n  ownerDocument: Document = globalThis?.document\n) {\n  const onEscapeKeyDown = useCallbackRef(onEscapeKeyDownProp);\n\n  React.useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        onEscapeKeyDown(event);\n      }\n    };\n    ownerDocument.addEventListener('keydown', handleKeyDown, { capture: true });\n    return () => ownerDocument.removeEventListener('keydown', handleKeyDown, { capture: true });\n  }, [onEscapeKeyDown, ownerDocument]);\n}\n\nexport { useEscapeKeydown };\n", "import * as React from 'react';\n\n/** Number of components which have requested interest to have focus guards */\nlet count = 0;\n\nfunction FocusGuards(props: any) {\n  useFocusGuards();\n  return props.children;\n}\n\n/**\n * Injects a pair of focus guards at the edges of the whole DOM tree\n * to ensure `focusin` & `focusout` events can be caught consistently.\n */\nfunction useFocusGuards() {\n  React.useEffect(() => {\n    const edgeGuards = document.querySelectorAll('[data-radix-focus-guard]');\n    document.body.insertAdjacentElement('afterbegin', edgeGuards[0] ?? createFocusGuard());\n    document.body.insertAdjacentElement('beforeend', edgeGuards[1] ?? createFocusGuard());\n    count++;\n\n    return () => {\n      if (count === 1) {\n        document.querySelectorAll('[data-radix-focus-guard]').forEach((node) => node.remove());\n      }\n      count--;\n    };\n  }, []);\n}\n\nfunction createFocusGuard() {\n  const element = document.createElement('span');\n  element.setAttribute('data-radix-focus-guard', '');\n  element.tabIndex = 0;\n  element.style.outline = 'none';\n  element.style.opacity = '0';\n  element.style.position = 'fixed';\n  element.style.pointerEvents = 'none';\n  return element;\n}\n\nconst Root = FocusGuards;\n\nexport {\n  FocusGuards,\n  //\n  Root,\n  //\n  useFocusGuards,\n};\n", "import * as React from 'react';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\n\nconst AUTOFOCUS_ON_MOUNT = 'focusScope.autoFocusOnMount';\nconst AUTOFOCUS_ON_UNMOUNT = 'focusScope.autoFocusOnUnmount';\nconst EVENT_OPTIONS = { bubbles: false, cancelable: true };\n\ntype FocusableTarget = HTMLElement | { focus(): void };\n\n/* -------------------------------------------------------------------------------------------------\n * FocusScope\n * -----------------------------------------------------------------------------------------------*/\n\nconst FOCUS_SCOPE_NAME = 'FocusScope';\n\ntype FocusScopeElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface FocusScopeProps extends PrimitiveDivProps {\n  /**\n   * When `true`, tabbing from last item will focus first tabbable\n   * and shift+tab from first item will focus last tababble.\n   * @defaultValue false\n   */\n  loop?: boolean;\n\n  /**\n   * When `true`, focus cannot escape the focus scope via keyboard,\n   * pointer, or a programmatic focus.\n   * @defaultValue false\n   */\n  trapped?: boolean;\n\n  /**\n   * Event handler called when auto-focusing on mount.\n   * Can be prevented.\n   */\n  onMountAutoFocus?: (event: Event) => void;\n\n  /**\n   * Event handler called when auto-focusing on unmount.\n   * Can be prevented.\n   */\n  onUnmountAutoFocus?: (event: Event) => void;\n}\n\nconst FocusScope = React.forwardRef<FocusScopeElement, FocusScopeProps>((props, forwardedRef) => {\n  const {\n    loop = false,\n    trapped = false,\n    onMountAutoFocus: onMountAutoFocusProp,\n    onUnmountAutoFocus: onUnmountAutoFocusProp,\n    ...scopeProps\n  } = props;\n  const [container, setContainer] = React.useState<HTMLElement | null>(null);\n  const onMountAutoFocus = useCallbackRef(onMountAutoFocusProp);\n  const onUnmountAutoFocus = useCallbackRef(onUnmountAutoFocusProp);\n  const lastFocusedElementRef = React.useRef<HTMLElement | null>(null);\n  const composedRefs = useComposedRefs(forwardedRef, (node) => setContainer(node));\n\n  const focusScope = React.useRef({\n    paused: false,\n    pause() {\n      this.paused = true;\n    },\n    resume() {\n      this.paused = false;\n    },\n  }).current;\n\n  // Takes care of trapping focus if focus is moved outside programmatically for example\n  React.useEffect(() => {\n    if (trapped) {\n      function handleFocusIn(event: FocusEvent) {\n        if (focusScope.paused || !container) return;\n        const target = event.target as HTMLElement | null;\n        if (container.contains(target)) {\n          lastFocusedElementRef.current = target;\n        } else {\n          focus(lastFocusedElementRef.current, { select: true });\n        }\n      }\n\n      function handleFocusOut(event: FocusEvent) {\n        if (focusScope.paused || !container) return;\n        const relatedTarget = event.relatedTarget as HTMLElement | null;\n\n        // A `focusout` event with a `null` `relatedTarget` will happen in at least two cases:\n        //\n        // 1. When the user switches app/tabs/windows/the browser itself loses focus.\n        // 2. In Google Chrome, when the focused element is removed from the DOM.\n        //\n        // We let the browser do its thing here because:\n        //\n        // 1. The browser already keeps a memory of what's focused for when the page gets refocused.\n        // 2. In Google Chrome, if we try to focus the deleted focused element (as per below), it\n        //    throws the CPU to 100%, so we avoid doing anything for this reason here too.\n        if (relatedTarget === null) return;\n\n        // If the focus has moved to an actual legitimate element (`relatedTarget !== null`)\n        // that is outside the container, we move focus to the last valid focused element inside.\n        if (!container.contains(relatedTarget)) {\n          focus(lastFocusedElementRef.current, { select: true });\n        }\n      }\n\n      // When the focused element gets removed from the DOM, browsers move focus\n      // back to the document.body. In this case, we move focus to the container\n      // to keep focus trapped correctly.\n      function handleMutations(mutations: MutationRecord[]) {\n        const focusedElement = document.activeElement as HTMLElement | null;\n        if (focusedElement !== document.body) return;\n        for (const mutation of mutations) {\n          if (mutation.removedNodes.length > 0) focus(container);\n        }\n      }\n\n      document.addEventListener('focusin', handleFocusIn);\n      document.addEventListener('focusout', handleFocusOut);\n      const mutationObserver = new MutationObserver(handleMutations);\n      if (container) mutationObserver.observe(container, { childList: true, subtree: true });\n\n      return () => {\n        document.removeEventListener('focusin', handleFocusIn);\n        document.removeEventListener('focusout', handleFocusOut);\n        mutationObserver.disconnect();\n      };\n    }\n  }, [trapped, container, focusScope.paused]);\n\n  React.useEffect(() => {\n    if (container) {\n      focusScopesStack.add(focusScope);\n      const previouslyFocusedElement = document.activeElement as HTMLElement | null;\n      const hasFocusedCandidate = container.contains(previouslyFocusedElement);\n\n      if (!hasFocusedCandidate) {\n        const mountEvent = new CustomEvent(AUTOFOCUS_ON_MOUNT, EVENT_OPTIONS);\n        container.addEventListener(AUTOFOCUS_ON_MOUNT, onMountAutoFocus);\n        container.dispatchEvent(mountEvent);\n        if (!mountEvent.defaultPrevented) {\n          focusFirst(removeLinks(getTabbableCandidates(container)), { select: true });\n          if (document.activeElement === previouslyFocusedElement) {\n            focus(container);\n          }\n        }\n      }\n\n      return () => {\n        container.removeEventListener(AUTOFOCUS_ON_MOUNT, onMountAutoFocus);\n\n        // We hit a react bug (fixed in v17) with focusing in unmount.\n        // We need to delay the focus a little to get around it for now.\n        // See: https://github.com/facebook/react/issues/17894\n        setTimeout(() => {\n          const unmountEvent = new CustomEvent(AUTOFOCUS_ON_UNMOUNT, EVENT_OPTIONS);\n          container.addEventListener(AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);\n          container.dispatchEvent(unmountEvent);\n          if (!unmountEvent.defaultPrevented) {\n            focus(previouslyFocusedElement ?? document.body, { select: true });\n          }\n          // we need to remove the listener after we `dispatchEvent`\n          container.removeEventListener(AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);\n\n          focusScopesStack.remove(focusScope);\n        }, 0);\n      };\n    }\n  }, [container, onMountAutoFocus, onUnmountAutoFocus, focusScope]);\n\n  // Takes care of looping focus (when tabbing whilst at the edges)\n  const handleKeyDown = React.useCallback(\n    (event: React.KeyboardEvent) => {\n      if (!loop && !trapped) return;\n      if (focusScope.paused) return;\n\n      const isTabKey = event.key === 'Tab' && !event.altKey && !event.ctrlKey && !event.metaKey;\n      const focusedElement = document.activeElement as HTMLElement | null;\n\n      if (isTabKey && focusedElement) {\n        const container = event.currentTarget as HTMLElement;\n        const [first, last] = getTabbableEdges(container);\n        const hasTabbableElementsInside = first && last;\n\n        // we can only wrap focus if we have tabbable edges\n        if (!hasTabbableElementsInside) {\n          if (focusedElement === container) event.preventDefault();\n        } else {\n          if (!event.shiftKey && focusedElement === last) {\n            event.preventDefault();\n            if (loop) focus(first, { select: true });\n          } else if (event.shiftKey && focusedElement === first) {\n            event.preventDefault();\n            if (loop) focus(last, { select: true });\n          }\n        }\n      }\n    },\n    [loop, trapped, focusScope.paused]\n  );\n\n  return (\n    <Primitive.div tabIndex={-1} {...scopeProps} ref={composedRefs} onKeyDown={handleKeyDown} />\n  );\n});\n\nFocusScope.displayName = FOCUS_SCOPE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * Utils\n * -----------------------------------------------------------------------------------------------*/\n\n/**\n * Attempts focusing the first element in a list of candidates.\n * Stops when focus has actually moved.\n */\nfunction focusFirst(candidates: HTMLElement[], { select = false } = {}) {\n  const previouslyFocusedElement = document.activeElement;\n  for (const candidate of candidates) {\n    focus(candidate, { select });\n    if (document.activeElement !== previouslyFocusedElement) return;\n  }\n}\n\n/**\n * Returns the first and last tabbable elements inside a container.\n */\nfunction getTabbableEdges(container: HTMLElement) {\n  const candidates = getTabbableCandidates(container);\n  const first = findVisible(candidates, container);\n  const last = findVisible(candidates.reverse(), container);\n  return [first, last] as const;\n}\n\n/**\n * Returns a list of potential tabbable candidates.\n *\n * NOTE: This is only a close approximation. For example it doesn't take into account cases like when\n * elements are not visible. This cannot be worked out easily by just reading a property, but rather\n * necessitate runtime knowledge (computed styles, etc). We deal with these cases separately.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker\n * Credit: https://github.com/discord/focus-layers/blob/master/src/util/wrapFocus.tsx#L1\n */\nfunction getTabbableCandidates(container: HTMLElement) {\n  const nodes: HTMLElement[] = [];\n  const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {\n    acceptNode: (node: any) => {\n      const isHiddenInput = node.tagName === 'INPUT' && node.type === 'hidden';\n      if (node.disabled || node.hidden || isHiddenInput) return NodeFilter.FILTER_SKIP;\n      // `.tabIndex` is not the same as the `tabindex` attribute. It works on the\n      // runtime's understanding of tabbability, so this automatically accounts\n      // for any kind of element that could be tabbed to.\n      return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\n    },\n  });\n  while (walker.nextNode()) nodes.push(walker.currentNode as HTMLElement);\n  // we do not take into account the order of nodes with positive `tabIndex` as it\n  // hinders accessibility to have tab order different from visual order.\n  return nodes;\n}\n\n/**\n * Returns the first visible element in a list.\n * NOTE: Only checks visibility up to the `container`.\n */\nfunction findVisible(elements: HTMLElement[], container: HTMLElement) {\n  for (const element of elements) {\n    // we stop checking if it's hidden at the `container` level (excluding)\n    if (!isHidden(element, { upTo: container })) return element;\n  }\n}\n\nfunction isHidden(node: HTMLElement, { upTo }: { upTo?: HTMLElement }) {\n  if (getComputedStyle(node).visibility === 'hidden') return true;\n  while (node) {\n    // we stop at `upTo` (excluding it)\n    if (upTo !== undefined && node === upTo) return false;\n    if (getComputedStyle(node).display === 'none') return true;\n    node = node.parentElement as HTMLElement;\n  }\n  return false;\n}\n\nfunction isSelectableInput(element: any): element is FocusableTarget & { select: () => void } {\n  return element instanceof HTMLInputElement && 'select' in element;\n}\n\nfunction focus(element?: FocusableTarget | null, { select = false } = {}) {\n  // only focus if that element is focusable\n  if (element && element.focus) {\n    const previouslyFocusedElement = document.activeElement;\n    // NOTE: we prevent scrolling on focus, to minimize jarring transitions for users\n    element.focus({ preventScroll: true });\n    // only select if its not the same element, it supports selection and we need to select\n    if (element !== previouslyFocusedElement && isSelectableInput(element) && select)\n      element.select();\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n * FocusScope stack\n * -----------------------------------------------------------------------------------------------*/\n\ntype FocusScopeAPI = { paused: boolean; pause(): void; resume(): void };\nconst focusScopesStack = createFocusScopesStack();\n\nfunction createFocusScopesStack() {\n  /** A stack of focus scopes, with the active one at the top */\n  let stack: FocusScopeAPI[] = [];\n\n  return {\n    add(focusScope: FocusScopeAPI) {\n      // pause the currently active focus scope (at the top of the stack)\n      const activeFocusScope = stack[0];\n      if (focusScope !== activeFocusScope) {\n        activeFocusScope?.pause();\n      }\n      // remove in case it already exists (because we'll re-add it at the top of the stack)\n      stack = arrayRemove(stack, focusScope);\n      stack.unshift(focusScope);\n    },\n\n    remove(focusScope: FocusScopeAPI) {\n      stack = arrayRemove(stack, focusScope);\n      stack[0]?.resume();\n    },\n  };\n}\n\nfunction arrayRemove<T>(array: T[], item: T) {\n  const updatedArray = [...array];\n  const index = updatedArray.indexOf(item);\n  if (index !== -1) {\n    updatedArray.splice(index, 1);\n  }\n  return updatedArray;\n}\n\nfunction removeLinks(items: HTMLElement[]) {\n  return items.filter((item) => item.tagName !== 'A');\n}\n\nconst Root = FocusScope;\n\nexport {\n  FocusScope,\n  //\n  Root,\n};\nexport type { FocusScopeProps };\n", "import * as React from 'react';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\n\n// We `toString()` to prevent bundlers from trying to `import { useId } from 'react';`\nconst useReactId = (React as any)['useId'.toString()] || (() => undefined);\nlet count = 0;\n\nfunction useId(deterministicId?: string): string {\n  const [id, setId] = React.useState<string | undefined>(useReactId());\n  // React versions older than 18 will have client-side ids only.\n  useLayoutEffect(() => {\n    if (!deterministicId) setId((reactId) => reactId ?? String(count++));\n  }, [deterministicId]);\n  return deterministicId || (id ? `radix-${id}` : '');\n}\n\nexport { useId };\n", "import * as React from 'react';\n\n/**\n * On the server, React emits a warning when calling `useLayoutEffect`.\n * This is because neither `useLayoutEffect` nor `useEffect` run on the server.\n * We use this safe version which suppresses the warning by replacing it with a noop on the server.\n *\n * See: https://reactjs.org/docs/hooks-reference.html#uselayouteffect\n */\nconst useLayoutEffect = Boolean(globalThis?.document) ? React.useLayoutEffect : () => {};\n\nexport { useLayoutEffect };\n", "import * as React from 'react';\nimport {\n  useFloating,\n  autoUpdate,\n  offset,\n  shift,\n  limitShift,\n  hide,\n  arrow as floatingUIarrow,\n  flip,\n  size,\n} from '@floating-ui/react-dom';\nimport * as ArrowPrimitive from '@radix-ui/react-arrow';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { useSize } from '@radix-ui/react-use-size';\n\nimport type { Placement, Middleware } from '@floating-ui/react-dom';\nimport type { Scope } from '@radix-ui/react-context';\nimport type { Measurable } from '@radix-ui/rect';\n\nconst SIDE_OPTIONS = ['top', 'right', 'bottom', 'left'] as const;\nconst ALIGN_OPTIONS = ['start', 'center', 'end'] as const;\n\ntype Side = (typeof SIDE_OPTIONS)[number];\ntype Align = (typeof ALIGN_OPTIONS)[number];\n\n/* -------------------------------------------------------------------------------------------------\n * Popper\n * -----------------------------------------------------------------------------------------------*/\n\nconst POPPER_NAME = 'Popper';\n\ntype ScopedProps<P> = P & { __scopePopper?: Scope };\nconst [createPopperContext, createPopperScope] = createContextScope(POPPER_NAME);\n\ntype PopperContextValue = {\n  anchor: Measurable | null;\n  onAnchorChange(anchor: Measurable | null): void;\n};\nconst [PopperProvider, usePopperContext] = createPopperContext<PopperContextValue>(POPPER_NAME);\n\ninterface PopperProps {\n  children?: React.ReactNode;\n}\nconst Popper: React.FC<PopperProps> = (props: ScopedProps<PopperProps>) => {\n  const { __scopePopper, children } = props;\n  const [anchor, setAnchor] = React.useState<Measurable | null>(null);\n  return (\n    <PopperProvider scope={__scopePopper} anchor={anchor} onAnchorChange={setAnchor}>\n      {children}\n    </PopperProvider>\n  );\n};\n\nPopper.displayName = POPPER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperAnchor\n * -----------------------------------------------------------------------------------------------*/\n\nconst ANCHOR_NAME = 'PopperAnchor';\n\ntype PopperAnchorElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface PopperAnchorProps extends PrimitiveDivProps {\n  virtualRef?: React.RefObject<Measurable>;\n}\n\nconst PopperAnchor = React.forwardRef<PopperAnchorElement, PopperAnchorProps>(\n  (props: ScopedProps<PopperAnchorProps>, forwardedRef) => {\n    const { __scopePopper, virtualRef, ...anchorProps } = props;\n    const context = usePopperContext(ANCHOR_NAME, __scopePopper);\n    const ref = React.useRef<PopperAnchorElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n\n    React.useEffect(() => {\n      // Consumer can anchor the popper to something that isn't\n      // a DOM node e.g. pointer position, so we override the\n      // `anchorRef` with their virtual ref in this case.\n      context.onAnchorChange(virtualRef?.current || ref.current);\n    });\n\n    return virtualRef ? null : <Primitive.div {...anchorProps} ref={composedRefs} />;\n  }\n);\n\nPopperAnchor.displayName = ANCHOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'PopperContent';\n\ntype PopperContentContextValue = {\n  placedSide: Side;\n  onArrowChange(arrow: HTMLSpanElement | null): void;\n  arrowX?: number;\n  arrowY?: number;\n  shouldHideArrow: boolean;\n};\n\nconst [PopperContentProvider, useContentContext] =\n  createPopperContext<PopperContentContextValue>(CONTENT_NAME);\n\ntype Boundary = Element | null;\n\ntype PopperContentElement = React.ElementRef<typeof Primitive.div>;\ninterface PopperContentProps extends PrimitiveDivProps {\n  side?: Side;\n  sideOffset?: number;\n  align?: Align;\n  alignOffset?: number;\n  arrowPadding?: number;\n  avoidCollisions?: boolean;\n  collisionBoundary?: Boundary | Boundary[];\n  collisionPadding?: number | Partial<Record<Side, number>>;\n  sticky?: 'partial' | 'always';\n  hideWhenDetached?: boolean;\n  updatePositionStrategy?: 'optimized' | 'always';\n  onPlaced?: () => void;\n}\n\nconst PopperContent = React.forwardRef<PopperContentElement, PopperContentProps>(\n  (props: ScopedProps<PopperContentProps>, forwardedRef) => {\n    const {\n      __scopePopper,\n      side = 'bottom',\n      sideOffset = 0,\n      align = 'center',\n      alignOffset = 0,\n      arrowPadding = 0,\n      avoidCollisions = true,\n      collisionBoundary = [],\n      collisionPadding: collisionPaddingProp = 0,\n      sticky = 'partial',\n      hideWhenDetached = false,\n      updatePositionStrategy = 'optimized',\n      onPlaced,\n      ...contentProps\n    } = props;\n\n    const context = usePopperContext(CONTENT_NAME, __scopePopper);\n\n    const [content, setContent] = React.useState<HTMLDivElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n\n    const [arrow, setArrow] = React.useState<HTMLSpanElement | null>(null);\n    const arrowSize = useSize(arrow);\n    const arrowWidth = arrowSize?.width ?? 0;\n    const arrowHeight = arrowSize?.height ?? 0;\n\n    const desiredPlacement = (side + (align !== 'center' ? '-' + align : '')) as Placement;\n\n    const collisionPadding =\n      typeof collisionPaddingProp === 'number'\n        ? collisionPaddingProp\n        : { top: 0, right: 0, bottom: 0, left: 0, ...collisionPaddingProp };\n\n    const boundary = Array.isArray(collisionBoundary) ? collisionBoundary : [collisionBoundary];\n    const hasExplicitBoundaries = boundary.length > 0;\n\n    const detectOverflowOptions = {\n      padding: collisionPadding,\n      boundary: boundary.filter(isNotNull),\n      // with `strategy: 'fixed'`, this is the only way to get it to respect boundaries\n      altBoundary: hasExplicitBoundaries,\n    };\n\n    const { refs, floatingStyles, placement, isPositioned, middlewareData } = useFloating({\n      // default to `fixed` strategy so users don't have to pick and we also avoid focus scroll issues\n      strategy: 'fixed',\n      placement: desiredPlacement,\n      whileElementsMounted: (...args) => {\n        const cleanup = autoUpdate(...args, {\n          animationFrame: updatePositionStrategy === 'always',\n        });\n        return cleanup;\n      },\n      elements: {\n        reference: context.anchor,\n      },\n      middleware: [\n        offset({ mainAxis: sideOffset + arrowHeight, alignmentAxis: alignOffset }),\n        avoidCollisions &&\n          shift({\n            mainAxis: true,\n            crossAxis: false,\n            limiter: sticky === 'partial' ? limitShift() : undefined,\n            ...detectOverflowOptions,\n          }),\n        avoidCollisions && flip({ ...detectOverflowOptions }),\n        size({\n          ...detectOverflowOptions,\n          apply: ({ elements, rects, availableWidth, availableHeight }) => {\n            const { width: anchorWidth, height: anchorHeight } = rects.reference;\n            const contentStyle = elements.floating.style;\n            contentStyle.setProperty('--radix-popper-available-width', `${availableWidth}px`);\n            contentStyle.setProperty('--radix-popper-available-height', `${availableHeight}px`);\n            contentStyle.setProperty('--radix-popper-anchor-width', `${anchorWidth}px`);\n            contentStyle.setProperty('--radix-popper-anchor-height', `${anchorHeight}px`);\n          },\n        }),\n        arrow && floatingUIarrow({ element: arrow, padding: arrowPadding }),\n        transformOrigin({ arrowWidth, arrowHeight }),\n        hideWhenDetached && hide({ strategy: 'referenceHidden', ...detectOverflowOptions }),\n      ],\n    });\n\n    const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);\n\n    const handlePlaced = useCallbackRef(onPlaced);\n    useLayoutEffect(() => {\n      if (isPositioned) {\n        handlePlaced?.();\n      }\n    }, [isPositioned, handlePlaced]);\n\n    const arrowX = middlewareData.arrow?.x;\n    const arrowY = middlewareData.arrow?.y;\n    const cannotCenterArrow = middlewareData.arrow?.centerOffset !== 0;\n\n    const [contentZIndex, setContentZIndex] = React.useState<string>();\n    useLayoutEffect(() => {\n      if (content) setContentZIndex(window.getComputedStyle(content).zIndex);\n    }, [content]);\n\n    return (\n      <div\n        ref={refs.setFloating}\n        data-radix-popper-content-wrapper=\"\"\n        style={{\n          ...floatingStyles,\n          transform: isPositioned ? floatingStyles.transform : 'translate(0, -200%)', // keep off the page when measuring\n          minWidth: 'max-content',\n          zIndex: contentZIndex,\n          ['--radix-popper-transform-origin' as any]: [\n            middlewareData.transformOrigin?.x,\n            middlewareData.transformOrigin?.y,\n          ].join(' '),\n\n          // hide the content if using the hide middleware and should be hidden\n          // set visibility to hidden and disable pointer events so the UI behaves\n          // as if the PopperContent isn't there at all\n          ...(middlewareData.hide?.referenceHidden && {\n            visibility: 'hidden',\n            pointerEvents: 'none',\n          }),\n        }}\n        // Floating UI interally calculates logical alignment based the `dir` attribute on\n        // the reference/floating node, we must add this attribute here to ensure\n        // this is calculated when portalled as well as inline.\n        dir={props.dir}\n      >\n        <PopperContentProvider\n          scope={__scopePopper}\n          placedSide={placedSide}\n          onArrowChange={setArrow}\n          arrowX={arrowX}\n          arrowY={arrowY}\n          shouldHideArrow={cannotCenterArrow}\n        >\n          <Primitive.div\n            data-side={placedSide}\n            data-align={placedAlign}\n            {...contentProps}\n            ref={composedRefs}\n            style={{\n              ...contentProps.style,\n              // if the PopperContent hasn't been placed yet (not all measurements done)\n              // we prevent animations so that users's animation don't kick in too early referring wrong sides\n              animation: !isPositioned ? 'none' : undefined,\n            }}\n          />\n        </PopperContentProvider>\n      </div>\n    );\n  }\n);\n\nPopperContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'PopperArrow';\n\nconst OPPOSITE_SIDE: Record<Side, Side> = {\n  top: 'bottom',\n  right: 'left',\n  bottom: 'top',\n  left: 'right',\n};\n\ntype PopperArrowElement = React.ElementRef<typeof ArrowPrimitive.Root>;\ntype ArrowProps = React.ComponentPropsWithoutRef<typeof ArrowPrimitive.Root>;\ninterface PopperArrowProps extends ArrowProps {}\n\nconst PopperArrow = React.forwardRef<PopperArrowElement, PopperArrowProps>(function PopperArrow(\n  props: ScopedProps<PopperArrowProps>,\n  forwardedRef\n) {\n  const { __scopePopper, ...arrowProps } = props;\n  const contentContext = useContentContext(ARROW_NAME, __scopePopper);\n  const baseSide = OPPOSITE_SIDE[contentContext.placedSide];\n\n  return (\n    // we have to use an extra wrapper because `ResizeObserver` (used by `useSize`)\n    // doesn't report size as we'd expect on SVG elements.\n    // it reports their bounding box which is effectively the largest path inside the SVG.\n    <span\n      ref={contentContext.onArrowChange}\n      style={{\n        position: 'absolute',\n        left: contentContext.arrowX,\n        top: contentContext.arrowY,\n        [baseSide]: 0,\n        transformOrigin: {\n          top: '',\n          right: '0 0',\n          bottom: 'center 0',\n          left: '100% 0',\n        }[contentContext.placedSide],\n        transform: {\n          top: 'translateY(100%)',\n          right: 'translateY(50%) rotate(90deg) translateX(-50%)',\n          bottom: `rotate(180deg)`,\n          left: 'translateY(50%) rotate(-90deg) translateX(50%)',\n        }[contentContext.placedSide],\n        visibility: contentContext.shouldHideArrow ? 'hidden' : undefined,\n      }}\n    >\n      <ArrowPrimitive.Root\n        {...arrowProps}\n        ref={forwardedRef}\n        style={{\n          ...arrowProps.style,\n          // ensures the element can be measured correctly (mostly for if SVG)\n          display: 'block',\n        }}\n      />\n    </span>\n  );\n});\n\nPopperArrow.displayName = ARROW_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction isNotNull<T>(value: T | null): value is T {\n  return value !== null;\n}\n\nconst transformOrigin = (options: { arrowWidth: number; arrowHeight: number }): Middleware => ({\n  name: 'transformOrigin',\n  options,\n  fn(data) {\n    const { placement, rects, middlewareData } = data;\n\n    const cannotCenterArrow = middlewareData.arrow?.centerOffset !== 0;\n    const isArrowHidden = cannotCenterArrow;\n    const arrowWidth = isArrowHidden ? 0 : options.arrowWidth;\n    const arrowHeight = isArrowHidden ? 0 : options.arrowHeight;\n\n    const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);\n    const noArrowAlign = { start: '0%', center: '50%', end: '100%' }[placedAlign];\n\n    const arrowXCenter = (middlewareData.arrow?.x ?? 0) + arrowWidth / 2;\n    const arrowYCenter = (middlewareData.arrow?.y ?? 0) + arrowHeight / 2;\n\n    let x = '';\n    let y = '';\n\n    if (placedSide === 'bottom') {\n      x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;\n      y = `${-arrowHeight}px`;\n    } else if (placedSide === 'top') {\n      x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;\n      y = `${rects.floating.height + arrowHeight}px`;\n    } else if (placedSide === 'right') {\n      x = `${-arrowHeight}px`;\n      y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;\n    } else if (placedSide === 'left') {\n      x = `${rects.floating.width + arrowHeight}px`;\n      y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;\n    }\n    return { data: { x, y } };\n  },\n});\n\nfunction getSideAndAlignFromPlacement(placement: Placement) {\n  const [side, align = 'center'] = placement.split('-');\n  return [side as Side, align as Align] as const;\n}\n\nconst Root = Popper;\nconst Anchor = PopperAnchor;\nconst Content = PopperContent;\nconst Arrow = PopperArrow;\n\nexport {\n  createPopperScope,\n  //\n  Popper,\n  PopperAnchor,\n  PopperContent,\n  PopperArrow,\n  //\n  Root,\n  Anchor,\n  Content,\n  Arrow,\n  //\n  SIDE_OPTIONS,\n  ALIGN_OPTIONS,\n};\nexport type { PopperProps, PopperAnchorProps, PopperContentProps, PopperArrowProps };\n", "/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nconst yAxisSides = /*#__PURE__*/new Set(['top', 'bottom']);\nfunction getSideAxis(placement) {\n  return yAxisSides.has(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nconst lrPlacement = ['left', 'right'];\nconst rlPlacement = ['right', 'left'];\nconst tbPlacement = ['top', 'bottom'];\nconst btPlacement = ['bottom', 'top'];\nfunction getSideList(side, isStart, rtl) {\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rlPlacement : lrPlacement;\n      return isStart ? lrPlacement : rlPlacement;\n    case 'left':\n    case 'right':\n      return isStart ? tbPlacement : btPlacement;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n", "import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const initialSideAxis = getSideAxis(initialPlacement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== 'none';\n      if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          const ignoreCrossAxisOverflow = checkCrossAxis === 'alignment' ? initialSideAxis !== getSideAxis(nextPlacement) : false;\n          if (!ignoreCrossAxisOverflow ||\n          // We leave the current main axis only if every placement on that axis\n          // overflows the main axis.\n          overflowsData.every(d => d.overflows[0] > 0 && getSideAxis(d.placement) === initialSideAxis)) {\n            // Try next placement and re-run the lifecycle.\n            return {\n              data: {\n                index: nextIndex,\n                overflows: overflowsData\n              },\n              reset: {\n                placement: nextPlacement\n              }\n            };\n          }\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$filter2;\n                const placement = (_overflowsData$filter2 = overflowsData.filter(d => {\n                  if (hasFallbackAxisSideDirection) {\n                    const currentSideAxis = getSideAxis(d.placement);\n                    return currentSideAxis === initialSideAxis ||\n                    // Create a bias to the `y` side axis due to horizontal\n                    // reading directions favoring greater width.\n                    currentSideAxis === 'y';\n                  }\n                  return true;\n                }).map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nconst originSides = /*#__PURE__*/new Set(['left', 'top']);\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = originSides.has(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: rawValue.mainAxis || 0,\n    crossAxis: rawValue.crossAxis || 0,\n    alignmentAxis: rawValue.alignmentAxis\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y,\n          enabled: {\n            [mainAxis]: checkMainAxis,\n            [crossAxis]: checkCrossAxis\n          }\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = originSides.has(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      var _state$middlewareData, _state$middlewareData2;\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if ((_state$middlewareData = state.middlewareData.shift) != null && _state$middlewareData.enabled.x) {\n        availableWidth = maximumClippingWidth;\n      }\n      if ((_state$middlewareData2 = state.middlewareData.shift) != null && _state$middlewareData2.enabled.y) {\n        availableHeight = maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n", "function hasWindow() {\n  return typeof window !== 'undefined';\n}\nfunction getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  if (!hasWindow() || typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nconst invalidOverflowDisplayValues = /*#__PURE__*/new Set(['inline', 'contents']);\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !invalidOverflowDisplayValues.has(display);\n}\nconst tableElements = /*#__PURE__*/new Set(['table', 'td', 'th']);\nfunction isTableElement(element) {\n  return tableElements.has(getNodeName(element));\n}\nconst topLayerSelectors = [':popover-open', ':modal'];\nfunction isTopLayer(element) {\n  return topLayerSelectors.some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (_e) {\n      return false;\n    }\n  });\n}\nconst transformProperties = ['transform', 'translate', 'scale', 'rotate', 'perspective'];\nconst willChangeValues = ['transform', 'translate', 'scale', 'rotate', 'perspective', 'filter'];\nconst containValues = ['paint', 'layout', 'strict', 'content'];\nfunction isContainingBlock(elementOrCss) {\n  const webkit = isWebKit();\n  const css = isElement(elementOrCss) ? getComputedStyle(elementOrCss) : elementOrCss;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  // https://drafts.csswg.org/css-transforms-2/#individual-transforms\n  return transformProperties.some(value => css[value] ? css[value] !== 'none' : false) || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || willChangeValues.some(value => (css.willChange || '').includes(value)) || containValues.some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else if (isTopLayer(currentNode)) {\n      return null;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nconst lastTraversableNodeNames = /*#__PURE__*/new Set(['html', 'body', '#document']);\nfunction isLastTraversableNode(node) {\n  return lastTraversableNodeNames.has(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.scrollX,\n    scrollTop: element.scrollY\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    const frameElement = getFrameElement(win);\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\nfunction getFrameElement(win) {\n  return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getFrameElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isTopLayer, isWebKit };\n", "import { rectToClientRect, arrow as arrow$1, autoPlacement as autoPlacement$1, detectOverflow as detectOverflow$1, flip as flip$1, hide as hide$1, inline as inline$1, limitShift as limitShift$1, offset as offset$1, shift as shift$1, size as size$1, computePosition as computePosition$1 } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getFrameElement, getNodeScroll, getDocumentElement, isTopLayer, getNodeName, isOverflowElement, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = getFrameElement(currentWin);\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = getFrameElement(currentWin);\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\n// If <html> has a CSS width greater than the viewport, then this will be\n// incorrect for RTL.\nfunction getWindowScrollBarX(element, rect) {\n  const leftScroll = getNodeScroll(element).scrollLeft;\n  if (!rect) {\n    return getBoundingClientRect(getDocumentElement(element)).left + leftScroll;\n  }\n  return rect.left + leftScroll;\n}\n\nfunction getHTMLOffset(documentElement, scroll, ignoreScrollbarX) {\n  if (ignoreScrollbarX === void 0) {\n    ignoreScrollbarX = false;\n  }\n  const htmlRect = documentElement.getBoundingClientRect();\n  const x = htmlRect.left + scroll.scrollLeft - (ignoreScrollbarX ? 0 :\n  // RTL <body> scrollbar.\n  getWindowScrollBarX(documentElement, htmlRect));\n  const y = htmlRect.top + scroll.scrollTop;\n  return {\n    x,\n    y\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll, true) : createCoords(0);\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x + htmlOffset.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y + htmlOffset.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nconst absoluteOrFixed = /*#__PURE__*/new Set(['absolute', 'fixed']);\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y,\n      width: clippingAncestor.width,\n      height: clippingAncestor.height\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && absoluteOrFixed.has(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n\n  // If the <body> scrollbar appears on the left (e.g. RTL systems). Use\n  // Firefox with layout.scrollbar.side = 3 in about:config to test this.\n  function setLeftRTLScrollbarOffset() {\n    offsets.x = getWindowScrollBarX(documentElement);\n  }\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      setLeftRTLScrollbarOffset();\n    }\n  }\n  if (isFixed && !isOffsetParentAnElement && documentElement) {\n    setLeftRTLScrollbarOffset();\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll) : createCoords(0);\n  const x = rect.left + scroll.scrollLeft - offsets.x - htmlOffset.x;\n  const y = rect.top + scroll.scrollTop - offsets.y - htmlOffset.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return getComputedStyle(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  let rawOffsetParent = element.offsetParent;\n\n  // Firefox returns the <html> element as the offsetParent if it's non-static,\n  // while Chrome and Safari return the <body> element. The <body> element must\n  // be used to perform the correct calculations even if the <html> element is\n  // non-static.\n  if (getDocumentElement(element) === rawOffsetParent) {\n    rawOffsetParent = rawOffsetParent.ownerDocument.body;\n  }\n  return rawOffsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    let svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\nfunction rectsAreEqual(a, b) {\n  return a.x === b.x && a.y === b.y && a.width === b.width && a.height === b.height;\n}\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const elementRectForRootMargin = element.getBoundingClientRect();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = elementRectForRootMargin;\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      if (ratio === 1 && !rectsAreEqual(elementRectForRootMargin, element.getBoundingClientRect())) {\n        // It's possible that even though the ratio is reported as 1, the\n        // element is not actually fully within the IntersectionObserver's root\n        // area anymore. This can happen under performance constraints. This may\n        // be a bug in the browser's IntersectionObserver implementation. To\n        // work around this, we compare the element's bounding rect now with\n        // what it was at the time we created the IntersectionObserver. If they\n        // are not equal then the element moved, so we refresh.\n        refresh();\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (_e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && !rectsAreEqual(prevRefRect, nextRefRect)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nconst detectOverflow = detectOverflow$1;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, platform, shift, size };\n", "import { computePosition, arrow as arrow$2, autoPlacement as autoPlacement$1, flip as flip$1, hide as hide$1, inline as inline$1, limitShift as limitShift$1, offset as offset$1, shift as shift$1, size as size$1 } from '@floating-ui/dom';\nexport { autoUpdate, computePosition, detectOverflow, getOverflowAncestors, platform } from '@floating-ui/dom';\nimport * as React from 'react';\nimport { useLayoutEffect } from 'react';\nimport * as ReactDOM from 'react-dom';\n\nvar isClient = typeof document !== 'undefined';\n\nvar noop = function noop() {};\nvar index = isClient ? useLayoutEffect : noop;\n\n// Fork of `fast-deep-equal` that only does the comparisons we need and compares\n// functions\nfunction deepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (typeof a === 'function' && a.toString() === b.toString()) {\n    return true;\n  }\n  let length;\n  let i;\n  let keys;\n  if (a && b && typeof a === 'object') {\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length !== b.length) return false;\n      for (i = length; i-- !== 0;) {\n        if (!deepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (i = length; i-- !== 0;) {\n      if (!{}.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (i = length; i-- !== 0;) {\n      const key = keys[i];\n      if (key === '_owner' && a.$$typeof) {\n        continue;\n      }\n      if (!deepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return a !== a && b !== b;\n}\n\nfunction getDPR(element) {\n  if (typeof window === 'undefined') {\n    return 1;\n  }\n  const win = element.ownerDocument.defaultView || window;\n  return win.devicePixelRatio || 1;\n}\n\nfunction roundByDPR(element, value) {\n  const dpr = getDPR(element);\n  return Math.round(value * dpr) / dpr;\n}\n\nfunction useLatestRef(value) {\n  const ref = React.useRef(value);\n  index(() => {\n    ref.current = value;\n  });\n  return ref;\n}\n\n/**\n * Provides data to position a floating element.\n * @see https://floating-ui.com/docs/useFloating\n */\nfunction useFloating(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform,\n    elements: {\n      reference: externalReference,\n      floating: externalFloating\n    } = {},\n    transform = true,\n    whileElementsMounted,\n    open\n  } = options;\n  const [data, setData] = React.useState({\n    x: 0,\n    y: 0,\n    strategy,\n    placement,\n    middlewareData: {},\n    isPositioned: false\n  });\n  const [latestMiddleware, setLatestMiddleware] = React.useState(middleware);\n  if (!deepEqual(latestMiddleware, middleware)) {\n    setLatestMiddleware(middleware);\n  }\n  const [_reference, _setReference] = React.useState(null);\n  const [_floating, _setFloating] = React.useState(null);\n  const setReference = React.useCallback(node => {\n    if (node !== referenceRef.current) {\n      referenceRef.current = node;\n      _setReference(node);\n    }\n  }, []);\n  const setFloating = React.useCallback(node => {\n    if (node !== floatingRef.current) {\n      floatingRef.current = node;\n      _setFloating(node);\n    }\n  }, []);\n  const referenceEl = externalReference || _reference;\n  const floatingEl = externalFloating || _floating;\n  const referenceRef = React.useRef(null);\n  const floatingRef = React.useRef(null);\n  const dataRef = React.useRef(data);\n  const hasWhileElementsMounted = whileElementsMounted != null;\n  const whileElementsMountedRef = useLatestRef(whileElementsMounted);\n  const platformRef = useLatestRef(platform);\n  const openRef = useLatestRef(open);\n  const update = React.useCallback(() => {\n    if (!referenceRef.current || !floatingRef.current) {\n      return;\n    }\n    const config = {\n      placement,\n      strategy,\n      middleware: latestMiddleware\n    };\n    if (platformRef.current) {\n      config.platform = platformRef.current;\n    }\n    computePosition(referenceRef.current, floatingRef.current, config).then(data => {\n      const fullData = {\n        ...data,\n        // The floating element's position may be recomputed while it's closed\n        // but still mounted (such as when transitioning out). To ensure\n        // `isPositioned` will be `false` initially on the next open, avoid\n        // setting it to `true` when `open === false` (must be specified).\n        isPositioned: openRef.current !== false\n      };\n      if (isMountedRef.current && !deepEqual(dataRef.current, fullData)) {\n        dataRef.current = fullData;\n        ReactDOM.flushSync(() => {\n          setData(fullData);\n        });\n      }\n    });\n  }, [latestMiddleware, placement, strategy, platformRef, openRef]);\n  index(() => {\n    if (open === false && dataRef.current.isPositioned) {\n      dataRef.current.isPositioned = false;\n      setData(data => ({\n        ...data,\n        isPositioned: false\n      }));\n    }\n  }, [open]);\n  const isMountedRef = React.useRef(false);\n  index(() => {\n    isMountedRef.current = true;\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n  index(() => {\n    if (referenceEl) referenceRef.current = referenceEl;\n    if (floatingEl) floatingRef.current = floatingEl;\n    if (referenceEl && floatingEl) {\n      if (whileElementsMountedRef.current) {\n        return whileElementsMountedRef.current(referenceEl, floatingEl, update);\n      }\n      update();\n    }\n  }, [referenceEl, floatingEl, update, whileElementsMountedRef, hasWhileElementsMounted]);\n  const refs = React.useMemo(() => ({\n    reference: referenceRef,\n    floating: floatingRef,\n    setReference,\n    setFloating\n  }), [setReference, setFloating]);\n  const elements = React.useMemo(() => ({\n    reference: referenceEl,\n    floating: floatingEl\n  }), [referenceEl, floatingEl]);\n  const floatingStyles = React.useMemo(() => {\n    const initialStyles = {\n      position: strategy,\n      left: 0,\n      top: 0\n    };\n    if (!elements.floating) {\n      return initialStyles;\n    }\n    const x = roundByDPR(elements.floating, data.x);\n    const y = roundByDPR(elements.floating, data.y);\n    if (transform) {\n      return {\n        ...initialStyles,\n        transform: \"translate(\" + x + \"px, \" + y + \"px)\",\n        ...(getDPR(elements.floating) >= 1.5 && {\n          willChange: 'transform'\n        })\n      };\n    }\n    return {\n      position: strategy,\n      left: x,\n      top: y\n    };\n  }, [strategy, transform, elements.floating, data.x, data.y]);\n  return React.useMemo(() => ({\n    ...data,\n    update,\n    refs,\n    elements,\n    floatingStyles\n  }), [data, update, refs, elements, floatingStyles]);\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * This wraps the core `arrow` middleware to allow React refs as the element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow$1 = options => {\n  function isRef(value) {\n    return {}.hasOwnProperty.call(value, 'current');\n  }\n  return {\n    name: 'arrow',\n    options,\n    fn(state) {\n      const {\n        element,\n        padding\n      } = typeof options === 'function' ? options(state) : options;\n      if (element && isRef(element)) {\n        if (element.current != null) {\n          return arrow$2({\n            element: element.current,\n            padding\n          }).fn(state);\n        }\n        return {};\n      }\n      if (element) {\n        return arrow$2({\n          element,\n          padding\n        }).fn(state);\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = (options, deps) => ({\n  ...offset$1(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = (options, deps) => ({\n  ...shift$1(options),\n  options: [options, deps]\n});\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = (options, deps) => ({\n  ...limitShift$1(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = (options, deps) => ({\n  ...flip$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = (options, deps) => ({\n  ...size$1(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = (options, deps) => ({\n  ...autoPlacement$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = (options, deps) => ({\n  ...hide$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = (options, deps) => ({\n  ...inline$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * This wraps the core `arrow` middleware to allow React refs as the element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = (options, deps) => ({\n  ...arrow$1(options),\n  options: [options, deps]\n});\n\nexport { arrow, autoPlacement, flip, hide, inline, limitShift, offset, shift, size, useFloating };\n", "import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * Arrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAME = 'Arrow';\n\ntype ArrowElement = React.ElementRef<typeof Primitive.svg>;\ntype PrimitiveSvgProps = React.ComponentPropsWithoutRef<typeof Primitive.svg>;\ninterface ArrowProps extends PrimitiveSvgProps {}\n\nconst Arrow = React.forwardRef<ArrowElement, ArrowProps>((props, forwardedRef) => {\n  const { children, width = 10, height = 5, ...arrowProps } = props;\n  return (\n    <Primitive.svg\n      {...arrowProps}\n      ref={forwardedRef}\n      width={width}\n      height={height}\n      viewBox=\"0 0 30 10\"\n      preserveAspectRatio=\"none\"\n    >\n      {/* We use their children if they're slotting to replace the whole svg */}\n      {props.asChild ? children : <polygon points=\"0,0 30,0 15,10\" />}\n    </Primitive.svg>\n  );\n});\n\nArrow.displayName = NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Arrow;\n\nexport {\n  Arrow,\n  //\n  Root,\n};\nexport type { ArrowProps };\n", "/// <reference types=\"resize-observer-browser\" />\n\nimport * as React from 'react';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\n\nfunction useSize(element: HTMLElement | null) {\n  const [size, setSize] = React.useState<{ width: number; height: number } | undefined>(undefined);\n\n  useLayoutEffect(() => {\n    if (element) {\n      // provide size as early as possible\n      setSize({ width: element.offsetWidth, height: element.offsetHeight });\n\n      const resizeObserver = new ResizeObserver((entries) => {\n        if (!Array.isArray(entries)) {\n          return;\n        }\n\n        // Since we only observe the one element, we don't need to loop over the\n        // array\n        if (!entries.length) {\n          return;\n        }\n\n        const entry = entries[0];\n        let width: number;\n        let height: number;\n\n        if ('borderBoxSize' in entry) {\n          const borderSizeEntry = entry['borderBoxSize'];\n          // iron out differences between browsers\n          const borderSize = Array.isArray(borderSizeEntry) ? borderSizeEntry[0] : borderSizeEntry;\n          width = borderSize['inlineSize'];\n          height = borderSize['blockSize'];\n        } else {\n          // for browsers that don't support `borderBoxSize`\n          // we calculate it ourselves to get the correct border box.\n          width = element.offsetWidth;\n          height = element.offsetHeight;\n        }\n\n        setSize({ width, height });\n      });\n\n      resizeObserver.observe(element, { box: 'border-box' });\n\n      return () => resizeObserver.unobserve(element);\n    } else {\n      // We only want to reset to `undefined` when the element becomes `null`,\n      // not if it changes to another element.\n      setSize(undefined);\n    }\n  }, [element]);\n\n  return size;\n}\n\nexport { useSize };\n", "import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\n\n/* -------------------------------------------------------------------------------------------------\n * Portal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'Portal';\n\ntype PortalElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface PortalProps extends PrimitiveDivProps {\n  /**\n   * An optional container where the portaled content should be appended.\n   */\n  container?: Element | DocumentFragment | null;\n}\n\nconst Portal = React.forwardRef<PortalElement, PortalProps>((props, forwardedRef) => {\n  const { container: containerProp, ...portalProps } = props;\n  const [mounted, setMounted] = React.useState(false);\n  useLayoutEffect(() => setMounted(true), []);\n  const container = containerProp || (mounted && globalThis?.document?.body);\n  return container\n    ? ReactDOM.createPortal(<Primitive.div {...portalProps} ref={forwardedRef} />, container)\n    : null;\n});\n\nPortal.displayName = PORTAL_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Portal;\n\nexport {\n  Portal,\n  //\n  Root,\n};\nexport type { PortalProps };\n", "import * as React from 'react';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { useStateMachine } from './useStateMachine';\n\ninterface PresenceProps {\n  children: React.ReactElement | ((props: { present: boolean }) => React.ReactElement);\n  present: boolean;\n}\n\nconst Presence: React.FC<PresenceProps> = (props) => {\n  const { present, children } = props;\n  const presence = usePresence(present);\n\n  const child = (\n    typeof children === 'function'\n      ? children({ present: presence.isPresent })\n      : React.Children.only(children)\n  ) as React.ReactElement<{ ref?: React.Ref<HTMLElement> }>;\n\n  const ref = useComposedRefs(presence.ref, getElementRef(child));\n  const forceMount = typeof children === 'function';\n  return forceMount || presence.isPresent ? React.cloneElement(child, { ref }) : null;\n};\n\nPresence.displayName = 'Presence';\n\n/* -------------------------------------------------------------------------------------------------\n * usePresence\n * -----------------------------------------------------------------------------------------------*/\n\nfunction usePresence(present: boolean) {\n  const [node, setNode] = React.useState<HTMLElement>();\n  const stylesRef = React.useRef<CSSStyleDeclaration>({} as any);\n  const prevPresentRef = React.useRef(present);\n  const prevAnimationNameRef = React.useRef<string>('none');\n  const initialState = present ? 'mounted' : 'unmounted';\n  const [state, send] = useStateMachine(initialState, {\n    mounted: {\n      UNMOUNT: 'unmounted',\n      ANIMATION_OUT: 'unmountSuspended',\n    },\n    unmountSuspended: {\n      MOUNT: 'mounted',\n      ANIMATION_END: 'unmounted',\n    },\n    unmounted: {\n      MOUNT: 'mounted',\n    },\n  });\n\n  React.useEffect(() => {\n    const currentAnimationName = getAnimationName(stylesRef.current);\n    prevAnimationNameRef.current = state === 'mounted' ? currentAnimationName : 'none';\n  }, [state]);\n\n  useLayoutEffect(() => {\n    const styles = stylesRef.current;\n    const wasPresent = prevPresentRef.current;\n    const hasPresentChanged = wasPresent !== present;\n\n    if (hasPresentChanged) {\n      const prevAnimationName = prevAnimationNameRef.current;\n      const currentAnimationName = getAnimationName(styles);\n\n      if (present) {\n        send('MOUNT');\n      } else if (currentAnimationName === 'none' || styles?.display === 'none') {\n        // If there is no exit animation or the element is hidden, animations won't run\n        // so we unmount instantly\n        send('UNMOUNT');\n      } else {\n        /**\n         * When `present` changes to `false`, we check changes to animation-name to\n         * determine whether an animation has started. We chose this approach (reading\n         * computed styles) because there is no `animationrun` event and `animationstart`\n         * fires after `animation-delay` has expired which would be too late.\n         */\n        const isAnimating = prevAnimationName !== currentAnimationName;\n\n        if (wasPresent && isAnimating) {\n          send('ANIMATION_OUT');\n        } else {\n          send('UNMOUNT');\n        }\n      }\n\n      prevPresentRef.current = present;\n    }\n  }, [present, send]);\n\n  useLayoutEffect(() => {\n    if (node) {\n      let timeoutId: number;\n      const ownerWindow = node.ownerDocument.defaultView ?? window;\n      /**\n       * Triggering an ANIMATION_OUT during an ANIMATION_IN will fire an `animationcancel`\n       * event for ANIMATION_IN after we have entered `unmountSuspended` state. So, we\n       * make sure we only trigger ANIMATION_END for the currently active animation.\n       */\n      const handleAnimationEnd = (event: AnimationEvent) => {\n        const currentAnimationName = getAnimationName(stylesRef.current);\n        const isCurrentAnimation = currentAnimationName.includes(event.animationName);\n        if (event.target === node && isCurrentAnimation) {\n          // With React 18 concurrency this update is applied a frame after the\n          // animation ends, creating a flash of visible content. By setting the\n          // animation fill mode to \"forwards\", we force the node to keep the\n          // styles of the last keyframe, removing the flash.\n          //\n          // Previously we flushed the update via ReactDom.flushSync, but with\n          // exit animations this resulted in the node being removed from the\n          // DOM before the synthetic animationEnd event was dispatched, meaning\n          // user-provided event handlers would not be called.\n          // https://github.com/radix-ui/primitives/pull/1849\n          send('ANIMATION_END');\n          if (!prevPresentRef.current) {\n            const currentFillMode = node.style.animationFillMode;\n            node.style.animationFillMode = 'forwards';\n            // Reset the style after the node had time to unmount (for cases\n            // where the component chooses not to unmount). Doing this any\n            // sooner than `setTimeout` (e.g. with `requestAnimationFrame`)\n            // still causes a flash.\n            timeoutId = ownerWindow.setTimeout(() => {\n              if (node.style.animationFillMode === 'forwards') {\n                node.style.animationFillMode = currentFillMode;\n              }\n            });\n          }\n        }\n      };\n      const handleAnimationStart = (event: AnimationEvent) => {\n        if (event.target === node) {\n          // if animation occurred, store its name as the previous animation.\n          prevAnimationNameRef.current = getAnimationName(stylesRef.current);\n        }\n      };\n      node.addEventListener('animationstart', handleAnimationStart);\n      node.addEventListener('animationcancel', handleAnimationEnd);\n      node.addEventListener('animationend', handleAnimationEnd);\n      return () => {\n        ownerWindow.clearTimeout(timeoutId);\n        node.removeEventListener('animationstart', handleAnimationStart);\n        node.removeEventListener('animationcancel', handleAnimationEnd);\n        node.removeEventListener('animationend', handleAnimationEnd);\n      };\n    } else {\n      // Transition to the unmounted state if the node is removed prematurely.\n      // We avoid doing so during cleanup as the node may change but still exist.\n      send('ANIMATION_END');\n    }\n  }, [node, send]);\n\n  return {\n    isPresent: ['mounted', 'unmountSuspended'].includes(state),\n    ref: React.useCallback((node: HTMLElement) => {\n      if (node) stylesRef.current = getComputedStyle(node);\n      setNode(node);\n    }, []),\n  };\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getAnimationName(styles?: CSSStyleDeclaration) {\n  return styles?.animationName || 'none';\n}\n\n// Before React 19 accessing `element.props.ref` will throw a warning and suggest using `element.ref`\n// After React 19 accessing `element.ref` does the opposite.\n// https://github.com/facebook/react/pull/28348\n//\n// Access the ref using the method that doesn't yield a warning.\nfunction getElementRef(element: React.ReactElement<{ ref?: React.Ref<unknown> }>) {\n  // React <=18 in DEV\n  let getter = Object.getOwnPropertyDescriptor(element.props, 'ref')?.get;\n  let mayWarn = getter && 'isReactWarning' in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return (element as any).ref;\n  }\n\n  // React 19 in DEV\n  getter = Object.getOwnPropertyDescriptor(element, 'ref')?.get;\n  mayWarn = getter && 'isReactWarning' in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.props.ref;\n  }\n\n  // Not DEV\n  return element.props.ref || (element as any).ref;\n}\n\nexport { Presence };\nexport type { PresenceProps };\n", "import * as React from 'react';\n\ntype Machine<S> = { [k: string]: { [k: string]: S } };\ntype MachineState<T> = keyof T;\ntype MachineEvent<T> = keyof UnionToIntersection<T[keyof T]>;\n\n// \uD83E\uDD2F https://fettblog.eu/typescript-union-to-intersection/\ntype UnionToIntersection<T> = (T extends any ? (x: T) => any : never) extends (x: infer R) => any\n  ? R\n  : never;\n\nexport function useStateMachine<M>(\n  initialState: MachineState<M>,\n  machine: M & Machine<MachineState<M>>\n) {\n  return React.useReducer((state: MachineState<M>, event: MachineEvent<M>): MachineState<M> => {\n    const nextState = (machine[state] as any)[event];\n    return nextState ?? state;\n  }, initialState);\n}\n", "import * as React from 'react';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\n\ntype UseControllableStateParams<T> = {\n  prop?: T | undefined;\n  defaultProp?: T | undefined;\n  onChange?: (state: T) => void;\n};\n\ntype SetStateFn<T> = (prevState?: T) => T;\n\nfunction useControllableState<T>({\n  prop,\n  defaultProp,\n  onChange = () => {},\n}: UseControllableStateParams<T>) {\n  const [uncontrolledProp, setUncontrolledProp] = useUncontrolledState({ defaultProp, onChange });\n  const isControlled = prop !== undefined;\n  const value = isControlled ? prop : uncontrolledProp;\n  const handleChange = useCallbackRef(onChange);\n\n  const setValue: React.Dispatch<React.SetStateAction<T | undefined>> = React.useCallback(\n    (nextValue) => {\n      if (isControlled) {\n        const setter = nextValue as SetStateFn<T>;\n        const value = typeof nextValue === 'function' ? setter(prop) : nextValue;\n        if (value !== prop) handleChange(value as T);\n      } else {\n        setUncontrolledProp(nextValue);\n      }\n    },\n    [isControlled, prop, setUncontrolledProp, handleChange]\n  );\n\n  return [value, setValue] as const;\n}\n\nfunction useUncontrolledState<T>({\n  defaultProp,\n  onChange,\n}: Omit<UseControllableStateParams<T>, 'prop'>) {\n  const uncontrolledState = React.useState<T | undefined>(defaultProp);\n  const [value] = uncontrolledState;\n  const prevValueRef = React.useRef(value);\n  const handleChange = useCallbackRef(onChange);\n\n  React.useEffect(() => {\n    if (prevValueRef.current !== value) {\n      handleChange(value as T);\n      prevValueRef.current = value;\n    }\n  }, [value, prevValueRef, handleChange]);\n\n  return uncontrolledState;\n}\n\nexport { useControllableState };\n", "var getDefaultParent = function (originalTarget) {\n    if (typeof document === 'undefined') {\n        return null;\n    }\n    var sampleTarget = Array.isArray(originalTarget) ? originalTarget[0] : originalTarget;\n    return sampleTarget.ownerDocument.body;\n};\nvar counterMap = new WeakMap();\nvar uncontrolledNodes = new WeakMap();\nvar markerMap = {};\nvar lockCount = 0;\nvar unwrapHost = function (node) {\n    return node && (node.host || unwrapHost(node.parentNode));\n};\nvar correctTargets = function (parent, targets) {\n    return targets\n        .map(function (target) {\n        if (parent.contains(target)) {\n            return target;\n        }\n        var correctedTarget = unwrapHost(target);\n        if (correctedTarget && parent.contains(correctedTarget)) {\n            return correctedTarget;\n        }\n        console.error('aria-hidden', target, 'in not contained inside', parent, '. Doing nothing');\n        return null;\n    })\n        .filter(function (x) { return Boolean(x); });\n};\n/**\n * Marks everything except given node(or nodes) as aria-hidden\n * @param {Element | Element[]} originalTarget - elements to keep on the page\n * @param [parentNode] - top element, defaults to document.body\n * @param {String} [markerName] - a special attribute to mark every node\n * @param {String} [controlAttribute] - html Attribute to control\n * @return {Undo} undo command\n */\nvar applyAttributeToOthers = function (originalTarget, parentNode, markerName, controlAttribute) {\n    var targets = correctTargets(parentNode, Array.isArray(originalTarget) ? originalTarget : [originalTarget]);\n    if (!markerMap[markerName]) {\n        markerMap[markerName] = new WeakMap();\n    }\n    var markerCounter = markerMap[markerName];\n    var hiddenNodes = [];\n    var elementsToKeep = new Set();\n    var elementsToStop = new Set(targets);\n    var keep = function (el) {\n        if (!el || elementsToKeep.has(el)) {\n            return;\n        }\n        elementsToKeep.add(el);\n        keep(el.parentNode);\n    };\n    targets.forEach(keep);\n    var deep = function (parent) {\n        if (!parent || elementsToStop.has(parent)) {\n            return;\n        }\n        Array.prototype.forEach.call(parent.children, function (node) {\n            if (elementsToKeep.has(node)) {\n                deep(node);\n            }\n            else {\n                try {\n                    var attr = node.getAttribute(controlAttribute);\n                    var alreadyHidden = attr !== null && attr !== 'false';\n                    var counterValue = (counterMap.get(node) || 0) + 1;\n                    var markerValue = (markerCounter.get(node) || 0) + 1;\n                    counterMap.set(node, counterValue);\n                    markerCounter.set(node, markerValue);\n                    hiddenNodes.push(node);\n                    if (counterValue === 1 && alreadyHidden) {\n                        uncontrolledNodes.set(node, true);\n                    }\n                    if (markerValue === 1) {\n                        node.setAttribute(markerName, 'true');\n                    }\n                    if (!alreadyHidden) {\n                        node.setAttribute(controlAttribute, 'true');\n                    }\n                }\n                catch (e) {\n                    console.error('aria-hidden: cannot operate on ', node, e);\n                }\n            }\n        });\n    };\n    deep(parentNode);\n    elementsToKeep.clear();\n    lockCount++;\n    return function () {\n        hiddenNodes.forEach(function (node) {\n            var counterValue = counterMap.get(node) - 1;\n            var markerValue = markerCounter.get(node) - 1;\n            counterMap.set(node, counterValue);\n            markerCounter.set(node, markerValue);\n            if (!counterValue) {\n                if (!uncontrolledNodes.has(node)) {\n                    node.removeAttribute(controlAttribute);\n                }\n                uncontrolledNodes.delete(node);\n            }\n            if (!markerValue) {\n                node.removeAttribute(markerName);\n            }\n        });\n        lockCount--;\n        if (!lockCount) {\n            // clear\n            counterMap = new WeakMap();\n            counterMap = new WeakMap();\n            uncontrolledNodes = new WeakMap();\n            markerMap = {};\n        }\n    };\n};\n/**\n * Marks everything except given node(or nodes) as aria-hidden\n * @param {Element | Element[]} originalTarget - elements to keep on the page\n * @param [parentNode] - top element, defaults to document.body\n * @param {String} [markerName] - a special attribute to mark every node\n * @return {Undo} undo command\n */\nexport var hideOthers = function (originalTarget, parentNode, markerName) {\n    if (markerName === void 0) { markerName = 'data-aria-hidden'; }\n    var targets = Array.from(Array.isArray(originalTarget) ? originalTarget : [originalTarget]);\n    var activeParentNode = parentNode || getDefaultParent(originalTarget);\n    if (!activeParentNode) {\n        return function () { return null; };\n    }\n    // we should not hide aria-live elements - https://github.com/theKashey/aria-hidden/issues/10\n    // and script elements, as they have no impact on accessibility.\n    targets.push.apply(targets, Array.from(activeParentNode.querySelectorAll('[aria-live], script')));\n    return applyAttributeToOthers(targets, activeParentNode, markerName, 'aria-hidden');\n};\n/**\n * Marks everything except given node(or nodes) as inert\n * @param {Element | Element[]} originalTarget - elements to keep on the page\n * @param [parentNode] - top element, defaults to document.body\n * @param {String} [markerName] - a special attribute to mark every node\n * @return {Undo} undo command\n */\nexport var inertOthers = function (originalTarget, parentNode, markerName) {\n    if (markerName === void 0) { markerName = 'data-inert-ed'; }\n    var activeParentNode = parentNode || getDefaultParent(originalTarget);\n    if (!activeParentNode) {\n        return function () { return null; };\n    }\n    return applyAttributeToOthers(originalTarget, activeParentNode, markerName, 'inert');\n};\n/**\n * @returns if current browser supports inert\n */\nexport var supportsInert = function () {\n    return typeof HTMLElement !== 'undefined' && HTMLElement.prototype.hasOwnProperty('inert');\n};\n/**\n * Automatic function to \"suppress\" DOM elements - _hide_ or _inert_ in the best possible way\n * @param {Element | Element[]} originalTarget - elements to keep on the page\n * @param [parentNode] - top element, defaults to document.body\n * @param {String} [markerName] - a special attribute to mark every node\n * @return {Undo} undo command\n */\nexport var suppressOthers = function (originalTarget, parentNode, markerName) {\n    if (markerName === void 0) { markerName = 'data-suppressed'; }\n    return (supportsInert() ? inertOthers : hideOthers)(originalTarget, parentNode, markerName);\n};\n", "import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { RemoveScroll } from './UI';\nimport SideCar from './sidecar';\nvar ReactRemoveScroll = React.forwardRef(function (props, ref) { return (React.createElement(RemoveScroll, __assign({}, props, { ref: ref, sideCar: SideCar }))); });\nReactRemoveScroll.classNames = RemoveScroll.classNames;\nexport default ReactRemoveScroll;\n", "import { __assign, __rest } from \"tslib\";\nimport * as React from 'react';\nimport { fullWidthClassName, zeroRightClassName } from 'react-remove-scroll-bar/constants';\nimport { useMergeRefs } from 'use-callback-ref';\nimport { effectCar } from './medium';\nvar nothing = function () {\n    return;\n};\n/**\n * Removes scrollbar from the page and contain the scroll within the Lock\n */\nvar RemoveScroll = React.forwardRef(function (props, parentRef) {\n    var ref = React.useRef(null);\n    var _a = React.useState({\n        onScrollCapture: nothing,\n        onWheelCapture: nothing,\n        onTouchMoveCapture: nothing,\n    }), callbacks = _a[0], setCallbacks = _a[1];\n    var forwardProps = props.forwardProps, children = props.children, className = props.className, removeScrollBar = props.removeScrollBar, enabled = props.enabled, shards = props.shards, sideCar = props.sideCar, noRelative = props.noRelative, noIsolation = props.noIsolation, inert = props.inert, allowPinchZoom = props.allowPinchZoom, _b = props.as, Container = _b === void 0 ? 'div' : _b, gapMode = props.gapMode, rest = __rest(props, [\"forwardProps\", \"children\", \"className\", \"removeScrollBar\", \"enabled\", \"shards\", \"sideCar\", \"noRelative\", \"noIsolation\", \"inert\", \"allowPinchZoom\", \"as\", \"gapMode\"]);\n    var SideCar = sideCar;\n    var containerRef = useMergeRefs([ref, parentRef]);\n    var containerProps = __assign(__assign({}, rest), callbacks);\n    return (React.createElement(React.Fragment, null,\n        enabled && (React.createElement(SideCar, { sideCar: effectCar, removeScrollBar: removeScrollBar, shards: shards, noRelative: noRelative, noIsolation: noIsolation, inert: inert, setCallbacks: setCallbacks, allowPinchZoom: !!allowPinchZoom, lockRef: ref, gapMode: gapMode })),\n        forwardProps ? (React.cloneElement(React.Children.only(children), __assign(__assign({}, containerProps), { ref: containerRef }))) : (React.createElement(Container, __assign({}, containerProps, { className: className, ref: containerRef }), children))));\n});\nRemoveScroll.defaultProps = {\n    enabled: true,\n    removeScrollBar: true,\n    inert: false,\n};\nRemoveScroll.classNames = {\n    fullWidth: fullWidthClassName,\n    zeroRight: zeroRightClassName,\n};\nexport { RemoveScroll };\n", "export var zeroRightClassName = 'right-scroll-bar-position';\nexport var fullWidthClassName = 'width-before-scroll-bar';\nexport var noScrollbarsClassName = 'with-scroll-bars-hidden';\n/**\n * Name of a CSS variable containing the amount of \"hidden\" scrollbar\n * ! might be undefined ! use will fallback!\n */\nexport var removedBarSizeVariable = '--removed-body-scroll-bar-size';\n", "/**\n * Assigns a value for a given ref, no matter of the ref format\n * @param {RefObject} ref - a callback function or ref object\n * @param value - a new value\n *\n * @see https://github.com/theKashey/use-callback-ref#assignref\n * @example\n * const refObject = useRef();\n * const refFn = (ref) => {....}\n *\n * assignRef(refObject, \"refValue\");\n * assignRef(refFn, \"refValue\");\n */\nexport function assignRef(ref, value) {\n    if (typeof ref === 'function') {\n        ref(value);\n    }\n    else if (ref) {\n        ref.current = value;\n    }\n    return ref;\n}\n", "import { useState } from 'react';\n/**\n * creates a MutableRef with ref change callback\n * @param initialValue - initial ref value\n * @param {Function} callback - a callback to run when value changes\n *\n * @example\n * const ref = useCallbackRef(0, (newValue, oldValue) => console.log(oldValue, '->', newValue);\n * ref.current = 1;\n * // prints 0 -> 1\n *\n * @see https://reactjs.org/docs/hooks-reference.html#useref\n * @see https://github.com/theKashey/use-callback-ref#usecallbackref---to-replace-reactuseref\n * @returns {MutableRefObject}\n */\nexport function useCallbackRef(initialValue, callback) {\n    var ref = useState(function () { return ({\n        // value\n        value: initialValue,\n        // last callback\n        callback: callback,\n        // \"memoized\" public interface\n        facade: {\n            get current() {\n                return ref.value;\n            },\n            set current(value) {\n                var last = ref.value;\n                if (last !== value) {\n                    ref.value = value;\n                    ref.callback(value, last);\n                }\n            },\n        },\n    }); })[0];\n    // update callback\n    ref.callback = callback;\n    return ref.facade;\n}\n", "import * as React from 'react';\nimport { assignRef } from './assignRef';\nimport { useCallbackRef } from './useRef';\nvar useIsomorphicLayoutEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nvar currentValues = new WeakMap();\n/**\n * Merges two or more refs together providing a single interface to set their value\n * @param {RefObject|Ref} refs\n * @returns {MutableRefObject} - a new ref, which translates all changes to {refs}\n *\n * @see {@link mergeRefs} a version without buit-in memoization\n * @see https://github.com/theKashey/use-callback-ref#usemergerefs\n * @example\n * const Component = React.forwardRef((props, ref) => {\n *   const ownRef = useRef();\n *   const domRef = useMergeRefs([ref, ownRef]); // 👈 merge together\n *   return <div ref={domRef}>...</div>\n * }\n */\nexport function useMergeRefs(refs, defaultValue) {\n    var callbackRef = useCallbackRef(defaultValue || null, function (newValue) {\n        return refs.forEach(function (ref) { return assignRef(ref, newValue); });\n    });\n    // handle refs changes - added or removed\n    useIsomorphicLayoutEffect(function () {\n        var oldValue = currentValues.get(callbackRef);\n        if (oldValue) {\n            var prevRefs_1 = new Set(oldValue);\n            var nextRefs_1 = new Set(refs);\n            var current_1 = callbackRef.current;\n            prevRefs_1.forEach(function (ref) {\n                if (!nextRefs_1.has(ref)) {\n                    assignRef(ref, null);\n                }\n            });\n            nextRefs_1.forEach(function (ref) {\n                if (!prevRefs_1.has(ref)) {\n                    assignRef(ref, current_1);\n                }\n            });\n        }\n        currentValues.set(callbackRef, refs);\n    }, [refs]);\n    return callbackRef;\n}\n", "import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { useSidecar } from './hook';\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function sidecar(importer, errorComponent) {\n    var ErrorCase = function () { return errorComponent; };\n    return function Sidecar(props) {\n        var _a = useSidecar(importer, props.sideCar), Car = _a[0], error = _a[1];\n        if (error && errorComponent) {\n            return ErrorCase;\n        }\n        // @ts-expect-error type shenanigans\n        return Car ? React.createElement(Car, __assign({}, props)) : null;\n    };\n}\n", "import { useState, useEffect } from 'react';\nimport { env } from './env';\nvar cache = new WeakMap();\nvar NO_OPTIONS = {};\nexport function useSidecar(importer, effect) {\n    var options = (effect && effect.options) || NO_OPTIONS;\n    if (env.isNode && !options.ssr) {\n        return [null, null];\n    }\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    return useRealSidecar(importer, effect);\n}\nfunction useRealSidecar(importer, effect) {\n    var options = (effect && effect.options) || NO_OPTIONS;\n    var couldUseCache = env.forceCache || (env.isNode && !!options.ssr) || !options.async;\n    var _a = useState(couldUseCache ? function () { return cache.get(importer); } : undefined), Car = _a[0], setCar = _a[1];\n    var _b = useState(null), error = _b[0], setError = _b[1];\n    useEffect(function () {\n        if (!Car) {\n            importer().then(function (car) {\n                var resolved = effect ? effect.read() : car.default || car;\n                if (!resolved) {\n                    console.error('Sidecar error: with importer', importer);\n                    var error_1;\n                    if (effect) {\n                        console.error('Sidecar error: with medium', effect);\n                        error_1 = new Error('Sidecar medium was not found');\n                    }\n                    else {\n                        error_1 = new Error('Sidecar was not found in exports');\n                    }\n                    setError(function () { return error_1; });\n                    throw error_1;\n                }\n                cache.set(importer, resolved);\n                setCar(function () { return resolved; });\n            }, function (e) { return setError(function () { return e; }); });\n        }\n    }, []);\n    return [Car, error];\n}\n", "import { __assign } from \"tslib\";\nfunction ItoI(a) {\n    return a;\n}\nfunction innerCreateMedium(defaults, middleware) {\n    if (middleware === void 0) { middleware = ItoI; }\n    var buffer = [];\n    var assigned = false;\n    var medium = {\n        read: function () {\n            if (assigned) {\n                throw new Error('Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`.');\n            }\n            if (buffer.length) {\n                return buffer[buffer.length - 1];\n            }\n            return defaults;\n        },\n        useMedium: function (data) {\n            var item = middleware(data, assigned);\n            buffer.push(item);\n            return function () {\n                buffer = buffer.filter(function (x) { return x !== item; });\n            };\n        },\n        assignSyncMedium: function (cb) {\n            assigned = true;\n            while (buffer.length) {\n                var cbs = buffer;\n                buffer = [];\n                cbs.forEach(cb);\n            }\n            buffer = {\n                push: function (x) { return cb(x); },\n                filter: function () { return buffer; },\n            };\n        },\n        assignMedium: function (cb) {\n            assigned = true;\n            var pendingQueue = [];\n            if (buffer.length) {\n                var cbs = buffer;\n                buffer = [];\n                cbs.forEach(cb);\n                pendingQueue = buffer;\n            }\n            var executeQueue = function () {\n                var cbs = pendingQueue;\n                pendingQueue = [];\n                cbs.forEach(cb);\n            };\n            var cycle = function () { return Promise.resolve().then(executeQueue); };\n            cycle();\n            buffer = {\n                push: function (x) {\n                    pendingQueue.push(x);\n                    cycle();\n                },\n                filter: function (filter) {\n                    pendingQueue = pendingQueue.filter(filter);\n                    return buffer;\n                },\n            };\n        },\n    };\n    return medium;\n}\nexport function createMedium(defaults, middleware) {\n    if (middleware === void 0) { middleware = ItoI; }\n    return innerCreateMedium(defaults, middleware);\n}\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function createSidecarMedium(options) {\n    if (options === void 0) { options = {}; }\n    var medium = innerCreateMedium(null);\n    medium.options = __assign({ async: true, ssr: false }, options);\n    return medium;\n}\n", "import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { useState, useCallback, useEffect, useLayoutEffect } from 'react';\nexport function renderCar(WrappedComponent, defaults) {\n    function State(_a) {\n        var stateRef = _a.stateRef, props = _a.props;\n        var renderTarget = useCallback(function SideTarget() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            useLayoutEffect(function () {\n                stateRef.current(args);\n            });\n            return null;\n        }, []);\n        // @ts-ignore\n        return React.createElement(WrappedComponent, __assign({}, props, { children: renderTarget }));\n    }\n    var Children = React.memo(function (_a) {\n        var stateRef = _a.stateRef, defaultState = _a.defaultState, children = _a.children;\n        var _b = useState(defaultState.current), state = _b[0], setState = _b[1];\n        useEffect(function () {\n            stateRef.current = setState;\n        }, []);\n        return children.apply(void 0, state);\n    }, function () { return true; });\n    return function Combiner(props) {\n        var defaultState = React.useRef(defaults(props));\n        var ref = React.useRef(function (state) { return (defaultState.current = state); });\n        return (React.createElement(React.Fragment, null,\n            React.createElement(State, { stateRef: ref, props: props }),\n            React.createElement(Children, { stateRef: ref, defaultState: defaultState, children: props.children })));\n    };\n}\n", "import { __assign, __rest } from \"tslib\";\nimport * as React from 'react';\nvar SideCar = function (_a) {\n    var sideCar = _a.sideCar, rest = __rest(_a, [\"sideCar\"]);\n    if (!sideCar) {\n        throw new Error('Sidecar: please provide `sideCar` property to import the right car');\n    }\n    var Target = sideCar.read();\n    if (!Target) {\n        throw new Error('Sidecar medium not found');\n    }\n    return React.createElement(Target, __assign({}, rest));\n};\nSideCar.isSideCarExport = true;\nexport function exportSidecar(medium, exported) {\n    medium.useMedium(exported);\n    return SideCar;\n}\n", "import { createSidecarMedium } from 'use-sidecar';\nexport var effectCar = createSidecarMedium();\n", "import { __spreadArray } from \"tslib\";\nimport * as React from 'react';\nimport { RemoveScrollBar } from 'react-remove-scroll-bar';\nimport { styleSingleton } from 'react-style-singleton';\nimport { nonPassive } from './aggresiveCapture';\nimport { handleScroll, locationCouldBeScrolled } from './handleScroll';\nexport var getTouchXY = function (event) {\n    return 'changedTouches' in event ? [event.changedTouches[0].clientX, event.changedTouches[0].clientY] : [0, 0];\n};\nexport var getDeltaXY = function (event) { return [event.deltaX, event.deltaY]; };\nvar extractRef = function (ref) {\n    return ref && 'current' in ref ? ref.current : ref;\n};\nvar deltaCompare = function (x, y) { return x[0] === y[0] && x[1] === y[1]; };\nvar generateStyle = function (id) { return \"\\n  .block-interactivity-\".concat(id, \" {pointer-events: none;}\\n  .allow-interactivity-\").concat(id, \" {pointer-events: all;}\\n\"); };\nvar idCounter = 0;\nvar lockStack = [];\nexport function RemoveScrollSideCar(props) {\n    var shouldPreventQueue = React.useRef([]);\n    var touchStartRef = React.useRef([0, 0]);\n    var activeAxis = React.useRef();\n    var id = React.useState(idCounter++)[0];\n    var Style = React.useState(styleSingleton)[0];\n    var lastProps = React.useRef(props);\n    React.useEffect(function () {\n        lastProps.current = props;\n    }, [props]);\n    React.useEffect(function () {\n        if (props.inert) {\n            document.body.classList.add(\"block-interactivity-\".concat(id));\n            var allow_1 = __spreadArray([props.lockRef.current], (props.shards || []).map(extractRef), true).filter(Boolean);\n            allow_1.forEach(function (el) { return el.classList.add(\"allow-interactivity-\".concat(id)); });\n            return function () {\n                document.body.classList.remove(\"block-interactivity-\".concat(id));\n                allow_1.forEach(function (el) { return el.classList.remove(\"allow-interactivity-\".concat(id)); });\n            };\n        }\n        return;\n    }, [props.inert, props.lockRef.current, props.shards]);\n    var shouldCancelEvent = React.useCallback(function (event, parent) {\n        if (('touches' in event && event.touches.length === 2) || (event.type === 'wheel' && event.ctrlKey)) {\n            return !lastProps.current.allowPinchZoom;\n        }\n        var touch = getTouchXY(event);\n        var touchStart = touchStartRef.current;\n        var deltaX = 'deltaX' in event ? event.deltaX : touchStart[0] - touch[0];\n        var deltaY = 'deltaY' in event ? event.deltaY : touchStart[1] - touch[1];\n        var currentAxis;\n        var target = event.target;\n        var moveDirection = Math.abs(deltaX) > Math.abs(deltaY) ? 'h' : 'v';\n        // allow horizontal touch move on Range inputs. They will not cause any scroll\n        if ('touches' in event && moveDirection === 'h' && target.type === 'range') {\n            return false;\n        }\n        var canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);\n        if (!canBeScrolledInMainDirection) {\n            return true;\n        }\n        if (canBeScrolledInMainDirection) {\n            currentAxis = moveDirection;\n        }\n        else {\n            currentAxis = moveDirection === 'v' ? 'h' : 'v';\n            canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);\n            // other axis might be not scrollable\n        }\n        if (!canBeScrolledInMainDirection) {\n            return false;\n        }\n        if (!activeAxis.current && 'changedTouches' in event && (deltaX || deltaY)) {\n            activeAxis.current = currentAxis;\n        }\n        if (!currentAxis) {\n            return true;\n        }\n        var cancelingAxis = activeAxis.current || currentAxis;\n        return handleScroll(cancelingAxis, parent, event, cancelingAxis === 'h' ? deltaX : deltaY, true);\n    }, []);\n    var shouldPrevent = React.useCallback(function (_event) {\n        var event = _event;\n        if (!lockStack.length || lockStack[lockStack.length - 1] !== Style) {\n            // not the last active\n            return;\n        }\n        var delta = 'deltaY' in event ? getDeltaXY(event) : getTouchXY(event);\n        var sourceEvent = shouldPreventQueue.current.filter(function (e) { return e.name === event.type && (e.target === event.target || event.target === e.shadowParent) && deltaCompare(e.delta, delta); })[0];\n        // self event, and should be canceled\n        if (sourceEvent && sourceEvent.should) {\n            if (event.cancelable) {\n                event.preventDefault();\n            }\n            return;\n        }\n        // outside or shard event\n        if (!sourceEvent) {\n            var shardNodes = (lastProps.current.shards || [])\n                .map(extractRef)\n                .filter(Boolean)\n                .filter(function (node) { return node.contains(event.target); });\n            var shouldStop = shardNodes.length > 0 ? shouldCancelEvent(event, shardNodes[0]) : !lastProps.current.noIsolation;\n            if (shouldStop) {\n                if (event.cancelable) {\n                    event.preventDefault();\n                }\n            }\n        }\n    }, []);\n    var shouldCancel = React.useCallback(function (name, delta, target, should) {\n        var event = { name: name, delta: delta, target: target, should: should, shadowParent: getOutermostShadowParent(target) };\n        shouldPreventQueue.current.push(event);\n        setTimeout(function () {\n            shouldPreventQueue.current = shouldPreventQueue.current.filter(function (e) { return e !== event; });\n        }, 1);\n    }, []);\n    var scrollTouchStart = React.useCallback(function (event) {\n        touchStartRef.current = getTouchXY(event);\n        activeAxis.current = undefined;\n    }, []);\n    var scrollWheel = React.useCallback(function (event) {\n        shouldCancel(event.type, getDeltaXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));\n    }, []);\n    var scrollTouchMove = React.useCallback(function (event) {\n        shouldCancel(event.type, getTouchXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));\n    }, []);\n    React.useEffect(function () {\n        lockStack.push(Style);\n        props.setCallbacks({\n            onScrollCapture: scrollWheel,\n            onWheelCapture: scrollWheel,\n            onTouchMoveCapture: scrollTouchMove,\n        });\n        document.addEventListener('wheel', shouldPrevent, nonPassive);\n        document.addEventListener('touchmove', shouldPrevent, nonPassive);\n        document.addEventListener('touchstart', scrollTouchStart, nonPassive);\n        return function () {\n            lockStack = lockStack.filter(function (inst) { return inst !== Style; });\n            document.removeEventListener('wheel', shouldPrevent, nonPassive);\n            document.removeEventListener('touchmove', shouldPrevent, nonPassive);\n            document.removeEventListener('touchstart', scrollTouchStart, nonPassive);\n        };\n    }, []);\n    var removeScrollBar = props.removeScrollBar, inert = props.inert;\n    return (React.createElement(React.Fragment, null,\n        inert ? React.createElement(Style, { styles: generateStyle(id) }) : null,\n        removeScrollBar ? React.createElement(RemoveScrollBar, { noRelative: props.noRelative, gapMode: props.gapMode }) : null));\n}\nfunction getOutermostShadowParent(node) {\n    var shadowParent = null;\n    while (node !== null) {\n        if (node instanceof ShadowRoot) {\n            shadowParent = node.host;\n            node = node.host;\n        }\n        node = node.parentNode;\n    }\n    return shadowParent;\n}\n", "import * as React from 'react';\nimport { styleSingleton } from 'react-style-singleton';\nimport { fullWidthClassName, zeroRightClassName, noScrollbarsClassName, removedBarSizeVariable } from './constants';\nimport { getGapWidth } from './utils';\nvar Style = styleSingleton();\nexport var lockAttribute = 'data-scroll-locked';\n// important tip - once we measure scrollBar width and remove them\n// we could not repeat this operation\n// thus we are using style-singleton - only the first \"yet correct\" style will be applied.\nvar getStyles = function (_a, allowRelative, gapMode, important) {\n    var left = _a.left, top = _a.top, right = _a.right, gap = _a.gap;\n    if (gapMode === void 0) { gapMode = 'margin'; }\n    return \"\\n  .\".concat(noScrollbarsClassName, \" {\\n   overflow: hidden \").concat(important, \";\\n   padding-right: \").concat(gap, \"px \").concat(important, \";\\n  }\\n  body[\").concat(lockAttribute, \"] {\\n    overflow: hidden \").concat(important, \";\\n    overscroll-behavior: contain;\\n    \").concat([\n        allowRelative && \"position: relative \".concat(important, \";\"),\n        gapMode === 'margin' &&\n            \"\\n    padding-left: \".concat(left, \"px;\\n    padding-top: \").concat(top, \"px;\\n    padding-right: \").concat(right, \"px;\\n    margin-left:0;\\n    margin-top:0;\\n    margin-right: \").concat(gap, \"px \").concat(important, \";\\n    \"),\n        gapMode === 'padding' && \"padding-right: \".concat(gap, \"px \").concat(important, \";\"),\n    ]\n        .filter(Boolean)\n        .join(''), \"\\n  }\\n  \\n  .\").concat(zeroRightClassName, \" {\\n    right: \").concat(gap, \"px \").concat(important, \";\\n  }\\n  \\n  .\").concat(fullWidthClassName, \" {\\n    margin-right: \").concat(gap, \"px \").concat(important, \";\\n  }\\n  \\n  .\").concat(zeroRightClassName, \" .\").concat(zeroRightClassName, \" {\\n    right: 0 \").concat(important, \";\\n  }\\n  \\n  .\").concat(fullWidthClassName, \" .\").concat(fullWidthClassName, \" {\\n    margin-right: 0 \").concat(important, \";\\n  }\\n  \\n  body[\").concat(lockAttribute, \"] {\\n    \").concat(removedBarSizeVariable, \": \").concat(gap, \"px;\\n  }\\n\");\n};\nvar getCurrentUseCounter = function () {\n    var counter = parseInt(document.body.getAttribute(lockAttribute) || '0', 10);\n    return isFinite(counter) ? counter : 0;\n};\nexport var useLockAttribute = function () {\n    React.useEffect(function () {\n        document.body.setAttribute(lockAttribute, (getCurrentUseCounter() + 1).toString());\n        return function () {\n            var newCounter = getCurrentUseCounter() - 1;\n            if (newCounter <= 0) {\n                document.body.removeAttribute(lockAttribute);\n            }\n            else {\n                document.body.setAttribute(lockAttribute, newCounter.toString());\n            }\n        };\n    }, []);\n};\n/**\n * Removes page scrollbar and blocks page scroll when mounted\n */\nexport var RemoveScrollBar = function (_a) {\n    var noRelative = _a.noRelative, noImportant = _a.noImportant, _b = _a.gapMode, gapMode = _b === void 0 ? 'margin' : _b;\n    useLockAttribute();\n    /*\n     gap will be measured on every component mount\n     however it will be used only by the \"first\" invocation\n     due to singleton nature of <Style\n     */\n    var gap = React.useMemo(function () { return getGapWidth(gapMode); }, [gapMode]);\n    return React.createElement(Style, { styles: getStyles(gap, !noRelative, gapMode, !noImportant ? '!important' : '') });\n};\n", "import * as React from 'react';\nimport { stylesheetSingleton } from './singleton';\n/**\n * creates a hook to control style singleton\n * @see {@link styleSingleton} for a safer component version\n * @example\n * ```tsx\n * const useStyle = styleHookSingleton();\n * ///\n * useStyle('body { overflow: hidden}');\n */\nexport var styleHookSingleton = function () {\n    var sheet = stylesheetSingleton();\n    return function (styles, isDynamic) {\n        React.useEffect(function () {\n            sheet.add(styles);\n            return function () {\n                sheet.remove();\n            };\n        }, [styles && isDynamic]);\n    };\n};\n", "var currentNonce;\nexport var setNonce = function (nonce) {\n    currentNonce = nonce;\n};\nexport var getNonce = function () {\n    if (currentNonce) {\n        return currentNonce;\n    }\n    if (typeof __webpack_nonce__ !== 'undefined') {\n        return __webpack_nonce__;\n    }\n    return undefined;\n};\n", "import { getNonce } from 'get-nonce';\nfunction makeStyleTag() {\n    if (!document)\n        return null;\n    var tag = document.createElement('style');\n    tag.type = 'text/css';\n    var nonce = getNonce();\n    if (nonce) {\n        tag.setAttribute('nonce', nonce);\n    }\n    return tag;\n}\nfunction injectStyles(tag, css) {\n    // @ts-ignore\n    if (tag.styleSheet) {\n        // @ts-ignore\n        tag.styleSheet.cssText = css;\n    }\n    else {\n        tag.appendChild(document.createTextNode(css));\n    }\n}\nfunction insertStyleTag(tag) {\n    var head = document.head || document.getElementsByTagName('head')[0];\n    head.appendChild(tag);\n}\nexport var stylesheetSingleton = function () {\n    var counter = 0;\n    var stylesheet = null;\n    return {\n        add: function (style) {\n            if (counter == 0) {\n                if ((stylesheet = makeStyleTag())) {\n                    injectStyles(stylesheet, style);\n                    insertStyleTag(stylesheet);\n                }\n            }\n            counter++;\n        },\n        remove: function () {\n            counter--;\n            if (!counter && stylesheet) {\n                stylesheet.parentNode && stylesheet.parentNode.removeChild(stylesheet);\n                stylesheet = null;\n            }\n        },\n    };\n};\n", "import { styleHookSingleton } from './hook';\n/**\n * create a Component to add styles on demand\n * - styles are added when first instance is mounted\n * - styles are removed when the last instance is unmounted\n * - changing styles in runtime does nothing unless dynamic is set. But with multiple components that can lead to the undefined behavior\n */\nexport var styleSingleton = function () {\n    var useStyle = styleHookSingleton();\n    var Sheet = function (_a) {\n        var styles = _a.styles, dynamic = _a.dynamic;\n        useStyle(styles, dynamic);\n        return null;\n    };\n    return Sheet;\n};\n", "export var zeroGap = {\n    left: 0,\n    top: 0,\n    right: 0,\n    gap: 0,\n};\nvar parse = function (x) { return parseInt(x || '', 10) || 0; };\nvar getOffset = function (gapMode) {\n    var cs = window.getComputedStyle(document.body);\n    var left = cs[gapMode === 'padding' ? 'paddingLeft' : 'marginLeft'];\n    var top = cs[gapMode === 'padding' ? 'paddingTop' : 'marginTop'];\n    var right = cs[gapMode === 'padding' ? 'paddingRight' : 'marginRight'];\n    return [parse(left), parse(top), parse(right)];\n};\nexport var getGapWidth = function (gapMode) {\n    if (gapMode === void 0) { gapMode = 'margin'; }\n    if (typeof window === 'undefined') {\n        return zeroGap;\n    }\n    var offsets = getOffset(gapMode);\n    var documentWidth = document.documentElement.clientWidth;\n    var windowWidth = window.innerWidth;\n    return {\n        left: offsets[0],\n        top: offsets[1],\n        right: offsets[2],\n        gap: Math.max(0, windowWidth - documentWidth + offsets[2] - offsets[0]),\n    };\n};\n", "var passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        var options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n                return true;\n            },\n        });\n        // @ts-ignore\n        window.addEventListener('test', options, options);\n        // @ts-ignore\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\nexport var nonPassive = passiveSupported ? { passive: false } : false;\n", "var alwaysContainsScroll = function (node) {\n    // textarea will always _contain_ scroll inside self. It only can be hidden\n    return node.tagName === 'TEXTAREA';\n};\nvar elementCanBeScrolled = function (node, overflow) {\n    if (!(node instanceof Element)) {\n        return false;\n    }\n    var styles = window.getComputedStyle(node);\n    return (\n    // not-not-scrollable\n    styles[overflow] !== 'hidden' &&\n        // contains scroll inside self\n        !(styles.overflowY === styles.overflowX && !alwaysContainsScroll(node) && styles[overflow] === 'visible'));\n};\nvar elementCouldBeVScrolled = function (node) { return elementCanBeScrolled(node, 'overflowY'); };\nvar elementCouldBeHScrolled = function (node) { return elementCanBeScrolled(node, 'overflowX'); };\nexport var locationCouldBeScrolled = function (axis, node) {\n    var ownerDocument = node.ownerDocument;\n    var current = node;\n    do {\n        // Skip over shadow root\n        if (typeof ShadowRoot !== 'undefined' && current instanceof ShadowRoot) {\n            current = current.host;\n        }\n        var isScrollable = elementCouldBeScrolled(axis, current);\n        if (isScrollable) {\n            var _a = getScrollVariables(axis, current), scrollHeight = _a[1], clientHeight = _a[2];\n            if (scrollHeight > clientHeight) {\n                return true;\n            }\n        }\n        current = current.parentNode;\n    } while (current && current !== ownerDocument.body);\n    return false;\n};\nvar getVScrollVariables = function (_a) {\n    var scrollTop = _a.scrollTop, scrollHeight = _a.scrollHeight, clientHeight = _a.clientHeight;\n    return [\n        scrollTop,\n        scrollHeight,\n        clientHeight,\n    ];\n};\nvar getHScrollVariables = function (_a) {\n    var scrollLeft = _a.scrollLeft, scrollWidth = _a.scrollWidth, clientWidth = _a.clientWidth;\n    return [\n        scrollLeft,\n        scrollWidth,\n        clientWidth,\n    ];\n};\nvar elementCouldBeScrolled = function (axis, node) {\n    return axis === 'v' ? elementCouldBeVScrolled(node) : elementCouldBeHScrolled(node);\n};\nvar getScrollVariables = function (axis, node) {\n    return axis === 'v' ? getVScrollVariables(node) : getHScrollVariables(node);\n};\nvar getDirectionFactor = function (axis, direction) {\n    /**\n     * If the element's direction is rtl (right-to-left), then scrollLeft is 0 when the scrollbar is at its rightmost position,\n     * and then increasingly negative as you scroll towards the end of the content.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollLeft\n     */\n    return axis === 'h' && direction === 'rtl' ? -1 : 1;\n};\nexport var handleScroll = function (axis, endTarget, event, sourceDelta, noOverscroll) {\n    var directionFactor = getDirectionFactor(axis, window.getComputedStyle(endTarget).direction);\n    var delta = directionFactor * sourceDelta;\n    // find scrollable target\n    var target = event.target;\n    var targetInLock = endTarget.contains(target);\n    var shouldCancelScroll = false;\n    var isDeltaPositive = delta > 0;\n    var availableScroll = 0;\n    var availableScrollTop = 0;\n    do {\n        if (!target) {\n            break;\n        }\n        var _a = getScrollVariables(axis, target), position = _a[0], scroll_1 = _a[1], capacity = _a[2];\n        var elementScroll = scroll_1 - capacity - directionFactor * position;\n        if (position || elementScroll) {\n            if (elementCouldBeScrolled(axis, target)) {\n                availableScroll += elementScroll;\n                availableScrollTop += position;\n            }\n        }\n        var parent_1 = target.parentNode;\n        // we will \"bubble\" from ShadowDom in case we are, or just to the parent in normal case\n        // this is the same logic used in focus-lock\n        target = (parent_1 && parent_1.nodeType === Node.DOCUMENT_FRAGMENT_NODE ? parent_1.host : parent_1);\n    } while (\n    // portaled content\n    (!targetInLock && target !== document.body) ||\n        // self content\n        (targetInLock && (endTarget.contains(target) || endTarget === target)));\n    // handle epsilon around 0 (non standard zoom levels)\n    if (isDeltaPositive &&\n        ((noOverscroll && Math.abs(availableScroll) < 1) || (!noOverscroll && delta > availableScroll))) {\n        shouldCancelScroll = true;\n    }\n    else if (!isDeltaPositive &&\n        ((noOverscroll && Math.abs(availableScrollTop) < 1) || (!noOverscroll && -delta > availableScrollTop))) {\n        shouldCancelScroll = true;\n    }\n    return shouldCancelScroll;\n};\n", "import { exportSidecar } from 'use-sidecar';\nimport { RemoveScrollSideCar } from './SideEffect';\nimport { effectCar } from './medium';\nexport default exportSidecar(effectCar, RemoveScrollSideCar);\n", "import React from 'react';\nimport { create } from 'zustand';\n\nvar _window$document, _window$navigator;\n/**\n * An SSR-friendly useLayoutEffect.\n *\n * React currently throws a warning when using useLayoutEffect on the server.\n * To get around it, we can conditionally useEffect on the server (no-op) and\n * useLayoutEffect elsewhere.\n *\n * @see https://github.com/facebook/react/issues/14927\n */\n\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' && ((_window$document = window.document) != null && _window$document.createElement || ((_window$navigator = window.navigator) == null ? void 0 : _window$navigator.product) === 'ReactNative') ? React.useLayoutEffect : React.useEffect;\n\nfunction tunnel() {\n  const useStore = create(set => ({\n    current: new Array(),\n    version: 0,\n    set\n  }));\n  return {\n    In: ({\n      children\n    }) => {\n      const set = useStore(state => state.set);\n      const version = useStore(state => state.version);\n      /* When this component mounts, we increase the store's version number.\n      This will cause all existing rats to re-render (just like if the Out component\n      were mapping items to a list.) The re-rendering will cause the final \n      order of rendered components to match what the user is expecting. */\n\n      useIsomorphicLayoutEffect(() => {\n        set(state => ({\n          version: state.version + 1\n        }));\n      }, []);\n      /* Any time the children _or_ the store's version number change, insert\n      the specified React children into the list of rats. */\n\n      useIsomorphicLayoutEffect(() => {\n        set(({\n          current\n        }) => ({\n          current: [...current, children]\n        }));\n        return () => set(({\n          current\n        }) => ({\n          current: current.filter(c => c !== children)\n        }));\n      }, [children, version]);\n      return null;\n    },\n    Out: () => {\n      const current = useStore(state => state.current);\n      return /*#__PURE__*/React.createElement(React.Fragment, null, current);\n    }\n  };\n}\n\nexport { tunnel as default };\n", "const createStoreImpl = (createState) => {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      const previousState = state;\n      state = (replace != null ? replace : typeof nextState !== \"object\" || nextState === null) ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const getInitialState = () => initialState;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const destroy = () => {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected.\"\n      );\n    }\n    listeners.clear();\n  };\n  const api = { setState, getState, getInitialState, subscribe, destroy };\n  const initialState = state = createState(setState, getState, api);\n  return api;\n};\nconst createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;\nvar vanilla = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use import { createStore } from 'zustand/vanilla'.\"\n    );\n  }\n  return createStore(createState);\n};\n\nexport { createStore, vanilla as default };\n", "import { createStore } from 'zustand/vanilla';\nexport * from 'zustand/vanilla';\nimport ReactExports from 'react';\nimport useSyncExternalStoreExports from 'use-sync-external-store/shim/with-selector.js';\n\nconst { useDebugValue } = ReactExports;\nconst { useSyncExternalStoreWithSelector } = useSyncExternalStoreExports;\nlet didWarnAboutEqualityFn = false;\nconst identity = (arg) => arg;\nfunction useStore(api, selector = identity, equalityFn) {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && equalityFn && !didWarnAboutEqualityFn) {\n    console.warn(\n      \"[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937\"\n    );\n    didWarnAboutEqualityFn = true;\n  }\n  const slice = useSyncExternalStoreWithSelector(\n    api.subscribe,\n    api.getState,\n    api.getServerState || api.getInitialState,\n    selector,\n    equalityFn\n  );\n  useDebugValue(slice);\n  return slice;\n}\nconst createImpl = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && typeof createState !== \"function\") {\n    console.warn(\n      \"[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.\"\n    );\n  }\n  const api = typeof createState === \"function\" ? createStore(createState) : createState;\n  const useBoundStore = (selector, equalityFn) => useStore(api, selector, equalityFn);\n  Object.assign(useBoundStore, api);\n  return useBoundStore;\n};\nconst create = (createState) => createState ? createImpl(createState) : createImpl;\nvar react = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use `import { create } from 'zustand'`.\"\n    );\n  }\n  return create(createState);\n};\n\nexport { create, react as default, useStore };\n", "function _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nexport { _extends as default };", "export { composeEventHandlers } from './primitive';\n", "function composeEventHandlers<E>(\n  originalEventHandler?: (event: E) => void,\n  ourEventHandler?: (event: E) => void,\n  { checkForDefaultPrevented = true } = {}\n) {\n  return function handleEvent(event: E) {\n    originalEventHandler?.(event);\n\n    if (checkForDefaultPrevented === false || !((event as unknown) as Event).defaultPrevented) {\n      return ourEventHandler?.(event);\n    }\n  };\n}\n\nexport { composeEventHandlers };\n", "export { createContext, createContextScope } from './createContext';\nexport type { CreateScope, Scope } from './createContext';\n", "import * as React from 'react';\n\nfunction createContext<ContextValueType extends object | null>(\n  rootComponentName: string,\n  defaultContext?: ContextValueType\n) {\n  const Context = React.createContext<ContextValueType | undefined>(defaultContext);\n\n  function Provider(props: ContextValueType & { children: React.ReactNode }) {\n    const { children, ...context } = props;\n    // Only re-memoize when prop values change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const value = React.useMemo(() => context, Object.values(context)) as ContextValueType;\n    return <Context.Provider value={value}>{children}</Context.Provider>;\n  }\n\n  function useContext(consumerName: string) {\n    const context = React.useContext(Context);\n    if (context) return context;\n    if (defaultContext !== undefined) return defaultContext;\n    // if a defaultContext wasn't specified, it's a required context.\n    throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n  }\n\n  Provider.displayName = rootComponentName + 'Provider';\n  return [Provider, useContext] as const;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * createContextScope\n * -----------------------------------------------------------------------------------------------*/\n\ntype Scope<C = any> = { [scopeName: string]: React.Context<C>[] } | undefined;\ntype ScopeHook = (scope: Scope) => { [__scopeProp: string]: Scope };\ninterface CreateScope {\n  scopeName: string;\n  (): ScopeHook;\n}\n\nfunction createContextScope(scopeName: string, createContextScopeDeps: CreateScope[] = []) {\n  let defaultContexts: any[] = [];\n\n  /* -----------------------------------------------------------------------------------------------\n   * createContext\n   * ---------------------------------------------------------------------------------------------*/\n\n  function createContext<ContextValueType extends object | null>(\n    rootComponentName: string,\n    defaultContext?: ContextValueType\n  ) {\n    const BaseContext = React.createContext<ContextValueType | undefined>(defaultContext);\n    const index = defaultContexts.length;\n    defaultContexts = [...defaultContexts, defaultContext];\n\n    function Provider(\n      props: ContextValueType & { scope: Scope<ContextValueType>; children: React.ReactNode }\n    ) {\n      const { scope, children, ...context } = props;\n      const Context = scope?.[scopeName][index] || BaseContext;\n      // Only re-memoize when prop values change\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      const value = React.useMemo(() => context, Object.values(context)) as ContextValueType;\n      return <Context.Provider value={value}>{children}</Context.Provider>;\n    }\n\n    function useContext(consumerName: string, scope: Scope<ContextValueType | undefined>) {\n      const Context = scope?.[scopeName][index] || BaseContext;\n      const context = React.useContext(Context);\n      if (context) return context;\n      if (defaultContext !== undefined) return defaultContext;\n      // if a defaultContext wasn't specified, it's a required context.\n      throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n    }\n\n    Provider.displayName = rootComponentName + 'Provider';\n    return [Provider, useContext] as const;\n  }\n\n  /* -----------------------------------------------------------------------------------------------\n   * createScope\n   * ---------------------------------------------------------------------------------------------*/\n\n  const createScope: CreateScope = () => {\n    const scopeContexts = defaultContexts.map((defaultContext) => {\n      return React.createContext(defaultContext);\n    });\n    return function useScope(scope: Scope) {\n      const contexts = scope?.[scopeName] || scopeContexts;\n      return React.useMemo(\n        () => ({ [`__scope${scopeName}`]: { ...scope, [scopeName]: contexts } }),\n        [scope, contexts]\n      );\n    };\n  };\n\n  createScope.scopeName = scopeName;\n  return [createContext, composeContextScopes(createScope, ...createContextScopeDeps)] as const;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * composeContextScopes\n * -----------------------------------------------------------------------------------------------*/\n\nfunction composeContextScopes(...scopes: CreateScope[]) {\n  const baseScope = scopes[0];\n  if (scopes.length === 1) return baseScope;\n\n  const createScope: CreateScope = () => {\n    const scopeHooks = scopes.map((createScope) => ({\n      useScope: createScope(),\n      scopeName: createScope.scopeName,\n    }));\n\n    return function useComposedScopes(overrideScopes) {\n      const nextScopes = scopeHooks.reduce((nextScopes, { useScope, scopeName }) => {\n        // We are calling a hook inside a callback which React warns against to avoid inconsistent\n        // renders, however, scoping doesn't have render side effects so we ignore the rule.\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const scopeProps = useScope(overrideScopes);\n        const currentScope = scopeProps[`__scope${scopeName}`];\n        return { ...nextScopes, ...currentScope };\n      }, {});\n\n      return React.useMemo(() => ({ [`__scope${baseScope.scopeName}`]: nextScopes }), [nextScopes]);\n    };\n  };\n\n  createScope.scopeName = baseScope.scopeName;\n  return createScope;\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nexport { createContext, createContextScope };\nexport type { CreateScope, Scope };\n", "export { composeEventHandlers } from './primitive';\n", "function composeEventHandlers<E>(\n  originalEventHandler?: (event: E) => void,\n  ourEventHandler?: (event: E) => void,\n  { checkForDefaultPrevented = true } = {}\n) {\n  return function handleEvent(event: E) {\n    originalEventHandler?.(event);\n\n    if (checkForDefaultPrevented === false || !((event as unknown) as Event).defaultPrevented) {\n      return ourEventHandler?.(event);\n    }\n  };\n}\n\nexport { composeEventHandlers };\n", "export { createContext, createContextScope } from './createContext';\nexport type { CreateScope, Scope } from './createContext';\n", "import * as React from 'react';\n\nfunction createContext<ContextValueType extends object | null>(\n  rootComponentName: string,\n  defaultContext?: ContextValueType\n) {\n  const Context = React.createContext<ContextValueType | undefined>(defaultContext);\n\n  function Provider(props: ContextValueType & { children: React.ReactNode }) {\n    const { children, ...context } = props;\n    // Only re-memoize when prop values change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const value = React.useMemo(() => context, Object.values(context)) as ContextValueType;\n    return <Context.Provider value={value}>{children}</Context.Provider>;\n  }\n\n  function useContext(consumerName: string) {\n    const context = React.useContext(Context);\n    if (context) return context;\n    if (defaultContext !== undefined) return defaultContext;\n    // if a defaultContext wasn't specified, it's a required context.\n    throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n  }\n\n  Provider.displayName = rootComponentName + 'Provider';\n  return [Provider, useContext] as const;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * createContextScope\n * -----------------------------------------------------------------------------------------------*/\n\ntype Scope<C = any> = { [scopeName: string]: React.Context<C>[] } | undefined;\ntype ScopeHook = (scope: Scope) => { [__scopeProp: string]: Scope };\ninterface CreateScope {\n  scopeName: string;\n  (): ScopeHook;\n}\n\nfunction createContextScope(scopeName: string, createContextScopeDeps: CreateScope[] = []) {\n  let defaultContexts: any[] = [];\n\n  /* -----------------------------------------------------------------------------------------------\n   * createContext\n   * ---------------------------------------------------------------------------------------------*/\n\n  function createContext<ContextValueType extends object | null>(\n    rootComponentName: string,\n    defaultContext?: ContextValueType\n  ) {\n    const BaseContext = React.createContext<ContextValueType | undefined>(defaultContext);\n    const index = defaultContexts.length;\n    defaultContexts = [...defaultContexts, defaultContext];\n\n    function Provider(\n      props: ContextValueType & { scope: Scope<ContextValueType>; children: React.ReactNode }\n    ) {\n      const { scope, children, ...context } = props;\n      const Context = scope?.[scopeName][index] || BaseContext;\n      // Only re-memoize when prop values change\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      const value = React.useMemo(() => context, Object.values(context)) as ContextValueType;\n      return <Context.Provider value={value}>{children}</Context.Provider>;\n    }\n\n    function useContext(consumerName: string, scope: Scope<ContextValueType | undefined>) {\n      const Context = scope?.[scopeName][index] || BaseContext;\n      const context = React.useContext(Context);\n      if (context) return context;\n      if (defaultContext !== undefined) return defaultContext;\n      // if a defaultContext wasn't specified, it's a required context.\n      throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n    }\n\n    Provider.displayName = rootComponentName + 'Provider';\n    return [Provider, useContext] as const;\n  }\n\n  /* -----------------------------------------------------------------------------------------------\n   * createScope\n   * ---------------------------------------------------------------------------------------------*/\n\n  const createScope: CreateScope = () => {\n    const scopeContexts = defaultContexts.map((defaultContext) => {\n      return React.createContext(defaultContext);\n    });\n    return function useScope(scope: Scope) {\n      const contexts = scope?.[scopeName] || scopeContexts;\n      return React.useMemo(\n        () => ({ [`__scope${scopeName}`]: { ...scope, [scopeName]: contexts } }),\n        [scope, contexts]\n      );\n    };\n  };\n\n  createScope.scopeName = scopeName;\n  return [createContext, composeContextScopes(createScope, ...createContextScopeDeps)] as const;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * composeContextScopes\n * -----------------------------------------------------------------------------------------------*/\n\nfunction composeContextScopes(...scopes: CreateScope[]) {\n  const baseScope = scopes[0];\n  if (scopes.length === 1) return baseScope;\n\n  const createScope: CreateScope = () => {\n    const scopeHooks = scopes.map((createScope) => ({\n      useScope: createScope(),\n      scopeName: createScope.scopeName,\n    }));\n\n    return function useComposedScopes(overrideScopes) {\n      const nextScopes = scopeHooks.reduce((nextScopes, { useScope, scopeName }) => {\n        // We are calling a hook inside a callback which React warns against to avoid inconsistent\n        // renders, however, scoping doesn't have render side effects so we ignore the rule.\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const scopeProps = useScope(overrideScopes);\n        const currentScope = scopeProps[`__scope${scopeName}`];\n        return { ...nextScopes, ...currentScope };\n      }, {});\n\n      return React.useMemo(() => ({ [`__scope${baseScope.scopeName}`]: nextScopes }), [nextScopes]);\n    };\n  };\n\n  createScope.scopeName = baseScope.scopeName;\n  return createScope;\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nexport { createContext, createContextScope };\nexport type { CreateScope, Scope };\n", "export { composeRefs, useComposedRefs } from './composeRefs';\n", "import * as React from 'react';\n\ntype PossibleRef<T> = React.Ref<T> | undefined;\n\n/**\n * Set a given ref to a given value\n * This utility takes care of different types of refs: callback refs and RefObject(s)\n */\nfunction setRef<T>(ref: PossibleRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref !== null && ref !== undefined) {\n    (ref as React.MutableRefObject<T>).current = value;\n  }\n}\n\n/**\n * A utility to compose multiple refs together\n * Accepts callback refs and RefObject(s)\n */\nfunction composeRefs<T>(...refs: PossibleRef<T>[]) {\n  return (node: T) => refs.forEach((ref) => setRef(ref, node));\n}\n\n/**\n * A custom hook that composes multiple refs\n * Accepts callback refs and RefObject(s)\n */\nfunction useComposedRefs<T>(...refs: PossibleRef<T>[]) {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return React.useCallback(composeRefs(...refs), refs);\n}\n\nexport { composeRefs, useComposedRefs };\n", "export {\n  Slot,\n  Slottable,\n  //\n  Root,\n} from './Slot';\nexport type { SlotProps } from './Slot';\n", "import * as React from 'react';\nimport { composeRefs } from '@radix-ui/react-compose-refs';\n\n/* -------------------------------------------------------------------------------------------------\n * Slot\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotProps extends React.HTMLAttributes<HTMLElement> {\n  children?: React.ReactNode;\n}\n\nconst Slot = React.forwardRef<HTMLElement, SlotProps>((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n  const childrenArray = React.Children.toArray(children);\n  const slottable = childrenArray.find(isSlottable);\n\n  if (slottable) {\n    // the new element to render is the one passed as a child of `Slottable`\n    const newElement = slottable.props.children as React.ReactNode;\n\n    const newChildren = childrenArray.map((child) => {\n      if (child === slottable) {\n        // because the new element will be the one rendered, we are only interested\n        // in grabbing its children (`newElement.props.children`)\n        if (React.Children.count(newElement) > 1) return React.Children.only(null);\n        return React.isValidElement(newElement)\n          ? (newElement.props.children as React.ReactNode)\n          : null;\n      } else {\n        return child;\n      }\n    });\n\n    return (\n      <SlotClone {...slotProps} ref={forwardedRef}>\n        {React.isValidElement(newElement)\n          ? React.cloneElement(newElement, undefined, newChildren)\n          : null}\n      </SlotClone>\n    );\n  }\n\n  return (\n    <SlotClone {...slotProps} ref={forwardedRef}>\n      {children}\n    </SlotClone>\n  );\n});\n\nSlot.displayName = 'Slot';\n\n/* -------------------------------------------------------------------------------------------------\n * SlotClone\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotCloneProps {\n  children: React.ReactNode;\n}\n\nconst SlotClone = React.forwardRef<any, SlotCloneProps>((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n\n  if (React.isValidElement(children)) {\n    return React.cloneElement(children, {\n      ...mergeProps(slotProps, children.props),\n      ref: composeRefs(forwardedRef, (children as any).ref),\n    });\n  }\n\n  return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n});\n\nSlotClone.displayName = 'SlotClone';\n\n/* -------------------------------------------------------------------------------------------------\n * Slottable\n * -----------------------------------------------------------------------------------------------*/\n\nconst Slottable = ({ children }: { children: React.ReactNode }) => {\n  return <>{children}</>;\n};\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype AnyProps = Record<string, any>;\n\nfunction isSlottable(child: React.ReactNode): child is React.ReactElement {\n  return React.isValidElement(child) && child.type === Slottable;\n}\n\nfunction mergeProps(slotProps: AnyProps, childProps: AnyProps) {\n  // all child props should override\n  const overrideProps = { ...childProps };\n\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n\n    const isHandler = /^on[A-Z]/.test(propName);\n    if (isHandler) {\n      // if the handler exists on both, we compose them\n      if (slotPropValue && childPropValue) {\n        overrideProps[propName] = (...args: unknown[]) => {\n          childPropValue(...args);\n          slotPropValue(...args);\n        };\n      }\n      // but if it exists only on the slot, we use only this one\n      else if (slotPropValue) {\n        overrideProps[propName] = slotPropValue;\n      }\n    }\n    // if it's `style`, we merge them\n    else if (propName === 'style') {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === 'className') {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(' ');\n    }\n  }\n\n  return { ...slotProps, ...overrideProps };\n}\n\nconst Root = Slot;\n\nexport {\n  Slot,\n  Slottable,\n  //\n  Root,\n};\nexport type { SlotProps };\n", "export { createCollection } from './Collection';\nexport type { CollectionProps } from './Collection';\n", "import React from 'react';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { Slot } from '@radix-ui/react-slot';\n\nimport type * as Radix from '@radix-ui/react-primitive';\n\ntype SlotProps = Radix.ComponentPropsWithoutRef<typeof Slot>;\ntype CollectionElement = HTMLElement;\ninterface CollectionProps extends SlotProps {\n  scope: any;\n}\n\n// We have resorted to returning slots directly rather than exposing primitives that can then\n// be slotted like `<CollectionItem as={Slot}>…</CollectionItem>`.\n// This is because we encountered issues with generic types that cannot be statically analysed\n// due to creating them dynamically via createCollection.\n\nfunction createCollection<ItemElement extends HTMLElement, ItemData = {}>(name: string) {\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionProvider\n   * ---------------------------------------------------------------------------------------------*/\n\n  const PROVIDER_NAME = name + 'CollectionProvider';\n  const [createCollectionContext, createCollectionScope] = createContextScope(PROVIDER_NAME);\n\n  type ContextValue = {\n    collectionRef: React.RefObject<CollectionElement>;\n    itemMap: Map<React.RefObject<ItemElement>, { ref: React.RefObject<ItemElement> } & ItemData>;\n  };\n\n  const [CollectionProviderImpl, useCollectionContext] = createCollectionContext<ContextValue>(\n    PROVIDER_NAME,\n    { collectionRef: { current: null }, itemMap: new Map() }\n  );\n\n  const CollectionProvider: React.FC<{ children?: React.ReactNode; scope: any }> = (props) => {\n    const { scope, children } = props;\n    const ref = React.useRef<CollectionElement>(null);\n    const itemMap = React.useRef<ContextValue['itemMap']>(new Map()).current;\n    return (\n      <CollectionProviderImpl scope={scope} itemMap={itemMap} collectionRef={ref}>\n        {children}\n      </CollectionProviderImpl>\n    );\n  };\n\n  CollectionProvider.displayName = PROVIDER_NAME;\n\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionSlot\n   * ---------------------------------------------------------------------------------------------*/\n\n  const COLLECTION_SLOT_NAME = name + 'CollectionSlot';\n\n  const CollectionSlot = React.forwardRef<CollectionElement, CollectionProps>(\n    (props, forwardedRef) => {\n      const { scope, children } = props;\n      const context = useCollectionContext(COLLECTION_SLOT_NAME, scope);\n      const composedRefs = useComposedRefs(forwardedRef, context.collectionRef);\n      return <Slot ref={composedRefs}>{children}</Slot>;\n    }\n  );\n\n  CollectionSlot.displayName = COLLECTION_SLOT_NAME;\n\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionItem\n   * ---------------------------------------------------------------------------------------------*/\n\n  const ITEM_SLOT_NAME = name + 'CollectionItemSlot';\n  const ITEM_DATA_ATTR = 'data-radix-collection-item';\n\n  type CollectionItemSlotProps = ItemData & {\n    children: React.ReactNode;\n    scope: any;\n  };\n\n  const CollectionItemSlot = React.forwardRef<ItemElement, CollectionItemSlotProps>(\n    (props, forwardedRef) => {\n      const { scope, children, ...itemData } = props;\n      const ref = React.useRef<ItemElement>(null);\n      const composedRefs = useComposedRefs(forwardedRef, ref);\n      const context = useCollectionContext(ITEM_SLOT_NAME, scope);\n\n      React.useEffect(() => {\n        context.itemMap.set(ref, { ref, ...(itemData as unknown as ItemData) });\n        return () => void context.itemMap.delete(ref);\n      });\n\n      return (\n        <Slot {...{ [ITEM_DATA_ATTR]: '' }} ref={composedRefs}>\n          {children}\n        </Slot>\n      );\n    }\n  );\n\n  CollectionItemSlot.displayName = ITEM_SLOT_NAME;\n\n  /* -----------------------------------------------------------------------------------------------\n   * useCollection\n   * ---------------------------------------------------------------------------------------------*/\n\n  function useCollection(scope: any) {\n    const context = useCollectionContext(name + 'CollectionConsumer', scope);\n\n    const getItems = React.useCallback(() => {\n      const collectionNode = context.collectionRef.current;\n      if (!collectionNode) return [];\n      const orderedNodes = Array.from(collectionNode.querySelectorAll(`[${ITEM_DATA_ATTR}]`));\n      const items = Array.from(context.itemMap.values());\n      const orderedItems = items.sort(\n        (a, b) => orderedNodes.indexOf(a.ref.current!) - orderedNodes.indexOf(b.ref.current!)\n      );\n      return orderedItems;\n    }, [context.collectionRef, context.itemMap]);\n\n    return getItems;\n  }\n\n  return [\n    { Provider: CollectionProvider, Slot: CollectionSlot, ItemSlot: CollectionItemSlot },\n    useCollection,\n    createCollectionScope,\n  ] as const;\n}\n\nexport { createCollection };\nexport type { CollectionProps };\n", "export { composeRefs, useComposedRefs } from './composeRefs';\n", "import * as React from 'react';\n\ntype PossibleRef<T> = React.Ref<T> | undefined;\n\n/**\n * Set a given ref to a given value\n * This utility takes care of different types of refs: callback refs and RefObject(s)\n */\nfunction setRef<T>(ref: PossibleRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref !== null && ref !== undefined) {\n    (ref as React.MutableRefObject<T>).current = value;\n  }\n}\n\n/**\n * A utility to compose multiple refs together\n * Accepts callback refs and RefObject(s)\n */\nfunction composeRefs<T>(...refs: PossibleRef<T>[]) {\n  return (node: T) => refs.forEach((ref) => setRef(ref, node));\n}\n\n/**\n * A custom hook that composes multiple refs\n * Accepts callback refs and RefObject(s)\n */\nfunction useComposedRefs<T>(...refs: PossibleRef<T>[]) {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return React.useCallback(composeRefs(...refs), refs);\n}\n\nexport { composeRefs, useComposedRefs };\n", "export { createContext, createContextScope } from './createContext';\nexport type { CreateScope, Scope } from './createContext';\n", "import * as React from 'react';\n\nfunction createContext<ContextValueType extends object | null>(\n  rootComponentName: string,\n  defaultContext?: ContextValueType\n) {\n  const Context = React.createContext<ContextValueType | undefined>(defaultContext);\n\n  function Provider(props: ContextValueType & { children: React.ReactNode }) {\n    const { children, ...context } = props;\n    // Only re-memoize when prop values change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const value = React.useMemo(() => context, Object.values(context)) as ContextValueType;\n    return <Context.Provider value={value}>{children}</Context.Provider>;\n  }\n\n  function useContext(consumerName: string) {\n    const context = React.useContext(Context);\n    if (context) return context;\n    if (defaultContext !== undefined) return defaultContext;\n    // if a defaultContext wasn't specified, it's a required context.\n    throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n  }\n\n  Provider.displayName = rootComponentName + 'Provider';\n  return [Provider, useContext] as const;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * createContextScope\n * -----------------------------------------------------------------------------------------------*/\n\ntype Scope<C = any> = { [scopeName: string]: React.Context<C>[] } | undefined;\ntype ScopeHook = (scope: Scope) => { [__scopeProp: string]: Scope };\ninterface CreateScope {\n  scopeName: string;\n  (): ScopeHook;\n}\n\nfunction createContextScope(scopeName: string, createContextScopeDeps: CreateScope[] = []) {\n  let defaultContexts: any[] = [];\n\n  /* -----------------------------------------------------------------------------------------------\n   * createContext\n   * ---------------------------------------------------------------------------------------------*/\n\n  function createContext<ContextValueType extends object | null>(\n    rootComponentName: string,\n    defaultContext?: ContextValueType\n  ) {\n    const BaseContext = React.createContext<ContextValueType | undefined>(defaultContext);\n    const index = defaultContexts.length;\n    defaultContexts = [...defaultContexts, defaultContext];\n\n    function Provider(\n      props: ContextValueType & { scope: Scope<ContextValueType>; children: React.ReactNode }\n    ) {\n      const { scope, children, ...context } = props;\n      const Context = scope?.[scopeName][index] || BaseContext;\n      // Only re-memoize when prop values change\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      const value = React.useMemo(() => context, Object.values(context)) as ContextValueType;\n      return <Context.Provider value={value}>{children}</Context.Provider>;\n    }\n\n    function useContext(consumerName: string, scope: Scope<ContextValueType | undefined>) {\n      const Context = scope?.[scopeName][index] || BaseContext;\n      const context = React.useContext(Context);\n      if (context) return context;\n      if (defaultContext !== undefined) return defaultContext;\n      // if a defaultContext wasn't specified, it's a required context.\n      throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n    }\n\n    Provider.displayName = rootComponentName + 'Provider';\n    return [Provider, useContext] as const;\n  }\n\n  /* -----------------------------------------------------------------------------------------------\n   * createScope\n   * ---------------------------------------------------------------------------------------------*/\n\n  const createScope: CreateScope = () => {\n    const scopeContexts = defaultContexts.map((defaultContext) => {\n      return React.createContext(defaultContext);\n    });\n    return function useScope(scope: Scope) {\n      const contexts = scope?.[scopeName] || scopeContexts;\n      return React.useMemo(\n        () => ({ [`__scope${scopeName}`]: { ...scope, [scopeName]: contexts } }),\n        [scope, contexts]\n      );\n    };\n  };\n\n  createScope.scopeName = scopeName;\n  return [createContext, composeContextScopes(createScope, ...createContextScopeDeps)] as const;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * composeContextScopes\n * -----------------------------------------------------------------------------------------------*/\n\nfunction composeContextScopes(...scopes: CreateScope[]) {\n  const baseScope = scopes[0];\n  if (scopes.length === 1) return baseScope;\n\n  const createScope: CreateScope = () => {\n    const scopeHooks = scopes.map((createScope) => ({\n      useScope: createScope(),\n      scopeName: createScope.scopeName,\n    }));\n\n    return function useComposedScopes(overrideScopes) {\n      const nextScopes = scopeHooks.reduce((nextScopes, { useScope, scopeName }) => {\n        // We are calling a hook inside a callback which React warns against to avoid inconsistent\n        // renders, however, scoping doesn't have render side effects so we ignore the rule.\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const scopeProps = useScope(overrideScopes);\n        const currentScope = scopeProps[`__scope${scopeName}`];\n        return { ...nextScopes, ...currentScope };\n      }, {});\n\n      return React.useMemo(() => ({ [`__scope${baseScope.scopeName}`]: nextScopes }), [nextScopes]);\n    };\n  };\n\n  createScope.scopeName = baseScope.scopeName;\n  return createScope;\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nexport { createContext, createContextScope };\nexport type { CreateScope, Scope };\n", "export { useLayoutEffect } from './useLayoutEffect';\n", "import * as React from 'react';\n\n/**\n * On the server, React emits a warning when calling `useLayoutEffect`.\n * This is because neither `useLayoutEffect` nor `useEffect` run on the server.\n * We use this safe version which suppresses the warning by replacing it with a noop on the server.\n *\n * See: https://reactjs.org/docs/hooks-reference.html#uselayouteffect\n */\nconst useLayoutEffect = Boolean(globalThis?.document) ? React.useLayoutEffect : () => {};\n\nexport { useLayoutEffect };\n", "export { useId } from './id';\n", "import * as React from 'react';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\n\n// We `toString()` to prevent bundlers from trying to `import { useId } from 'react';`\nconst useReactId = (React as any)['useId'.toString()] || (() => undefined);\nlet count = 0;\n\nfunction useId(deterministicId?: string): string {\n  const [id, setId] = React.useState<string | undefined>(useReactId());\n  // React versions older than 18 will have client-side ids only.\n  useLayoutEffect(() => {\n    if (!deterministicId) setId((reactId) => reactId ?? String(count++));\n  }, [deterministicId]);\n  return deterministicId || (id ? `radix-${id}` : '');\n}\n\nexport { useId };\n", "export {\n  Slot,\n  Slottable,\n  //\n  Root,\n} from './Slot';\nexport type { SlotProps } from './Slot';\n", "import * as React from 'react';\nimport { composeRefs } from '@radix-ui/react-compose-refs';\n\n/* -------------------------------------------------------------------------------------------------\n * Slot\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotProps extends React.HTMLAttributes<HTMLElement> {\n  children?: React.ReactNode;\n}\n\nconst Slot = React.forwardRef<HTMLElement, SlotProps>((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n  const childrenArray = React.Children.toArray(children);\n  const slottable = childrenArray.find(isSlottable);\n\n  if (slottable) {\n    // the new element to render is the one passed as a child of `Slottable`\n    const newElement = slottable.props.children as React.ReactNode;\n\n    const newChildren = childrenArray.map((child) => {\n      if (child === slottable) {\n        // because the new element will be the one rendered, we are only interested\n        // in grabbing its children (`newElement.props.children`)\n        if (React.Children.count(newElement) > 1) return React.Children.only(null);\n        return React.isValidElement(newElement)\n          ? (newElement.props.children as React.ReactNode)\n          : null;\n      } else {\n        return child;\n      }\n    });\n\n    return (\n      <SlotClone {...slotProps} ref={forwardedRef}>\n        {React.isValidElement(newElement)\n          ? React.cloneElement(newElement, undefined, newChildren)\n          : null}\n      </SlotClone>\n    );\n  }\n\n  return (\n    <SlotClone {...slotProps} ref={forwardedRef}>\n      {children}\n    </SlotClone>\n  );\n});\n\nSlot.displayName = 'Slot';\n\n/* -------------------------------------------------------------------------------------------------\n * SlotClone\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotCloneProps {\n  children: React.ReactNode;\n}\n\nconst SlotClone = React.forwardRef<any, SlotCloneProps>((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n\n  if (React.isValidElement(children)) {\n    return React.cloneElement(children, {\n      ...mergeProps(slotProps, children.props),\n      ref: composeRefs(forwardedRef, (children as any).ref),\n    });\n  }\n\n  return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n});\n\nSlotClone.displayName = 'SlotClone';\n\n/* -------------------------------------------------------------------------------------------------\n * Slottable\n * -----------------------------------------------------------------------------------------------*/\n\nconst Slottable = ({ children }: { children: React.ReactNode }) => {\n  return <>{children}</>;\n};\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype AnyProps = Record<string, any>;\n\nfunction isSlottable(child: React.ReactNode): child is React.ReactElement {\n  return React.isValidElement(child) && child.type === Slottable;\n}\n\nfunction mergeProps(slotProps: AnyProps, childProps: AnyProps) {\n  // all child props should override\n  const overrideProps = { ...childProps };\n\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n\n    const isHandler = /^on[A-Z]/.test(propName);\n    if (isHandler) {\n      // if the handler exists on both, we compose them\n      if (slotPropValue && childPropValue) {\n        overrideProps[propName] = (...args: unknown[]) => {\n          childPropValue(...args);\n          slotPropValue(...args);\n        };\n      }\n      // but if it exists only on the slot, we use only this one\n      else if (slotPropValue) {\n        overrideProps[propName] = slotPropValue;\n      }\n    }\n    // if it's `style`, we merge them\n    else if (propName === 'style') {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === 'className') {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(' ');\n    }\n  }\n\n  return { ...slotProps, ...overrideProps };\n}\n\nconst Root = Slot;\n\nexport {\n  Slot,\n  Slottable,\n  //\n  Root,\n};\nexport type { SlotProps };\n", "export {\n  Primitive,\n  //\n  Root,\n  //\n  dispatchDiscreteCustomEvent,\n} from './Primitive';\nexport type { ComponentPropsWithoutRef, PrimitivePropsWithRef } from './Primitive';\n", "import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Slot } from '@radix-ui/react-slot';\n\nconst NODES = [\n  'a',\n  'button',\n  'div',\n  'h2',\n  'h3',\n  'img',\n  'label',\n  'li',\n  'nav',\n  'ol',\n  'p',\n  'span',\n  'svg',\n  'ul',\n] as const;\n\n// Temporary while we await merge of this fix:\n// https://github.com/DefinitelyTyped/DefinitelyTyped/pull/55396\n// prettier-ignore\ntype PropsWithoutRef<P> = P extends any ? ('ref' extends keyof P ? Pick<P, Exclude<keyof P, 'ref'>> : P) : P;\ntype ComponentPropsWithoutRef<T extends React.ElementType> = PropsWithoutRef<\n  React.ComponentProps<T>\n>;\n\ntype Primitives = { [E in typeof NODES[number]]: PrimitiveForwardRefComponent<E> };\ntype PrimitivePropsWithRef<E extends React.ElementType> = React.ComponentPropsWithRef<E> & {\n  asChild?: boolean;\n};\n\ninterface PrimitiveForwardRefComponent<E extends React.ElementType>\n  extends React.ForwardRefExoticComponent<PrimitivePropsWithRef<E>> {}\n\n/* -------------------------------------------------------------------------------------------------\n * Primitive\n * -----------------------------------------------------------------------------------------------*/\n\nconst Primitive = NODES.reduce((primitive, node) => {\n  const Node = React.forwardRef((props: PrimitivePropsWithRef<typeof node>, forwardedRef: any) => {\n    const { asChild, ...primitiveProps } = props;\n    const Comp: any = asChild ? Slot : node;\n\n    React.useEffect(() => {\n      (window as any)[Symbol.for('radix-ui')] = true;\n    }, []);\n\n    return <Comp {...primitiveProps} ref={forwardedRef} />;\n  });\n\n  Node.displayName = `Primitive.${node}`;\n\n  return { ...primitive, [node]: Node };\n}, {} as Primitives);\n\n/* -------------------------------------------------------------------------------------------------\n * Utils\n * -----------------------------------------------------------------------------------------------*/\n\n/**\n * Flush custom event dispatch\n * https://github.com/radix-ui/primitives/pull/1378\n *\n * React batches *all* event handlers since version 18, this introduces certain considerations when using custom event types.\n *\n * Internally, React prioritises events in the following order:\n *  - discrete\n *  - continuous\n *  - default\n *\n * https://github.com/facebook/react/blob/a8a4742f1c54493df00da648a3f9d26e3db9c8b5/packages/react-dom/src/events/ReactDOMEventListener.js#L294-L350\n *\n * `discrete` is an  important distinction as updates within these events are applied immediately.\n * React however, is not able to infer the priority of custom event types due to how they are detected internally.\n * Because of this, it's possible for updates from custom events to be unexpectedly batched when\n * dispatched by another `discrete` event.\n *\n * In order to ensure that updates from custom events are applied predictably, we need to manually flush the batch.\n * This utility should be used when dispatching a custom event from within another `discrete` event, this utility\n * is not nessesary when dispatching known event types, or if dispatching a custom type inside a non-discrete event.\n * For example:\n *\n * dispatching a known click 👎\n * target.dispatchEvent(new Event(‘click’))\n *\n * dispatching a custom type within a non-discrete event 👎\n * onScroll={(event) => event.target.dispatchEvent(new CustomEvent(‘customType’))}\n *\n * dispatching a custom type within a `discrete` event 👍\n * onPointerDown={(event) => dispatchDiscreteCustomEvent(event.target, new CustomEvent(‘customType’))}\n *\n * Note: though React classifies `focus`, `focusin` and `focusout` events as `discrete`, it's  not recommended to use\n * this utility with them. This is because it's possible for those handlers to be called implicitly during render\n * e.g. when focus is within a component as it is unmounted, or when managing focus on mount.\n */\n\nfunction dispatchDiscreteCustomEvent<E extends CustomEvent>(target: E['target'], event: E) {\n  if (target) ReactDOM.flushSync(() => target.dispatchEvent(event));\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Primitive;\n\nexport {\n  Primitive,\n  //\n  Root,\n  //\n  dispatchDiscreteCustomEvent,\n};\nexport type { ComponentPropsWithoutRef, PrimitivePropsWithRef };\n", "export { useCallbackRef } from './useCallbackRef';\n", "import * as React from 'react';\n\n/**\n * A custom hook that converts a callback to a ref to avoid triggering re-renders when passed as a\n * prop or avoid re-executing effects when passed as a dependency\n */\nfunction useCallbackRef<T extends (...args: any[]) => any>(callback: T | undefined): T {\n  const callbackRef = React.useRef(callback);\n\n  React.useEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  // https://github.com/facebook/react/issues/19240\n  return React.useMemo(() => ((...args) => callbackRef.current?.(...args)) as T, []);\n}\n\nexport { useCallbackRef };\n", "export { useControllableState } from './useControllableState';\n", "import * as React from 'react';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\n\ntype UseControllableStateParams<T> = {\n  prop?: T | undefined;\n  defaultProp?: T | undefined;\n  onChange?: (state: T) => void;\n};\n\ntype SetStateFn<T> = (prevState?: T) => T;\n\nfunction useControllableState<T>({\n  prop,\n  defaultProp,\n  onChange = () => {},\n}: UseControllableStateParams<T>) {\n  const [uncontrolledProp, setUncontrolledProp] = useUncontrolledState({ defaultProp, onChange });\n  const isControlled = prop !== undefined;\n  const value = isControlled ? prop : uncontrolledProp;\n  const handleChange = useCallbackRef(onChange);\n\n  const setValue: React.Dispatch<React.SetStateAction<T | undefined>> = React.useCallback(\n    (nextValue) => {\n      if (isControlled) {\n        const setter = nextValue as SetStateFn<T>;\n        const value = typeof nextValue === 'function' ? setter(prop) : nextValue;\n        if (value !== prop) handleChange(value as T);\n      } else {\n        setUncontrolledProp(nextValue);\n      }\n    },\n    [isControlled, prop, setUncontrolledProp, handleChange]\n  );\n\n  return [value, setValue] as const;\n}\n\nfunction useUncontrolledState<T>({\n  defaultProp,\n  onChange,\n}: Omit<UseControllableStateParams<T>, 'prop'>) {\n  const uncontrolledState = React.useState<T | undefined>(defaultProp);\n  const [value] = uncontrolledState;\n  const prevValueRef = React.useRef(value);\n  const handleChange = useCallbackRef(onChange);\n\n  React.useEffect(() => {\n    if (prevValueRef.current !== value) {\n      handleChange(value as T);\n      prevValueRef.current = value;\n    }\n  }, [value, prevValueRef, handleChange]);\n\n  return uncontrolledState;\n}\n\nexport { useControllableState };\n", "export {\n  useDirection,\n  //\n  Provider,\n  //\n  DirectionProvider,\n} from './Direction';\n", "import * as React from 'react';\n\ntype Direction = 'ltr' | 'rtl';\nconst DirectionContext = React.createContext<Direction | undefined>(undefined);\n\n/* -------------------------------------------------------------------------------------------------\n * Direction\n * -----------------------------------------------------------------------------------------------*/\n\ninterface DirectionProviderProps {\n  children?: React.ReactNode;\n  dir: Direction;\n}\nconst DirectionProvider: React.FC<DirectionProviderProps> = (props) => {\n  const { dir, children } = props;\n  return <DirectionContext.Provider value={dir}>{children}</DirectionContext.Provider>;\n};\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction useDirection(localDir?: Direction) {\n  const globalDir = React.useContext(DirectionContext);\n  return localDir || globalDir || 'ltr';\n}\n\nconst Provider = DirectionProvider;\n\nexport {\n  useDirection,\n  //\n  Provider,\n  //\n  DirectionProvider,\n};\n", "export {\n  createRovingFocusGroupScope,\n  //\n  RovingFocusGroup,\n  RovingFocusGroupItem,\n  //\n  Root,\n  Item,\n} from './RovingFocusGroup';\nexport type { RovingFocusGroupProps, RovingFocusItemProps } from './RovingFocusGroup';\n", "import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createCollection } from '@radix-ui/react-collection';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useId } from '@radix-ui/react-id';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useDirection } from '@radix-ui/react-direction';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\nconst ENTRY_FOCUS = 'rovingFocusGroup.onEntryFocus';\nconst EVENT_OPTIONS = { bubbles: false, cancelable: true };\n\n/* -------------------------------------------------------------------------------------------------\n * RovingFocusGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst GROUP_NAME = 'RovingFocusGroup';\n\ntype ItemData = { id: string; focusable: boolean; active: boolean };\nconst [Collection, useCollection, createCollectionScope] = createCollection<\n  HTMLSpanElement,\n  ItemData\n>(GROUP_NAME);\n\ntype ScopedProps<P> = P & { __scopeRovingFocusGroup?: Scope };\nconst [createRovingFocusGroupContext, createRovingFocusGroupScope] = createContextScope(\n  GROUP_NAME,\n  [createCollectionScope]\n);\n\ntype Orientation = React.AriaAttributes['aria-orientation'];\ntype Direction = 'ltr' | 'rtl';\n\ninterface RovingFocusGroupOptions {\n  /**\n   * The orientation of the group.\n   * Mainly so arrow navigation is done accordingly (left & right vs. up & down)\n   */\n  orientation?: Orientation;\n  /**\n   * The direction of navigation between items.\n   */\n  dir?: Direction;\n  /**\n   * Whether keyboard navigation should loop around\n   * @defaultValue false\n   */\n  loop?: boolean;\n}\n\ntype RovingContextValue = RovingFocusGroupOptions & {\n  currentTabStopId: string | null;\n  onItemFocus(tabStopId: string): void;\n  onItemShiftTab(): void;\n  onFocusableItemAdd(): void;\n  onFocusableItemRemove(): void;\n};\n\nconst [RovingFocusProvider, useRovingFocusContext] =\n  createRovingFocusGroupContext<RovingContextValue>(GROUP_NAME);\n\ntype RovingFocusGroupElement = RovingFocusGroupImplElement;\ninterface RovingFocusGroupProps extends RovingFocusGroupImplProps {}\n\nconst RovingFocusGroup = React.forwardRef<RovingFocusGroupElement, RovingFocusGroupProps>(\n  (props: ScopedProps<RovingFocusGroupProps>, forwardedRef) => {\n    return (\n      <Collection.Provider scope={props.__scopeRovingFocusGroup}>\n        <Collection.Slot scope={props.__scopeRovingFocusGroup}>\n          <RovingFocusGroupImpl {...props} ref={forwardedRef} />\n        </Collection.Slot>\n      </Collection.Provider>\n    );\n  }\n);\n\nRovingFocusGroup.displayName = GROUP_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype RovingFocusGroupImplElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface RovingFocusGroupImplProps\n  extends Omit<PrimitiveDivProps, 'dir'>,\n    RovingFocusGroupOptions {\n  currentTabStopId?: string | null;\n  defaultCurrentTabStopId?: string;\n  onCurrentTabStopIdChange?: (tabStopId: string | null) => void;\n  onEntryFocus?: (event: Event) => void;\n}\n\nconst RovingFocusGroupImpl = React.forwardRef<\n  RovingFocusGroupImplElement,\n  RovingFocusGroupImplProps\n>((props: ScopedProps<RovingFocusGroupImplProps>, forwardedRef) => {\n  const {\n    __scopeRovingFocusGroup,\n    orientation,\n    loop = false,\n    dir,\n    currentTabStopId: currentTabStopIdProp,\n    defaultCurrentTabStopId,\n    onCurrentTabStopIdChange,\n    onEntryFocus,\n    ...groupProps\n  } = props;\n  const ref = React.useRef<RovingFocusGroupImplElement>(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n  const direction = useDirection(dir);\n  const [currentTabStopId = null, setCurrentTabStopId] = useControllableState({\n    prop: currentTabStopIdProp,\n    defaultProp: defaultCurrentTabStopId,\n    onChange: onCurrentTabStopIdChange,\n  });\n  const [isTabbingBackOut, setIsTabbingBackOut] = React.useState(false);\n  const handleEntryFocus = useCallbackRef(onEntryFocus);\n  const getItems = useCollection(__scopeRovingFocusGroup);\n  const isClickFocusRef = React.useRef(false);\n  const [focusableItemsCount, setFocusableItemsCount] = React.useState(0);\n\n  React.useEffect(() => {\n    const node = ref.current;\n    if (node) {\n      node.addEventListener(ENTRY_FOCUS, handleEntryFocus);\n      return () => node.removeEventListener(ENTRY_FOCUS, handleEntryFocus);\n    }\n  }, [handleEntryFocus]);\n\n  return (\n    <RovingFocusProvider\n      scope={__scopeRovingFocusGroup}\n      orientation={orientation}\n      dir={direction}\n      loop={loop}\n      currentTabStopId={currentTabStopId}\n      onItemFocus={React.useCallback(\n        (tabStopId) => setCurrentTabStopId(tabStopId),\n        [setCurrentTabStopId]\n      )}\n      onItemShiftTab={React.useCallback(() => setIsTabbingBackOut(true), [])}\n      onFocusableItemAdd={React.useCallback(\n        () => setFocusableItemsCount((prevCount) => prevCount + 1),\n        []\n      )}\n      onFocusableItemRemove={React.useCallback(\n        () => setFocusableItemsCount((prevCount) => prevCount - 1),\n        []\n      )}\n    >\n      <Primitive.div\n        tabIndex={isTabbingBackOut || focusableItemsCount === 0 ? -1 : 0}\n        data-orientation={orientation}\n        {...groupProps}\n        ref={composedRefs}\n        style={{ outline: 'none', ...props.style }}\n        onMouseDown={composeEventHandlers(props.onMouseDown, () => {\n          isClickFocusRef.current = true;\n        })}\n        onFocus={composeEventHandlers(props.onFocus, (event) => {\n          // We normally wouldn't need this check, because we already check\n          // that the focus is on the current target and not bubbling to it.\n          // We do this because Safari doesn't focus buttons when clicked, and\n          // instead, the wrapper will get focused and not through a bubbling event.\n          const isKeyboardFocus = !isClickFocusRef.current;\n\n          if (event.target === event.currentTarget && isKeyboardFocus && !isTabbingBackOut) {\n            const entryFocusEvent = new CustomEvent(ENTRY_FOCUS, EVENT_OPTIONS);\n            event.currentTarget.dispatchEvent(entryFocusEvent);\n\n            if (!entryFocusEvent.defaultPrevented) {\n              const items = getItems().filter((item) => item.focusable);\n              const activeItem = items.find((item) => item.active);\n              const currentItem = items.find((item) => item.id === currentTabStopId);\n              const candidateItems = [activeItem, currentItem, ...items].filter(\n                Boolean\n              ) as typeof items;\n              const candidateNodes = candidateItems.map((item) => item.ref.current!);\n              focusFirst(candidateNodes);\n            }\n          }\n\n          isClickFocusRef.current = false;\n        })}\n        onBlur={composeEventHandlers(props.onBlur, () => setIsTabbingBackOut(false))}\n      />\n    </RovingFocusProvider>\n  );\n});\n\n/* -------------------------------------------------------------------------------------------------\n * RovingFocusGroupItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'RovingFocusGroupItem';\n\ntype RovingFocusItemElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = Radix.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface RovingFocusItemProps extends PrimitiveSpanProps {\n  tabStopId?: string;\n  focusable?: boolean;\n  active?: boolean;\n}\n\nconst RovingFocusGroupItem = React.forwardRef<RovingFocusItemElement, RovingFocusItemProps>(\n  (props: ScopedProps<RovingFocusItemProps>, forwardedRef) => {\n    const {\n      __scopeRovingFocusGroup,\n      focusable = true,\n      active = false,\n      tabStopId,\n      ...itemProps\n    } = props;\n    const autoId = useId();\n    const id = tabStopId || autoId;\n    const context = useRovingFocusContext(ITEM_NAME, __scopeRovingFocusGroup);\n    const isCurrentTabStop = context.currentTabStopId === id;\n    const getItems = useCollection(__scopeRovingFocusGroup);\n\n    const { onFocusableItemAdd, onFocusableItemRemove } = context;\n\n    React.useEffect(() => {\n      if (focusable) {\n        onFocusableItemAdd();\n        return () => onFocusableItemRemove();\n      }\n    }, [focusable, onFocusableItemAdd, onFocusableItemRemove]);\n\n    return (\n      <Collection.ItemSlot\n        scope={__scopeRovingFocusGroup}\n        id={id}\n        focusable={focusable}\n        active={active}\n      >\n        <Primitive.span\n          tabIndex={isCurrentTabStop ? 0 : -1}\n          data-orientation={context.orientation}\n          {...itemProps}\n          ref={forwardedRef}\n          onMouseDown={composeEventHandlers(props.onMouseDown, (event) => {\n            // We prevent focusing non-focusable items on `mousedown`.\n            // Even though the item has tabIndex={-1}, that only means take it out of the tab order.\n            if (!focusable) event.preventDefault();\n            // Safari doesn't focus a button when clicked so we run our logic on mousedown also\n            else context.onItemFocus(id);\n          })}\n          onFocus={composeEventHandlers(props.onFocus, () => context.onItemFocus(id))}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            if (event.key === 'Tab' && event.shiftKey) {\n              context.onItemShiftTab();\n              return;\n            }\n\n            if (event.target !== event.currentTarget) return;\n\n            const focusIntent = getFocusIntent(event, context.orientation, context.dir);\n\n            if (focusIntent !== undefined) {\n              event.preventDefault();\n              const items = getItems().filter((item) => item.focusable);\n              let candidateNodes = items.map((item) => item.ref.current!);\n\n              if (focusIntent === 'last') candidateNodes.reverse();\n              else if (focusIntent === 'prev' || focusIntent === 'next') {\n                if (focusIntent === 'prev') candidateNodes.reverse();\n                const currentIndex = candidateNodes.indexOf(event.currentTarget);\n                candidateNodes = context.loop\n                  ? wrapArray(candidateNodes, currentIndex + 1)\n                  : candidateNodes.slice(currentIndex + 1);\n              }\n\n              /**\n               * Imperative focus during keydown is risky so we prevent React's batching updates\n               * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n               */\n              setTimeout(() => focusFirst(candidateNodes));\n            }\n          })}\n        />\n      </Collection.ItemSlot>\n    );\n  }\n);\n\nRovingFocusGroupItem.displayName = ITEM_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\n// prettier-ignore\nconst MAP_KEY_TO_FOCUS_INTENT: Record<string, FocusIntent> = {\n  ArrowLeft: 'prev', ArrowUp: 'prev',\n  ArrowRight: 'next', ArrowDown: 'next',\n  PageUp: 'first', Home: 'first',\n  PageDown: 'last', End: 'last',\n};\n\nfunction getDirectionAwareKey(key: string, dir?: Direction) {\n  if (dir !== 'rtl') return key;\n  return key === 'ArrowLeft' ? 'ArrowRight' : key === 'ArrowRight' ? 'ArrowLeft' : key;\n}\n\ntype FocusIntent = 'first' | 'last' | 'prev' | 'next';\n\nfunction getFocusIntent(event: React.KeyboardEvent, orientation?: Orientation, dir?: Direction) {\n  const key = getDirectionAwareKey(event.key, dir);\n  if (orientation === 'vertical' && ['ArrowLeft', 'ArrowRight'].includes(key)) return undefined;\n  if (orientation === 'horizontal' && ['ArrowUp', 'ArrowDown'].includes(key)) return undefined;\n  return MAP_KEY_TO_FOCUS_INTENT[key];\n}\n\nfunction focusFirst(candidates: HTMLElement[]) {\n  const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;\n  for (const candidate of candidates) {\n    // if focus is already where we want to go, we don't want to keep going through the candidates\n    if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;\n    candidate.focus();\n    if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;\n  }\n}\n\n/**\n * Wraps an array around itself at a given start index\n * Example: `wrapArray(['a', 'b', 'c', 'd'], 2) === ['c', 'd', 'a', 'b']`\n */\nfunction wrapArray<T>(array: T[], startIndex: number) {\n  return array.map((_, index) => array[(startIndex + index) % array.length]);\n}\n\nconst Root = RovingFocusGroup;\nconst Item = RovingFocusGroupItem;\n\nexport {\n  createRovingFocusGroupScope,\n  //\n  RovingFocusGroup,\n  RovingFocusGroupItem,\n  //\n  Root,\n  Item,\n};\nexport type { RovingFocusGroupProps, RovingFocusItemProps };\n", "export { composeRefs, useComposedRefs } from './composeRefs';\n", "import * as React from 'react';\n\ntype PossibleRef<T> = React.Ref<T> | undefined;\n\n/**\n * Set a given ref to a given value\n * This utility takes care of different types of refs: callback refs and RefObject(s)\n */\nfunction setRef<T>(ref: PossibleRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref !== null && ref !== undefined) {\n    (ref as React.MutableRefObject<T>).current = value;\n  }\n}\n\n/**\n * A utility to compose multiple refs together\n * Accepts callback refs and RefObject(s)\n */\nfunction composeRefs<T>(...refs: PossibleRef<T>[]) {\n  return (node: T) => refs.forEach((ref) => setRef(ref, node));\n}\n\n/**\n * A custom hook that composes multiple refs\n * Accepts callback refs and RefObject(s)\n */\nfunction useComposedRefs<T>(...refs: PossibleRef<T>[]) {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return React.useCallback(composeRefs(...refs), refs);\n}\n\nexport { composeRefs, useComposedRefs };\n", "export { useLayoutEffect } from './useLayoutEffect';\n", "import * as React from 'react';\n\n/**\n * On the server, React emits a warning when calling `useLayoutEffect`.\n * This is because neither `useLayoutEffect` nor `useEffect` run on the server.\n * We use this safe version which suppresses the warning by replacing it with a noop on the server.\n *\n * See: https://reactjs.org/docs/hooks-reference.html#uselayouteffect\n */\nconst useLayoutEffect = Boolean(globalThis?.document) ? React.useLayoutEffect : () => {};\n\nexport { useLayoutEffect };\n", "export { Presence } from './Presence';\nexport type { PresenceProps } from './Presence';\n", "import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { useStateMachine } from './useStateMachine';\n\ninterface PresenceProps {\n  children: React.ReactElement | ((props: { present: boolean }) => React.ReactElement);\n  present: boolean;\n}\n\nconst Presence: React.FC<PresenceProps> = (props) => {\n  const { present, children } = props;\n  const presence = usePresence(present);\n\n  const child = (\n    typeof children === 'function'\n      ? children({ present: presence.isPresent })\n      : React.Children.only(children)\n  ) as React.ReactElement;\n\n  const ref = useComposedRefs(presence.ref, (child as any).ref);\n  const forceMount = typeof children === 'function';\n  return forceMount || presence.isPresent ? React.cloneElement(child, { ref }) : null;\n};\n\nPresence.displayName = 'Presence';\n\n/* -------------------------------------------------------------------------------------------------\n * usePresence\n * -----------------------------------------------------------------------------------------------*/\n\nfunction usePresence(present: boolean) {\n  const [node, setNode] = React.useState<HTMLElement>();\n  const stylesRef = React.useRef<CSSStyleDeclaration>({} as any);\n  const prevPresentRef = React.useRef(present);\n  const prevAnimationNameRef = React.useRef<string>('none');\n  const initialState = present ? 'mounted' : 'unmounted';\n  const [state, send] = useStateMachine(initialState, {\n    mounted: {\n      UNMOUNT: 'unmounted',\n      ANIMATION_OUT: 'unmountSuspended',\n    },\n    unmountSuspended: {\n      MOUNT: 'mounted',\n      ANIMATION_END: 'unmounted',\n    },\n    unmounted: {\n      MOUNT: 'mounted',\n    },\n  });\n\n  React.useEffect(() => {\n    const currentAnimationName = getAnimationName(stylesRef.current);\n    prevAnimationNameRef.current = state === 'mounted' ? currentAnimationName : 'none';\n  }, [state]);\n\n  useLayoutEffect(() => {\n    const styles = stylesRef.current;\n    const wasPresent = prevPresentRef.current;\n    const hasPresentChanged = wasPresent !== present;\n\n    if (hasPresentChanged) {\n      const prevAnimationName = prevAnimationNameRef.current;\n      const currentAnimationName = getAnimationName(styles);\n\n      if (present) {\n        send('MOUNT');\n      } else if (currentAnimationName === 'none' || styles?.display === 'none') {\n        // If there is no exit animation or the element is hidden, animations won't run\n        // so we unmount instantly\n        send('UNMOUNT');\n      } else {\n        /**\n         * When `present` changes to `false`, we check changes to animation-name to\n         * determine whether an animation has started. We chose this approach (reading\n         * computed styles) because there is no `animationrun` event and `animationstart`\n         * fires after `animation-delay` has expired which would be too late.\n         */\n        const isAnimating = prevAnimationName !== currentAnimationName;\n\n        if (wasPresent && isAnimating) {\n          send('ANIMATION_OUT');\n        } else {\n          send('UNMOUNT');\n        }\n      }\n\n      prevPresentRef.current = present;\n    }\n  }, [present, send]);\n\n  useLayoutEffect(() => {\n    if (node) {\n      /**\n       * Triggering an ANIMATION_OUT during an ANIMATION_IN will fire an `animationcancel`\n       * event for ANIMATION_IN after we have entered `unmountSuspended` state. So, we\n       * make sure we only trigger ANIMATION_END for the currently active animation.\n       */\n      const handleAnimationEnd = (event: AnimationEvent) => {\n        const currentAnimationName = getAnimationName(stylesRef.current);\n        const isCurrentAnimation = currentAnimationName.includes(event.animationName);\n        if (event.target === node && isCurrentAnimation) {\n          // With React 18 concurrency this update is applied\n          // a frame after the animation ends, creating a flash of visible content.\n          // By manually flushing we ensure they sync within a frame, removing the flash.\n          ReactDOM.flushSync(() => send('ANIMATION_END'));\n        }\n      };\n      const handleAnimationStart = (event: AnimationEvent) => {\n        if (event.target === node) {\n          // if animation occurred, store its name as the previous animation.\n          prevAnimationNameRef.current = getAnimationName(stylesRef.current);\n        }\n      };\n      node.addEventListener('animationstart', handleAnimationStart);\n      node.addEventListener('animationcancel', handleAnimationEnd);\n      node.addEventListener('animationend', handleAnimationEnd);\n      return () => {\n        node.removeEventListener('animationstart', handleAnimationStart);\n        node.removeEventListener('animationcancel', handleAnimationEnd);\n        node.removeEventListener('animationend', handleAnimationEnd);\n      };\n    } else {\n      // Transition to the unmounted state if the node is removed prematurely.\n      // We avoid doing so during cleanup as the node may change but still exist.\n      send('ANIMATION_END');\n    }\n  }, [node, send]);\n\n  return {\n    isPresent: ['mounted', 'unmountSuspended'].includes(state),\n    ref: React.useCallback((node: HTMLElement) => {\n      if (node) stylesRef.current = getComputedStyle(node);\n      setNode(node);\n    }, []),\n  };\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getAnimationName(styles?: CSSStyleDeclaration) {\n  return styles?.animationName || 'none';\n}\n\nexport { Presence };\nexport type { PresenceProps };\n", "import * as React from 'react';\n\ntype Machine<S> = { [k: string]: { [k: string]: S } };\ntype MachineState<T> = keyof T;\ntype MachineEvent<T> = keyof UnionToIntersection<T[keyof T]>;\n\n// 🤯 https://fettblog.eu/typescript-union-to-intersection/\ntype UnionToIntersection<T> = (T extends any ? (x: T) => any : never) extends (x: infer R) => any\n  ? R\n  : never;\n\nexport function useStateMachine<M>(\n  initialState: MachineState<M>,\n  machine: M & Machine<MachineState<M>>\n) {\n  return React.useReducer((state: MachineState<M>, event: MachineEvent<M>): MachineState<M> => {\n    const nextState = (machine[state] as any)[event];\n    return nextState ?? state;\n  }, initialState);\n}\n", "export {\n  Slot,\n  Slottable,\n  //\n  Root,\n} from './Slot';\nexport type { SlotProps } from './Slot';\n", "import * as React from 'react';\nimport { composeRefs } from '@radix-ui/react-compose-refs';\n\n/* -------------------------------------------------------------------------------------------------\n * Slot\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotProps extends React.HTMLAttributes<HTMLElement> {\n  children?: React.ReactNode;\n}\n\nconst Slot = React.forwardRef<HTMLElement, SlotProps>((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n  const childrenArray = React.Children.toArray(children);\n  const slottable = childrenArray.find(isSlottable);\n\n  if (slottable) {\n    // the new element to render is the one passed as a child of `Slottable`\n    const newElement = slottable.props.children as React.ReactNode;\n\n    const newChildren = childrenArray.map((child) => {\n      if (child === slottable) {\n        // because the new element will be the one rendered, we are only interested\n        // in grabbing its children (`newElement.props.children`)\n        if (React.Children.count(newElement) > 1) return React.Children.only(null);\n        return React.isValidElement(newElement)\n          ? (newElement.props.children as React.ReactNode)\n          : null;\n      } else {\n        return child;\n      }\n    });\n\n    return (\n      <SlotClone {...slotProps} ref={forwardedRef}>\n        {React.isValidElement(newElement)\n          ? React.cloneElement(newElement, undefined, newChildren)\n          : null}\n      </SlotClone>\n    );\n  }\n\n  return (\n    <SlotClone {...slotProps} ref={forwardedRef}>\n      {children}\n    </SlotClone>\n  );\n});\n\nSlot.displayName = 'Slot';\n\n/* -------------------------------------------------------------------------------------------------\n * SlotClone\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotCloneProps {\n  children: React.ReactNode;\n}\n\nconst SlotClone = React.forwardRef<any, SlotCloneProps>((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n\n  if (React.isValidElement(children)) {\n    return React.cloneElement(children, {\n      ...mergeProps(slotProps, children.props),\n      ref: composeRefs(forwardedRef, (children as any).ref),\n    });\n  }\n\n  return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n});\n\nSlotClone.displayName = 'SlotClone';\n\n/* -------------------------------------------------------------------------------------------------\n * Slottable\n * -----------------------------------------------------------------------------------------------*/\n\nconst Slottable = ({ children }: { children: React.ReactNode }) => {\n  return <>{children}</>;\n};\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype AnyProps = Record<string, any>;\n\nfunction isSlottable(child: React.ReactNode): child is React.ReactElement {\n  return React.isValidElement(child) && child.type === Slottable;\n}\n\nfunction mergeProps(slotProps: AnyProps, childProps: AnyProps) {\n  // all child props should override\n  const overrideProps = { ...childProps };\n\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n\n    const isHandler = /^on[A-Z]/.test(propName);\n    if (isHandler) {\n      // if the handler exists on both, we compose them\n      if (slotPropValue && childPropValue) {\n        overrideProps[propName] = (...args: unknown[]) => {\n          childPropValue(...args);\n          slotPropValue(...args);\n        };\n      }\n      // but if it exists only on the slot, we use only this one\n      else if (slotPropValue) {\n        overrideProps[propName] = slotPropValue;\n      }\n    }\n    // if it's `style`, we merge them\n    else if (propName === 'style') {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === 'className') {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(' ');\n    }\n  }\n\n  return { ...slotProps, ...overrideProps };\n}\n\nconst Root = Slot;\n\nexport {\n  Slot,\n  Slottable,\n  //\n  Root,\n};\nexport type { SlotProps };\n", "export {\n  Primitive,\n  //\n  Root,\n  //\n  dispatchDiscreteCustomEvent,\n} from './Primitive';\nexport type { ComponentPropsWithoutRef, PrimitivePropsWithRef } from './Primitive';\n", "import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Slot } from '@radix-ui/react-slot';\n\nconst NODES = [\n  'a',\n  'button',\n  'div',\n  'h2',\n  'h3',\n  'img',\n  'label',\n  'li',\n  'nav',\n  'ol',\n  'p',\n  'span',\n  'svg',\n  'ul',\n] as const;\n\n// Temporary while we await merge of this fix:\n// https://github.com/DefinitelyTyped/DefinitelyTyped/pull/55396\n// prettier-ignore\ntype PropsWithoutRef<P> = P extends any ? ('ref' extends keyof P ? Pick<P, Exclude<keyof P, 'ref'>> : P) : P;\ntype ComponentPropsWithoutRef<T extends React.ElementType> = PropsWithoutRef<\n  React.ComponentProps<T>\n>;\n\ntype Primitives = { [E in typeof NODES[number]]: PrimitiveForwardRefComponent<E> };\ntype PrimitivePropsWithRef<E extends React.ElementType> = React.ComponentPropsWithRef<E> & {\n  asChild?: boolean;\n};\n\ninterface PrimitiveForwardRefComponent<E extends React.ElementType>\n  extends React.ForwardRefExoticComponent<PrimitivePropsWithRef<E>> {}\n\n/* -------------------------------------------------------------------------------------------------\n * Primitive\n * -----------------------------------------------------------------------------------------------*/\n\nconst Primitive = NODES.reduce((primitive, node) => {\n  const Node = React.forwardRef((props: PrimitivePropsWithRef<typeof node>, forwardedRef: any) => {\n    const { asChild, ...primitiveProps } = props;\n    const Comp: any = asChild ? Slot : node;\n\n    React.useEffect(() => {\n      (window as any)[Symbol.for('radix-ui')] = true;\n    }, []);\n\n    return <Comp {...primitiveProps} ref={forwardedRef} />;\n  });\n\n  Node.displayName = `Primitive.${node}`;\n\n  return { ...primitive, [node]: Node };\n}, {} as Primitives);\n\n/* -------------------------------------------------------------------------------------------------\n * Utils\n * -----------------------------------------------------------------------------------------------*/\n\n/**\n * Flush custom event dispatch\n * https://github.com/radix-ui/primitives/pull/1378\n *\n * React batches *all* event handlers since version 18, this introduces certain considerations when using custom event types.\n *\n * Internally, React prioritises events in the following order:\n *  - discrete\n *  - continuous\n *  - default\n *\n * https://github.com/facebook/react/blob/a8a4742f1c54493df00da648a3f9d26e3db9c8b5/packages/react-dom/src/events/ReactDOMEventListener.js#L294-L350\n *\n * `discrete` is an  important distinction as updates within these events are applied immediately.\n * React however, is not able to infer the priority of custom event types due to how they are detected internally.\n * Because of this, it's possible for updates from custom events to be unexpectedly batched when\n * dispatched by another `discrete` event.\n *\n * In order to ensure that updates from custom events are applied predictably, we need to manually flush the batch.\n * This utility should be used when dispatching a custom event from within another `discrete` event, this utility\n * is not nessesary when dispatching known event types, or if dispatching a custom type inside a non-discrete event.\n * For example:\n *\n * dispatching a known click 👎\n * target.dispatchEvent(new Event(‘click’))\n *\n * dispatching a custom type within a non-discrete event 👎\n * onScroll={(event) => event.target.dispatchEvent(new CustomEvent(‘customType’))}\n *\n * dispatching a custom type within a `discrete` event 👍\n * onPointerDown={(event) => dispatchDiscreteCustomEvent(event.target, new CustomEvent(‘customType’))}\n *\n * Note: though React classifies `focus`, `focusin` and `focusout` events as `discrete`, it's  not recommended to use\n * this utility with them. This is because it's possible for those handlers to be called implicitly during render\n * e.g. when focus is within a component as it is unmounted, or when managing focus on mount.\n */\n\nfunction dispatchDiscreteCustomEvent<E extends CustomEvent>(target: E['target'], event: E) {\n  if (target) ReactDOM.flushSync(() => target.dispatchEvent(event));\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Primitive;\n\nexport {\n  Primitive,\n  //\n  Root,\n  //\n  dispatchDiscreteCustomEvent,\n};\nexport type { ComponentPropsWithoutRef, PrimitivePropsWithRef };\n", "export { useCallbackRef } from './useCallbackRef';\n", "import * as React from 'react';\n\n/**\n * A custom hook that converts a callback to a ref to avoid triggering re-renders when passed as a\n * prop or avoid re-executing effects when passed as a dependency\n */\nfunction useCallbackRef<T extends (...args: any[]) => any>(callback: T | undefined): T {\n  const callbackRef = React.useRef(callback);\n\n  React.useEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  // https://github.com/facebook/react/issues/19240\n  return React.useMemo(() => ((...args) => callbackRef.current?.(...args)) as T, []);\n}\n\nexport { useCallbackRef };\n", "export { useControllableState } from './useControllableState';\n", "import * as React from 'react';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\n\ntype UseControllableStateParams<T> = {\n  prop?: T | undefined;\n  defaultProp?: T | undefined;\n  onChange?: (state: T) => void;\n};\n\ntype SetStateFn<T> = (prevState?: T) => T;\n\nfunction useControllableState<T>({\n  prop,\n  defaultProp,\n  onChange = () => {},\n}: UseControllableStateParams<T>) {\n  const [uncontrolledProp, setUncontrolledProp] = useUncontrolledState({ defaultProp, onChange });\n  const isControlled = prop !== undefined;\n  const value = isControlled ? prop : uncontrolledProp;\n  const handleChange = useCallbackRef(onChange);\n\n  const setValue: React.Dispatch<React.SetStateAction<T | undefined>> = React.useCallback(\n    (nextValue) => {\n      if (isControlled) {\n        const setter = nextValue as SetStateFn<T>;\n        const value = typeof nextValue === 'function' ? setter(prop) : nextValue;\n        if (value !== prop) handleChange(value as T);\n      } else {\n        setUncontrolledProp(nextValue);\n      }\n    },\n    [isControlled, prop, setUncontrolledProp, handleChange]\n  );\n\n  return [value, setValue] as const;\n}\n\nfunction useUncontrolledState<T>({\n  defaultProp,\n  onChange,\n}: Omit<UseControllableStateParams<T>, 'prop'>) {\n  const uncontrolledState = React.useState<T | undefined>(defaultProp);\n  const [value] = uncontrolledState;\n  const prevValueRef = React.useRef(value);\n  const handleChange = useCallbackRef(onChange);\n\n  React.useEffect(() => {\n    if (prevValueRef.current !== value) {\n      handleChange(value as T);\n      prevValueRef.current = value;\n    }\n  }, [value, prevValueRef, handleChange]);\n\n  return uncontrolledState;\n}\n\nexport { useControllableState };\n", "export { useId } from './id';\n", "import * as React from 'react';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\n\n// We `toString()` to prevent bundlers from trying to `import { useId } from 'react';`\nconst useReactId = (React as any)['useId'.toString()] || (() => undefined);\nlet count = 0;\n\nfunction useId(deterministicId?: string): string {\n  const [id, setId] = React.useState<string | undefined>(useReactId());\n  // React versions older than 18 will have client-side ids only.\n  useLayoutEffect(() => {\n    if (!deterministicId) setId((reactId) => reactId ?? String(count++));\n  }, [deterministicId]);\n  return deterministicId || (id ? `radix-${id}` : '');\n}\n\nexport { useId };\n", "export {\n  createTabsScope,\n  //\n  Tabs,\n  TabsList,\n  TabsTrigger,\n  TabsContent,\n  //\n  Root,\n  List,\n  Trigger,\n  Content,\n} from './Tabs';\nexport type { TabsProps, TabsListProps, TabsTriggerProps, TabsContentProps } from './Tabs';\n", "import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { createRovingFocusGroupScope } from '@radix-ui/react-roving-focus';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as RovingFocusGroup from '@radix-ui/react-roving-focus';\nimport { useDirection } from '@radix-ui/react-direction';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useId } from '@radix-ui/react-id';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Tabs\n * -----------------------------------------------------------------------------------------------*/\n\nconst TABS_NAME = 'Tabs';\n\ntype ScopedProps<P> = P & { __scopeTabs?: Scope };\nconst [createTabsContext, createTabsScope] = createContextScope(TABS_NAME, [\n  createRovingFocusGroupScope,\n]);\nconst useRovingFocusGroupScope = createRovingFocusGroupScope();\n\ntype TabsContextValue = {\n  baseId: string;\n  value?: string;\n  onValueChange: (value: string) => void;\n  orientation?: TabsProps['orientation'];\n  dir?: TabsProps['dir'];\n  activationMode?: TabsProps['activationMode'];\n};\n\nconst [TabsProvider, useTabsContext] = createTabsContext<TabsContextValue>(TABS_NAME);\n\ntype TabsElement = React.ElementRef<typeof Primitive.div>;\ntype RovingFocusGroupProps = Radix.ComponentPropsWithoutRef<typeof RovingFocusGroup.Root>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface TabsProps extends PrimitiveDivProps {\n  /** The value for the selected tab, if controlled */\n  value?: string;\n  /** The value of the tab to select by default, if uncontrolled */\n  defaultValue?: string;\n  /** A function called when a new tab is selected */\n  onValueChange?: (value: string) => void;\n  /**\n   * The orientation the tabs are layed out.\n   * Mainly so arrow navigation is done accordingly (left & right vs. up & down)\n   * @defaultValue horizontal\n   */\n  orientation?: RovingFocusGroupProps['orientation'];\n  /**\n   * The direction of navigation between toolbar items.\n   */\n  dir?: RovingFocusGroupProps['dir'];\n  /**\n   * Whether a tab is activated automatically or manually.\n   * @defaultValue automatic\n   * */\n  activationMode?: 'automatic' | 'manual';\n}\n\nconst Tabs = React.forwardRef<TabsElement, TabsProps>(\n  (props: ScopedProps<TabsProps>, forwardedRef) => {\n    const {\n      __scopeTabs,\n      value: valueProp,\n      onValueChange,\n      defaultValue,\n      orientation = 'horizontal',\n      dir,\n      activationMode = 'automatic',\n      ...tabsProps\n    } = props;\n    const direction = useDirection(dir);\n    const [value, setValue] = useControllableState({\n      prop: valueProp,\n      onChange: onValueChange,\n      defaultProp: defaultValue,\n    });\n\n    return (\n      <TabsProvider\n        scope={__scopeTabs}\n        baseId={useId()}\n        value={value}\n        onValueChange={setValue}\n        orientation={orientation}\n        dir={direction}\n        activationMode={activationMode}\n      >\n        <Primitive.div\n          dir={direction}\n          data-orientation={orientation}\n          {...tabsProps}\n          ref={forwardedRef}\n        />\n      </TabsProvider>\n    );\n  }\n);\n\nTabs.displayName = TABS_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TabsList\n * -----------------------------------------------------------------------------------------------*/\n\nconst TAB_LIST_NAME = 'TabsList';\n\ntype TabsListElement = React.ElementRef<typeof Primitive.div>;\ninterface TabsListProps extends PrimitiveDivProps {\n  loop?: RovingFocusGroupProps['loop'];\n}\n\nconst TabsList = React.forwardRef<TabsListElement, TabsListProps>(\n  (props: ScopedProps<TabsListProps>, forwardedRef) => {\n    const { __scopeTabs, loop = true, ...listProps } = props;\n    const context = useTabsContext(TAB_LIST_NAME, __scopeTabs);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeTabs);\n    return (\n      <RovingFocusGroup.Root\n        asChild\n        {...rovingFocusGroupScope}\n        orientation={context.orientation}\n        dir={context.dir}\n        loop={loop}\n      >\n        <Primitive.div\n          role=\"tablist\"\n          aria-orientation={context.orientation}\n          {...listProps}\n          ref={forwardedRef}\n        />\n      </RovingFocusGroup.Root>\n    );\n  }\n);\n\nTabsList.displayName = TAB_LIST_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TabsTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'TabsTrigger';\n\ntype TabsTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = Radix.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface TabsTriggerProps extends PrimitiveButtonProps {\n  value: string;\n}\n\nconst TabsTrigger = React.forwardRef<TabsTriggerElement, TabsTriggerProps>(\n  (props: ScopedProps<TabsTriggerProps>, forwardedRef) => {\n    const { __scopeTabs, value, disabled = false, ...triggerProps } = props;\n    const context = useTabsContext(TRIGGER_NAME, __scopeTabs);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeTabs);\n    const triggerId = makeTriggerId(context.baseId, value);\n    const contentId = makeContentId(context.baseId, value);\n    const isSelected = value === context.value;\n    return (\n      <RovingFocusGroup.Item\n        asChild\n        {...rovingFocusGroupScope}\n        focusable={!disabled}\n        active={isSelected}\n      >\n        <Primitive.button\n          type=\"button\"\n          role=\"tab\"\n          aria-selected={isSelected}\n          aria-controls={contentId}\n          data-state={isSelected ? 'active' : 'inactive'}\n          data-disabled={disabled ? '' : undefined}\n          disabled={disabled}\n          id={triggerId}\n          {...triggerProps}\n          ref={forwardedRef}\n          onMouseDown={composeEventHandlers(props.onMouseDown, (event) => {\n            // only call handler if it's the left button (mousedown gets triggered by all mouse buttons)\n            // but not when the control key is pressed (avoiding MacOS right click)\n            if (!disabled && event.button === 0 && event.ctrlKey === false) {\n              context.onValueChange(value);\n            } else {\n              // prevent focus to avoid accidental activation\n              event.preventDefault();\n            }\n          })}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            if ([' ', 'Enter'].includes(event.key)) context.onValueChange(value);\n          })}\n          onFocus={composeEventHandlers(props.onFocus, () => {\n            // handle \"automatic\" activation if necessary\n            // ie. activate tab following focus\n            const isAutomaticActivation = context.activationMode !== 'manual';\n            if (!isSelected && !disabled && isAutomaticActivation) {\n              context.onValueChange(value);\n            }\n          })}\n        />\n      </RovingFocusGroup.Item>\n    );\n  }\n);\n\nTabsTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TabsContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'TabsContent';\n\ntype TabsContentElement = React.ElementRef<typeof Primitive.div>;\ninterface TabsContentProps extends PrimitiveDivProps {\n  value: string;\n\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst TabsContent = React.forwardRef<TabsContentElement, TabsContentProps>(\n  (props: ScopedProps<TabsContentProps>, forwardedRef) => {\n    const { __scopeTabs, value, forceMount, children, ...contentProps } = props;\n    const context = useTabsContext(CONTENT_NAME, __scopeTabs);\n    const triggerId = makeTriggerId(context.baseId, value);\n    const contentId = makeContentId(context.baseId, value);\n    const isSelected = value === context.value;\n    const isMountAnimationPreventedRef = React.useRef(isSelected);\n\n    React.useEffect(() => {\n      const rAF = requestAnimationFrame(() => (isMountAnimationPreventedRef.current = false));\n      return () => cancelAnimationFrame(rAF);\n    }, []);\n\n    return (\n      <Presence present={forceMount || isSelected}>\n        {({ present }) => (\n          <Primitive.div\n            data-state={isSelected ? 'active' : 'inactive'}\n            data-orientation={context.orientation}\n            role=\"tabpanel\"\n            aria-labelledby={triggerId}\n            hidden={!present}\n            id={contentId}\n            tabIndex={0}\n            {...contentProps}\n            ref={forwardedRef}\n            style={{\n              ...props.style,\n              animationDuration: isMountAnimationPreventedRef.current ? '0s' : undefined,\n            }}\n          >\n            {present && children}\n          </Primitive.div>\n        )}\n      </Presence>\n    );\n  }\n);\n\nTabsContent.displayName = CONTENT_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\nfunction makeTriggerId(baseId: string, value: string) {\n  return `${baseId}-trigger-${value}`;\n}\n\nfunction makeContentId(baseId: string, value: string) {\n  return `${baseId}-content-${value}`;\n}\n\nconst Root = Tabs;\nconst List = TabsList;\nconst Trigger = TabsTrigger;\nconst Content = TabsContent;\n\nexport {\n  createTabsScope,\n  //\n  Tabs,\n  TabsList,\n  TabsTrigger,\n  TabsContent,\n  //\n  Root,\n  List,\n  Trigger,\n  Content,\n};\nexport type { TabsProps, TabsListProps, TabsTriggerProps, TabsContentProps };\n", "export * from './state'\nexport type { Point } from './math'\n", "import type { Point } from './math'\nimport * as m from './math'\nimport { douglasPeucker } from './simplify'\n\nexport type SizeMappingDetails = {\n  pressure: number\n  runningLength: number\n  currentIndex: number\n  totalLength: number\n}\n\nexport type LaserPointerOptions = {\n  size: number\n\n  streamline: number\n  simplify: number\n  simplifyPhase: 'tail' | 'output' | 'input'\n\n  keepHead: boolean\n\n  sizeMapping: (details: SizeMappingDetails) => number\n}\n\nexport class LaserPointer {\n  static defaults: LaserPointerOptions = {\n    size: 2,\n    streamline: 0.45,\n    simplify: 0.1,\n    simplifyPhase: 'output',\n    keepHead: false,\n\n    sizeMapping: () => 1,\n  }\n\n  static constants = {\n    cornerDetectionMaxAngle: 75,\n    cornerDetectionVariance: (s: number) => (s > 35 ? 0.5 : 1),\n    maxTailLength: 50,\n  }\n\n  options: LaserPointerOptions\n  constructor(options: Partial<LaserPointerOptions>) {\n    this.options = Object.assign({}, LaserPointer.defaults, options)\n  }\n\n  originalPoints: Point[] = []\n\n  private stablePoints: Point[] = []\n  private tailPoints: Point[] = []\n\n  private isFresh = true\n\n  private get lastPoint(): Point {\n    return this.tailPoints[this.tailPoints.length - 1] ?? this.stablePoints[this.stablePoints.length - 1]\n  }\n\n  addPoint(point: Point) {\n    const lastPoint = this.originalPoints[this.originalPoints.length - 1]\n\n    if (lastPoint && lastPoint[0] === point[0] && lastPoint[1] === point[1]) {\n      return\n    }\n\n    this.originalPoints.push(point)\n\n    if (this.isFresh) {\n      this.isFresh = false\n      this.stablePoints.push(point)\n      return\n    }\n\n    if (this.options.streamline > 0) {\n      point = m.plerp(this.lastPoint, point, 1 - this.options.streamline)\n    }\n\n    this.tailPoints.push(point)\n\n    if (m.runLength(this.tailPoints) > LaserPointer.constants.maxTailLength) {\n      this.stabilizeTail()\n    }\n  }\n\n  close() {\n    this.stabilizeTail()\n  }\n\n  stabilizeTail() {\n    if (this.options.simplify > 0 && this.options.simplifyPhase == 'tail') {\n      throw new Error('Not implemented yet')\n    } else {\n      this.stablePoints.push(...this.tailPoints)\n      this.tailPoints = []\n    }\n  }\n\n  private getSize(\n    sizeOverride: number | undefined,\n    pressure: number,\n    index: number,\n    totalLength: number,\n    runningLength: number\n  ) {\n    return (\n      (sizeOverride ?? this.options.size) *\n      this.options.sizeMapping({\n        pressure: pressure,\n        runningLength: runningLength,\n        currentIndex: index,\n        totalLength: totalLength,\n      })\n    )\n  }\n\n  getStrokeOutline(sizeOverride?: number | undefined): Point[] {\n    if (this.isFresh) {\n      return []\n    }\n\n    let points = [...this.stablePoints, ...this.tailPoints]\n\n    if (this.options.simplify > 0 && this.options.simplifyPhase === 'input') {\n      points = douglasPeucker(points, this.options.simplify)\n    }\n\n    const len = points.length\n\n    if (len === 0) {\n      return []\n    }\n\n    if (len === 1) {\n      const c = points[0]\n\n      const size = this.getSize(sizeOverride, c[2], 0, len, 0)\n\n      if (size < 0.5) {\n        return []\n      }\n\n      const ps: Point[] = []\n\n      for (let theta = 0; theta <= Math.PI * 2; theta += Math.PI / 16) {\n        ps.push(m.add(c, m.smul(m.rot([1, 0, 0] as Point, theta), size)))\n      }\n\n      ps.push(m.add(c, m.smul([1, 0, 0] as Point, this.getSize(sizeOverride, c[2], 0, len, 0))))\n\n      return ps\n    }\n\n    if (len === 2) {\n      const c = points[0]\n      const n = points[1]\n\n      const cSize = this.getSize(sizeOverride, c[2], 0, len, 0)\n      const nSize = this.getSize(sizeOverride, n[2], 0, len, 0)\n\n      if (cSize < 0.5 || nSize < 0.5) {\n        return []\n      }\n\n      const ps: Point[] = []\n\n      const pAngle = m.angle(c, [c[0], c[1] - 100, c[2]] as Point, n)\n\n      for (let theta = pAngle; theta <= Math.PI + pAngle; theta += Math.PI / 16) {\n        ps.push(m.add(c, m.smul(m.rot([1, 0, 0] as Point, theta), cSize)))\n      }\n\n      for (let theta = Math.PI + pAngle; theta <= Math.PI * 2 + pAngle; theta += Math.PI / 16) {\n        ps.push(m.add(n, m.smul(m.rot([1, 0, 0] as Point, theta), nSize)))\n      }\n\n      ps.push(ps[0])\n\n      return ps\n    }\n\n    const forwardPoints: Point[] = []\n    const backwardPoints: Point[] = []\n\n    let speed = 0\n    let prevSpeed = 0\n\n    let visibleStartIndex = 0\n    let runningLength = 0\n\n    for (let i = 1; i < len - 1; i++) {\n      const p = points[i - 1],\n        c = points[i],\n        n = points[i + 1]\n\n      let pressure = c[2]\n\n      const d = m.dist(p, c)\n      runningLength += d\n      speed = prevSpeed + (d - prevSpeed) * 0.2\n\n      const cSize = this.getSize(sizeOverride, pressure, i, len, runningLength)\n\n      if (cSize === 0) {\n        visibleStartIndex = i + 1\n        continue\n      }\n\n      const dirPC = m.norm(m.sub(p, c))\n      const dirNC = m.norm(m.sub(n, c))\n      const p1dirPC = m.rot(dirPC, Math.PI / 2)\n      const p2dirPC = m.rot(dirPC, -Math.PI / 2)\n      const p1dirNC = m.rot(dirNC, Math.PI / 2)\n      const p2dirNC = m.rot(dirNC, -Math.PI / 2)\n\n      const p1PC = m.add(c, m.smul(p1dirPC, cSize))\n      const p2PC = m.add(c, m.smul(p2dirPC, cSize))\n      const p1NC = m.add(c, m.smul(p1dirNC, cSize))\n      const p2NC = m.add(c, m.smul(p2dirNC, cSize))\n\n      const ftdir = m.add(p1dirPC, p2dirNC)\n      const btdir = m.add(p2dirPC, p1dirNC)\n\n      const paPC = m.add(c, m.smul(m.mag(ftdir) === 0 ? dirPC : m.norm(ftdir), cSize))\n      const paNC = m.add(c, m.smul(m.mag(btdir) === 0 ? dirNC : m.norm(btdir), cSize))\n\n      const cAngle = m.normAngle(m.angle(c, p, n))\n      const D_ANGLE =\n        (LaserPointer.constants.cornerDetectionMaxAngle / 180) *\n        Math.PI *\n        LaserPointer.constants.cornerDetectionVariance(speed)\n\n      if (Math.abs(cAngle) < D_ANGLE) {\n        const tAngle = Math.abs(m.normAngle(Math.PI - cAngle)) // turn angle\n\n        if (tAngle === 0) {\n          continue\n        }\n\n        if (cAngle < 0) {\n          backwardPoints.push(p2PC, paNC)\n\n          for (let theta = 0; theta <= tAngle; theta += tAngle / 4) {\n            forwardPoints.push(m.add(c, m.rot(m.smul(p1dirPC, cSize), theta)))\n          }\n\n          for (let theta = tAngle; theta >= 0; theta -= tAngle / 4) {\n            backwardPoints.push(m.add(c, m.rot(m.smul(p1dirPC, cSize), theta)))\n          }\n\n          backwardPoints.push(paNC, p1NC)\n        } else {\n          forwardPoints.push(p1PC, paPC)\n\n          for (let theta = 0; theta <= tAngle; theta += tAngle / 4) {\n            backwardPoints.push(m.add(c, m.rot(m.smul(p1dirPC, -cSize), -theta)))\n          }\n\n          for (let theta = tAngle; theta >= 0; theta -= tAngle / 4) {\n            forwardPoints.push(m.add(c, m.rot(m.smul(p1dirPC, -cSize), -theta)))\n          }\n          forwardPoints.push(paPC, p2NC)\n        }\n      } else {\n        forwardPoints.push(paPC)\n        backwardPoints.push(paNC)\n      }\n\n      prevSpeed = speed\n    }\n\n    if (visibleStartIndex >= len - 2) {\n      if (this.options.keepHead) {\n        const c = points[len - 1]\n\n        const ps: Point[] = []\n\n        for (let theta = 0; theta <= Math.PI * 2; theta += Math.PI / 16) {\n          ps.push(m.add(c, m.smul(m.rot([1, 0, 0] as Point, theta), this.options.size)))\n        }\n\n        ps.push(m.add(c, m.smul([1, 0, 0] as Point, this.options.size)))\n\n        return ps\n      } else {\n        return []\n      }\n    }\n\n    const first = points[visibleStartIndex]\n    const second = points[visibleStartIndex + 1]\n    const penultimate = points[len - 2]\n    const ultimate = points[len - 1]\n\n    const dirFS = m.norm(m.sub(second, first))\n    const dirPU = m.norm(m.sub(penultimate, ultimate))\n\n    const ppdirFS = m.rot(dirFS, -Math.PI / 2)\n    const ppdirPU = m.rot(dirPU, Math.PI / 2)\n\n    const startCapSize = this.getSize(sizeOverride, first[2], 0, len, 0)\n    const startCap: Point[] = []\n\n    const endCapSize = this.options.keepHead\n      ? this.options.size\n      : this.getSize(sizeOverride, penultimate[2], len - 2, len, runningLength)\n\n    const endCap: Point[] = []\n\n    if (startCapSize > 1) {\n      for (let theta = 0; theta <= Math.PI; theta += Math.PI / 16) {\n        startCap.unshift(m.add(first, m.rot(m.smul(ppdirFS, startCapSize), -theta)))\n      }\n\n      startCap.unshift(m.add(first, m.smul(ppdirFS, -startCapSize)))\n    } else {\n      startCap.push(first)\n    }\n\n    for (let theta = 0; theta <= Math.PI * 3; theta += Math.PI / 16) {\n      endCap.push(m.add(ultimate, m.rot(m.smul(ppdirPU, -endCapSize), -theta)))\n    }\n\n    const strokeOutline = [...startCap, ...forwardPoints, ...endCap.reverse(), ...backwardPoints.reverse()]\n\n    if (startCap.length > 0) {\n      strokeOutline.push(startCap[0])\n    }\n\n    if (this.options.simplify > 0 && this.options.simplifyPhase === 'output') {\n      return douglasPeucker(strokeOutline, this.options.simplify)\n    }\n\n    return strokeOutline\n  }\n}\n", "export type Point = [x: number, y: number, r: number]\n\nexport function add([ax, ay, ar]: Point, [bx, by, br]: Point): Point {\n  return [ax + bx, ay + by, ar + br]\n}\n\nexport function sub([ax, ay, ar]: Point, [bx, by, br]: Point): Point {\n  return [ax - bx, ay - by, ar - br]\n}\n\nexport function smul([x, y, r]: Point, s: number): Point {\n  return [x * s, y * s, r * s]\n}\n\nexport function norm([x, y, r]: Point): Point {\n  return [x / Math.sqrt(x ** 2 + y ** 2), y / Math.sqrt(x ** 2 + y ** 2), r]\n}\n\nexport function rot([x, y, r]: Point, rad: number): Point {\n  return [Math.cos(rad) * x - Math.sin(rad) * y, Math.sin(rad) * x + Math.cos(rad) * y, r]\n}\n\nexport function plerp(a: Point, b: Point, t: number): Point {\n  return add(a, smul(sub(b, a), t))\n}\n\nexport function lerp(a: number, b: number, t: number): number {\n  return a + (b - a) * t\n}\n\nexport function angle(p: Point, p1: Point, p2: Point) {\n  return Math.atan2(p2[1] - p[1], p2[0] - p[0]) - Math.atan2(p1[1] - p[1], p1[0] - p[0])\n}\n\nexport function normAngle(a: number) {\n  return Math.atan2(Math.sin(a), Math.cos(a))\n}\n\nexport function mag([x, y]: Point) {\n  return Math.sqrt(x ** 2 + y ** 2)\n}\n\nexport function dist([ax, ay]: Point, [bx, by]: Point): number {\n  return Math.sqrt((bx - ax) ** 2 + (by - ay) ** 2)\n}\n\nexport function getCircleAndPerpendicularLineIntersectionsAtPoint(\n  point: Point,\n  direction: Point,\n  radius: number\n): [Point, Point] {\n  return [\n    add(point, smul(norm(rot(direction, Math.PI / 2)), radius)),\n    add(point, smul(norm(rot(direction, -Math.PI / 2)), radius)),\n  ]\n}\n\nexport function runLength(ps: Point[]): number {\n  if (ps.length < 2) return 0\n\n  let len = 0\n\n  for (let i = 1; i <= ps.length - 1; i++) {\n    len += dist(ps[i - 1], ps[i])\n  }\n\n  len += dist(ps[ps.length -2], ps[ps.length - 1])\n\n  return len\n}\n\nexport const clamp = (v: number, min: number, max: number) => Math.max(min, Math.min(max, v))\n\nexport function distancePointToSegment(p3: Point, p1: Point, p2: Point) {\n  const sMag = dist(p1, p2)\n\n  if (sMag === 0) return dist(p3, p1)\n\n  const u = clamp(((p3[0] - p1[0]) * (p2[0] - p1[0]) + (p3[1] - p1[1]) * (p2[1] - p1[1])) / sMag ** 2, 0, 1)\n\n  const pi: Point = [p1[0] + u * (p2[0] - p1[0]), p1[1] + u * (p2[1] - p1[1]), p3[2]]\n\n  return dist(pi, p3)\n}\n", "import { Point, distancePointToSegment } from './math'\n\nexport function douglasPeucker(points: Point[], epsilon: number): Point[] {\n  if (epsilon === 0) {\n    return points\n  }\n\n  if (points.length <= 2) {\n    return points\n  }\n\n  const first = points[0]\n  const last = points[points.length - 1]\n\n  const [maxDistance, maxIndex] = points.reduce(\n    ([maxDistance, maxIndex], point, index) => {\n      const distance = distancePointToSegment(point, first, last)\n\n      return distance > maxDistance ? [distance, index] : [maxDistance, maxIndex]\n    },\n    [0, -1]\n  )\n\n  if (maxDistance >= epsilon) {\n    const maxIndexPoint = points[maxIndex]\n\n    return [\n      ...douglasPeucker([first, ...points.slice(1, maxIndex), maxIndexPoint], epsilon).slice(0, -1),\n      maxIndexPoint,\n      ...douglasPeucker([maxIndexPoint, ...points.slice(maxIndex, -1), last], epsilon).slice(1),\n    ]\n  } else {\n    return [first, last]\n  }\n}\n"],
  "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",
  "names": ["fuzzy", "arr", "require_lodash", "debounce", "result", "import_react", "atom", "isPromiseLike", "e", "isPromiseLike", "e", "ReactExports", "atom", "import_react", "isPromiseLike", "e", "parse", "isPromiseLike", "atom", "createIsolation", "StoreContext", "createContext", "Provider", "store", "initialValues", "children", "storeRef", "useRef", "current", "createStore", "useHydrateAtoms", "_jsx", "value", "useStore", "options", "useContext", "Error", "useStoreOrig", "_extends", "useAtom", "anAtom", "useAtomOrig", "useAtomValue", "useAtomValueOrig", "useSetAtom", "useSetAtomOrig", "globalScopeKey", "process", "name", "toString", "read", "defaultRead", "write", "defaultWrite", "atom", "toString", "name", "ScopeContext", "createContext", "scope", "undefined", "baseStore", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_react_dom", "import_react", "import_jsx_runtime", "import_react", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "React", "composeEventHandlers", "React", "import_jsx_runtime", "createContext", "index", "Provider", "useContext", "createScope", "nextScopes", "React", "React", "React", "import_jsx_runtime", "newElement", "props", "Fragment", "import_jsx_runtime", "Node", "React", "React", "import_jsx_runtime", "node", "index", "composeEventHandlers", "handleAndDispatchPointerDownOutsideEvent", "React", "React", "import_jsx_runtime", "handleFocusIn", "handleFocusOut", "handleMutations", "container", "index", "React", "React", "useLayoutEffect", "React", "count", "React", "round", "clamp", "platform", "max", "offset", "clamp", "platform", "placements", "sides", "side", "placement", "overflow", "platform", "x", "y", "min", "max", "clamp", "offset", "getComputedStyle", "getComputedStyle", "round", "polyfill", "offset", "shift", "flip", "size", "hide", "arrow", "limitShift", "computePosition", "React", "import_react", "ReactDOM", "noop", "platform", "computePosition", "data", "arrow", "offset", "shift", "limitShift", "flip", "size", "hide", "arrow", "React", "import_jsx_runtime", "React", "size", "import_jsx_runtime", "arrow", "offset", "shift", "limitShift", "flip", "size", "hide", "PopperArrow", "Root", "Arrow", "React", "import_react_dom", "import_jsx_runtime", "ReactDOM", "React2", "React", "getElementRef", "node", "React", "value", "e", "React", "React", "import_react", "useCallbackRef", "React", "useCallbackRef", "React", "import_react", "cbs", "React", "import_react", "React", "SideCar", "React", "React", "React", "Style", "e", "import_jsx_runtime", "ANCHOR_NAME", "composeEventHandlers", "PORTAL_NAME", "CONTENT_NAME", "ARROW_NAME", "Arrow", "Root", "Portal", "Content", "Arrow", "import_react", "import_react_dom", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_react", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_react", "import_react_dom", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_react_dom", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_react", "import_react", "getState", "createStore", "import_react", "useDebugValue", "ReactExports", "useSyncExternalStoreExports", "useStore", "createStore", "useIsomorphicLayoutEffect", "React", "useStore", "import_jsx_runtime", "import_react", "import_react", "import_react_dom", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_react", "import_jsx_runtime", "import_jsx_runtime", "_extends", "e", "t", "composeEventHandlers", "originalEventHandler", "ourEventHandler", "checkForDefaultPrevented", "handleEvent", "event", "defaultPrevented", "createContextScope", "scopeName", "createContextScopeDeps", "defaultContexts", "createContext", "rootComponentName", "defaultContext", "BaseContext", "React", "index", "length", "Provider", "props", "context", "Context", "scope", "value", "Object", "values", "$3bkAK$createElement", "children", "useContext", "consumerName", "undefined", "Error", "displayName", "createScope", "scopeContexts", "map", "useScope", "contexts", "composeContextScopes", "scopes", "baseScope", "scopeHooks", "useComposedScopes", "overrideScopes", "nextScopes", "reduce", "scopeProps", "currentScope", "composeEventHandlers", "originalEventHandler", "ourEventHandler", "checkForDefaultPrevented", "handleEvent", "event", "defaultPrevented", "createContextScope", "scopeName", "createContextScopeDeps", "defaultContexts", "createContext", "rootComponentName", "defaultContext", "BaseContext", "React", "index", "length", "Provider", "props", "context", "Context", "scope", "value", "Object", "values", "$3bkAK$createElement", "children", "useContext", "consumerName", "undefined", "Error", "displayName", "createScope", "scopeContexts", "map", "useScope", "contexts", "composeContextScopes", "scopes", "baseScope", "scopeHooks", "useComposedScopes", "overrideScopes", "nextScopes", "reduce", "scopeProps", "currentScope", "setRef", "ref", "value", "undefined", "current", "composeRefs", "refs", "node", "forEach", "useComposedRefs", "React", "Slot", "React", "props", "forwardedRef", "slotProps", "childrenArray", "toArray", "children", "slottable", "find", "isSlottable", "newElement", "newChildren", "map", "child", "count", "only", "$9IrjX$createElement", "_extends", "undefined", "displayName", "SlotClone", "mergeProps", "ref", "composeRefs", "Slottable", "$9IrjX$Fragment", "type", "childProps", "overrideProps", "propName", "slotPropValue", "childPropValue", "isHandler", "test", "args", "filter", "Boolean", "join", "createCollection", "name", "PROVIDER_NAME", "createCollectionContext", "createCollectionScope", "createContextScope", "CollectionProviderImpl", "useCollectionContext", "collectionRef", "current", "itemMap", "Map", "CollectionProvider", "props", "children", "ref", "React", "useRef", "$6vYhU$react", "COLLECTION_SLOT_NAME", "CollectionSlot", "forwardRef", "forwardedRef", "context", "scope", "composedRefs", "useComposedRefs", "ITEM_SLOT_NAME", "ITEM_DATA_ATTR", "CollectionItemSlot", "itemData", "useEffect", "set", "delete", "useCollection", "getItems", "useCallback", "collectionNode", "orderedNodes", "Array", "from", "querySelectorAll", "items", "values", "orderedItems", "sort", "a", "b", "indexOf", "Provider", "Slot", "ItemSlot", "setRef", "ref", "value", "undefined", "current", "composeRefs", "refs", "node", "forEach", "useComposedRefs", "React", "createContextScope", "scopeName", "createContextScopeDeps", "defaultContexts", "createContext", "rootComponentName", "defaultContext", "BaseContext", "React", "index", "length", "Provider", "props", "context", "Context", "scope", "value", "Object", "values", "$3bkAK$createElement", "children", "useContext", "consumerName", "undefined", "Error", "displayName", "createScope", "scopeContexts", "map", "useScope", "contexts", "composeContextScopes", "scopes", "baseScope", "scopeHooks", "useComposedScopes", "overrideScopes", "nextScopes", "reduce", "scopeProps", "currentScope", "useLayoutEffect", "Boolean", "globalThis", "document", "React", "useReactId", "React", "toString", "undefined", "count", "useId", "deterministicId", "id", "setId", "useState", "useLayoutEffect", "reactId", "String", "Slot", "React", "props", "forwardedRef", "slotProps", "childrenArray", "toArray", "children", "slottable", "find", "isSlottable", "newElement", "newChildren", "map", "child", "count", "only", "$9IrjX$createElement", "$5e63c961fc1ce211$var$SlotClone", "_extends", "undefined", "displayName", "SlotClone", "mergeProps", "ref", "composeRefs", "Slottable", "$9IrjX$Fragment", "type", "childProps", "overrideProps", "propName", "slotPropValue", "childPropValue", "isHandler", "test", "args", "filter", "Boolean", "join", "NODES", "Primitive", "reduce", "primitive", "node", "Node", "React", "props", "forwardedRef", "primitiveProps", "Comp", "asChild", "Slot", "window", "Symbol", "for", "$4q5Fq$createElement", "_extends", "displayName", "useCallbackRef", "callback", "callbackRef", "React", "current", "args", "useControllableState", "onChange", "uncontrolledProp", "setUncontrolledProp", "useUncontrolledState", "isControlled", "prop", "undefined", "value", "handleChange", "useCallbackRef", "setValue", "React", "nextValue", "setter", "uncontrolledState", "defaultProp", "prevValueRef", "current", "DirectionContext", "React", "undefined", "useDirection", "localDir", "globalDir", "React", "DirectionContext", "ENTRY_FOCUS", "EVENT_OPTIONS", "bubbles", "cancelable", "GROUP_NAME", "Collection", "useCollection", "createCollectionScope", "createCollection", "createRovingFocusGroupContext", "createRovingFocusGroupScope", "createContextScope", "RovingFocusProvider", "useRovingFocusContext", "RovingFocusGroup", "React", "props", "forwardedRef", "$98Iye$createElement", "__scopeRovingFocusGroup", "_extends", "RovingFocusGroupImpl", "currentTabStopId", "currentTabStopIdProp", "groupProps", "ref", "composedRefs", "useComposedRefs", "direction", "useDirection", "dir", "setCurrentTabStopId", "useControllableState", "prop", "defaultProp", "defaultCurrentTabStopId", "onChange", "onCurrentTabStopIdChange", "isTabbingBackOut", "setIsTabbingBackOut", "handleEntryFocus", "useCallbackRef", "onEntryFocus", "getItems", "isClickFocusRef", "focusableItemsCount", "setFocusableItemsCount", "node", "current", "addEventListener", "removeEventListener", "tabStopId", "prevCount", "orientation", "outline", "style", "composeEventHandlers", "onMouseDown", "onFocus", "event", "isKeyboardFocus", "target", "currentTarget", "entryFocusEvent", "CustomEvent", "dispatchEvent", "defaultPrevented", "items", "filter", "item", "focusable", "activeItem", "find", "active", "currentItem", "id", "candidateItems", "Boolean", "candidateNodes", "map", "focusFirst", "onBlur", "ITEM_NAME", "RovingFocusGroupItem", "itemProps", "autoId", "useId", "context", "isCurrentTabStop", "onFocusableItemRemove", "onFocusableItemAdd", "preventDefault", "onItemFocus", "onKeyDown", "key", "shiftKey", "onItemShiftTab", "focusIntent", "getFocusIntent", "undefined", "reverse", "currentIndex", "indexOf", "loop", "wrapArray", "slice", "setTimeout", "MAP_KEY_TO_FOCUS_INTENT", "ArrowLeft", "ArrowUp", "ArrowRight", "ArrowDown", "PageUp", "Home", "PageDown", "End", "getDirectionAwareKey", "includes", "candidates", "PREVIOUSLY_FOCUSED_ELEMENT", "document", "activeElement", "candidate", "focus", "array", "startIndex", "_", "index", "length", "Root", "Item", "setRef", "ref", "value", "undefined", "current", "composeRefs", "refs", "node", "forEach", "useComposedRefs", "React", "useLayoutEffect", "Boolean", "globalThis", "document", "React", "useStateMachine", "initialState", "machine", "React", "state", "event", "nextState", "Presence", "props", "children", "presence", "usePresence", "present", "child", "isPresent", "only", "ref", "useComposedRefs", "forceMount", "displayName", "node", "setNode", "stylesRef", "prevPresentRef", "prevAnimationNameRef", "send", "mounted", "UNMOUNT", "ANIMATION_OUT", "unmountSuspended", "MOUNT", "ANIMATION_END", "unmounted", "currentAnimationName", "getAnimationName", "current", "useLayoutEffect", "styles", "wasPresent", "hasPresentChanged", "prevAnimationName", "display", "isAnimating", "handleAnimationEnd", "isCurrentAnimation", "includes", "animationName", "target", "ReactDOM", "handleAnimationStart", "addEventListener", "removeEventListener", "getComputedStyle", "Slot", "React", "props", "forwardedRef", "slotProps", "childrenArray", "toArray", "children", "slottable", "find", "isSlottable", "newElement", "newChildren", "map", "child", "count", "only", "$9IrjX$createElement", "$5e63c961fc1ce211$var$SlotClone", "_extends", "undefined", "displayName", "SlotClone", "mergeProps", "ref", "composeRefs", "Slottable", "$9IrjX$Fragment", "type", "childProps", "overrideProps", "propName", "slotPropValue", "childPropValue", "isHandler", "test", "args", "filter", "Boolean", "join", "NODES", "Primitive", "reduce", "primitive", "node", "Node", "React", "props", "forwardedRef", "primitiveProps", "Comp", "asChild", "Slot", "window", "Symbol", "for", "$4q5Fq$createElement", "_extends", "displayName", "useCallbackRef", "callback", "callbackRef", "React", "current", "args", "useControllableState", "onChange", "uncontrolledProp", "setUncontrolledProp", "useUncontrolledState", "isControlled", "prop", "undefined", "value", "handleChange", "useCallbackRef", "setValue", "React", "nextValue", "setter", "uncontrolledState", "defaultProp", "prevValueRef", "current", "useReactId", "React", "toString", "undefined", "count", "useId", "deterministicId", "id", "setId", "useState", "useLayoutEffect", "reactId", "String", "TABS_NAME", "createTabsContext", "createTabsScope", "createContextScope", "createRovingFocusGroupScope", "useRovingFocusGroupScope", "TabsProvider", "useTabsContext", "Tabs", "React", "props", "forwardedRef", "value", "valueProp", "tabsProps", "direction", "useDirection", "dir", "setValue", "useControllableState", "prop", "onChange", "onValueChange", "defaultProp", "defaultValue", "$1IHzk$createElement", "__scopeTabs", "useId", "$8927f6f2acc4f386$export$250ffa63cdc0d034", "_extends", "orientation", "TAB_LIST_NAME", "TabsList", "listProps", "context", "rovingFocusGroupScope", "TRIGGER_NAME", "TabsTrigger", "triggerProps", "triggerId", "makeTriggerId", "baseId", "contentId", "makeContentId", "isSelected", "disabled", "undefined", "composeEventHandlers", "onMouseDown", "event", "button", "ctrlKey", "preventDefault", "onKeyDown", "includes", "key", "onFocus", "isAutomaticActivation", "activationMode", "CONTENT_NAME", "TabsContent", "contentProps", "isMountAnimationPreventedRef", "rAF", "requestAnimationFrame", "current", "cancelAnimationFrame", "forceMount", "present", "style", "animationDuration", "children", "Root", "List", "Trigger", "Content", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_react", "import_lodash", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_lodash", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_lodash", "import_react_dom", "import_jsx_runtime", "import_react", "import_jsx_runtime", "t", "min", "max", "maxDistance", "maxIndex", "index", "distance", "size", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_lodash", "import_react", "useAtom", "useSetAtom", "useAtomValue", "useStore", "index", "size", "React", "jsx", "useState", "useEffect", "currentLang", "jsxs", "clsx", "elems", "nextElements", "nextAppState", "elements", "element", "duplicateElements", "newElement", "palette", "isCustomColor", "r", "g", "b", "useRef", "color", "label", "e", "div", "onCancel", "onSelect", "Portal", "Arrow2", "Root2", "Fragment", "Picker", "isRTL", "options", "value", "font", "useCallback", "useMemo", "flip", "svg", "blob", "min", "max", "step", "pos", "enableActionGroup", "useLayoutEffect", "createPortal", "exportToSvg", "row", "_AdapterTransaction", "libraryUrlTokens", "forwardRef", "t", "exportToCanvas", "items", "memo", "handleScroll", "throttle", "id", "libraryItems", "focusableElements", "createIsolation", "_a", "uiAppState", "customCommandPaletteItems", "appProps", "action", "app", "allCommands", "nextItem", "fuzzy", "noop", "event", "actionResult", "actions", "Popover", "_VERTICAL_OFFSET", "y", "x", "hint", "ICONS", "DEFAULT_SIZE", "appState", "Section", "maxAvatars", "OpenColor", "useContext", "useImperativeHandle", "CommandPalette", "SearchMenu", "focusIndex", "searchQuery", "startIndex", "offset", "debounce", "createElement", "docked", "error", "inputValue", "nextCropWidth", "nextCropHeight", "changeInWidth", "changeInHeight", "nextWidth", "nextHeight", "STEP_SIZE", "nextAngle", "boundTextElement", "handleDimensionChange", "originalElements", "el", "handleDegreeChange", "MIN_FONT_SIZE", "handleFontSizeChange", "nextFontSize", "newTopLeftX", "newTopLeftY", "handlePositionChange", "nextLink", "_b", "_c", "areEqual", "unstable_batchedUpdates", "ReactVersion", "count", "midPoints", "oc", "focus", "getRelevantAppStateProps", "editable", "viewModeEnabled", "zenModeEnabled", "theme", "name", "scrollX", "scrollY", "zoom", "selectedElements", "arrow", "distance", "flushSync", "onPointerUp", "dataURL", "text", "gridX", "gridY", "hitElement", "LiveCollaborationTrigger", "key"]
}
