{"version":3,"file":"index.umd.js","sources":["../src/createIsolation.tsx","../src/ScopeProvider/scope.ts","../src/ScopeProvider/patchedStore.ts","../src/ScopeProvider/ScopeProvider.tsx"],"sourcesContent":["import { createContext, useContext, useRef } from 'react';\nimport type { ReactNode } from 'react';\nimport { createStore } from 'jotai/vanilla';\nimport type { WritableAtom } from 'jotai/vanilla';\nimport {\n  useAtom as useAtomOrig,\n  useAtomValue as useAtomValueOrig,\n  useSetAtom as useSetAtomOrig,\n  useStore as useStoreOrig,\n} from 'jotai/react';\nimport { useHydrateAtoms } from 'jotai/react/utils';\n\ntype Store = ReturnType<typeof createStore>;\ntype AnyWritableAtom = WritableAtom<unknown, any[], any>;\n\nexport function createIsolation() {\n  const StoreContext = createContext<Store | null>(null);\n\n  function Provider({\n    store,\n    initialValues = [],\n    children,\n  }: {\n    store?: Store;\n    initialValues?: Iterable<readonly [AnyWritableAtom, unknown]>;\n    children: ReactNode;\n  }) {\n    const storeRef = useRef(store);\n    if (!storeRef.current) {\n      storeRef.current = createStore();\n    }\n    useHydrateAtoms(initialValues as any, { store: storeRef.current });\n    return (\n      <StoreContext.Provider value={storeRef.current}>\n        {children}\n      </StoreContext.Provider>\n    );\n  }\n\n  const useStore = ((options?: any) => {\n    const store = useContext(StoreContext);\n    if (!store) throw new Error('Missing Provider from createIsolation');\n    return useStoreOrig({ store, ...options });\n  }) as typeof useStoreOrig;\n\n  const useAtom = ((anAtom: any, options?: any) => {\n    const store = useStore();\n    return useAtomOrig(anAtom, { store, ...options });\n  }) as typeof useAtomOrig;\n\n  const useAtomValue = ((anAtom: any, options?: any) => {\n    const store = useStore();\n    return useAtomValueOrig(anAtom, { store, ...options });\n  }) as typeof useAtomValueOrig;\n\n  const useSetAtom = ((anAtom: any, options?: any) => {\n    const store = useStore();\n    return useSetAtomOrig(anAtom, { store, ...options });\n  }) as typeof useSetAtomOrig;\n\n  return { Provider, useStore, useAtom, useAtomValue, useSetAtom };\n}\n","import { atom, type Atom } from 'jotai';\nimport type { AnyAtomFamily, AnyAtom, AnyWritableAtom, Scope } from './types';\n\nconst globalScopeKey: { name?: string } = {};\nif (process.env.NODE_ENV !== 'production') {\n  globalScopeKey.name = 'unscoped';\n  globalScopeKey.toString = toString;\n}\n\ntype GlobalScopeKey = typeof globalScopeKey;\n\nexport function createScope(\n  atoms: Set<AnyAtom>,\n  atomFamilies: Set<AnyAtomFamily>,\n  parentScope: Scope | undefined,\n  scopeName?: string | undefined,\n): Scope {\n  const explicit = new WeakMap<AnyAtom, [AnyAtom, Scope?]>();\n  const implicit = new WeakMap<AnyAtom, [AnyAtom, Scope?]>();\n  type ScopeMap = WeakMap<AnyAtom, [AnyAtom, Scope?]>;\n  const inherited = new WeakMap<Scope | GlobalScopeKey, ScopeMap>();\n\n  const currentScope: Scope = {\n    getAtom,\n    cleanup() {},\n    prepareWriteAtom(anAtom, originalAtom, implicitScope) {\n      if (\n        originalAtom.read === defaultRead &&\n        isWritableAtom(originalAtom) &&\n        isWritableAtom(anAtom) &&\n        originalAtom.write !== defaultWrite &&\n        currentScope !== implicitScope\n      ) {\n        // atom is writable with init and holds a value\n        // we need to preserve the value, so we don't want to copy the atom\n        // instead, we need to override write until the write is finished\n        const { write } = originalAtom;\n        anAtom.write = createScopedWrite(\n          originalAtom.write.bind(\n            originalAtom,\n          ) as (typeof originalAtom)['write'],\n          implicitScope,\n        );\n        return () => {\n          anAtom.write = write;\n        };\n      }\n      return undefined;\n    },\n  };\n\n  if (scopeName && process.env.NODE_ENV !== 'production') {\n    currentScope.name = scopeName;\n    currentScope.toString = toString;\n  }\n\n  // populate explicitly scoped atoms\n  for (const anAtom of atoms) {\n    explicit.set(anAtom, [cloneAtom(anAtom, currentScope), currentScope]);\n  }\n\n  const cleanupFamiliesSet = new Set<() => void>();\n  for (const atomFamily of atomFamilies) {\n    for (const param of atomFamily.getParams()) {\n      const anAtom = atomFamily(param);\n      if (!explicit.has(anAtom)) {\n        explicit.set(anAtom, [cloneAtom(anAtom, currentScope), currentScope]);\n      }\n    }\n    const cleanupFamily = atomFamily.unstable_listen((e) => {\n      if (e.type === 'CREATE' && !explicit.has(e.atom)) {\n        explicit.set(e.atom, [cloneAtom(e.atom, currentScope), currentScope]);\n      } else if (!atoms.has(e.atom)) {\n        explicit.delete(e.atom);\n      }\n    });\n    cleanupFamiliesSet.add(cleanupFamily);\n  }\n  currentScope.cleanup = combineVoidFunctions(\n    currentScope.cleanup,\n    ...Array.from(cleanupFamiliesSet),\n  );\n\n  /**\n   * Returns a scoped atom from the original atom.\n   * @param anAtom\n   * @param implicitScope the atom is implicitly scoped in the provided scope\n   * @returns the scoped atom and the scope of the atom\n   */\n  function getAtom<T extends AnyAtom>(\n    anAtom: T,\n    implicitScope?: Scope,\n  ): [T, Scope?] {\n    if (explicit.has(anAtom)) {\n      return explicit.get(anAtom) as [T, Scope];\n    }\n    if (implicitScope === currentScope) {\n      // dependencies of explicitly scoped atoms are implicitly scoped\n      // implicitly scoped atoms are only accessed by implicit and explicit scoped atoms\n      if (!implicit.has(anAtom)) {\n        implicit.set(anAtom, [cloneAtom(anAtom, implicitScope), implicitScope]);\n      }\n      return implicit.get(anAtom) as [T, Scope];\n    }\n    const scopeKey = implicitScope ?? globalScopeKey;\n    if (parentScope) {\n      // inherited atoms are copied so they can access scoped atoms\n      // but they are not explicitly scoped\n      // dependencies of inherited atoms first check if they are explicitly scoped\n      // otherwise they use their original scope's atom\n      if (!inherited.get(scopeKey)?.has(anAtom)) {\n        const [ancestorAtom, explicitScope] = parentScope.getAtom(\n          anAtom,\n          implicitScope,\n        );\n        setInheritedAtom(\n          inheritAtom(ancestorAtom, anAtom, explicitScope),\n          anAtom,\n          implicitScope,\n          explicitScope,\n        );\n      }\n      return inherited.get(scopeKey)!.get(anAtom) as [T, Scope];\n    }\n    if (!inherited.get(scopeKey)?.has(anAtom)) {\n      // non-primitive atoms may need to access scoped atoms\n      // so we need to create a copy of the atom\n      setInheritedAtom(inheritAtom(anAtom, anAtom), anAtom);\n    }\n    return inherited.get(scopeKey)!.get(anAtom) as [T, Scope?];\n  }\n\n  function setInheritedAtom<T extends AnyAtom>(\n    scopedAtom: T,\n    originalAtom: T,\n    implicitScope?: Scope,\n    explicitScope?: Scope,\n  ) {\n    const scopeKey = implicitScope ?? globalScopeKey;\n    if (!inherited.has(scopeKey)) {\n      inherited.set(scopeKey, new WeakMap());\n    }\n    inherited.get(scopeKey)!.set(\n      originalAtom,\n      [\n        scopedAtom, //\n        explicitScope,\n      ].filter(Boolean) as [T, Scope?],\n    );\n  }\n\n  /**\n   * @returns a copy of the atom for derived atoms or the original atom for primitive and writable atoms\n   */\n  function inheritAtom<T>(\n    anAtom: Atom<T>,\n    originalAtom: Atom<T>,\n    implicitScope?: Scope,\n  ) {\n    if (originalAtom.read !== defaultRead) {\n      return cloneAtom(originalAtom, implicitScope);\n    }\n    return anAtom;\n  }\n\n  /**\n   * @returns a scoped copy of the atom\n   */\n  function cloneAtom<T>(originalAtom: Atom<T>, implicitScope?: Scope) {\n    // avoid reading `init` to preserve lazy initialization\n    const scopedAtom: Atom<T> = Object.create(\n      Object.getPrototypeOf(originalAtom),\n      Object.getOwnPropertyDescriptors(originalAtom),\n    );\n\n    if (scopedAtom.read !== defaultRead) {\n      scopedAtom.read = createScopedRead<typeof scopedAtom>(\n        originalAtom.read.bind(originalAtom),\n        implicitScope,\n      );\n    }\n\n    if (\n      isWritableAtom(scopedAtom) &&\n      isWritableAtom(originalAtom) &&\n      scopedAtom.write !== defaultWrite\n    ) {\n      scopedAtom.write = createScopedWrite(\n        originalAtom.write.bind(originalAtom),\n        implicitScope,\n      );\n    }\n\n    return scopedAtom;\n  }\n\n  function createScopedRead<T extends Atom<unknown>>(\n    read: T['read'],\n    implicitScope?: Scope,\n  ): T['read'] {\n    return function scopedRead(get, opts) {\n      return read(\n        function scopedGet(a) {\n          const [scopedAtom] = getAtom(a, implicitScope);\n          return get(scopedAtom);\n        }, //\n        opts,\n      );\n    };\n  }\n\n  function createScopedWrite<T extends AnyWritableAtom>(\n    write: T['write'],\n    implicitScope?: Scope,\n  ): T['write'] {\n    return function scopedWrite(get, set, ...args) {\n      return write(\n        function scopedGet(a) {\n          const [scopedAtom] = getAtom(a, implicitScope);\n          return get(scopedAtom);\n        },\n        function scopedSet(a, ...v) {\n          const [scopedAtom] = getAtom(a, implicitScope);\n          return set(scopedAtom, ...v);\n        },\n        ...args,\n      );\n    };\n  }\n\n  return currentScope;\n}\n\nfunction isWritableAtom(anAtom: AnyAtom): anAtom is AnyWritableAtom {\n  return 'write' in anAtom;\n}\n\nconst { read: defaultRead, write: defaultWrite } = atom<unknown>(null);\n\nfunction toString(this: { name: string }) {\n  return this.name;\n}\n\nfunction combineVoidFunctions(...fns: (() => void)[]) {\n  return function combinedFunctions() {\n    for (const fn of fns) {\n      fn();\n    }\n  };\n}\n","import type { Store, Scope } from './types';\n\nfunction PatchedStore() {}\n\n/**\n * @returns a patched store that intercepts get and set calls to apply the scope\n */\nexport function createPatchedStore(baseStore: Store, scope: Scope): Store {\n  const store: Store = {\n    ...baseStore,\n    get(anAtom, ...args) {\n      const [scopedAtom] = scope.getAtom(anAtom);\n      return baseStore.get(scopedAtom, ...args);\n    },\n    set(anAtom, ...args) {\n      const [scopedAtom, implicitScope] = scope.getAtom(anAtom);\n      const restore = scope.prepareWriteAtom(scopedAtom, anAtom, implicitScope);\n      try {\n        return baseStore.set(scopedAtom, ...args);\n      } finally {\n        restore?.();\n      }\n    },\n    sub(anAtom, ...args) {\n      const [scopedAtom] = scope.getAtom(anAtom);\n      return baseStore.sub(scopedAtom, ...args);\n    },\n    // TODO: update this patch to support devtools\n  };\n  return Object.assign(Object.create(PatchedStore.prototype), store);\n}\n\n/**\n * @returns true if the current scope is the first descendant scope under Provider\n */\nexport function isTopLevelScope(parentStore: Store) {\n  return !(parentStore instanceof PatchedStore);\n}\n","import { Provider, useStore } from 'jotai/react';\nimport {\n  type EffectCallback,\n  createContext,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n  type PropsWithChildren,\n} from 'react';\nimport { createScope } from './scope';\nimport type { AnyAtom, AnyAtomFamily, Store, Scope } from './types';\nimport { createPatchedStore, isTopLevelScope } from './patchedStore';\n\nconst ScopeContext = createContext<{\n  scope: Scope | undefined;\n  baseStore: Store | undefined;\n}>({ scope: undefined, baseStore: undefined });\n\nexport function ScopeProvider({\n  atoms,\n  atomFamilies,\n  children,\n  debugName,\n}: PropsWithChildren<{\n  atoms: Iterable<AnyAtom>;\n  atomFamilies?: Iterable<AnyAtomFamily>;\n  debugName?: string;\n}>): JSX.Element;\nexport function ScopeProvider({\n  atoms,\n  atomFamilies,\n  children,\n  debugName,\n}: PropsWithChildren<{\n  atoms?: Iterable<AnyAtom>;\n  atomFamilies: Iterable<AnyAtomFamily>;\n  debugName?: string;\n}>): JSX.Element;\nexport function ScopeProvider({\n  atoms,\n  atomFamilies,\n  children,\n  debugName,\n}: PropsWithChildren<{\n  atoms?: Iterable<AnyAtom>;\n  atomFamilies?: Iterable<AnyAtomFamily>;\n  debugName?: string;\n}>) {\n  const parentStore: Store = useStore();\n  let { scope: parentScope, baseStore = parentStore } =\n    useContext(ScopeContext);\n  // if this ScopeProvider is the first descendant scope under Provider then it is the top level scope\n  // https://github.com/jotaijs/jotai-scope/pull/33#discussion_r1604268003\n  if (isTopLevelScope(parentStore)) {\n    parentScope = undefined;\n    baseStore = parentStore;\n  }\n\n  // atomSet is used to detect if the atoms prop has changed.\n  const atomSet = new Set(atoms);\n  const atomFamilySet = new Set(atomFamilies);\n\n  function initialize() {\n    const scope = createScope(atomSet, atomFamilySet, parentScope, debugName);\n    return {\n      patchedStore: createPatchedStore(baseStore, scope),\n      scopeContext: { scope, baseStore },\n      hasChanged(current: {\n        baseStore: Store;\n        parentScope: Scope | undefined;\n        atomSet: Set<AnyAtom>;\n        atomFamilySet: Set<AnyAtomFamily>;\n      }) {\n        return (\n          parentScope !== current.parentScope ||\n          baseStore !== current.baseStore ||\n          !isEqualSet(atomSet, current.atomSet) ||\n          !isEqualSet(atomFamilySet, current.atomFamilySet)\n        );\n      },\n    };\n  }\n\n  const [state, setState] = useState(initialize);\n  const { hasChanged, scopeContext, patchedStore } = state;\n  if (hasChanged({ parentScope, atomSet, atomFamilySet, baseStore })) {\n    scopeContext.scope?.cleanup();\n    setState(initialize);\n  }\n  const { cleanup } = scopeContext.scope;\n  useEvent(() => cleanup, []);\n  return (\n    <ScopeContext.Provider value={scopeContext}>\n      <Provider store={patchedStore}>{children}</Provider>\n    </ScopeContext.Provider>\n  );\n}\n\nfunction isEqualSet(a: Set<unknown>, b: Set<unknown>) {\n  return a === b || (a.size === b.size && Array.from(a).every((v) => b.has(v)));\n}\n\nfunction useEvent(fn: EffectCallback, deps: unknown[]) {\n  const ref = useRef(fn);\n  ref.current = fn;\n  useEffect(() => ref.current(), deps);\n}\n"],"names":["createIsolation","StoreContext","createContext","Provider","_ref","store","_ref$initialValues","initialValues","children","storeRef","useRef","current","createStore","useHydrateAtoms","_jsx","value","useStore","options","useContext","Error","useStoreOrig","_extends","useAtom","anAtom","useAtomOrig","useAtomValue","useAtomValueOrig","useSetAtom","useSetAtomOrig","globalScopeKey","process","env","NODE_ENV","name","toString","createScope","atoms","atomFamilies","parentScope","scopeName","explicit","WeakMap","implicit","inherited","currentScope","getAtom","cleanup","prepareWriteAtom","originalAtom","implicitScope","read","defaultRead","isWritableAtom","write","defaultWrite","createScopedWrite","bind","undefined","_iterator","_createForOfIteratorHelperLoose","_step","done","set","cloneAtom","cleanupFamiliesSet","Set","_iterator2","_step2","atomFamily","_iterator3","getParams","_step3","param","has","cleanupFamily","unstable_listen","e","type","atom","add","combineVoidFunctions","apply","concat","Array","from","_inherited$get2","get","scopeKey","_inherited$get","_parentScope$getAtom","ancestorAtom","explicitScope","setInheritedAtom","inheritAtom","scopedAtom","filter","Boolean","Object","create","getPrototypeOf","getOwnPropertyDescriptors","createScopedRead","scopedRead","opts","scopedGet","a","_getAtom","scopedWrite","_getAtom2","scopedSet","_getAtom3","slice","call","arguments","_atom","fns","combinedFunctions","_iterator4","_step4","fn","PatchedStore","createPatchedStore","baseStore","scope","_scope$getAtom","_scope$getAtom2","restore","sub","_scope$getAtom3","assign","prototype","isTopLevelScope","parentStore","ScopeContext","ScopeProvider","debugName","_useContext","_useContext$baseStore","atomSet","atomFamilySet","initialize","patchedStore","scopeContext","hasChanged","isEqualSet","_useState","useState","state","setState","_scopeContext$scope","useEvent","b","size","every","v","deps","ref","useEffect"],"mappings":"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"}